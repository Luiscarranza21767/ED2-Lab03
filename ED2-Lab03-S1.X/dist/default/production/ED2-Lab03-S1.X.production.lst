

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 20:53:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     008F                     	;# 
   103     0090                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0095                     	;# 
   111     0096                     	;# 
   112     0097                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009A                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     0105                     	;# 
   122     0107                     	;# 
   123     0108                     	;# 
   124     0109                     	;# 
   125     010C                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     0185                     	;# 
   131     0187                     	;# 
   132     0188                     	;# 
   133     0189                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     008F                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0095                     	;# 
   189     0096                     	;# 
   190     0097                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009A                     	;# 
   194     009B                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     0105                     	;# 
   200     0107                     	;# 
   201     0108                     	;# 
   202     0109                     	;# 
   203     010C                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010F                     	;# 
   208     0185                     	;# 
   209     0187                     	;# 
   210     0188                     	;# 
   211     0189                     	;# 
   212     018C                     	;# 
   213     018D                     	;# 
   214     0000                     	;# 
   215     0001                     	;# 
   216     0002                     	;# 
   217     0003                     	;# 
   218     0004                     	;# 
   219     0005                     	;# 
   220     0006                     	;# 
   221     0007                     	;# 
   222     0008                     	;# 
   223     0009                     	;# 
   224     000A                     	;# 
   225     000B                     	;# 
   226     000C                     	;# 
   227     000D                     	;# 
   228     000E                     	;# 
   229     000E                     	;# 
   230     000F                     	;# 
   231     0010                     	;# 
   232     0011                     	;# 
   233     0012                     	;# 
   234     0013                     	;# 
   235     0014                     	;# 
   236     0015                     	;# 
   237     0015                     	;# 
   238     0016                     	;# 
   239     0017                     	;# 
   240     0018                     	;# 
   241     0019                     	;# 
   242     001A                     	;# 
   243     001B                     	;# 
   244     001B                     	;# 
   245     001C                     	;# 
   246     001D                     	;# 
   247     001E                     	;# 
   248     001F                     	;# 
   249     0081                     	;# 
   250     0085                     	;# 
   251     0086                     	;# 
   252     0087                     	;# 
   253     0088                     	;# 
   254     0089                     	;# 
   255     008C                     	;# 
   256     008D                     	;# 
   257     008E                     	;# 
   258     008F                     	;# 
   259     0090                     	;# 
   260     0091                     	;# 
   261     0092                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0094                     	;# 
   266     0095                     	;# 
   267     0096                     	;# 
   268     0097                     	;# 
   269     0098                     	;# 
   270     0099                     	;# 
   271     009A                     	;# 
   272     009B                     	;# 
   273     009C                     	;# 
   274     009D                     	;# 
   275     009E                     	;# 
   276     009F                     	;# 
   277     0105                     	;# 
   278     0107                     	;# 
   279     0108                     	;# 
   280     0109                     	;# 
   281     010C                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     010E                     	;# 
   285     010F                     	;# 
   286     0185                     	;# 
   287     0187                     	;# 
   288     0188                     	;# 
   289     0189                     	;# 
   290     018C                     	;# 
   291     018D                     	;# 
   292     0000                     	;# 
   293     0001                     	;# 
   294     0002                     	;# 
   295     0003                     	;# 
   296     0004                     	;# 
   297     0005                     	;# 
   298     0006                     	;# 
   299     0007                     	;# 
   300     0008                     	;# 
   301     0009                     	;# 
   302     000A                     	;# 
   303     000B                     	;# 
   304     000C                     	;# 
   305     000D                     	;# 
   306     000E                     	;# 
   307     000E                     	;# 
   308     000F                     	;# 
   309     0010                     	;# 
   310     0011                     	;# 
   311     0012                     	;# 
   312     0013                     	;# 
   313     0014                     	;# 
   314     0015                     	;# 
   315     0015                     	;# 
   316     0016                     	;# 
   317     0017                     	;# 
   318     0018                     	;# 
   319     0019                     	;# 
   320     001A                     	;# 
   321     001B                     	;# 
   322     001B                     	;# 
   323     001C                     	;# 
   324     001D                     	;# 
   325     001E                     	;# 
   326     001F                     	;# 
   327     0081                     	;# 
   328     0085                     	;# 
   329     0086                     	;# 
   330     0087                     	;# 
   331     0088                     	;# 
   332     0089                     	;# 
   333     008C                     	;# 
   334     008D                     	;# 
   335     008E                     	;# 
   336     008F                     	;# 
   337     0090                     	;# 
   338     0091                     	;# 
   339     0092                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0093                     	;# 
   343     0094                     	;# 
   344     0095                     	;# 
   345     0096                     	;# 
   346     0097                     	;# 
   347     0098                     	;# 
   348     0099                     	;# 
   349     009A                     	;# 
   350     009B                     	;# 
   351     009C                     	;# 
   352     009D                     	;# 
   353     009E                     	;# 
   354     009F                     	;# 
   355     0105                     	;# 
   356     0107                     	;# 
   357     0108                     	;# 
   358     0109                     	;# 
   359     010C                     	;# 
   360     010C                     	;# 
   361     010D                     	;# 
   362     010E                     	;# 
   363     010F                     	;# 
   364     0185                     	;# 
   365     0187                     	;# 
   366     0188                     	;# 
   367     0189                     	;# 
   368     018C                     	;# 
   369     018D                     	;# 
   370     0000                     	;# 
   371     0001                     	;# 
   372     0002                     	;# 
   373     0003                     	;# 
   374     0004                     	;# 
   375     0005                     	;# 
   376     0006                     	;# 
   377     0007                     	;# 
   378     0008                     	;# 
   379     0009                     	;# 
   380     000A                     	;# 
   381     000B                     	;# 
   382     000C                     	;# 
   383     000D                     	;# 
   384     000E                     	;# 
   385     000E                     	;# 
   386     000F                     	;# 
   387     0010                     	;# 
   388     0011                     	;# 
   389     0012                     	;# 
   390     0013                     	;# 
   391     0014                     	;# 
   392     0015                     	;# 
   393     0015                     	;# 
   394     0016                     	;# 
   395     0017                     	;# 
   396     0018                     	;# 
   397     0019                     	;# 
   398     001A                     	;# 
   399     001B                     	;# 
   400     001B                     	;# 
   401     001C                     	;# 
   402     001D                     	;# 
   403     001E                     	;# 
   404     001F                     	;# 
   405     0081                     	;# 
   406     0085                     	;# 
   407     0086                     	;# 
   408     0087                     	;# 
   409     0088                     	;# 
   410     0089                     	;# 
   411     008C                     	;# 
   412     008D                     	;# 
   413     008E                     	;# 
   414     008F                     	;# 
   415     0090                     	;# 
   416     0091                     	;# 
   417     0092                     	;# 
   418     0093                     	;# 
   419     0093                     	;# 
   420     0093                     	;# 
   421     0094                     	;# 
   422     0095                     	;# 
   423     0096                     	;# 
   424     0097                     	;# 
   425     0098                     	;# 
   426     0099                     	;# 
   427     009A                     	;# 
   428     009B                     	;# 
   429     009C                     	;# 
   430     009D                     	;# 
   431     009E                     	;# 
   432     009F                     	;# 
   433     0105                     	;# 
   434     0107                     	;# 
   435     0108                     	;# 
   436     0109                     	;# 
   437     010C                     	;# 
   438     010C                     	;# 
   439     010D                     	;# 
   440     010E                     	;# 
   441     010F                     	;# 
   442     0185                     	;# 
   443     0187                     	;# 
   444     0188                     	;# 
   445     0189                     	;# 
   446     018C                     	;# 
   447     018D                     	;# 
   448     0000                     	;# 
   449     0001                     	;# 
   450     0002                     	;# 
   451     0003                     	;# 
   452     0004                     	;# 
   453     0005                     	;# 
   454     0006                     	;# 
   455     0007                     	;# 
   456     0008                     	;# 
   457     0009                     	;# 
   458     000A                     	;# 
   459     000B                     	;# 
   460     000C                     	;# 
   461     000D                     	;# 
   462     000E                     	;# 
   463     000E                     	;# 
   464     000F                     	;# 
   465     0010                     	;# 
   466     0011                     	;# 
   467     0012                     	;# 
   468     0013                     	;# 
   469     0014                     	;# 
   470     0015                     	;# 
   471     0015                     	;# 
   472     0016                     	;# 
   473     0017                     	;# 
   474     0018                     	;# 
   475     0019                     	;# 
   476     001A                     	;# 
   477     001B                     	;# 
   478     001B                     	;# 
   479     001C                     	;# 
   480     001D                     	;# 
   481     001E                     	;# 
   482     001F                     	;# 
   483     0081                     	;# 
   484     0085                     	;# 
   485     0086                     	;# 
   486     0087                     	;# 
   487     0088                     	;# 
   488     0089                     	;# 
   489     008C                     	;# 
   490     008D                     	;# 
   491     008E                     	;# 
   492     008F                     	;# 
   493     0090                     	;# 
   494     0091                     	;# 
   495     0092                     	;# 
   496     0093                     	;# 
   497     0093                     	;# 
   498     0093                     	;# 
   499     0094                     	;# 
   500     0095                     	;# 
   501     0096                     	;# 
   502     0097                     	;# 
   503     0098                     	;# 
   504     0099                     	;# 
   505     009A                     	;# 
   506     009B                     	;# 
   507     009C                     	;# 
   508     009D                     	;# 
   509     009E                     	;# 
   510     009F                     	;# 
   511     0105                     	;# 
   512     0107                     	;# 
   513     0108                     	;# 
   514     0109                     	;# 
   515     010C                     	;# 
   516     010C                     	;# 
   517     010D                     	;# 
   518     010E                     	;# 
   519     010F                     	;# 
   520     0185                     	;# 
   521     0187                     	;# 
   522     0188                     	;# 
   523     0189                     	;# 
   524     018C                     	;# 
   525     018D                     	;# 
   526     001E                     _ADRESH	set	30
   527     001F                     _ADCON0bits	set	31
   528     0005                     _PORTAbits	set	5
   529     0014                     _SSPCON	set	20
   530     0008                     _PORTDbits	set	8
   531     000C                     _PIR1bits	set	12
   532     0006                     _PORTBbits	set	6
   533     000B                     _INTCONbits	set	11
   534     0013                     _SSPBUF	set	19
   535     0008                     _PORTD	set	8
   536     0066                     _ADIF	set	102
   537     0043                     _RD3	set	67
   538     0047                     _RD7	set	71
   539     0046                     _RD6	set	70
   540     0045                     _RD5	set	69
   541     0044                     _RD4	set	68
   542     0058                     _RBIF	set	88
   543     0063                     _SSPIF	set	99
   544     009F                     _ADCON1bits	set	159
   545     008F                     _OSCCONbits	set	143
   546     0094                     _SSPSTATbits	set	148
   547     0094                     _SSPSTAT	set	148
   548     0081                     _OPTION_REGbits	set	129
   549     0095                     _WPUB	set	149
   550     0096                     _IOCB	set	150
   551     0086                     _TRISB	set	134
   552     0085                     _TRISAbits	set	133
   553     008C                     _PIE1bits	set	140
   554     0088                     _TRISD	set	136
   555     043B                     _TRISC3	set	1083
   556     043D                     _TRISC5	set	1085
   557     0188                     _ANSELbits	set	392
   558                           
   559                           	psect	cinit
   560     000F                     start_initialization:	
   561                           ; #config settings
   562                           
   563     000F                     __initialization:
   564                           
   565                           ; Clear objects allocated to COMMON
   566     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   567     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   568     0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   569     0012                     end_of_initialization:	
   570                           ;End of C runtime variable initialization code
   571                           
   572     0012                     __end_of__initialization:
   573     0012  0183               	clrf	3
   574     0013  120A  118A  2918   	ljmp	_main	;jump to C main() function
   575                           
   576                           	psect	bssCOMMON
   577     0076                     __pbssCOMMON:
   578     0076                     _dato:
   579     0076                     	ds	1
   580     0077                     _cont:
   581     0077                     	ds	1
   582     0078                     _lecADC:
   583     0078                     	ds	1
   584                           
   585                           	psect	cstackCOMMON
   586     0070                     __pcstackCOMMON:
   587     0070                     ?_spiRead:
   588     0070                     ??_spiRead:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_setupINTOSC:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ?_portsetup:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_setup_portb:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ?_isr:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ??_isr:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_main:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_spiReceiveWait:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ??_spiReceiveWait:	
   613                           ; 1 bytes @ 0x0
   614                           
   615                           
   616                           ; 1 bytes @ 0x0
   617     0070                     	ds	4
   618     0074                     isr@com:
   619                           
   620                           ; 1 bytes @ 0x4
   621     0074                     	ds	1
   622     0075                     ??_setupINTOSC:
   623     0075                     ??_setup_portb:	
   624                           ; 1 bytes @ 0x5
   625                           
   626     0075                     ??_ADC_config:	
   627                           ; 1 bytes @ 0x5
   628                           
   629     0075                     ??_spiInit:	
   630                           ; 1 bytes @ 0x5
   631                           
   632     0075                     spiInit@sType:	
   633                           ; 1 bytes @ 0x5
   634                           
   635     0075                     setupINTOSC@IRCF:	
   636                           ; 1 bytes @ 0x5
   637                           
   638                           
   639                           ; 1 bytes @ 0x5
   640     0075                     	ds	1
   641     0076                     ??_portsetup:
   642                           
   643                           	psect	cstackBANK0
   644     0020                     __pcstackBANK0:	
   645                           ; 1 bytes @ 0x6
   646                           
   647     0020                     ?_ADC_config:
   648     0020                     ?_spiInit:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0020                     ?_ADC_read:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0020                     spiInit@sDataSample:	
   655                           ; 2 bytes @ 0x0
   656                           
   657     0020                     ADC_config@channel:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0020                     ADC_read@channel:	
   661                           ; 2 bytes @ 0x0
   662                           
   663                           
   664                           ; 2 bytes @ 0x0
   665     0020                     	ds	1
   666     0021                     spiInit@sClockIdle:
   667                           
   668                           ; 1 bytes @ 0x1
   669     0021                     	ds	1
   670     0022                     ??_ADC_read:
   671     0022                     spiInit@sTransmitEdge:	
   672                           ; 1 bytes @ 0x2
   673                           
   674                           
   675                           ; 1 bytes @ 0x2
   676     0022                     	ds	2
   677     0024                     ??_main:
   678                           
   679                           ; 1 bytes @ 0x4
   680     0024                     	ds	2
   681                           
   682                           	psect	maintext
   683     0118                     __pmaintext:	
   684 ;;
   685 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   686 ;;
   687 ;; *************** function _main *****************
   688 ;; Defined at:
   689 ;;		line 86 in file "main.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0, pclath, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : B00/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0
   705 ;;      Temps:          0       2       0       0       0
   706 ;;      Totals:         0       2       0       0       0
   707 ;;Total ram usage:        2 bytes
   708 ;; Hardware stack levels required when called: 5
   709 ;; This function calls:
   710 ;;		_ADC_config
   711 ;;		_ADC_read
   712 ;;		_portsetup
   713 ;;		_setupINTOSC
   714 ;;		_setup_portb
   715 ;; This function is called by:
   716 ;;		Startup code after reset
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720     0118                     _main:	
   721                           ;psect for function _main
   722                           
   723     0118                     l1193:	
   724                           ;incstack = 0
   725                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   726                           
   727                           
   728                           ;main.c: 87:     setupINTOSC(5);
   729     0118  3005               	movlw	5
   730     0119  120A  118A  2016  120A  118A  	fcall	_setupINTOSC
   731                           
   732                           ;main.c: 88:     portsetup();
   733     011E  120A  118A  21A6  120A  118A  	fcall	_portsetup
   734                           
   735                           ;main.c: 89:     setup_portb();
   736     0123  120A  118A  21BF  120A  118A  	fcall	_setup_portb
   737                           
   738                           ;main.c: 90:     ADC_config(0x01);
   739     0128  3001               	movlw	1
   740     0129  1283               	bcf	3,5	;RP0=0, select bank0
   741     012A  1303               	bcf	3,6	;RP1=0, select bank0
   742     012B  00A0               	movwf	ADC_config@channel
   743     012C  3000               	movlw	0
   744     012D  00A1               	movwf	ADC_config@channel+1
   745     012E  120A  118A  2150  120A  118A  	fcall	_ADC_config
   746     0133                     l1195:
   747                           
   748                           ;main.c: 91:     cont = 0;
   749     0133  01F7               	clrf	_cont
   750     0134                     l1197:
   751                           
   752                           ;main.c: 94:         lecADC = ADC_read(0);
   753     0134  3000               	movlw	0
   754     0135  1283               	bcf	3,5	;RP0=0, select bank0
   755     0136  1303               	bcf	3,6	;RP1=0, select bank0
   756     0137  00A0               	movwf	ADC_read@channel
   757     0138  00A1               	movwf	ADC_read@channel+1
   758     0139  120A  118A  2075  120A  118A  	fcall	_ADC_read
   759     013E  1283               	bcf	3,5	;RP0=0, select bank0
   760     013F  1303               	bcf	3,6	;RP1=0, select bank0
   761     0140  0820               	movf	?_ADC_read,w
   762     0141  00F8               	movwf	_lecADC
   763     0142                     l1199:
   764                           
   765                           ;main.c: 96:         _delay((unsigned long)((5)*(2000000/4000.0)));
   766     0142  3004               	movlw	4
   767     0143  1283               	bcf	3,5	;RP0=0, select bank0
   768     0144  1303               	bcf	3,6	;RP1=0, select bank0
   769     0145  00A5               	movwf	??_main+1
   770     0146  303D               	movlw	61
   771     0147  00A4               	movwf	??_main
   772     0148                     u567:
   773     0148  0BA4               	decfsz	??_main,f
   774     0149  2948               	goto	u567
   775     014A  0BA5               	decfsz	??_main+1,f
   776     014B  2948               	goto	u567
   777     014C  2934               	goto	l1197
   778     014D  120A  118A  280C   	ljmp	start
   779     0150                     __end_of_main:
   780                           
   781                           	psect	text1
   782     01BF                     __ptext1:	
   783 ;; *************** function _setup_portb *****************
   784 ;; Defined at:
   785 ;;		line 112 in file "main.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; Hardware stack levels required when called: 3
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813     01BF                     _setup_portb:	
   814                           ;psect for function _setup_portb
   815                           
   816     01BF                     l869:	
   817                           ;incstack = 0
   818                           ; Regs used in _setup_portb: [wreg]
   819                           
   820                           
   821                           ;main.c: 113:     TRISB = 0b11000000;
   822     01BF  30C0               	movlw	192
   823     01C0  1683               	bsf	3,5	;RP0=1, select bank1
   824     01C1  1303               	bcf	3,6	;RP1=0, select bank1
   825     01C2  0086               	movwf	6	;volatile
   826     01C3                     l871:
   827                           
   828                           ;main.c: 114:     INTCONbits.RBIE = 1;
   829     01C3  158B               	bsf	11,3	;volatile
   830     01C4                     l873:
   831                           
   832                           ;main.c: 115:     INTCONbits.RBIF = 0;
   833     01C4  100B               	bcf	11,0	;volatile
   834                           
   835                           ;main.c: 116:     IOCB = 0b11000000;
   836     01C5  30C0               	movlw	192
   837     01C6  0096               	movwf	22	;volatile
   838                           
   839                           ;main.c: 117:     WPUB = 0b11000000;
   840     01C7  30C0               	movlw	192
   841     01C8  0095               	movwf	21	;volatile
   842     01C9                     l875:
   843                           
   844                           ;main.c: 118:     OPTION_REGbits.nRBPU = 0;
   845     01C9  1381               	bcf	1,7	;volatile
   846     01CA                     l76:
   847     01CA  0008               	return
   848     01CB                     __end_of_setup_portb:
   849                           
   850                           	psect	text2
   851     0016                     __ptext2:	
   852 ;; *************** function _setupINTOSC *****************
   853 ;; Defined at:
   854 ;;		line 10 in file "oscilador.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  IRCF            1    wreg     unsigned char 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  IRCF            1    5[COMMON] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         1       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0
   871 ;;      Totals:         1       0       0       0       0
   872 ;;Total ram usage:        1 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 3
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882     0016                     _setupINTOSC:	
   883                           ;psect for function _setupINTOSC
   884                           
   885                           
   886                           ;incstack = 0
   887                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   888                           ;setupINTOSC@IRCF stored from wreg
   889     0016  00F5               	movwf	setupINTOSC@IRCF
   890     0017                     l835:
   891                           
   892                           ;oscilador.c: 11:     if (IRCF == 7){
   893     0017  3007               	movlw	7
   894     0018  0675               	xorwf	setupINTOSC@IRCF,w
   895     0019  1D03               	btfss	3,2
   896     001A  281C               	goto	u71
   897     001B  281D               	goto	u70
   898     001C                     u71:
   899     001C  2821               	goto	l170
   900     001D                     u70:
   901     001D                     l837:
   902                           
   903                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
   904     001D  3070               	movlw	112
   905     001E  1683               	bsf	3,5	;RP0=1, select bank1
   906     001F  1303               	bcf	3,6	;RP1=0, select bank1
   907     0020  048F               	iorwf	15,f	;volatile
   908     0021                     l170:	
   909                           ;oscilador.c: 13:     }
   910                           
   911                           
   912                           ;oscilador.c: 14:     if (IRCF == 6){
   913     0021  3006               	movlw	6
   914     0022  0675               	xorwf	setupINTOSC@IRCF,w
   915     0023  1D03               	btfss	3,2
   916     0024  2826               	goto	u81
   917     0025  2827               	goto	u80
   918     0026                     u81:
   919     0026  282D               	goto	l171
   920     0027                     u80:
   921     0027                     l839:
   922                           
   923                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
   924     0027  1683               	bsf	3,5	;RP0=1, select bank1
   925     0028  1303               	bcf	3,6	;RP1=0, select bank1
   926     0029  080F               	movf	15,w	;volatile
   927     002A  398F               	andlw	-113
   928     002B  3860               	iorlw	96
   929     002C  008F               	movwf	15	;volatile
   930     002D                     l171:	
   931                           ;oscilador.c: 16:     }
   932                           
   933                           
   934                           ;oscilador.c: 17:     if (IRCF == 5){
   935     002D  3005               	movlw	5
   936     002E  0675               	xorwf	setupINTOSC@IRCF,w
   937     002F  1D03               	btfss	3,2
   938     0030  2832               	goto	u91
   939     0031  2833               	goto	u90
   940     0032                     u91:
   941     0032  2839               	goto	l172
   942     0033                     u90:
   943     0033                     l841:
   944                           
   945                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
   946     0033  1683               	bsf	3,5	;RP0=1, select bank1
   947     0034  1303               	bcf	3,6	;RP1=0, select bank1
   948     0035  080F               	movf	15,w	;volatile
   949     0036  398F               	andlw	-113
   950     0037  3850               	iorlw	80
   951     0038  008F               	movwf	15	;volatile
   952     0039                     l172:	
   953                           ;oscilador.c: 19:     }
   954                           
   955                           
   956                           ;oscilador.c: 20:     if (IRCF == 4){
   957     0039  3004               	movlw	4
   958     003A  0675               	xorwf	setupINTOSC@IRCF,w
   959     003B  1D03               	btfss	3,2
   960     003C  283E               	goto	u101
   961     003D  283F               	goto	u100
   962     003E                     u101:
   963     003E  2845               	goto	l173
   964     003F                     u100:
   965     003F                     l843:
   966                           
   967                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
   968     003F  1683               	bsf	3,5	;RP0=1, select bank1
   969     0040  1303               	bcf	3,6	;RP1=0, select bank1
   970     0041  080F               	movf	15,w	;volatile
   971     0042  398F               	andlw	-113
   972     0043  3840               	iorlw	64
   973     0044  008F               	movwf	15	;volatile
   974     0045                     l173:	
   975                           ;oscilador.c: 22:     }
   976                           
   977                           
   978                           ;oscilador.c: 23:     if (IRCF == 3){
   979     0045  3003               	movlw	3
   980     0046  0675               	xorwf	setupINTOSC@IRCF,w
   981     0047  1D03               	btfss	3,2
   982     0048  284A               	goto	u111
   983     0049  284B               	goto	u110
   984     004A                     u111:
   985     004A  2851               	goto	l174
   986     004B                     u110:
   987     004B                     l845:
   988                           
   989                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
   990     004B  1683               	bsf	3,5	;RP0=1, select bank1
   991     004C  1303               	bcf	3,6	;RP1=0, select bank1
   992     004D  080F               	movf	15,w	;volatile
   993     004E  398F               	andlw	-113
   994     004F  3830               	iorlw	48
   995     0050  008F               	movwf	15	;volatile
   996     0051                     l174:	
   997                           ;oscilador.c: 25:     }
   998                           
   999                           
  1000                           ;oscilador.c: 26:     if (IRCF == 2){
  1001     0051  3002               	movlw	2
  1002     0052  0675               	xorwf	setupINTOSC@IRCF,w
  1003     0053  1D03               	btfss	3,2
  1004     0054  2856               	goto	u121
  1005     0055  2857               	goto	u120
  1006     0056                     u121:
  1007     0056  285D               	goto	l175
  1008     0057                     u120:
  1009     0057                     l847:
  1010                           
  1011                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1012     0057  1683               	bsf	3,5	;RP0=1, select bank1
  1013     0058  1303               	bcf	3,6	;RP1=0, select bank1
  1014     0059  080F               	movf	15,w	;volatile
  1015     005A  398F               	andlw	-113
  1016     005B  3820               	iorlw	32
  1017     005C  008F               	movwf	15	;volatile
  1018     005D                     l175:	
  1019                           ;oscilador.c: 28:     }
  1020                           
  1021                           
  1022                           ;oscilador.c: 29:     if (IRCF == 1){
  1023     005D  0375               	decf	setupINTOSC@IRCF,w
  1024     005E  1D03               	btfss	3,2
  1025     005F  2861               	goto	u131
  1026     0060  2862               	goto	u130
  1027     0061                     u131:
  1028     0061  2868               	goto	l176
  1029     0062                     u130:
  1030     0062                     l849:
  1031                           
  1032                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1033     0062  1683               	bsf	3,5	;RP0=1, select bank1
  1034     0063  1303               	bcf	3,6	;RP1=0, select bank1
  1035     0064  080F               	movf	15,w	;volatile
  1036     0065  398F               	andlw	-113
  1037     0066  3810               	iorlw	16
  1038     0067  008F               	movwf	15	;volatile
  1039     0068                     l176:	
  1040                           ;oscilador.c: 31:     }
  1041                           
  1042                           
  1043                           ;oscilador.c: 32:     if (IRCF == 0){
  1044     0068  0875               	movf	setupINTOSC@IRCF,w
  1045     0069  1D03               	btfss	3,2
  1046     006A  286C               	goto	u141
  1047     006B  286D               	goto	u140
  1048     006C                     u141:
  1049     006C  2871               	goto	l853
  1050     006D                     u140:
  1051     006D                     l851:
  1052                           
  1053                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1054     006D  308F               	movlw	-113
  1055     006E  1683               	bsf	3,5	;RP0=1, select bank1
  1056     006F  1303               	bcf	3,6	;RP1=0, select bank1
  1057     0070  058F               	andwf	15,f	;volatile
  1058     0071                     l853:
  1059                           
  1060                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1061     0071  1683               	bsf	3,5	;RP0=1, select bank1
  1062     0072  1303               	bcf	3,6	;RP1=0, select bank1
  1063     0073  140F               	bsf	15,0	;volatile
  1064     0074                     l178:
  1065     0074  0008               	return
  1066     0075                     __end_of_setupINTOSC:
  1067                           
  1068                           	psect	text3
  1069     01A6                     __ptext3:	
  1070 ;; *************** function _portsetup *****************
  1071 ;; Defined at:
  1072 ;;		line 100 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0
  1089 ;;      Totals:         0       0       0       0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 4
  1093 ;; This function calls:
  1094 ;;		_spiInit
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100     01A6                     _portsetup:	
  1101                           ;psect for function _portsetup
  1102                           
  1103     01A6                     l1133:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1106                           
  1107                           
  1108                           ;main.c: 101:     TRISD = 0;
  1109     01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1110     01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1111     01A8  0188               	clrf	8	;volatile
  1112                           
  1113                           ;main.c: 102:     PORTD = 0;
  1114     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1115     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1116     01AB  0188               	clrf	8	;volatile
  1117     01AC                     l1135:
  1118                           
  1119                           ;main.c: 103:     INTCONbits.GIE = 1;
  1120     01AC  178B               	bsf	11,7	;volatile
  1121     01AD                     l1137:
  1122                           
  1123                           ;main.c: 104:     INTCONbits.PEIE = 1;
  1124     01AD  170B               	bsf	11,6	;volatile
  1125     01AE                     l1139:
  1126                           
  1127                           ;main.c: 105:     PIR1bits.SSPIF = 0;
  1128     01AE  118C               	bcf	12,3	;volatile
  1129     01AF                     l1141:
  1130                           
  1131                           ;main.c: 106:     PIE1bits.SSPIE = 1;
  1132     01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1133     01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1134     01B1  158C               	bsf	12,3	;volatile
  1135     01B2                     l1143:
  1136                           
  1137                           ;main.c: 107:     TRISAbits.TRISA5 = 1;
  1138     01B2  1685               	bsf	5,5	;volatile
  1139     01B3                     l1145:
  1140                           
  1141                           ;main.c: 108:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
  1142     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1143     01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1144     01B5  01A0               	clrf	spiInit@sDataSample
  1145     01B6  01A1               	clrf	spiInit@sClockIdle
  1146     01B7  01A2               	clrf	spiInit@sTransmitEdge
  1147     01B8  3024               	movlw	36
  1148     01B9  120A  118A  2188  120A  118A  	fcall	_spiInit
  1149     01BE                     l73:
  1150     01BE  0008               	return
  1151     01BF                     __end_of_portsetup:
  1152                           
  1153                           	psect	text4
  1154     0188                     __ptext4:	
  1155 ;; *************** function _spiInit *****************
  1156 ;; Defined at:
  1157 ;;		line 12 in file "SPI.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  sType           1    wreg     enum E1292
  1160 ;;  sDataSample     1    0[BANK0 ] enum E1300
  1161 ;;  sClockIdle      1    1[BANK0 ] enum E1304
  1162 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  sType           1    5[COMMON] enum E1292
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       3       0       0       0
  1175 ;;      Locals:         1       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0
  1177 ;;      Totals:         1       3       0       0       0
  1178 ;;Total ram usage:        4 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; Hardware stack levels required when called: 3
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_portsetup
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188     0188                     _spiInit:	
  1189                           ;psect for function _spiInit
  1190                           
  1191                           
  1192                           ;incstack = 0
  1193                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1194                           ;spiInit@sType stored from wreg
  1195     0188  00F5               	movwf	spiInit@sType
  1196     0189                     l1123:
  1197                           
  1198                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1199     0189  1683               	bsf	3,5	;RP0=1, select bank1
  1200     018A  1303               	bcf	3,6	;RP1=0, select bank1
  1201     018B  1287               	bcf	7,5	;volatile
  1202                           
  1203                           ;SPI.c: 15:     if(sType & 0b00000100)
  1204     018C  1D75               	btfss	spiInit@sType,2
  1205     018D  298F               	goto	u461
  1206     018E  2990               	goto	u460
  1207     018F                     u461:
  1208     018F  2998               	goto	l1129
  1209     0190                     u460:
  1210     0190                     l1125:
  1211                           
  1212                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1213     0190  1283               	bcf	3,5	;RP0=0, select bank0
  1214     0191  1303               	bcf	3,6	;RP1=0, select bank0
  1215     0192  0822               	movf	spiInit@sTransmitEdge,w
  1216     0193  1683               	bsf	3,5	;RP0=1, select bank1
  1217     0194  1303               	bcf	3,6	;RP1=0, select bank1
  1218     0195  0094               	movwf	20	;volatile
  1219     0196                     l1127:
  1220                           
  1221                           ;SPI.c: 18:         TRISC3 = 1;
  1222     0196  1587               	bsf	7,3	;volatile
  1223                           
  1224                           ;SPI.c: 19:     }
  1225     0197  29A0               	goto	l147
  1226     0198                     l1129:
  1227                           
  1228                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1229     0198  1283               	bcf	3,5	;RP0=0, select bank0
  1230     0199  1303               	bcf	3,6	;RP1=0, select bank0
  1231     019A  0820               	movf	spiInit@sDataSample,w
  1232     019B  0422               	iorwf	spiInit@sTransmitEdge,w
  1233     019C  1683               	bsf	3,5	;RP0=1, select bank1
  1234     019D  1303               	bcf	3,6	;RP1=0, select bank1
  1235     019E  0094               	movwf	20	;volatile
  1236     019F                     l1131:
  1237                           
  1238                           ;SPI.c: 23:         TRISC3 = 0;
  1239     019F  1187               	bcf	7,3	;volatile
  1240     01A0                     l147:	
  1241                           ;SPI.c: 24:     }
  1242                           
  1243                           
  1244                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1245     01A0  0875               	movf	spiInit@sType,w
  1246     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1247     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1248     01A3  0421               	iorwf	spiInit@sClockIdle,w
  1249     01A4  0094               	movwf	20	;volatile
  1250     01A5                     l148:
  1251     01A5  0008               	return
  1252     01A6                     __end_of_spiInit:
  1253                           
  1254                           	psect	text5
  1255     0075                     __ptext5:	
  1256 ;; *************** function _ADC_read *****************
  1257 ;; Defined at:
  1258 ;;		line 41 in file "setupADC.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  channel         2    0[BANK0 ] int 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  2    0[BANK0 ] unsigned int 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       2       0       0       0
  1273 ;;      Locals:         0       0       0       0       0
  1274 ;;      Temps:          0       2       0       0       0
  1275 ;;      Totals:         0       4       0       0       0
  1276 ;;Total ram usage:        4 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 3
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286     0075                     _ADC_read:	
  1287                           ;psect for function _ADC_read
  1288                           
  1289     0075                     l1157:	
  1290                           ;incstack = 0
  1291                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  1292                           
  1293                           
  1294                           ;setupADC.c: 42:     if(channel ==0){
  1295     0075  1283               	bcf	3,5	;RP0=0, select bank0
  1296     0076  1303               	bcf	3,6	;RP1=0, select bank0
  1297     0077  0820               	movf	ADC_read@channel,w
  1298     0078  0421               	iorwf	ADC_read@channel+1,w
  1299     0079  1D03               	btfss	3,2
  1300     007A  287C               	goto	u501
  1301     007B  287D               	goto	u500
  1302     007C                     u501:
  1303     007C  2896               	goto	l1169
  1304     007D                     u500:
  1305     007D                     l1159:
  1306                           
  1307                           ;setupADC.c: 43:         ADCON0bits.CHS = 0b0000;
  1308     007D  30C3               	movlw	-61
  1309     007E  059F               	andwf	31,f	;volatile
  1310     007F                     l1161:
  1311                           
  1312                           ;setupADC.c: 44:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1313     007F  3007               	movlw	7
  1314     0080  1283               	bcf	3,5	;RP0=0, select bank0
  1315     0081  1303               	bcf	3,6	;RP1=0, select bank0
  1316     0082  00A2               	movwf	??_ADC_read
  1317     0083                     u577:
  1318     0083  0BA2               	decfsz	??_ADC_read,f
  1319     0084  2883               	goto	u577
  1320     0085  0000               	nop
  1321     0086                     l1163:
  1322                           
  1323                           ;setupADC.c: 45:         ADCON0bits.GO = 1;
  1324     0086  1283               	bcf	3,5	;RP0=0, select bank0
  1325     0087  1303               	bcf	3,6	;RP1=0, select bank0
  1326     0088  149F               	bsf	31,1	;volatile
  1327     0089                     l204:	
  1328                           ;setupADC.c: 46:         while (ADCON0bits.GO);
  1329                           
  1330     0089  189F               	btfsc	31,1	;volatile
  1331     008A  288C               	goto	u511
  1332     008B  288D               	goto	u510
  1333     008C                     u511:
  1334     008C  2889               	goto	l204
  1335     008D                     u510:
  1336     008D                     l206:
  1337                           
  1338                           ;setupADC.c: 47:         ADIF = 0;
  1339     008D  130C               	bcf	12,6	;volatile
  1340     008E                     l1165:
  1341                           
  1342                           ;setupADC.c: 48:         return ADRESH;
  1343     008E  081E               	movf	30,w	;volatile
  1344     008F  00A2               	movwf	??_ADC_read
  1345     0090  01A3               	clrf	??_ADC_read+1
  1346     0091  0822               	movf	??_ADC_read,w
  1347     0092  00A0               	movwf	?_ADC_read
  1348     0093  0823               	movf	??_ADC_read+1,w
  1349     0094  00A1               	movwf	?_ADC_read+1
  1350     0095  28C9               	goto	l207
  1351     0096                     l1169:
  1352                           
  1353                           ;setupADC.c: 50:     if(channel ==1){
  1354     0096  0320               	decf	ADC_read@channel,w
  1355     0097  0421               	iorwf	ADC_read@channel+1,w
  1356     0098  1D03               	btfss	3,2
  1357     0099  289B               	goto	u521
  1358     009A  289C               	goto	u520
  1359     009B                     u521:
  1360     009B  28AF               	goto	l1181
  1361     009C                     u520:
  1362     009C                     l1171:
  1363                           
  1364                           ;setupADC.c: 51:         ADCON0bits.CHS = 0b0001;
  1365     009C  081F               	movf	31,w	;volatile
  1366     009D  39C3               	andlw	-61
  1367     009E  3804               	iorlw	4
  1368     009F  009F               	movwf	31	;volatile
  1369     00A0                     l1173:
  1370                           
  1371                           ;setupADC.c: 52:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1372     00A0  3007               	movlw	7
  1373     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1374     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1375     00A3  00A2               	movwf	??_ADC_read
  1376     00A4                     u587:
  1377     00A4  0BA2               	decfsz	??_ADC_read,f
  1378     00A5  28A4               	goto	u587
  1379     00A6  0000               	nop
  1380     00A7                     l1175:
  1381                           
  1382                           ;setupADC.c: 53:         ADCON0bits.GO = 1;
  1383     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1384     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1385     00A9  149F               	bsf	31,1	;volatile
  1386     00AA                     l209:	
  1387                           ;setupADC.c: 54:         while (ADCON0bits.GO);
  1388                           
  1389     00AA  189F               	btfsc	31,1	;volatile
  1390     00AB  28AD               	goto	u531
  1391     00AC  28AE               	goto	u530
  1392     00AD                     u531:
  1393     00AD  28AA               	goto	l209
  1394     00AE                     u530:
  1395     00AE  288D               	goto	l206
  1396     00AF                     l1181:
  1397                           
  1398                           ;setupADC.c: 58:     if(channel ==2){
  1399     00AF  3002               	movlw	2
  1400     00B0  0620               	xorwf	ADC_read@channel,w
  1401     00B1  0421               	iorwf	ADC_read@channel+1,w
  1402     00B2  1D03               	btfss	3,2
  1403     00B3  28B5               	goto	u541
  1404     00B4  28B6               	goto	u540
  1405     00B5                     u541:
  1406     00B5  28C9               	goto	l207
  1407     00B6                     u540:
  1408     00B6                     l1183:
  1409                           
  1410                           ;setupADC.c: 59:         ADCON0bits.CHS = 0b0010;
  1411     00B6  081F               	movf	31,w	;volatile
  1412     00B7  39C3               	andlw	-61
  1413     00B8  3808               	iorlw	8
  1414     00B9  009F               	movwf	31	;volatile
  1415     00BA                     l1185:
  1416                           
  1417                           ;setupADC.c: 60:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1418     00BA  3007               	movlw	7
  1419     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1420     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1421     00BD  00A2               	movwf	??_ADC_read
  1422     00BE                     u597:
  1423     00BE  0BA2               	decfsz	??_ADC_read,f
  1424     00BF  28BE               	goto	u597
  1425     00C0  0000               	nop
  1426     00C1                     l1187:
  1427                           
  1428                           ;setupADC.c: 61:         ADCON0bits.GO = 1;
  1429     00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1430     00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1431     00C3  149F               	bsf	31,1	;volatile
  1432     00C4                     l213:	
  1433                           ;setupADC.c: 62:         while (ADCON0bits.GO);
  1434                           
  1435     00C4  189F               	btfsc	31,1	;volatile
  1436     00C5  28C7               	goto	u551
  1437     00C6  28C8               	goto	u550
  1438     00C7                     u551:
  1439     00C7  28C4               	goto	l213
  1440     00C8                     u550:
  1441     00C8  288D               	goto	l206
  1442     00C9                     l207:
  1443     00C9  0008               	return
  1444     00CA                     __end_of_ADC_read:
  1445                           
  1446                           	psect	text6
  1447     0150                     __ptext6:	
  1448 ;; *************** function _ADC_config *****************
  1449 ;; Defined at:
  1450 ;;		line 11 in file "setupADC.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  channel         2    0[BANK0 ] int 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1464 ;;      Params:         0       2       0       0       0
  1465 ;;      Locals:         0       0       0       0       0
  1466 ;;      Temps:          1       0       0       0       0
  1467 ;;      Totals:         1       2       0       0       0
  1468 ;;Total ram usage:        3 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 3
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478     0150                     _ADC_config:	
  1479                           ;psect for function _ADC_config
  1480                           
  1481     0150                     l1147:	
  1482                           ;incstack = 0
  1483                           ; Regs used in _ADC_config: [wreg]
  1484                           
  1485                           
  1486                           ;setupADC.c: 12:     if((channel & 0x01) == 1){
  1487     0150  1283               	bcf	3,5	;RP0=0, select bank0
  1488     0151  1303               	bcf	3,6	;RP1=0, select bank0
  1489     0152  1C20               	btfss	ADC_config@channel,0
  1490     0153  2955               	goto	u471
  1491     0154  2956               	goto	u470
  1492     0155                     u471:
  1493     0155  295D               	goto	l197
  1494     0156                     u470:
  1495     0156                     l1149:
  1496                           
  1497                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  1498     0156  1005               	bcf	5,0	;volatile
  1499                           
  1500                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  1501     0157  1683               	bsf	3,5	;RP0=1, select bank1
  1502     0158  1303               	bcf	3,6	;RP1=0, select bank1
  1503     0159  1405               	bsf	5,0	;volatile
  1504                           
  1505                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  1506     015A  1683               	bsf	3,5	;RP0=1, select bank3
  1507     015B  1703               	bsf	3,6	;RP1=1, select bank3
  1508     015C  1408               	bsf	8,0	;volatile
  1509     015D                     l197:	
  1510                           ;setupADC.c: 16:     }
  1511                           
  1512                           
  1513                           ;setupADC.c: 17:     if((channel & 0x02) == 0x02){
  1514     015D  1283               	bcf	3,5	;RP0=0, select bank0
  1515     015E  1303               	bcf	3,6	;RP1=0, select bank0
  1516     015F  1CA0               	btfss	ADC_config@channel,1
  1517     0160  2962               	goto	u481
  1518     0161  2963               	goto	u480
  1519     0162                     u481:
  1520     0162  296A               	goto	l198
  1521     0163                     u480:
  1522     0163                     l1151:
  1523                           
  1524                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  1525     0163  1085               	bcf	5,1	;volatile
  1526                           
  1527                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  1528     0164  1683               	bsf	3,5	;RP0=1, select bank1
  1529     0165  1303               	bcf	3,6	;RP1=0, select bank1
  1530     0166  1485               	bsf	5,1	;volatile
  1531                           
  1532                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  1533     0167  1683               	bsf	3,5	;RP0=1, select bank3
  1534     0168  1703               	bsf	3,6	;RP1=1, select bank3
  1535     0169  1488               	bsf	8,1	;volatile
  1536     016A                     l198:	
  1537                           ;setupADC.c: 22:     }
  1538                           
  1539                           
  1540                           ;setupADC.c: 23:     if((channel & 0x04) == 0x4){
  1541     016A  1283               	bcf	3,5	;RP0=0, select bank0
  1542     016B  1303               	bcf	3,6	;RP1=0, select bank0
  1543     016C  1D20               	btfss	ADC_config@channel,2
  1544     016D  296F               	goto	u491
  1545     016E  2970               	goto	u490
  1546     016F                     u491:
  1547     016F  2977               	goto	l199
  1548     0170                     u490:
  1549     0170                     l1153:
  1550                           
  1551                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  1552     0170  1105               	bcf	5,2	;volatile
  1553                           
  1554                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  1555     0171  1683               	bsf	3,5	;RP0=1, select bank1
  1556     0172  1303               	bcf	3,6	;RP1=0, select bank1
  1557     0173  1505               	bsf	5,2	;volatile
  1558                           
  1559                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  1560     0174  1683               	bsf	3,5	;RP0=1, select bank3
  1561     0175  1703               	bsf	3,6	;RP1=1, select bank3
  1562     0176  1508               	bsf	8,2	;volatile
  1563     0177                     l199:	
  1564                           ;setupADC.c: 27:     }
  1565                           
  1566                           
  1567                           ;setupADC.c: 29:     ADCON0bits.ADCS1 = 0;
  1568     0177  1283               	bcf	3,5	;RP0=0, select bank0
  1569     0178  1303               	bcf	3,6	;RP1=0, select bank0
  1570     0179  139F               	bcf	31,7	;volatile
  1571                           
  1572                           ;setupADC.c: 30:     ADCON0bits.ADCS0 = 1;
  1573     017A  171F               	bsf	31,6	;volatile
  1574                           
  1575                           ;setupADC.c: 32:     ADCON1bits.VCFG1 = 0;
  1576     017B  1683               	bsf	3,5	;RP0=1, select bank1
  1577     017C  1303               	bcf	3,6	;RP1=0, select bank1
  1578     017D  129F               	bcf	31,5	;volatile
  1579                           
  1580                           ;setupADC.c: 33:     ADCON1bits.VCFG0 = 0;
  1581     017E  121F               	bcf	31,4	;volatile
  1582                           
  1583                           ;setupADC.c: 35:     ADCON1bits.ADFM = 0;
  1584     017F  139F               	bcf	31,7	;volatile
  1585                           
  1586                           ;setupADC.c: 37:     ADCON0bits.ADON = 1;
  1587     0180  1283               	bcf	3,5	;RP0=0, select bank0
  1588     0181  1303               	bcf	3,6	;RP1=0, select bank0
  1589     0182  141F               	bsf	31,0	;volatile
  1590     0183                     l1155:
  1591                           
  1592                           ;setupADC.c: 38:     _delay((unsigned long)((100)*(1000000/4000000.0)));
  1593     0183  3008               	movlw	8
  1594     0184  00F5               	movwf	??_ADC_config
  1595     0185                     u607:
  1596     0185  0BF5               	decfsz	??_ADC_config,f
  1597     0186  2985               	goto	u607
  1598     0187                     l200:
  1599     0187  0008               	return
  1600     0188                     __end_of_ADC_config:
  1601                           
  1602                           	psect	text7
  1603     00CA                     __ptext7:	
  1604 ;; *************** function _isr *****************
  1605 ;; Defined at:
  1606 ;;		line 58 in file "main.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  com             1    4[COMMON] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         1       0       0       0       0
  1622 ;;      Temps:          4       0       0       0       0
  1623 ;;      Totals:         5       0       0       0       0
  1624 ;;Total ram usage:        5 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 2
  1627 ;; This function calls:
  1628 ;;		_spiRead
  1629 ;; This function is called by:
  1630 ;;		Interrupt level 1
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634     00CA                     _isr:	
  1635                           ;psect for function _isr
  1636                           
  1637     00CA                     i1l953:
  1638                           
  1639                           ;main.c: 59:     if(SSPIF == 1){
  1640     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1641     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1642     00CC  1D8C               	btfss	12,3	;volatile
  1643     00CD  28CF               	goto	u25_21
  1644     00CE  28D0               	goto	u25_20
  1645     00CF                     u25_21:
  1646     00CF  28EA               	goto	i1l969
  1647     00D0                     u25_20:
  1648     00D0                     i1l955:
  1649                           
  1650                           ;main.c: 60:         uint8_t com;;main.c: 61:         com = spiRead();
  1651     00D0  120A  118A  21CB  120A  118A  	fcall	_spiRead
  1652     00D5  00F4               	movwf	isr@com
  1653     00D6                     i1l957:
  1654                           
  1655                           ;main.c: 62:         PORTD = com;
  1656     00D6  0874               	movf	isr@com,w
  1657     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1658     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1659     00D9  0088               	movwf	8	;volatile
  1660     00DA                     i1l959:
  1661                           
  1662                           ;main.c: 63:         if(com == 1){
  1663     00DA  0374               	decf	isr@com,w
  1664     00DB  1D03               	btfss	3,2
  1665     00DC  28DE               	goto	u26_21
  1666     00DD  28DF               	goto	u26_20
  1667     00DE                     u26_21:
  1668     00DE  28E2               	goto	i1l963
  1669     00DF                     u26_20:
  1670     00DF                     i1l961:
  1671                           
  1672                           ;main.c: 64:             SSPBUF = lecADC;
  1673     00DF  0878               	movf	_lecADC,w
  1674     00E0  0093               	movwf	19	;volatile
  1675                           
  1676                           ;main.c: 65:         }
  1677     00E1  28E9               	goto	i1l967
  1678     00E2                     i1l963:
  1679     00E2  0874               	movf	isr@com,w
  1680     00E3  1D03               	btfss	3,2
  1681     00E4  28E6               	goto	u27_21
  1682     00E5  28E7               	goto	u27_20
  1683     00E6                     u27_21:
  1684     00E6  28E9               	goto	i1l967
  1685     00E7                     u27_20:
  1686     00E7                     i1l965:
  1687                           
  1688                           ;main.c: 67:             SSPBUF = cont;
  1689     00E7  0877               	movf	_cont,w
  1690     00E8  0093               	movwf	19	;volatile
  1691     00E9                     i1l967:
  1692                           
  1693                           ;main.c: 70:         SSPIF = 0;
  1694     00E9  118C               	bcf	12,3	;volatile
  1695     00EA                     i1l969:
  1696                           
  1697                           ;main.c: 72:     if (INTCONbits.RBIF){
  1698     00EA  1C0B               	btfss	11,0	;volatile
  1699     00EB  28ED               	goto	u28_21
  1700     00EC  28EE               	goto	u28_20
  1701     00ED                     u28_21:
  1702     00ED  2911               	goto	i1l62
  1703     00EE                     u28_20:
  1704     00EE                     i1l971:
  1705                           
  1706                           ;main.c: 73:         if (PORTBbits.RB7 == 0)
  1707     00EE  1B86               	btfsc	6,7	;volatile
  1708     00EF  28F1               	goto	u29_21
  1709     00F0  28F2               	goto	u29_20
  1710     00F1                     u29_21:
  1711     00F1  28FE               	goto	i1l977
  1712     00F2                     u29_20:
  1713     00F2                     i1l973:
  1714                           
  1715                           ;main.c: 74:         {;main.c: 75:             _delay((unsigned long)((20)*(2000000/4000
      +                          .0)));
  1716     00F2  300D               	movlw	13
  1717     00F3  00F1               	movwf	??_isr+1
  1718     00F4  30FB               	movlw	251
  1719     00F5  00F0               	movwf	??_isr
  1720     00F6                     u61_27:
  1721     00F6  0BF0               	decfsz	??_isr,f
  1722     00F7  28F6               	goto	u61_27
  1723     00F8  0BF1               	decfsz	??_isr+1,f
  1724     00F9  28F6               	goto	u61_27
  1725     00FA  28FB               	nop2
  1726     00FB                     i1l975:
  1727                           
  1728                           ;main.c: 76:             cont = cont + 1;
  1729     00FB  0877               	movf	_cont,w
  1730     00FC  3E01               	addlw	1
  1731     00FD  00F7               	movwf	_cont
  1732     00FE                     i1l977:
  1733                           
  1734                           ;main.c: 78:         if(PORTBbits.RB6 == 0){
  1735     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1736     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1737     0100  1B06               	btfsc	6,6	;volatile
  1738     0101  2903               	goto	u30_21
  1739     0102  2904               	goto	u30_20
  1740     0103                     u30_21:
  1741     0103  2910               	goto	i1l983
  1742     0104                     u30_20:
  1743     0104                     i1l979:
  1744                           
  1745                           ;main.c: 79:             _delay((unsigned long)((20)*(2000000/4000.0)));
  1746     0104  300D               	movlw	13
  1747     0105  00F1               	movwf	??_isr+1
  1748     0106  30FB               	movlw	251
  1749     0107  00F0               	movwf	??_isr
  1750     0108                     u62_27:
  1751     0108  0BF0               	decfsz	??_isr,f
  1752     0109  2908               	goto	u62_27
  1753     010A  0BF1               	decfsz	??_isr+1,f
  1754     010B  2908               	goto	u62_27
  1755     010C  290D               	nop2
  1756     010D                     i1l981:
  1757                           
  1758                           ;main.c: 80:             cont = cont - 1;
  1759     010D  0877               	movf	_cont,w
  1760     010E  3EFF               	addlw	255
  1761     010F  00F7               	movwf	_cont
  1762     0110                     i1l983:
  1763                           
  1764                           ;main.c: 82:         RBIF = 0;
  1765     0110  100B               	bcf	11,0	;volatile
  1766     0111                     i1l62:
  1767     0111  0873               	movf	??_isr+3,w
  1768     0112  008A               	movwf	10
  1769     0113  0E72               	swapf	??_isr+2,w
  1770     0114  0083               	movwf	3
  1771     0115  0EFE               	swapf	btemp,f
  1772     0116  0E7E               	swapf	btemp,w
  1773     0117  0009               	retfie
  1774     0118                     __end_of_isr:
  1775                           
  1776                           	psect	intentry
  1777     0004                     __pintentry:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1780                           
  1781     0004                     interrupt_function:
  1782     007E                     saved_w	set	btemp
  1783     0004  00FE               	movwf	btemp
  1784     0005  0E03               	swapf	3,w
  1785     0006  00F2               	movwf	??_isr+2
  1786     0007  080A               	movf	10,w
  1787     0008  00F3               	movwf	??_isr+3
  1788     0009  120A  118A  28CA   	ljmp	_isr
  1789                           
  1790                           	psect	text8
  1791     01CB                     __ptext8:	
  1792 ;; *************** function _spiRead *****************
  1793 ;; Defined at:
  1794 ;;		line 47 in file "SPI.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      unsigned char 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0
  1811 ;;      Totals:         0       0       0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 1
  1815 ;; This function calls:
  1816 ;;		_spiReceiveWait
  1817 ;; This function is called by:
  1818 ;;		_isr
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822     01CB                     _spiRead:	
  1823                           ;psect for function _spiRead
  1824                           
  1825     01CB                     i1l829:	
  1826                           ;incstack = 0
  1827                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1828                           
  1829                           
  1830                           ;SPI.c: 49:     spiReceiveWait();
  1831     01CB  120A  118A  21D4  120A  118A  	fcall	_spiReceiveWait
  1832     01D0                     i1l831:
  1833                           
  1834                           ;SPI.c: 50:     return(SSPBUF);
  1835     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1836     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1837     01D2  0813               	movf	19,w	;volatile
  1838     01D3                     i1l165:
  1839     01D3  0008               	return
  1840     01D4                     __end_of_spiRead:
  1841                           
  1842                           	psect	text9
  1843     01D4                     __ptext9:	
  1844 ;; *************** function _spiReceiveWait *****************
  1845 ;; Defined at:
  1846 ;;		line 29 in file "SPI.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		None
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_spiRead
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873     01D4                     _spiReceiveWait:	
  1874                           ;psect for function _spiReceiveWait
  1875                           
  1876     01D4                     i1l827:	
  1877                           ;incstack = 0
  1878                           ; Regs used in _spiReceiveWait: []
  1879                           
  1880     01D4                     i1l151:	
  1881                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1882                           
  1883     01D4  1683               	bsf	3,5	;RP0=1, select bank1
  1884     01D5  1303               	bcf	3,6	;RP1=0, select bank1
  1885     01D6  1C14               	btfss	20,0	;volatile
  1886     01D7  29D9               	goto	u6_21
  1887     01D8  29DA               	goto	u6_20
  1888     01D9                     u6_21:
  1889     01D9  29D4               	goto	i1l151
  1890     01DA                     u6_20:
  1891     01DA                     i1l154:
  1892     01DA  0008               	return
  1893     01DB                     __end_of_spiReceiveWait:
  1894     007E                     btemp	set	126	;btemp
  1895     007E                     wtemp0	set	126
  1896                           
  1897                           	psect	idloc
  1898                           
  1899                           ;Config register IDLOC0 @ 0x2000
  1900                           ;	unspecified, using default values
  1901     2000                     	org	8192
  1902     2000  3FFF               	dw	16383
  1903                           
  1904                           ;Config register IDLOC1 @ 0x2001
  1905                           ;	unspecified, using default values
  1906     2001                     	org	8193
  1907     2001  3FFF               	dw	16383
  1908                           
  1909                           ;Config register IDLOC2 @ 0x2002
  1910                           ;	unspecified, using default values
  1911     2002                     	org	8194
  1912     2002  3FFF               	dw	16383
  1913                           
  1914                           ;Config register IDLOC3 @ 0x2003
  1915                           ;	unspecified, using default values
  1916     2003                     	org	8195
  1917     2003  3FFF               	dw	16383
  1918                           
  1919                           	psect	config
  1920                           
  1921                           ;Config register CONFIG1 @ 0x2007
  1922                           ;	Oscillator Selection bits
  1923                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1924                           ;	Watchdog Timer Enable bit
  1925                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1926                           ;	Power-up Timer Enable bit
  1927                           ;	PWRTE = OFF, PWRT disabled
  1928                           ;	RE3/MCLR pin function select bit
  1929                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1930                           ;	Code Protection bit
  1931                           ;	CP = OFF, Program memory code protection is disabled
  1932                           ;	Data Code Protection bit
  1933                           ;	CPD = OFF, Data memory code protection is disabled
  1934                           ;	Brown Out Reset Selection bits
  1935                           ;	BOREN = OFF, BOR disabled
  1936                           ;	Internal External Switchover bit
  1937                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1938                           ;	Fail-Safe Clock Monitor Enabled bit
  1939                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1940                           ;	Low Voltage Programming Enable bit
  1941                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1942                           ;	In-Circuit Debugger Mode bit
  1943                           ;	DEBUG = 0x1, unprogramme  1944     2007                     	org	8199
  1945     2007  20D4               	dw	8404
  1946                           
  1947                           ;Config register CONFIG2 @ 0x2008
  1948                           ;	Brown-out Reset Selection bit
  1949                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1950                           ;	Flash Program Memory Self Write Enable bits
  1951                           ;	WRT = OFF, Write protection off
  1952     2008                     	org	8200
  1953     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_config
    _main->_setupINTOSC
    _portsetup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_read
    _portsetup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     942
                                              4 BANK0      2     2      0
                         _ADC_config
                           _ADC_read
                          _portsetup
                        _setupINTOSC
                        _setup_portb
 ---------------------------------------------------------------------------------
 (1) _setup_portb                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     120
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             4     2      2     183
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           3     1      2     183
                                              5 COMMON     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0      45
                                              0 COMMON     5     5      0
                            _spiRead
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_read
   _portsetup
     _spiInit
   _setupINTOSC
   _setup_portb

 _isr (ROOT)
   _spiRead
     _spiReceiveWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 20:53:55 2023

            _SSPSTATbits 0094                       l73 01BE                       l76 01CA  
                     u70 001D                       u71 001C                       u80 0027  
                     u81 0026                       u90 0033                       u91 0032  
                    l200 0187                      l204 0089                      l213 00C4  
                    l206 008D                      l207 00C9                      l209 00AA  
                    l170 0021                      l147 01A0                      l171 002D  
                    l148 01A5                      l172 0039                      l173 0045  
                    l174 0051                      l175 005D                      l176 0068  
                    l178 0074                      l197 015D                      l198 016A  
                    l199 0177                      l841 0033                      l851 006D  
                    l843 003F                      l835 0017                      l853 0071  
                    l845 004B                      l837 001D                      l847 0057  
                    l839 0027                      l871 01C3                      l849 0062  
                    l873 01C4                      l875 01C9                      l869 01BF  
                    _RD3 0043                      u100 003F                      _RD4 0044  
                    u101 003E                      _RD5 0045                      u110 004B  
                    _RD6 0046                      u111 004A                      _RD7 0047  
                    u120 0057                      u121 0056                      u130 0062  
                    u131 0061                      u140 006D                      u141 006C  
                    u500 007D                      u501 007C                      u510 008D  
                    u511 008C                      u520 009C                      u521 009B  
                    u530 00AE                      u531 00AD                      u540 00B6  
                    u460 0190                      u541 00B5                      u461 018F  
                    u470 0156                      u550 00C8                      u607 0185  
                    u471 0155                      u551 00C7                      u480 0163  
                    u481 0162                      u490 0170                      u491 016F  
                    u567 0148                      u577 0083                      u587 00A4  
                    u597 00BE                      _isr 00CA                     l1131 019F  
                   l1123 0189                     l1125 0190                     l1141 01AF  
                   l1133 01A6                     l1151 0163                     l1127 0196  
                   l1143 01B2                     l1135 01AC                     l1153 0170  
                   l1161 007F                     l1129 0198                     l1145 01B3  
                   l1137 01AD                     l1155 0183                     l1147 0150  
                   l1171 009C                     l1163 0086                     l1139 01AE  
                   l1149 0156                     l1173 00A0                     l1181 00AF  
                   l1165 008E                     l1157 0075                     l1183 00B6  
                   l1175 00A7                     l1159 007D                     l1185 00BA  
                   l1169 0096                     l1193 0118                     l1187 00C1  
                   l1195 0133                     l1197 0134                     l1199 0142  
                   _ADIF 0066                     ?_isr 0070                     _IOCB 0096  
                   _RBIF 0058                     i1l62 0111                     _WPUB 0095  
                   u6_20 01DA                     u6_21 01D9                     _dato 0076  
                   _cont 0077                     _main 0118                     btemp 007E  
                   start 000C         __end_of_ADC_read 00CA                    ??_isr 0070  
                  ?_main 0070                    i1l151 01D4                    i1l154 01DA  
                  i1l165 01D3                    i1l831 01D0                    i1l827 01D4  
                  i1l829 01CB                    i1l961 00DF                    i1l953 00CA  
                  i1l971 00EE                    i1l963 00E2                    i1l955 00D0  
                  i1l981 010D                    i1l973 00F2                    i1l965 00E7  
                  i1l957 00D6                    i1l983 0110                    i1l975 00FB  
                  i1l967 00E9                    i1l959 00DA                    i1l977 00FE  
                  i1l969 00EA                    i1l979 0104                    u30_20 0104  
                  u30_21 0103                    u25_20 00D0                    u25_21 00CF  
                  u26_20 00DF                    u26_21 00DE                    u27_20 00E7  
                  u27_21 00E6                    _PORTD 0008                    u28_20 00EE  
                  u28_21 00ED                    u29_20 00F2                    u29_21 00F1  
                  u61_27 00F6                    u62_27 0108                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    pclath 000A  
        __end_of_spiInit 01A6          __end_of_spiRead 01D4                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0150  
                 ??_main 0024                   _ADRESH 001E                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPBUF 0013                   _SSPCON 0014  
           ??_ADC_config 0075                   _lecADC 0078             ?_setupINTOSC 0070  
                 isr@com 0074                   saved_w 007E                ??_spiInit 0075  
              ?_ADC_read 0020                ??_spiRead 0070       __end_of_ADC_config 0188  
           ?_setup_portb 0070  __end_of__initialization 0012           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081          ADC_read@channel 0020               ??_ADC_read 0022  
             __pmaintext 0118               __pintentry 0004                  _SSPSTAT 0094  
              _ANSELbits 0188                  __ptext1 01BF                  __ptext2 0016  
                __ptext3 01A6                  __ptext4 0188                  __ptext5 0075  
                __ptext6 0150                  __ptext7 00CA                  __ptext8 01CB  
                __ptext9 01D4                  _spiInit 0188                  _spiRead 01CB  
   end_of_initialization 0012        __end_of_portsetup 01BF                _PORTAbits 0005  
              _PORTBbits 0006                _PORTDbits 0008                _TRISAbits 0085  
         _spiReceiveWait 01D4      start_initialization 000F              __end_of_isr 0118  
      ADC_config@channel 0020   __end_of_spiReceiveWait 01DB              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020          setupINTOSC@IRCF 0075  
        ?_spiReceiveWait 0070                 ?_spiInit 0020                 ?_spiRead 0070  
               _ADC_read 0075     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F            ??_setupINTOSC 0075  
              _portsetup 01A6            ??_setup_portb 0075               _ADC_config 0150  
             ?_portsetup 0070      __end_of_setupINTOSC 0075      __end_of_setup_portb 01CB  
           spiInit@sType 0075        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
            ?_ADC_config 0020              ??_portsetup 0076              _setupINTOSC 0016  
            _setup_portb 01BF  
