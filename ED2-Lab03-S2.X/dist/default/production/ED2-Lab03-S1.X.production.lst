

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 01:45:44 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     000E                     	;# 
   231     000E                     	;# 
   232     000F                     	;# 
   233     0010                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001D                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     0081                     	;# 
   252     0085                     	;# 
   253     0086                     	;# 
   254     0087                     	;# 
   255     0088                     	;# 
   256     0089                     	;# 
   257     008C                     	;# 
   258     008D                     	;# 
   259     008E                     	;# 
   260     008F                     	;# 
   261     0090                     	;# 
   262     0091                     	;# 
   263     0092                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0094                     	;# 
   268     0095                     	;# 
   269     0096                     	;# 
   270     0097                     	;# 
   271     0098                     	;# 
   272     0099                     	;# 
   273     009A                     	;# 
   274     009B                     	;# 
   275     009C                     	;# 
   276     009D                     	;# 
   277     009E                     	;# 
   278     009F                     	;# 
   279     0105                     	;# 
   280     0107                     	;# 
   281     0108                     	;# 
   282     0109                     	;# 
   283     010C                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     0185                     	;# 
   289     0187                     	;# 
   290     0188                     	;# 
   291     0189                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294     0000                     	;# 
   295     0001                     	;# 
   296     0002                     	;# 
   297     0003                     	;# 
   298     0004                     	;# 
   299     0005                     	;# 
   300     0006                     	;# 
   301     0007                     	;# 
   302     0008                     	;# 
   303     0009                     	;# 
   304     000A                     	;# 
   305     000B                     	;# 
   306     000C                     	;# 
   307     000D                     	;# 
   308     000E                     	;# 
   309     000E                     	;# 
   310     000F                     	;# 
   311     0010                     	;# 
   312     0011                     	;# 
   313     0012                     	;# 
   314     0013                     	;# 
   315     0014                     	;# 
   316     0015                     	;# 
   317     0015                     	;# 
   318     0016                     	;# 
   319     0017                     	;# 
   320     0018                     	;# 
   321     0019                     	;# 
   322     001A                     	;# 
   323     001B                     	;# 
   324     001B                     	;# 
   325     001C                     	;# 
   326     001D                     	;# 
   327     001E                     	;# 
   328     001F                     	;# 
   329     0081                     	;# 
   330     0085                     	;# 
   331     0086                     	;# 
   332     0087                     	;# 
   333     0088                     	;# 
   334     0089                     	;# 
   335     008C                     	;# 
   336     008D                     	;# 
   337     008E                     	;# 
   338     008F                     	;# 
   339     0090                     	;# 
   340     0091                     	;# 
   341     0092                     	;# 
   342     0093                     	;# 
   343     0093                     	;# 
   344     0093                     	;# 
   345     0094                     	;# 
   346     0095                     	;# 
   347     0096                     	;# 
   348     0097                     	;# 
   349     0098                     	;# 
   350     0099                     	;# 
   351     009A                     	;# 
   352     009B                     	;# 
   353     009C                     	;# 
   354     009D                     	;# 
   355     009E                     	;# 
   356     009F                     	;# 
   357     0105                     	;# 
   358     0107                     	;# 
   359     0108                     	;# 
   360     0109                     	;# 
   361     010C                     	;# 
   362     010C                     	;# 
   363     010D                     	;# 
   364     010E                     	;# 
   365     010F                     	;# 
   366     0185                     	;# 
   367     0187                     	;# 
   368     0188                     	;# 
   369     0189                     	;# 
   370     018C                     	;# 
   371     018D                     	;# 
   372     0000                     	;# 
   373     0001                     	;# 
   374     0002                     	;# 
   375     0003                     	;# 
   376     0004                     	;# 
   377     0005                     	;# 
   378     0006                     	;# 
   379     0007                     	;# 
   380     0008                     	;# 
   381     0009                     	;# 
   382     000A                     	;# 
   383     000B                     	;# 
   384     000C                     	;# 
   385     000D                     	;# 
   386     000E                     	;# 
   387     000E                     	;# 
   388     000F                     	;# 
   389     0010                     	;# 
   390     0011                     	;# 
   391     0012                     	;# 
   392     0013                     	;# 
   393     0014                     	;# 
   394     0015                     	;# 
   395     0015                     	;# 
   396     0016                     	;# 
   397     0017                     	;# 
   398     0018                     	;# 
   399     0019                     	;# 
   400     001A                     	;# 
   401     001B                     	;# 
   402     001B                     	;# 
   403     001C                     	;# 
   404     001D                     	;# 
   405     001E                     	;# 
   406     001F                     	;# 
   407     0081                     	;# 
   408     0085                     	;# 
   409     0086                     	;# 
   410     0087                     	;# 
   411     0088                     	;# 
   412     0089                     	;# 
   413     008C                     	;# 
   414     008D                     	;# 
   415     008E                     	;# 
   416     008F                     	;# 
   417     0090                     	;# 
   418     0091                     	;# 
   419     0092                     	;# 
   420     0093                     	;# 
   421     0093                     	;# 
   422     0093                     	;# 
   423     0094                     	;# 
   424     0095                     	;# 
   425     0096                     	;# 
   426     0097                     	;# 
   427     0098                     	;# 
   428     0099                     	;# 
   429     009A                     	;# 
   430     009B                     	;# 
   431     009C                     	;# 
   432     009D                     	;# 
   433     009E                     	;# 
   434     009F                     	;# 
   435     0105                     	;# 
   436     0107                     	;# 
   437     0108                     	;# 
   438     0109                     	;# 
   439     010C                     	;# 
   440     010C                     	;# 
   441     010D                     	;# 
   442     010E                     	;# 
   443     010F                     	;# 
   444     0185                     	;# 
   445     0187                     	;# 
   446     0188                     	;# 
   447     0189                     	;# 
   448     018C                     	;# 
   449     018D                     	;# 
   450     0000                     	;# 
   451     0001                     	;# 
   452     0002                     	;# 
   453     0003                     	;# 
   454     0004                     	;# 
   455     0005                     	;# 
   456     0006                     	;# 
   457     0007                     	;# 
   458     0008                     	;# 
   459     0009                     	;# 
   460     000A                     	;# 
   461     000B                     	;# 
   462     000C                     	;# 
   463     000D                     	;# 
   464     000E                     	;# 
   465     000E                     	;# 
   466     000F                     	;# 
   467     0010                     	;# 
   468     0011                     	;# 
   469     0012                     	;# 
   470     0013                     	;# 
   471     0014                     	;# 
   472     0015                     	;# 
   473     0015                     	;# 
   474     0016                     	;# 
   475     0017                     	;# 
   476     0018                     	;# 
   477     0019                     	;# 
   478     001A                     	;# 
   479     001B                     	;# 
   480     001B                     	;# 
   481     001C                     	;# 
   482     001D                     	;# 
   483     001E                     	;# 
   484     001F                     	;# 
   485     0081                     	;# 
   486     0085                     	;# 
   487     0086                     	;# 
   488     0087                     	;# 
   489     0088                     	;# 
   490     0089                     	;# 
   491     008C                     	;# 
   492     008D                     	;# 
   493     008E                     	;# 
   494     008F                     	;# 
   495     0090                     	;# 
   496     0091                     	;# 
   497     0092                     	;# 
   498     0093                     	;# 
   499     0093                     	;# 
   500     0093                     	;# 
   501     0094                     	;# 
   502     0095                     	;# 
   503     0096                     	;# 
   504     0097                     	;# 
   505     0098                     	;# 
   506     0099                     	;# 
   507     009A                     	;# 
   508     009B                     	;# 
   509     009C                     	;# 
   510     009D                     	;# 
   511     009E                     	;# 
   512     009F                     	;# 
   513     0105                     	;# 
   514     0107                     	;# 
   515     0108                     	;# 
   516     0109                     	;# 
   517     010C                     	;# 
   518     010C                     	;# 
   519     010D                     	;# 
   520     010E                     	;# 
   521     010F                     	;# 
   522     0185                     	;# 
   523     0187                     	;# 
   524     0188                     	;# 
   525     0189                     	;# 
   526     018C                     	;# 
   527     018D                     	;# 
   528     001E                     _ADRESH	set	30
   529     001F                     _ADCON0bits	set	31
   530     0005                     _PORTAbits	set	5
   531     0013                     _SSPBUF	set	19
   532     0014                     _SSPCON	set	20
   533     0008                     _PORTDbits	set	8
   534     000C                     _PIR1bits	set	12
   535     0008                     _PORTD	set	8
   536     0006                     _PORTBbits	set	6
   537     000B                     _INTCONbits	set	11
   538     0066                     _ADIF	set	102
   539     0043                     _RD3	set	67
   540     0047                     _RD7	set	71
   541     0046                     _RD6	set	70
   542     0045                     _RD5	set	69
   543     0044                     _RD4	set	68
   544     0058                     _RBIF	set	88
   545     0063                     _SSPIF	set	99
   546     009F                     _ADCON1bits	set	159
   547     008F                     _OSCCONbits	set	143
   548     0094                     _SSPSTATbits	set	148
   549     0094                     _SSPSTAT	set	148
   550     0081                     _OPTION_REGbits	set	129
   551     0095                     _WPUB	set	149
   552     0096                     _IOCB	set	150
   553     0086                     _TRISB	set	134
   554     0085                     _TRISAbits	set	133
   555     008C                     _PIE1bits	set	140
   556     0088                     _TRISD	set	136
   557     043B                     _TRISC3	set	1083
   558     043D                     _TRISC5	set	1085
   559     0188                     _ANSELbits	set	392
   560                           
   561                           	psect	cinit
   562     000F                     start_initialization:	
   563                           ; #config settings
   564                           
   565     000F                     __initialization:
   566                           
   567                           ; Clear objects allocated to COMMON
   568     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   569     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   570     0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   571     0012                     end_of_initialization:	
   572                           ;End of C runtime variable initialization code
   573                           
   574     0012                     __end_of__initialization:
   575     0012  0183               	clrf	3
   576     0013  120A  118A  2936   	ljmp	_main	;jump to C main() function
   577                           
   578                           	psect	bssCOMMON
   579     0076                     __pbssCOMMON:
   580     0076                     _dato:
   581     0076                     	ds	1
   582     0077                     _cont:
   583     0077                     	ds	1
   584     0078                     _lecADC:
   585     0078                     	ds	1
   586                           
   587                           	psect	cstackCOMMON
   588     0070                     __pcstackCOMMON:
   589     0070                     ?_spiRead:
   590     0070                     ??_spiRead:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ?_spiWrite:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ??_spiWrite:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ?_setupINTOSC:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ?_portsetup:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     ?_setup_portb:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     ?_isr:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ?_main:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ?_spiReceiveWait:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ??_spiReceiveWait:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_spiDataReady:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     spiWrite@dat:	
   624                           ; 2 bytes @ 0x0
   625                           
   626                           
   627                           ; 1 bytes @ 0x0
   628     0070                     	ds	2
   629     0072                     ??_spiDataReady:
   630     0072                     ??_isr:	
   631                           ; 1 bytes @ 0x2
   632                           
   633                           
   634                           ; 1 bytes @ 0x2
   635     0072                     	ds	4
   636                           
   637                           	psect	cstackBANK0
   638     0020                     __pcstackBANK0:
   639     0020                     ??_setupINTOSC:
   640     0020                     ??_setup_portb:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0020                     ?_ADC_config:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0020                     ?_spiInit:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0020                     ?_ADC_read:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0020                     spiInit@sDataSample:	
   653                           ; 2 bytes @ 0x0
   654                           
   655     0020                     setupINTOSC@IRCF:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0020                     ADC_config@channel:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0020                     ADC_read@channel:	
   662                           ; 2 bytes @ 0x0
   663                           
   664                           
   665                           ; 2 bytes @ 0x0
   666     0020                     	ds	1
   667     0021                     spiInit@sClockIdle:
   668                           
   669                           ; 1 bytes @ 0x1
   670     0021                     	ds	1
   671     0022                     ??_ADC_config:
   672     0022                     ??_ADC_read:	
   673                           ; 1 bytes @ 0x2
   674                           
   675     0022                     spiInit@sTransmitEdge:	
   676                           ; 1 bytes @ 0x2
   677                           
   678                           
   679                           ; 1 bytes @ 0x2
   680     0022                     	ds	1
   681     0023                     ??_spiInit:
   682     0023                     spiInit@sType:	
   683                           ; 1 bytes @ 0x3
   684                           
   685                           
   686                           ; 1 bytes @ 0x3
   687     0023                     	ds	1
   688     0024                     ??_portsetup:
   689     0024                     ??_main:	
   690                           ; 1 bytes @ 0x4
   691                           
   692                           
   693                           ; 1 bytes @ 0x4
   694     0024                     	ds	2
   695                           
   696                           	psect	maintext
   697     0136                     __pmaintext:	
   698 ;;
   699 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   700 ;;
   701 ;; *************** function _main *****************
   702 ;; Defined at:
   703 ;;		line 82 in file "main.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0, pclath, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : B00/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0
   719 ;;      Temps:          0       2       0       0       0
   720 ;;      Totals:         0       2       0       0       0
   721 ;;Total ram usage:        2 bytes
   722 ;; Hardware stack levels required when called: 5
   723 ;; This function calls:
   724 ;;		_ADC_config
   725 ;;		_ADC_read
   726 ;;		_portsetup
   727 ;;		_setupINTOSC
   728 ;;		_setup_portb
   729 ;; This function is called by:
   730 ;;		Startup code after reset
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734     0136                     _main:	
   735                           ;psect for function _main
   736                           
   737     0136                     l1278:	
   738                           ;incstack = 0
   739                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   740                           
   741                           
   742                           ;main.c: 83:     setupINTOSC(6);
   743     0136  3006               	movlw	6
   744     0137  120A  118A  2016  120A  118A  	fcall	_setupINTOSC
   745                           
   746                           ;main.c: 84:     portsetup();
   747     013C  120A  118A  21CA  120A  118A  	fcall	_portsetup
   748                           
   749                           ;main.c: 85:     setup_portb();
   750     0141  120A  118A  21F1  120A  118A  	fcall	_setup_portb
   751                           
   752                           ;main.c: 86:     ADC_config(0x01);
   753     0146  3001               	movlw	1
   754     0147  1283               	bcf	3,5	;RP0=0, select bank0
   755     0148  1303               	bcf	3,6	;RP1=0, select bank0
   756     0149  00A0               	movwf	ADC_config@channel
   757     014A  3000               	movlw	0
   758     014B  00A1               	movwf	ADC_config@channel+1
   759     014C  120A  118A  2171  120A  118A  	fcall	_ADC_config
   760     0151                     l1280:
   761                           
   762                           ;main.c: 87:     cont = 0;
   763     0151  01F7               	clrf	_cont
   764     0152                     l1282:
   765                           
   766                           ;main.c: 90:         lecADC = ADC_read(0);
   767     0152  3000               	movlw	0
   768     0153  1283               	bcf	3,5	;RP0=0, select bank0
   769     0154  1303               	bcf	3,6	;RP1=0, select bank0
   770     0155  00A0               	movwf	ADC_read@channel
   771     0156  00A1               	movwf	ADC_read@channel+1
   772     0157  120A  118A  20E1  120A  118A  	fcall	_ADC_read
   773     015C  1283               	bcf	3,5	;RP0=0, select bank0
   774     015D  1303               	bcf	3,6	;RP1=0, select bank0
   775     015E  0820               	movf	?_ADC_read,w
   776     015F  00F8               	movwf	_lecADC
   777     0160                     l1284:
   778                           
   779                           ;main.c: 91:         PORTD = cont;
   780     0160  0877               	movf	_cont,w
   781     0161  0088               	movwf	8	;volatile
   782     0162                     l1286:
   783                           
   784                           ;main.c: 92:         _delay((unsigned long)((5)*(4000000/4000.0)));
   785     0162  3007               	movlw	7
   786     0163  1283               	bcf	3,5	;RP0=0, select bank0
   787     0164  1303               	bcf	3,6	;RP1=0, select bank0
   788     0165  00A5               	movwf	??_main+1
   789     0166  307C               	movlw	124
   790     0167  00A4               	movwf	??_main
   791     0168                     u747:
   792     0168  0BA4               	decfsz	??_main,f
   793     0169  2968               	goto	u747
   794     016A  0BA5               	decfsz	??_main+1,f
   795     016B  2968               	goto	u747
   796     016C  0000               	nop
   797     016D  2952               	goto	l1282
   798     016E  120A  118A  280C   	ljmp	start
   799     0171                     __end_of_main:
   800                           
   801                           	psect	text1
   802     01F1                     __ptext1:	
   803 ;; *************** function _setup_portb *****************
   804 ;; Defined at:
   805 ;;		line 109 in file "main.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0
   822 ;;      Totals:         0       0       0       0       0
   823 ;;Total ram usage:        0 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; Hardware stack levels required when called: 3
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833     01F1                     _setup_portb:	
   834                           ;psect for function _setup_portb
   835                           
   836     01F1                     l1224:	
   837                           ;incstack = 0
   838                           ; Regs used in _setup_portb: [wreg]
   839                           
   840                           
   841                           ;main.c: 110:     TRISB = 0b11000000;
   842     01F1  30C0               	movlw	192
   843     01F2  1683               	bsf	3,5	;RP0=1, select bank1
   844     01F3  1303               	bcf	3,6	;RP1=0, select bank1
   845     01F4  0086               	movwf	6	;volatile
   846     01F5                     l1226:
   847                           
   848                           ;main.c: 111:     INTCONbits.RBIE = 1;
   849     01F5  158B               	bsf	11,3	;volatile
   850     01F6                     l1228:
   851                           
   852                           ;main.c: 112:     INTCONbits.RBIF = 0;
   853     01F6  100B               	bcf	11,0	;volatile
   854                           
   855                           ;main.c: 113:     IOCB = 0b11000000;
   856     01F7  30C0               	movlw	192
   857     01F8  0096               	movwf	22	;volatile
   858                           
   859                           ;main.c: 114:     WPUB = 0b11000000;
   860     01F9  30C0               	movlw	192
   861     01FA  0095               	movwf	21	;volatile
   862     01FB                     l1230:
   863                           
   864                           ;main.c: 115:     OPTION_REGbits.nRBPU = 0;
   865     01FB  1381               	bcf	1,7	;volatile
   866     01FC                     l79:
   867     01FC  0008               	return
   868     01FD                     __end_of_setup_portb:
   869                           
   870                           	psect	text2
   871     0016                     __ptext2:	
   872 ;; *************** function _setupINTOSC *****************
   873 ;; Defined at:
   874 ;;		line 10 in file "oscilador.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  IRCF            1    wreg     unsigned char 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  IRCF            1    0[BANK0 ] unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       1       0       0       0
   890 ;;      Temps:          0       0       0       0       0
   891 ;;      Totals:         0       1       0       0       0
   892 ;;Total ram usage:        1 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; Hardware stack levels required when called: 3
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902     0016                     _setupINTOSC:	
   903                           ;psect for function _setupINTOSC
   904                           
   905                           
   906                           ;incstack = 0
   907                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   908                           ;setupINTOSC@IRCF stored from wreg
   909     0016  1283               	bcf	3,5	;RP0=0, select bank0
   910     0017  1303               	bcf	3,6	;RP1=0, select bank0
   911     0018  00A0               	movwf	setupINTOSC@IRCF
   912     0019                     l1190:
   913                           
   914                           ;oscilador.c: 11:     if (IRCF == 7){
   915     0019  3007               	movlw	7
   916     001A  0620               	xorwf	setupINTOSC@IRCF,w
   917     001B  1D03               	btfss	3,2
   918     001C  281E               	goto	u571
   919     001D  281F               	goto	u570
   920     001E                     u571:
   921     001E  2823               	goto	l173
   922     001F                     u570:
   923     001F                     l1192:
   924                           
   925                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
   926     001F  3070               	movlw	112
   927     0020  1683               	bsf	3,5	;RP0=1, select bank1
   928     0021  1303               	bcf	3,6	;RP1=0, select bank1
   929     0022  048F               	iorwf	15,f	;volatile
   930     0023                     l173:	
   931                           ;oscilador.c: 13:     }
   932                           
   933                           
   934                           ;oscilador.c: 14:     if (IRCF == 6){
   935     0023  3006               	movlw	6
   936     0024  1283               	bcf	3,5	;RP0=0, select bank0
   937     0025  0620               	xorwf	setupINTOSC@IRCF,w
   938     0026  1D03               	btfss	3,2
   939     0027  2829               	goto	u581
   940     0028  282A               	goto	u580
   941     0029                     u581:
   942     0029  2830               	goto	l174
   943     002A                     u580:
   944     002A                     l1194:
   945                           
   946                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
   947     002A  1683               	bsf	3,5	;RP0=1, select bank1
   948     002B  1303               	bcf	3,6	;RP1=0, select bank1
   949     002C  080F               	movf	15,w	;volatile
   950     002D  398F               	andlw	-113
   951     002E  3860               	iorlw	96
   952     002F  008F               	movwf	15	;volatile
   953     0030                     l174:	
   954                           ;oscilador.c: 16:     }
   955                           
   956                           
   957                           ;oscilador.c: 17:     if (IRCF == 5){
   958     0030  3005               	movlw	5
   959     0031  1283               	bcf	3,5	;RP0=0, select bank0
   960     0032  0620               	xorwf	setupINTOSC@IRCF,w
   961     0033  1D03               	btfss	3,2
   962     0034  2836               	goto	u591
   963     0035  2837               	goto	u590
   964     0036                     u591:
   965     0036  283D               	goto	l175
   966     0037                     u590:
   967     0037                     l1196:
   968                           
   969                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
   970     0037  1683               	bsf	3,5	;RP0=1, select bank1
   971     0038  1303               	bcf	3,6	;RP1=0, select bank1
   972     0039  080F               	movf	15,w	;volatile
   973     003A  398F               	andlw	-113
   974     003B  3850               	iorlw	80
   975     003C  008F               	movwf	15	;volatile
   976     003D                     l175:	
   977                           ;oscilador.c: 19:     }
   978                           
   979                           
   980                           ;oscilador.c: 20:     if (IRCF == 4){
   981     003D  3004               	movlw	4
   982     003E  1283               	bcf	3,5	;RP0=0, select bank0
   983     003F  0620               	xorwf	setupINTOSC@IRCF,w
   984     0040  1D03               	btfss	3,2
   985     0041  2843               	goto	u601
   986     0042  2844               	goto	u600
   987     0043                     u601:
   988     0043  284A               	goto	l176
   989     0044                     u600:
   990     0044                     l1198:
   991                           
   992                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
   993     0044  1683               	bsf	3,5	;RP0=1, select bank1
   994     0045  1303               	bcf	3,6	;RP1=0, select bank1
   995     0046  080F               	movf	15,w	;volatile
   996     0047  398F               	andlw	-113
   997     0048  3840               	iorlw	64
   998     0049  008F               	movwf	15	;volatile
   999     004A                     l176:	
  1000                           ;oscilador.c: 22:     }
  1001                           
  1002                           
  1003                           ;oscilador.c: 23:     if (IRCF == 3){
  1004     004A  3003               	movlw	3
  1005     004B  1283               	bcf	3,5	;RP0=0, select bank0
  1006     004C  0620               	xorwf	setupINTOSC@IRCF,w
  1007     004D  1D03               	btfss	3,2
  1008     004E  2850               	goto	u611
  1009     004F  2851               	goto	u610
  1010     0050                     u611:
  1011     0050  2857               	goto	l177
  1012     0051                     u610:
  1013     0051                     l1200:
  1014                           
  1015                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  1016     0051  1683               	bsf	3,5	;RP0=1, select bank1
  1017     0052  1303               	bcf	3,6	;RP1=0, select bank1
  1018     0053  080F               	movf	15,w	;volatile
  1019     0054  398F               	andlw	-113
  1020     0055  3830               	iorlw	48
  1021     0056  008F               	movwf	15	;volatile
  1022     0057                     l177:	
  1023                           ;oscilador.c: 25:     }
  1024                           
  1025                           
  1026                           ;oscilador.c: 26:     if (IRCF == 2){
  1027     0057  3002               	movlw	2
  1028     0058  1283               	bcf	3,5	;RP0=0, select bank0
  1029     0059  0620               	xorwf	setupINTOSC@IRCF,w
  1030     005A  1D03               	btfss	3,2
  1031     005B  285D               	goto	u621
  1032     005C  285E               	goto	u620
  1033     005D                     u621:
  1034     005D  2864               	goto	l178
  1035     005E                     u620:
  1036     005E                     l1202:
  1037                           
  1038                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  1039     005E  1683               	bsf	3,5	;RP0=1, select bank1
  1040     005F  1303               	bcf	3,6	;RP1=0, select bank1
  1041     0060  080F               	movf	15,w	;volatile
  1042     0061  398F               	andlw	-113
  1043     0062  3820               	iorlw	32
  1044     0063  008F               	movwf	15	;volatile
  1045     0064                     l178:	
  1046                           ;oscilador.c: 28:     }
  1047                           
  1048                           
  1049                           ;oscilador.c: 29:     if (IRCF == 1){
  1050     0064  1283               	bcf	3,5	;RP0=0, select bank0
  1051     0065  0320               	decf	setupINTOSC@IRCF,w
  1052     0066  1D03               	btfss	3,2
  1053     0067  2869               	goto	u631
  1054     0068  286A               	goto	u630
  1055     0069                     u631:
  1056     0069  2870               	goto	l179
  1057     006A                     u630:
  1058     006A                     l1204:
  1059                           
  1060                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  1061     006A  1683               	bsf	3,5	;RP0=1, select bank1
  1062     006B  1303               	bcf	3,6	;RP1=0, select bank1
  1063     006C  080F               	movf	15,w	;volatile
  1064     006D  398F               	andlw	-113
  1065     006E  3810               	iorlw	16
  1066     006F  008F               	movwf	15	;volatile
  1067     0070                     l179:	
  1068                           ;oscilador.c: 31:     }
  1069                           
  1070                           
  1071                           ;oscilador.c: 32:     if (IRCF == 0){
  1072     0070  1283               	bcf	3,5	;RP0=0, select bank0
  1073     0071  0820               	movf	setupINTOSC@IRCF,w
  1074     0072  1D03               	btfss	3,2
  1075     0073  2875               	goto	u641
  1076     0074  2876               	goto	u640
  1077     0075                     u641:
  1078     0075  287A               	goto	l1208
  1079     0076                     u640:
  1080     0076                     l1206:
  1081                           
  1082                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  1083     0076  308F               	movlw	-113
  1084     0077  1683               	bsf	3,5	;RP0=1, select bank1
  1085     0078  1303               	bcf	3,6	;RP1=0, select bank1
  1086     0079  058F               	andwf	15,f	;volatile
  1087     007A                     l1208:
  1088                           
  1089                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  1090     007A  1683               	bsf	3,5	;RP0=1, select bank1
  1091     007B  1303               	bcf	3,6	;RP1=0, select bank1
  1092     007C  140F               	bsf	15,0	;volatile
  1093     007D                     l181:
  1094     007D  0008               	return
  1095     007E                     __end_of_setupINTOSC:
  1096                           
  1097                           	psect	text3
  1098     01CA                     __ptext3:	
  1099 ;; *************** function _portsetup *****************
  1100 ;; Defined at:
  1101 ;;		line 96 in file "main.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;		None
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;		None
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0, pclath, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1115 ;;      Params:         0       0       0       0       0
  1116 ;;      Locals:         0       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0
  1118 ;;      Totals:         0       0       0       0       0
  1119 ;;Total ram usage:        0 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; Hardware stack levels required when called: 4
  1122 ;; This function calls:
  1123 ;;		_spiInit
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129     01CA                     _portsetup:	
  1130                           ;psect for function _portsetup
  1131                           
  1132     01CA                     l1210:	
  1133                           ;incstack = 0
  1134                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  1135                           
  1136                           
  1137                           ;main.c: 97:     TRISD = 0;
  1138     01CA  1683               	bsf	3,5	;RP0=1, select bank1
  1139     01CB  1303               	bcf	3,6	;RP1=0, select bank1
  1140     01CC  0188               	clrf	8	;volatile
  1141                           
  1142                           ;main.c: 98:     PORTD = 0;
  1143     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1144     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1145     01CF  0188               	clrf	8	;volatile
  1146     01D0                     l1212:
  1147                           
  1148                           ;main.c: 100:     INTCONbits.GIE = 1;
  1149     01D0  178B               	bsf	11,7	;volatile
  1150     01D1                     l1214:
  1151                           
  1152                           ;main.c: 101:     INTCONbits.PEIE = 1;
  1153     01D1  170B               	bsf	11,6	;volatile
  1154     01D2                     l1216:
  1155                           
  1156                           ;main.c: 102:     PIR1bits.SSPIF = 0;
  1157     01D2  118C               	bcf	12,3	;volatile
  1158     01D3                     l1218:
  1159                           
  1160                           ;main.c: 103:     PIE1bits.SSPIE = 1;
  1161     01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1162     01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1163     01D5  158C               	bsf	12,3	;volatile
  1164     01D6                     l1220:
  1165                           
  1166                           ;main.c: 104:     TRISAbits.TRISA5 = 1;
  1167     01D6  1685               	bsf	5,5	;volatile
  1168     01D7                     l1222:
  1169                           
  1170                           ;main.c: 105:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
  1171     01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1172     01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1173     01D9  01A0               	clrf	spiInit@sDataSample
  1174     01DA  01A1               	clrf	spiInit@sClockIdle
  1175     01DB  01A2               	clrf	spiInit@sTransmitEdge
  1176     01DC  3024               	movlw	36
  1177     01DD  120A  118A  21AC  120A  118A  	fcall	_spiInit
  1178     01E2                     l76:
  1179     01E2  0008               	return
  1180     01E3                     __end_of_portsetup:
  1181                           
  1182                           	psect	text4
  1183     01AC                     __ptext4:	
  1184 ;; *************** function _spiInit *****************
  1185 ;; Defined at:
  1186 ;;		line 12 in file "SPI.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  sType           1    wreg     enum E1292
  1189 ;;  sDataSample     1    0[BANK0 ] enum E1300
  1190 ;;  sClockIdle      1    1[BANK0 ] enum E1304
  1191 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  sType           1    3[BANK0 ] enum E1292
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       3       0       0       0
  1204 ;;      Locals:         0       1       0       0       0
  1205 ;;      Temps:          0       0       0       0       0
  1206 ;;      Totals:         0       4       0       0       0
  1207 ;;Total ram usage:        4 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 3
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_portsetup
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217     01AC                     _spiInit:	
  1218                           ;psect for function _spiInit
  1219                           
  1220                           
  1221                           ;incstack = 0
  1222                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1223                           ;spiInit@sType stored from wreg
  1224     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1225     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1226     01AE  00A3               	movwf	spiInit@sType
  1227     01AF                     l1180:
  1228                           
  1229                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1230     01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1231     01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1232     01B1  1287               	bcf	7,5	;volatile
  1233                           
  1234                           ;SPI.c: 15:     if(sType & 0b00000100)
  1235     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1236     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1237     01B4  1D23               	btfss	spiInit@sType,2
  1238     01B5  29B7               	goto	u561
  1239     01B6  29B8               	goto	u560
  1240     01B7                     u561:
  1241     01B7  29BE               	goto	l1186
  1242     01B8                     u560:
  1243     01B8                     l1182:
  1244                           
  1245                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1246     01B8  0822               	movf	spiInit@sTransmitEdge,w
  1247     01B9  1683               	bsf	3,5	;RP0=1, select bank1
  1248     01BA  1303               	bcf	3,6	;RP1=0, select bank1
  1249     01BB  0094               	movwf	20	;volatile
  1250     01BC                     l1184:
  1251                           
  1252                           ;SPI.c: 18:         TRISC3 = 1;
  1253     01BC  1587               	bsf	7,3	;volatile
  1254                           
  1255                           ;SPI.c: 19:     }
  1256     01BD  29C4               	goto	l150
  1257     01BE                     l1186:
  1258                           
  1259                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1260     01BE  0820               	movf	spiInit@sDataSample,w
  1261     01BF  0422               	iorwf	spiInit@sTransmitEdge,w
  1262     01C0  1683               	bsf	3,5	;RP0=1, select bank1
  1263     01C1  1303               	bcf	3,6	;RP1=0, select bank1
  1264     01C2  0094               	movwf	20	;volatile
  1265     01C3                     l1188:
  1266                           
  1267                           ;SPI.c: 23:         TRISC3 = 0;
  1268     01C3  1187               	bcf	7,3	;volatile
  1269     01C4                     l150:	
  1270                           ;SPI.c: 24:     }
  1271                           
  1272                           
  1273                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1274     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1275     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1276     01C6  0823               	movf	spiInit@sType,w
  1277     01C7  0421               	iorwf	spiInit@sClockIdle,w
  1278     01C8  0094               	movwf	20	;volatile
  1279     01C9                     l151:
  1280     01C9  0008               	return
  1281     01CA                     __end_of_spiInit:
  1282                           
  1283                           	psect	text5
  1284     00E1                     __ptext5:	
  1285 ;; *************** function _ADC_read *****************
  1286 ;; Defined at:
  1287 ;;		line 41 in file "setupADC.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  channel         2    0[BANK0 ] int 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  2    0[BANK0 ] unsigned int 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1301 ;;      Params:         0       2       0       0       0
  1302 ;;      Locals:         0       0       0       0       0
  1303 ;;      Temps:          0       2       0       0       0
  1304 ;;      Totals:         0       4       0       0       0
  1305 ;;Total ram usage:        4 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 3
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315     00E1                     _ADC_read:	
  1316                           ;psect for function _ADC_read
  1317                           
  1318     00E1                     l1242:	
  1319                           ;incstack = 0
  1320                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  1321                           
  1322                           
  1323                           ;setupADC.c: 42:     if(channel ==0){
  1324     00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1325     00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1326     00E3  0820               	movf	ADC_read@channel,w
  1327     00E4  0421               	iorwf	ADC_read@channel+1,w
  1328     00E5  1D03               	btfss	3,2
  1329     00E6  28E8               	goto	u681
  1330     00E7  28E9               	goto	u680
  1331     00E8                     u681:
  1332     00E8  2902               	goto	l1254
  1333     00E9                     u680:
  1334     00E9                     l1244:
  1335                           
  1336                           ;setupADC.c: 43:         ADCON0bits.CHS = 0b0000;
  1337     00E9  30C3               	movlw	-61
  1338     00EA  059F               	andwf	31,f	;volatile
  1339     00EB                     l1246:
  1340                           
  1341                           ;setupADC.c: 44:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1342     00EB  3007               	movlw	7
  1343     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1344     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1345     00EE  00A2               	movwf	??_ADC_read
  1346     00EF                     u757:
  1347     00EF  0BA2               	decfsz	??_ADC_read,f
  1348     00F0  28EF               	goto	u757
  1349     00F1  0000               	nop
  1350     00F2                     l1248:
  1351                           
  1352                           ;setupADC.c: 45:         ADCON0bits.GO = 1;
  1353     00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1354     00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1355     00F4  149F               	bsf	31,1	;volatile
  1356     00F5                     l207:	
  1357                           ;setupADC.c: 46:         while (ADCON0bits.GO);
  1358                           
  1359     00F5  189F               	btfsc	31,1	;volatile
  1360     00F6  28F8               	goto	u691
  1361     00F7  28F9               	goto	u690
  1362     00F8                     u691:
  1363     00F8  28F5               	goto	l207
  1364     00F9                     u690:
  1365     00F9                     l209:
  1366                           
  1367                           ;setupADC.c: 47:         ADIF = 0;
  1368     00F9  130C               	bcf	12,6	;volatile
  1369     00FA                     l1250:
  1370                           
  1371                           ;setupADC.c: 48:         return ADRESH;
  1372     00FA  081E               	movf	30,w	;volatile
  1373     00FB  00A2               	movwf	??_ADC_read
  1374     00FC  01A3               	clrf	??_ADC_read+1
  1375     00FD  0822               	movf	??_ADC_read,w
  1376     00FE  00A0               	movwf	?_ADC_read
  1377     00FF  0823               	movf	??_ADC_read+1,w
  1378     0100  00A1               	movwf	?_ADC_read+1
  1379     0101  2935               	goto	l210
  1380     0102                     l1254:
  1381                           
  1382                           ;setupADC.c: 50:     if(channel ==1){
  1383     0102  0320               	decf	ADC_read@channel,w
  1384     0103  0421               	iorwf	ADC_read@channel+1,w
  1385     0104  1D03               	btfss	3,2
  1386     0105  2907               	goto	u701
  1387     0106  2908               	goto	u700
  1388     0107                     u701:
  1389     0107  291B               	goto	l1266
  1390     0108                     u700:
  1391     0108                     l1256:
  1392                           
  1393                           ;setupADC.c: 51:         ADCON0bits.CHS = 0b0001;
  1394     0108  081F               	movf	31,w	;volatile
  1395     0109  39C3               	andlw	-61
  1396     010A  3804               	iorlw	4
  1397     010B  009F               	movwf	31	;volatile
  1398     010C                     l1258:
  1399                           
  1400                           ;setupADC.c: 52:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1401     010C  3007               	movlw	7
  1402     010D  1283               	bcf	3,5	;RP0=0, select bank0
  1403     010E  1303               	bcf	3,6	;RP1=0, select bank0
  1404     010F  00A2               	movwf	??_ADC_read
  1405     0110                     u767:
  1406     0110  0BA2               	decfsz	??_ADC_read,f
  1407     0111  2910               	goto	u767
  1408     0112  0000               	nop
  1409     0113                     l1260:
  1410                           
  1411                           ;setupADC.c: 53:         ADCON0bits.GO = 1;
  1412     0113  1283               	bcf	3,5	;RP0=0, select bank0
  1413     0114  1303               	bcf	3,6	;RP1=0, select bank0
  1414     0115  149F               	bsf	31,1	;volatile
  1415     0116                     l212:	
  1416                           ;setupADC.c: 54:         while (ADCON0bits.GO);
  1417                           
  1418     0116  189F               	btfsc	31,1	;volatile
  1419     0117  2919               	goto	u711
  1420     0118  291A               	goto	u710
  1421     0119                     u711:
  1422     0119  2916               	goto	l212
  1423     011A                     u710:
  1424     011A  28F9               	goto	l209
  1425     011B                     l1266:
  1426                           
  1427                           ;setupADC.c: 58:     if(channel ==2){
  1428     011B  3002               	movlw	2
  1429     011C  0620               	xorwf	ADC_read@channel,w
  1430     011D  0421               	iorwf	ADC_read@channel+1,w
  1431     011E  1D03               	btfss	3,2
  1432     011F  2921               	goto	u721
  1433     0120  2922               	goto	u720
  1434     0121                     u721:
  1435     0121  2935               	goto	l210
  1436     0122                     u720:
  1437     0122                     l1268:
  1438                           
  1439                           ;setupADC.c: 59:         ADCON0bits.CHS = 0b0010;
  1440     0122  081F               	movf	31,w	;volatile
  1441     0123  39C3               	andlw	-61
  1442     0124  3808               	iorlw	8
  1443     0125  009F               	movwf	31	;volatile
  1444     0126                     l1270:
  1445                           
  1446                           ;setupADC.c: 60:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1447     0126  3007               	movlw	7
  1448     0127  1283               	bcf	3,5	;RP0=0, select bank0
  1449     0128  1303               	bcf	3,6	;RP1=0, select bank0
  1450     0129  00A2               	movwf	??_ADC_read
  1451     012A                     u777:
  1452     012A  0BA2               	decfsz	??_ADC_read,f
  1453     012B  292A               	goto	u777
  1454     012C  0000               	nop
  1455     012D                     l1272:
  1456                           
  1457                           ;setupADC.c: 61:         ADCON0bits.GO = 1;
  1458     012D  1283               	bcf	3,5	;RP0=0, select bank0
  1459     012E  1303               	bcf	3,6	;RP1=0, select bank0
  1460     012F  149F               	bsf	31,1	;volatile
  1461     0130                     l216:	
  1462                           ;setupADC.c: 62:         while (ADCON0bits.GO);
  1463                           
  1464     0130  189F               	btfsc	31,1	;volatile
  1465     0131  2933               	goto	u731
  1466     0132  2934               	goto	u730
  1467     0133                     u731:
  1468     0133  2930               	goto	l216
  1469     0134                     u730:
  1470     0134  28F9               	goto	l209
  1471     0135                     l210:
  1472     0135  0008               	return
  1473     0136                     __end_of_ADC_read:
  1474                           
  1475                           	psect	text6
  1476     0171                     __ptext6:	
  1477 ;; *************** function _ADC_config *****************
  1478 ;; Defined at:
  1479 ;;		line 11 in file "setupADC.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  channel         2    0[BANK0 ] int 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         0       2       0       0       0
  1494 ;;      Locals:         0       0       0       0       0
  1495 ;;      Temps:          0       1       0       0       0
  1496 ;;      Totals:         0       3       0       0       0
  1497 ;;Total ram usage:        3 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 3
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507     0171                     _ADC_config:	
  1508                           ;psect for function _ADC_config
  1509                           
  1510     0171                     l1232:	
  1511                           ;incstack = 0
  1512                           ; Regs used in _ADC_config: [wreg]
  1513                           
  1514                           
  1515                           ;setupADC.c: 12:     if((channel & 0x01) == 1){
  1516     0171  1283               	bcf	3,5	;RP0=0, select bank0
  1517     0172  1303               	bcf	3,6	;RP1=0, select bank0
  1518     0173  1C20               	btfss	ADC_config@channel,0
  1519     0174  2976               	goto	u651
  1520     0175  2977               	goto	u650
  1521     0176                     u651:
  1522     0176  297E               	goto	l200
  1523     0177                     u650:
  1524     0177                     l1234:
  1525                           
  1526                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  1527     0177  1005               	bcf	5,0	;volatile
  1528                           
  1529                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  1530     0178  1683               	bsf	3,5	;RP0=1, select bank1
  1531     0179  1303               	bcf	3,6	;RP1=0, select bank1
  1532     017A  1405               	bsf	5,0	;volatile
  1533                           
  1534                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  1535     017B  1683               	bsf	3,5	;RP0=1, select bank3
  1536     017C  1703               	bsf	3,6	;RP1=1, select bank3
  1537     017D  1408               	bsf	8,0	;volatile
  1538     017E                     l200:	
  1539                           ;setupADC.c: 16:     }
  1540                           
  1541                           
  1542                           ;setupADC.c: 17:     if((channel & 0x02) == 0x02){
  1543     017E  1283               	bcf	3,5	;RP0=0, select bank0
  1544     017F  1303               	bcf	3,6	;RP1=0, select bank0
  1545     0180  1CA0               	btfss	ADC_config@channel,1
  1546     0181  2983               	goto	u661
  1547     0182  2984               	goto	u660
  1548     0183                     u661:
  1549     0183  298B               	goto	l201
  1550     0184                     u660:
  1551     0184                     l1236:
  1552                           
  1553                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  1554     0184  1085               	bcf	5,1	;volatile
  1555                           
  1556                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  1557     0185  1683               	bsf	3,5	;RP0=1, select bank1
  1558     0186  1303               	bcf	3,6	;RP1=0, select bank1
  1559     0187  1485               	bsf	5,1	;volatile
  1560                           
  1561                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  1562     0188  1683               	bsf	3,5	;RP0=1, select bank3
  1563     0189  1703               	bsf	3,6	;RP1=1, select bank3
  1564     018A  1488               	bsf	8,1	;volatile
  1565     018B                     l201:	
  1566                           ;setupADC.c: 22:     }
  1567                           
  1568                           
  1569                           ;setupADC.c: 23:     if((channel & 0x04) == 0x4){
  1570     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1571     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1572     018D  1D20               	btfss	ADC_config@channel,2
  1573     018E  2990               	goto	u671
  1574     018F  2991               	goto	u670
  1575     0190                     u671:
  1576     0190  2998               	goto	l202
  1577     0191                     u670:
  1578     0191                     l1238:
  1579                           
  1580                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  1581     0191  1105               	bcf	5,2	;volatile
  1582                           
  1583                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  1584     0192  1683               	bsf	3,5	;RP0=1, select bank1
  1585     0193  1303               	bcf	3,6	;RP1=0, select bank1
  1586     0194  1505               	bsf	5,2	;volatile
  1587                           
  1588                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  1589     0195  1683               	bsf	3,5	;RP0=1, select bank3
  1590     0196  1703               	bsf	3,6	;RP1=1, select bank3
  1591     0197  1508               	bsf	8,2	;volatile
  1592     0198                     l202:	
  1593                           ;setupADC.c: 27:     }
  1594                           
  1595                           
  1596                           ;setupADC.c: 29:     ADCON0bits.ADCS1 = 0;
  1597     0198  1283               	bcf	3,5	;RP0=0, select bank0
  1598     0199  1303               	bcf	3,6	;RP1=0, select bank0
  1599     019A  139F               	bcf	31,7	;volatile
  1600                           
  1601                           ;setupADC.c: 30:     ADCON0bits.ADCS0 = 1;
  1602     019B  171F               	bsf	31,6	;volatile
  1603                           
  1604                           ;setupADC.c: 32:     ADCON1bits.VCFG1 = 0;
  1605     019C  1683               	bsf	3,5	;RP0=1, select bank1
  1606     019D  1303               	bcf	3,6	;RP1=0, select bank1
  1607     019E  129F               	bcf	31,5	;volatile
  1608                           
  1609                           ;setupADC.c: 33:     ADCON1bits.VCFG0 = 0;
  1610     019F  121F               	bcf	31,4	;volatile
  1611                           
  1612                           ;setupADC.c: 35:     ADCON1bits.ADFM = 0;
  1613     01A0  139F               	bcf	31,7	;volatile
  1614                           
  1615                           ;setupADC.c: 37:     ADCON0bits.ADON = 1;
  1616     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1617     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1618     01A3  141F               	bsf	31,0	;volatile
  1619     01A4                     l1240:
  1620                           
  1621                           ;setupADC.c: 38:     _delay((unsigned long)((100)*(1000000/4000000.0)));
  1622     01A4  3007               	movlw	7
  1623     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1624     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1625     01A7  00A2               	movwf	??_ADC_config
  1626     01A8                     u787:
  1627     01A8  0BA2               	decfsz	??_ADC_config,f
  1628     01A9  29A8               	goto	u787
  1629     01AA  0000               	nop
  1630     01AB                     l203:
  1631     01AB  0008               	return
  1632     01AC                     __end_of_ADC_config:
  1633                           
  1634                           	psect	text7
  1635     007E                     __ptext7:	
  1636 ;; *************** function _isr *****************
  1637 ;; Defined at:
  1638 ;;		line 55 in file "main.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0
  1654 ;;      Temps:          4       0       0       0       0
  1655 ;;      Totals:         4       0       0       0       0
  1656 ;;Total ram usage:        4 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 2
  1659 ;; This function calls:
  1660 ;;		_spiDataReady
  1661 ;;		_spiRead
  1662 ;;		_spiWrite
  1663 ;; This function is called by:
  1664 ;;		Interrupt level 1
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668     007E                     _isr:	
  1669                           ;psect for function _isr
  1670                           
  1671     007E                     i1l1138:
  1672                           
  1673                           ;main.c: 56:     if(SSPIF == 1){
  1674     007E  1283               	bcf	3,5	;RP0=0, select bank0
  1675     007F  1303               	bcf	3,6	;RP1=0, select bank0
  1676     0080  1D8C               	btfss	12,3	;volatile
  1677     0081  2883               	goto	u49_21
  1678     0082  2884               	goto	u49_20
  1679     0083                     u49_21:
  1680     0083  28B1               	goto	i1l1154
  1681     0084                     u49_20:
  1682     0084                     i1l1140:
  1683                           
  1684                           ;main.c: 57:         if(spiDataReady()){
  1685     0084  120A  118A  21E3  120A  118A  	fcall	_spiDataReady
  1686     0089  0870               	movf	?_spiDataReady,w
  1687     008A  0471               	iorwf	?_spiDataReady+1,w
  1688     008B  1903               	btfsc	3,2
  1689     008C  288E               	goto	u50_21
  1690     008D  288F               	goto	u50_20
  1691     008E                     u50_21:
  1692     008E  28B1               	goto	i1l1154
  1693     008F                     u50_20:
  1694     008F                     i1l1142:
  1695                           
  1696                           ;main.c: 58:             dato = spiRead();
  1697     008F  120A  118A  21FD  120A  118A  	fcall	_spiRead
  1698     0094  00F6               	movwf	_dato
  1699     0095                     i1l1144:
  1700                           
  1701                           ;main.c: 59:             if (dato == 'a'){
  1702     0095  3061               	movlw	97
  1703     0096  0676               	xorwf	_dato,w
  1704     0097  1D03               	btfss	3,2
  1705     0098  289A               	goto	u51_21
  1706     0099  289B               	goto	u51_20
  1707     009A                     u51_21:
  1708     009A  28A2               	goto	i1l1148
  1709     009B                     u51_20:
  1710     009B                     i1l1146:
  1711                           
  1712                           ;main.c: 60:                 spiWrite(lecADC);
  1713     009B  0878               	movf	_lecADC,w
  1714     009C  120A  118A  220D  120A  118A  	fcall	_spiWrite
  1715                           
  1716                           ;main.c: 61:             }
  1717     00A1  28AE               	goto	i1l1152
  1718     00A2                     i1l1148:
  1719     00A2  3063               	movlw	99
  1720     00A3  0676               	xorwf	_dato,w
  1721     00A4  1D03               	btfss	3,2
  1722     00A5  28A7               	goto	u52_21
  1723     00A6  28A8               	goto	u52_20
  1724     00A7                     u52_21:
  1725     00A7  28AE               	goto	i1l1152
  1726     00A8                     u52_20:
  1727     00A8                     i1l1150:
  1728                           
  1729                           ;main.c: 63:                 spiWrite(cont);
  1730     00A8  0877               	movf	_cont,w
  1731     00A9  120A  118A  220D  120A  118A  	fcall	_spiWrite
  1732     00AE                     i1l1152:
  1733                           
  1734                           ;main.c: 65:             SSPIF = 0;
  1735     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1736     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1737     00B0  118C               	bcf	12,3	;volatile
  1738     00B1                     i1l1154:
  1739                           
  1740                           ;main.c: 68:     if (INTCONbits.RBIF){
  1741     00B1  1C0B               	btfss	11,0	;volatile
  1742     00B2  28B4               	goto	u53_21
  1743     00B3  28B5               	goto	u53_20
  1744     00B4                     u53_21:
  1745     00B4  28DA               	goto	i1l65
  1746     00B5                     u53_20:
  1747     00B5                     i1l1156:
  1748                           
  1749                           ;main.c: 69:         if (PORTBbits.RB7 == 0)
  1750     00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1751     00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1752     00B7  1B86               	btfsc	6,7	;volatile
  1753     00B8  28BA               	goto	u54_21
  1754     00B9  28BB               	goto	u54_20
  1755     00BA                     u54_21:
  1756     00BA  28C7               	goto	i1l1162
  1757     00BB                     u54_20:
  1758     00BB                     i1l1158:
  1759                           
  1760                           ;main.c: 70:         {;main.c: 71:             _delay((unsigned long)((20)*(4000000/4000
      +                          .0)));
  1761     00BB  301A               	movlw	26
  1762     00BC  00F3               	movwf	??_isr+1
  1763     00BD  30F8               	movlw	248
  1764     00BE  00F2               	movwf	??_isr
  1765     00BF                     u79_27:
  1766     00BF  0BF2               	decfsz	??_isr,f
  1767     00C0  28BF               	goto	u79_27
  1768     00C1  0BF3               	decfsz	??_isr+1,f
  1769     00C2  28BF               	goto	u79_27
  1770     00C3  0000               	nop
  1771     00C4                     i1l1160:
  1772                           
  1773                           ;main.c: 72:             cont = cont + 1;
  1774     00C4  0877               	movf	_cont,w
  1775     00C5  3E01               	addlw	1
  1776     00C6  00F7               	movwf	_cont
  1777     00C7                     i1l1162:
  1778                           
  1779                           ;main.c: 74:         if(PORTBbits.RB6 == 0){
  1780     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1781     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1782     00C9  1B06               	btfsc	6,6	;volatile
  1783     00CA  28CC               	goto	u55_21
  1784     00CB  28CD               	goto	u55_20
  1785     00CC                     u55_21:
  1786     00CC  28D9               	goto	i1l1168
  1787     00CD                     u55_20:
  1788     00CD                     i1l1164:
  1789                           
  1790                           ;main.c: 75:             _delay((unsigned long)((20)*(4000000/4000.0)));
  1791     00CD  301A               	movlw	26
  1792     00CE  00F3               	movwf	??_isr+1
  1793     00CF  30F8               	movlw	248
  1794     00D0  00F2               	movwf	??_isr
  1795     00D1                     u80_27:
  1796     00D1  0BF2               	decfsz	??_isr,f
  1797     00D2  28D1               	goto	u80_27
  1798     00D3  0BF3               	decfsz	??_isr+1,f
  1799     00D4  28D1               	goto	u80_27
  1800     00D5  0000               	nop
  1801     00D6                     i1l1166:
  1802                           
  1803                           ;main.c: 76:             cont = cont - 1;
  1804     00D6  0877               	movf	_cont,w
  1805     00D7  3EFF               	addlw	255
  1806     00D8  00F7               	movwf	_cont
  1807     00D9                     i1l1168:
  1808                           
  1809                           ;main.c: 78:         RBIF = 0;
  1810     00D9  100B               	bcf	11,0	;volatile
  1811     00DA                     i1l65:
  1812     00DA  0875               	movf	??_isr+3,w
  1813     00DB  008A               	movwf	10
  1814     00DC  0E74               	swapf	??_isr+2,w
  1815     00DD  0083               	movwf	3
  1816     00DE  0EFE               	swapf	btemp,f
  1817     00DF  0E7E               	swapf	btemp,w
  1818     00E0  0009               	retfie
  1819     00E1                     __end_of_isr:
  1820                           
  1821                           	psect	intentry
  1822     0004                     __pintentry:	
  1823                           ;incstack = 0
  1824                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1825                           
  1826     0004                     interrupt_function:
  1827     007E                     saved_w	set	btemp
  1828     0004  00FE               	movwf	btemp
  1829     0005  0E03               	swapf	3,w
  1830     0006  00F4               	movwf	??_isr+2
  1831     0007  080A               	movf	10,w
  1832     0008  00F5               	movwf	??_isr+3
  1833     0009  120A  118A  287E   	ljmp	_isr
  1834                           
  1835                           	psect	text8
  1836     020D                     __ptext8:	
  1837 ;; *************** function _spiWrite *****************
  1838 ;; Defined at:
  1839 ;;		line 34 in file "SPI.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  dat             1    wreg     unsigned char 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  dat             1    0[COMMON] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       0       0       0       0
  1854 ;;      Locals:         1       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0
  1856 ;;      Totals:         1       0       0       0       0
  1857 ;;Total ram usage:        1 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_isr
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866     020D                     _spiWrite:	
  1867                           ;psect for function _spiWrite
  1868                           
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in _spiWrite: [wreg]
  1872                           ;spiWrite@dat stored from wreg
  1873     020D  00F0               	movwf	spiWrite@dat
  1874     020E                     i1l850:
  1875                           
  1876                           ;SPI.c: 34: void spiWrite(uint8_t dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1877     020E  0870               	movf	spiWrite@dat,w
  1878     020F  1283               	bcf	3,5	;RP0=0, select bank0
  1879     0210  1303               	bcf	3,6	;RP1=0, select bank0
  1880     0211  0093               	movwf	19	;volatile
  1881     0212                     i1l160:
  1882     0212  0008               	return
  1883     0213                     __end_of_spiWrite:
  1884                           
  1885                           	psect	text9
  1886     01FD                     __ptext9:	
  1887 ;; *************** function _spiRead *****************
  1888 ;; Defined at:
  1889 ;;		line 47 in file "SPI.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      unsigned char 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, pclath, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 1
  1910 ;; This function calls:
  1911 ;;		_spiReceiveWait
  1912 ;; This function is called by:
  1913 ;;		_isr
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917     01FD                     _spiRead:	
  1918                           ;psect for function _spiRead
  1919                           
  1920     01FD                     i1l844:	
  1921                           ;incstack = 0
  1922                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1923                           
  1924                           
  1925                           ;SPI.c: 49:     spiReceiveWait();
  1926     01FD  120A  118A  2206  120A  118A  	fcall	_spiReceiveWait
  1927     0202                     i1l846:
  1928                           
  1929                           ;SPI.c: 50:     return(SSPBUF);
  1930     0202  1283               	bcf	3,5	;RP0=0, select bank0
  1931     0203  1303               	bcf	3,6	;RP1=0, select bank0
  1932     0204  0813               	movf	19,w	;volatile
  1933     0205                     i1l168:
  1934     0205  0008               	return
  1935     0206                     __end_of_spiRead:
  1936                           
  1937                           	psect	text10
  1938     0206                     __ptext10:	
  1939 ;; *************** function _spiReceiveWait *****************
  1940 ;; Defined at:
  1941 ;;		line 29 in file "SPI.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		None
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0
  1958 ;;      Totals:         0       0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_spiRead
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968     0206                     _spiReceiveWait:	
  1969                           ;psect for function _spiReceiveWait
  1970                           
  1971     0206                     i1l830:	
  1972                           ;incstack = 0
  1973                           ; Regs used in _spiReceiveWait: []
  1974                           
  1975     0206                     i1l154:	
  1976                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1977                           
  1978     0206  1683               	bsf	3,5	;RP0=1, select bank1
  1979     0207  1303               	bcf	3,6	;RP1=0, select bank1
  1980     0208  1C14               	btfss	20,0	;volatile
  1981     0209  2A0B               	goto	u6_21
  1982     020A  2A0C               	goto	u6_20
  1983     020B                     u6_21:
  1984     020B  2A06               	goto	i1l154
  1985     020C                     u6_20:
  1986     020C                     i1l157:
  1987     020C  0008               	return
  1988     020D                     __end_of_spiReceiveWait:
  1989                           
  1990                           	psect	text11
  1991     01E3                     __ptext11:	
  1992 ;; *************** function _spiDataReady *****************
  1993 ;; Defined at:
  1994 ;;		line 39 in file "SPI.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  2    0[COMMON] unsigned int 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         2       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0
  2011 ;;      Totals:         2       0       0       0       0
  2012 ;;Total ram usage:        2 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_isr
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021     01E3                     _spiDataReady:	
  2022                           ;psect for function _spiDataReady
  2023                           
  2024     01E3                     i1l1066:	
  2025                           ;incstack = 0
  2026                           ; Regs used in _spiDataReady: [wreg+status,2]
  2027                           
  2028                           
  2029                           ;SPI.c: 41:     if(SSPSTATbits.BF)
  2030     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  2031     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  2032     01E5  1C14               	btfss	20,0	;volatile
  2033     01E6  29E8               	goto	u39_21
  2034     01E7  29E9               	goto	u39_20
  2035     01E8                     u39_21:
  2036     01E8  29EE               	goto	i1l1074
  2037     01E9                     u39_20:
  2038     01E9                     i1l1068:
  2039                           
  2040                           ;SPI.c: 42:         return 1;
  2041     01E9  3001               	movlw	1
  2042     01EA  00F0               	movwf	?_spiDataReady
  2043     01EB  3000               	movlw	0
  2044     01EC  00F1               	movwf	?_spiDataReady+1
  2045     01ED  29F0               	goto	i1l164
  2046     01EE                     i1l1074:
  2047                           
  2048                           ;SPI.c: 44:         return 0;
  2049     01EE  01F0               	clrf	?_spiDataReady
  2050     01EF  01F1               	clrf	?_spiDataReady+1
  2051     01F0                     i1l164:
  2052     01F0  0008               	return
  2053     01F1                     __end_of_spiDataReady:
  2054     007E                     btemp	set	126	;btemp
  2055     007E                     wtemp0	set	126
  2056                           
  2057                           	psect	idloc
  2058                           
  2059                           ;Config register IDLOC0 @ 0x2000
  2060                           ;	unspecified, using default values
  2061     2000                     	org	8192
  2062     2000  3FFF               	dw	16383
  2063                           
  2064                           ;Config register IDLOC1 @ 0x2001
  2065                           ;	unspecified, using default values
  2066     2001                     	org	8193
  2067     2001  3FFF               	dw	16383
  2068                           
  2069                           ;Config register IDLOC2 @ 0x2002
  2070                           ;	unspecified, using default values
  2071     2002                     	org	8194
  2072     2002  3FFF               	dw	16383
  2073                           
  2074                           ;Config register IDLOC3 @ 0x2003
  2075                           ;	unspecified, using default values
  2076     2003                     	org	8195
  2077     2003  3FFF               	dw	16383
  2078                           
  2079                           	psect	config
  2080                           
  2081                           ;Config register CONFIG1 @ 0x2007
  2082                           ;	Oscillator Selection bits
  2083                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2084                           ;	Watchdog Timer Enable bit
  2085                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2086                           ;	Power-up Timer Enable bit
  2087                           ;	PWRTE = OFF, PWRT disabled
  2088                           ;	RE3/MCLR pin function select bit
  2089                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2090                           ;	Code Protection bit
  2091                           ;	CP = OFF, Program memory code protection is disabled
  2092                           ;	Data Code Protection bit
  2093                           ;	CPD = OFF, Data memory code protection is disabled
  2094                           ;	Brown Out Reset Selection bits
  2095                           ;	BOREN = OFF, BOR disabled
  2096                           ;	Internal External Switchover bit
  2097                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2098                           ;	Fail-Safe Clock Monitor Enabled bit
  2099                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2100                           ;	Low Voltage Programming Enable bit
  2101                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2102                           ;	In-Circuit Debugger Mode bit
  2103                           ;	DEBUG = 0x1, unprogramme  2104     2007                     	org	8199
  2105     2007  20D4               	dw	8404
  2106                           
  2107                           ;Config register CONFIG2 @ 0x2008
  2108                           ;	Brown-out Reset Selection bit
  2109                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2110                           ;	Flash Program Memory Self Write Enable bits
  2111                           ;	WRT = OFF, Write protection off
  2112     2008                     	org	8200
  2113     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiDataReady

Critical Paths under _main in BANK0

    _main->_ADC_read
    _portsetup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     998
                                              4 BANK0      2     2      0
                         _ADC_config
                           _ADC_read
                          _portsetup
                        _setupINTOSC
                        _setup_portb
 ---------------------------------------------------------------------------------
 (1) _setup_portb                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             4     2      2     183
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           3     1      2     183
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      15
                                              2 COMMON     4     4      0
                       _spiDataReady
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _spiDataReady                                         2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_read
   _portsetup
     _spiInit
   _setupINTOSC
   _setup_portb

 _isr (ROOT)
   _spiDataReady
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 01:45:44 2023

            _SSPSTATbits 0094                       l76 01E2                       l79 01FC  
                    l200 017E                      l201 018B                      l202 0198  
                    l210 0135                      l203 01AB                      l212 0116  
                    l150 01C4                      l207 00F5                      l151 01C9  
                    l216 0130                      l209 00F9                      l181 007D  
                    l173 0023                      l174 0030                      l175 003D  
                    l176 004A                      l177 0057                      l178 0064  
                    l179 0070                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u600 0044                      u601 0043                      u610 0051  
                    u611 0050                      u700 0108                      u620 005E  
                    u701 0107                      u621 005D                      u710 011A  
                    u630 006A                      u711 0119                      u631 0069  
                    u720 0122                      u560 01B8                      u640 0076  
                    u721 0121                      u561 01B7                      u641 0075  
                    u650 0177                      u730 0134                      u570 001F  
                    u651 0176                      u731 0133                      u571 001E  
                    u660 0184                      u580 002A                      u661 0183  
                    u581 0029                      u670 0191                      u590 0037  
                    u671 0190                      u591 0036                      u680 00E9  
                    u681 00E8                      u690 00F9                      u691 00F8  
                    u747 0168                      u757 00EF                      u767 0110  
                    u777 012A                      u787 01A8                      _isr 007E  
                   l1200 0051                     l1210 01CA                     l1202 005E  
                   l1220 01D6                     l1212 01D0                     l1204 006A  
                   l1222 01D7                     l1214 01D1                     l1206 0076  
                   l1230 01FB                     l1240 01A4                     l1232 0171  
                   l1216 01D2                     l1208 007A                     l1224 01F1  
                   l1234 0177                     l1250 00FA                     l1242 00E1  
                   l1218 01D3                     l1226 01F5                     l1236 0184  
                   l1260 0113                     l1244 00E9                     l1180 01AF  
                   l1228 01F6                     l1238 0191                     l1270 0126  
                   l1246 00EB                     l1254 0102                     l1182 01B8  
                   l1190 0019                     l1272 012D                     l1256 0108  
                   l1248 00F2                     l1184 01BC                     l1192 001F  
                   l1280 0151                     l1258 010C                     l1266 011B  
                   l1186 01BE                     l1194 002A                     l1282 0152  
                   l1268 0122                     l1188 01C3                     l1196 0037  
                   l1284 0160                     l1198 0044                     l1286 0162  
                   l1278 0136                     _ADIF 0066                     ?_isr 0070  
                   _IOCB 0096                     _RBIF 0058                     i1l65 00DA  
                   _WPUB 0095                     u6_20 020C                     u6_21 020B  
                   _dato 0076                     _cont 0077                     _main 0136  
                   btemp 007E                     start 000C         __end_of_ADC_read 0136  
                  ??_isr 0072                    ?_main 0070                    i1l160 0212  
                  i1l154 0206                    i1l164 01F0                    i1l157 020C  
                  i1l168 0205                    i1l830 0206                    i1l850 020E  
                  i1l844 01FD                    i1l846 0202                    u50_20 008F  
                  u50_21 008E                    u51_20 009B                    u51_21 009A  
                  _PORTD 0008                    u52_20 00A8                    u52_21 00A7  
                  u53_20 00B5                    u53_21 00B4                    u54_20 00BB  
                  u54_21 00BA                    u39_20 01E9                    u55_20 00CD  
                  u39_21 01E8                    u55_21 00CC                    u80_27 00D1  
                  u49_20 0084                    u49_21 0083                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    u79_27 00BF  
                  pclath 000A          __end_of_spiInit 01CA          __end_of_spiRead 0206  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0171                   ??_main 0024                   _ADRESH 001E  
                 i1l1140 0084                   i1l1150 00A8                   i1l1142 008F  
                 i1l1160 00C4                   i1l1152 00AE                   i1l1144 0095  
                 i1l1074 01EE                   i1l1066 01E3                   i1l1162 00C7  
                 i1l1146 009B                   i1l1154 00B1                   i1l1138 007E  
                 i1l1068 01E9                   i1l1164 00CD                   i1l1156 00B5  
                 i1l1148 00A2                   i1l1166 00D6                   i1l1158 00BB  
                 i1l1168 00D9                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013             ??_ADC_config 0022  
                 _lecADC 0078             ?_setupINTOSC 0070                   saved_w 007E  
       __end_of_spiWrite 0213                ??_spiInit 0023                ?_ADC_read 0020  
              ??_spiRead 0070       __end_of_ADC_config 01AC             ?_setup_portb 0070  
__end_of__initialization 0012           __pcstackCOMMON 0070           _OPTION_REGbits 0081  
        ADC_read@channel 0020               ??_ADC_read 0022               __pmaintext 0136  
             __pintentry 0004            ?_spiDataReady 0070                  _SSPSTAT 0094  
              ?_spiWrite 0070                _ANSELbits 0188                  __ptext1 01F1  
                __ptext2 0016                  __ptext3 01CA                  __ptext4 01AC  
                __ptext5 00E1                  __ptext6 0171                  __ptext7 007E  
                __ptext8 020D                  __ptext9 01FD           ??_spiDataReady 0072  
                _spiInit 01AC                  _spiRead 01FD     end_of_initialization 0012  
             ??_spiWrite 0070        __end_of_portsetup 01E3                _PORTAbits 0005  
              _PORTBbits 0006                _PORTDbits 0008                _TRISAbits 0085  
            spiWrite@dat 0070           _spiReceiveWait 0206      start_initialization 000F  
            __end_of_isr 00E1        ADC_config@channel 0020     __end_of_spiDataReady 01F1  
 __end_of_spiReceiveWait 020D              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020          setupINTOSC@IRCF 0020          ?_spiReceiveWait 0070  
               ?_spiInit 0020                 ?_spiRead 0070                 _ADC_read 00E1  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F            ??_setupINTOSC 0020                _portsetup 01CA  
          ??_setup_portb 0020               _ADC_config 0171               ?_portsetup 0070  
           _spiDataReady 01E3                 __ptext10 0206                 __ptext11 01E3  
    __end_of_setupINTOSC 007E      __end_of_setup_portb 01FD                 _spiWrite 020D  
           spiInit@sType 0023        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
            ?_ADC_config 0020              ??_portsetup 0024              _setupINTOSC 0016  
            _setup_portb 01F1  
