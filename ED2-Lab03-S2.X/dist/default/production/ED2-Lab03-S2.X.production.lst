

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 11:46:59 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     008F                     	;# 
   256     0090                     	;# 
   257     0091                     	;# 
   258     0092                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0094                     	;# 
   263     0095                     	;# 
   264     0096                     	;# 
   265     0097                     	;# 
   266     0098                     	;# 
   267     0099                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     0105                     	;# 
   275     0107                     	;# 
   276     0108                     	;# 
   277     0109                     	;# 
   278     010C                     	;# 
   279     010C                     	;# 
   280     010D                     	;# 
   281     010E                     	;# 
   282     010F                     	;# 
   283     0185                     	;# 
   284     0187                     	;# 
   285     0188                     	;# 
   286     0189                     	;# 
   287     018C                     	;# 
   288     018D                     	;# 
   289     0000                     	;# 
   290     0001                     	;# 
   291     0002                     	;# 
   292     0003                     	;# 
   293     0004                     	;# 
   294     0005                     	;# 
   295     0006                     	;# 
   296     0007                     	;# 
   297     0008                     	;# 
   298     0009                     	;# 
   299     000A                     	;# 
   300     000B                     	;# 
   301     000C                     	;# 
   302     000D                     	;# 
   303     000E                     	;# 
   304     000E                     	;# 
   305     000F                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0014                     	;# 
   311     0015                     	;# 
   312     0015                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001B                     	;# 
   320     001C                     	;# 
   321     001D                     	;# 
   322     001E                     	;# 
   323     001F                     	;# 
   324     0081                     	;# 
   325     0085                     	;# 
   326     0086                     	;# 
   327     0087                     	;# 
   328     0088                     	;# 
   329     0089                     	;# 
   330     008C                     	;# 
   331     008D                     	;# 
   332     008E                     	;# 
   333     008F                     	;# 
   334     0090                     	;# 
   335     0091                     	;# 
   336     0092                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0094                     	;# 
   341     0095                     	;# 
   342     0096                     	;# 
   343     0097                     	;# 
   344     0098                     	;# 
   345     0099                     	;# 
   346     009A                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     0105                     	;# 
   353     0107                     	;# 
   354     0108                     	;# 
   355     0109                     	;# 
   356     010C                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     0185                     	;# 
   362     0187                     	;# 
   363     0188                     	;# 
   364     0189                     	;# 
   365     018C                     	;# 
   366     018D                     	;# 
   367     0000                     	;# 
   368     0001                     	;# 
   369     0002                     	;# 
   370     0003                     	;# 
   371     0004                     	;# 
   372     0005                     	;# 
   373     0006                     	;# 
   374     0007                     	;# 
   375     0008                     	;# 
   376     0009                     	;# 
   377     000A                     	;# 
   378     000B                     	;# 
   379     000C                     	;# 
   380     000D                     	;# 
   381     000E                     	;# 
   382     000E                     	;# 
   383     000F                     	;# 
   384     0010                     	;# 
   385     0011                     	;# 
   386     0012                     	;# 
   387     0013                     	;# 
   388     0014                     	;# 
   389     0015                     	;# 
   390     0015                     	;# 
   391     0016                     	;# 
   392     0017                     	;# 
   393     0018                     	;# 
   394     0019                     	;# 
   395     001A                     	;# 
   396     001B                     	;# 
   397     001B                     	;# 
   398     001C                     	;# 
   399     001D                     	;# 
   400     001E                     	;# 
   401     001F                     	;# 
   402     0081                     	;# 
   403     0085                     	;# 
   404     0086                     	;# 
   405     0087                     	;# 
   406     0088                     	;# 
   407     0089                     	;# 
   408     008C                     	;# 
   409     008D                     	;# 
   410     008E                     	;# 
   411     008F                     	;# 
   412     0090                     	;# 
   413     0091                     	;# 
   414     0092                     	;# 
   415     0093                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0094                     	;# 
   419     0095                     	;# 
   420     0096                     	;# 
   421     0097                     	;# 
   422     0098                     	;# 
   423     0099                     	;# 
   424     009A                     	;# 
   425     009B                     	;# 
   426     009C                     	;# 
   427     009D                     	;# 
   428     009E                     	;# 
   429     009F                     	;# 
   430     0105                     	;# 
   431     0107                     	;# 
   432     0108                     	;# 
   433     0109                     	;# 
   434     010C                     	;# 
   435     010C                     	;# 
   436     010D                     	;# 
   437     010E                     	;# 
   438     010F                     	;# 
   439     0185                     	;# 
   440     0187                     	;# 
   441     0188                     	;# 
   442     0189                     	;# 
   443     018C                     	;# 
   444     018D                     	;# 
   445     0000                     	;# 
   446     0001                     	;# 
   447     0002                     	;# 
   448     0003                     	;# 
   449     0004                     	;# 
   450     0005                     	;# 
   451     0006                     	;# 
   452     0007                     	;# 
   453     0008                     	;# 
   454     0009                     	;# 
   455     000A                     	;# 
   456     000B                     	;# 
   457     000C                     	;# 
   458     000D                     	;# 
   459     000E                     	;# 
   460     000E                     	;# 
   461     000F                     	;# 
   462     0010                     	;# 
   463     0011                     	;# 
   464     0012                     	;# 
   465     0013                     	;# 
   466     0014                     	;# 
   467     0015                     	;# 
   468     0015                     	;# 
   469     0016                     	;# 
   470     0017                     	;# 
   471     0018                     	;# 
   472     0019                     	;# 
   473     001A                     	;# 
   474     001B                     	;# 
   475     001B                     	;# 
   476     001C                     	;# 
   477     001D                     	;# 
   478     001E                     	;# 
   479     001F                     	;# 
   480     0081                     	;# 
   481     0085                     	;# 
   482     0086                     	;# 
   483     0087                     	;# 
   484     0088                     	;# 
   485     0089                     	;# 
   486     008C                     	;# 
   487     008D                     	;# 
   488     008E                     	;# 
   489     008F                     	;# 
   490     0090                     	;# 
   491     0091                     	;# 
   492     0092                     	;# 
   493     0093                     	;# 
   494     0093                     	;# 
   495     0093                     	;# 
   496     0094                     	;# 
   497     0095                     	;# 
   498     0096                     	;# 
   499     0097                     	;# 
   500     0098                     	;# 
   501     0099                     	;# 
   502     009A                     	;# 
   503     009B                     	;# 
   504     009C                     	;# 
   505     009D                     	;# 
   506     009E                     	;# 
   507     009F                     	;# 
   508     0105                     	;# 
   509     0107                     	;# 
   510     0108                     	;# 
   511     0109                     	;# 
   512     010C                     	;# 
   513     010C                     	;# 
   514     010D                     	;# 
   515     010E                     	;# 
   516     010F                     	;# 
   517     0185                     	;# 
   518     0187                     	;# 
   519     0188                     	;# 
   520     0189                     	;# 
   521     018C                     	;# 
   522     018D                     	;# 
   523     001E                     _ADRESH	set	30
   524     001F                     _ADCON0bits	set	31
   525     0005                     _PORTAbits	set	5
   526     0013                     _SSPBUF	set	19
   527     0014                     _SSPCON	set	20
   528     0008                     _PORTDbits	set	8
   529     000C                     _PIR1bits	set	12
   530     000B                     _INTCONbits	set	11
   531     0008                     _PORTD	set	8
   532     0066                     _ADIF	set	102
   533     0043                     _RD3	set	67
   534     0047                     _RD7	set	71
   535     0046                     _RD6	set	70
   536     0045                     _RD5	set	69
   537     0044                     _RD4	set	68
   538     0063                     _SSPIF	set	99
   539     009F                     _ADCON1bits	set	159
   540     008F                     _OSCCONbits	set	143
   541     0094                     _SSPSTATbits	set	148
   542     0094                     _SSPSTAT	set	148
   543     0085                     _TRISAbits	set	133
   544     008C                     _PIE1bits	set	140
   545     0088                     _TRISD	set	136
   546     043B                     _TRISC3	set	1083
   547     043D                     _TRISC5	set	1085
   548     0188                     _ANSELbits	set	392
   549                           
   550                           	psect	cinit
   551     000F                     start_initialization:	
   552                           ; #config settings
   553                           
   554     000F                     __initialization:
   555                           
   556                           ; Clear objects allocated to COMMON
   557     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   558     0010                     end_of_initialization:	
   559                           ;End of C runtime variable initialization code
   560                           
   561     0010                     __end_of__initialization:
   562     0010  0183               	clrf	3
   563     0011  120A  118A  28FB   	ljmp	_main	;jump to C main() function
   564                           
   565                           	psect	bssCOMMON
   566     0079                     __pbssCOMMON:
   567     0079                     _lecADC:
   568     0079                     	ds	1
   569                           
   570                           	psect	cstackCOMMON
   571     0070                     __pcstackCOMMON:
   572     0070                     ?_spiWrite:
   573     0070                     ??_spiWrite:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_setupINTOSC:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_portsetup:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_isr:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_main:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     spiWrite@dat:	
   589                           ; 1 bytes @ 0x0
   590                           
   591                           
   592                           ; 1 bytes @ 0x0
   593     0070                     	ds	1
   594     0071                     ??_isr:
   595                           
   596                           ; 1 bytes @ 0x1
   597     0071                     	ds	2
   598     0073                     ??_setupINTOSC:
   599     0073                     ?_ADC_config:	
   600                           ; 1 bytes @ 0x3
   601                           
   602     0073                     ?_spiInit:	
   603                           ; 1 bytes @ 0x3
   604                           
   605     0073                     ?_ADC_read:	
   606                           ; 1 bytes @ 0x3
   607                           
   608     0073                     spiInit@sDataSample:	
   609                           ; 2 bytes @ 0x3
   610                           
   611     0073                     setupINTOSC@IRCF:	
   612                           ; 1 bytes @ 0x3
   613                           
   614     0073                     ADC_config@channel:	
   615                           ; 1 bytes @ 0x3
   616                           
   617     0073                     ADC_read@channel:	
   618                           ; 2 bytes @ 0x3
   619                           
   620                           
   621                           ; 2 bytes @ 0x3
   622     0073                     	ds	1
   623     0074                     spiInit@sClockIdle:
   624                           
   625                           ; 1 bytes @ 0x4
   626     0074                     	ds	1
   627     0075                     ??_ADC_config:
   628     0075                     ??_ADC_read:	
   629                           ; 1 bytes @ 0x5
   630                           
   631     0075                     spiInit@sTransmitEdge:	
   632                           ; 1 bytes @ 0x5
   633                           
   634                           
   635                           ; 1 bytes @ 0x5
   636     0075                     	ds	1
   637     0076                     ??_spiInit:
   638     0076                     spiInit@sType:	
   639                           ; 1 bytes @ 0x6
   640                           
   641                           
   642                           ; 1 bytes @ 0x6
   643     0076                     	ds	1
   644     0077                     ??_portsetup:
   645     0077                     ??_main:	
   646                           ; 1 bytes @ 0x7
   647                           
   648                           
   649                           ; 1 bytes @ 0x7
   650     0077                     	ds	2
   651                           
   652                           	psect	maintext
   653     00FB                     __pmaintext:	
   654 ;;
   655 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   656 ;;
   657 ;; *************** function _main *****************
   658 ;; Defined at:
   659 ;;		line 59 in file "main.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2, status,0, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : B00/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          2       0       0       0       0
   676 ;;      Totals:         2       0       0       0       0
   677 ;;Total ram usage:        2 bytes
   678 ;; Hardware stack levels required when called: 4
   679 ;; This function calls:
   680 ;;		_ADC_config
   681 ;;		_ADC_read
   682 ;;		_portsetup
   683 ;;		_setupINTOSC
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689     00FB                     _main:	
   690                           ;psect for function _main
   691                           
   692     00FB                     l1048:	
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   695                           
   696                           
   697                           ;main.c: 60:     setupINTOSC(5);
   698     00FB  3005               	movlw	5
   699     00FC  120A  118A  2014  120A  118A  	fcall	_setupINTOSC
   700                           
   701                           ;main.c: 61:     portsetup();
   702     0101  120A  118A  2126  120A  118A  	fcall	_portsetup
   703                           
   704                           ;main.c: 62:     ADC_config(0x01);
   705     0106  3001               	movlw	1
   706     0107  00F3               	movwf	ADC_config@channel
   707     0108  3000               	movlw	0
   708     0109  00F4               	movwf	ADC_config@channel+1
   709     010A  120A  118A  20C3  120A  118A  	fcall	_ADC_config
   710     010F                     l41:	
   711                           ;main.c: 64:     while(1){
   712                           
   713                           
   714                           ;main.c: 65:         lecADC = ADC_read(0);
   715     010F  3000               	movlw	0
   716     0110  00F3               	movwf	ADC_read@channel
   717     0111  00F4               	movwf	ADC_read@channel+1
   718     0112  120A  118A  2073  120A  118A  	fcall	_ADC_read
   719     0117  0873               	movf	?_ADC_read,w
   720     0118  00F9               	movwf	_lecADC
   721     0119                     l1050:
   722                           
   723                           ;main.c: 66:         _delay((unsigned long)((5)*(2000000/4000.0)));
   724     0119  3004               	movlw	4
   725     011A  00F8               	movwf	??_main+1
   726     011B  303D               	movlw	61
   727     011C  00F7               	movwf	??_main
   728     011D                     u417:
   729     011D  0BF7               	decfsz	??_main,f
   730     011E  291D               	goto	u417
   731     011F  0BF8               	decfsz	??_main+1,f
   732     0120  291D               	goto	u417
   733     0121  2922               	nop2
   734     0122  290F               	goto	l41
   735     0123  120A  118A  280C   	ljmp	start
   736     0126                     __end_of_main:
   737                           
   738                           	psect	text1
   739     0014                     __ptext1:	
   740 ;; *************** function _setupINTOSC *****************
   741 ;; Defined at:
   742 ;;		line 10 in file "oscilador.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  IRCF            1    wreg     unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  IRCF            1    3[COMMON] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         1       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0
   759 ;;      Totals:         1       0       0       0       0
   760 ;;Total ram usage:        1 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 2
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770     0014                     _setupINTOSC:	
   771                           ;psect for function _setupINTOSC
   772                           
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   776                           ;setupINTOSC@IRCF stored from wreg
   777     0014  00F3               	movwf	setupINTOSC@IRCF
   778     0015                     l800:
   779                           
   780                           ;oscilador.c: 11:     if (IRCF == 7){
   781     0015  3007               	movlw	7
   782     0016  0673               	xorwf	setupINTOSC@IRCF,w
   783     0017  1D03               	btfss	3,2
   784     0018  281A               	goto	u61
   785     0019  281B               	goto	u60
   786     001A                     u61:
   787     001A  281F               	goto	l141
   788     001B                     u60:
   789     001B                     l802:
   790                           
   791                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
   792     001B  3070               	movlw	112
   793     001C  1683               	bsf	3,5	;RP0=1, select bank1
   794     001D  1303               	bcf	3,6	;RP1=0, select bank1
   795     001E  048F               	iorwf	15,f	;volatile
   796     001F                     l141:	
   797                           ;oscilador.c: 13:     }
   798                           
   799                           
   800                           ;oscilador.c: 14:     if (IRCF == 6){
   801     001F  3006               	movlw	6
   802     0020  0673               	xorwf	setupINTOSC@IRCF,w
   803     0021  1D03               	btfss	3,2
   804     0022  2824               	goto	u71
   805     0023  2825               	goto	u70
   806     0024                     u71:
   807     0024  282B               	goto	l142
   808     0025                     u70:
   809     0025                     l804:
   810                           
   811                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
   812     0025  1683               	bsf	3,5	;RP0=1, select bank1
   813     0026  1303               	bcf	3,6	;RP1=0, select bank1
   814     0027  080F               	movf	15,w	;volatile
   815     0028  398F               	andlw	-113
   816     0029  3860               	iorlw	96
   817     002A  008F               	movwf	15	;volatile
   818     002B                     l142:	
   819                           ;oscilador.c: 16:     }
   820                           
   821                           
   822                           ;oscilador.c: 17:     if (IRCF == 5){
   823     002B  3005               	movlw	5
   824     002C  0673               	xorwf	setupINTOSC@IRCF,w
   825     002D  1D03               	btfss	3,2
   826     002E  2830               	goto	u81
   827     002F  2831               	goto	u80
   828     0030                     u81:
   829     0030  2837               	goto	l143
   830     0031                     u80:
   831     0031                     l806:
   832                           
   833                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
   834     0031  1683               	bsf	3,5	;RP0=1, select bank1
   835     0032  1303               	bcf	3,6	;RP1=0, select bank1
   836     0033  080F               	movf	15,w	;volatile
   837     0034  398F               	andlw	-113
   838     0035  3850               	iorlw	80
   839     0036  008F               	movwf	15	;volatile
   840     0037                     l143:	
   841                           ;oscilador.c: 19:     }
   842                           
   843                           
   844                           ;oscilador.c: 20:     if (IRCF == 4){
   845     0037  3004               	movlw	4
   846     0038  0673               	xorwf	setupINTOSC@IRCF,w
   847     0039  1D03               	btfss	3,2
   848     003A  283C               	goto	u91
   849     003B  283D               	goto	u90
   850     003C                     u91:
   851     003C  2843               	goto	l144
   852     003D                     u90:
   853     003D                     l808:
   854                           
   855                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
   856     003D  1683               	bsf	3,5	;RP0=1, select bank1
   857     003E  1303               	bcf	3,6	;RP1=0, select bank1
   858     003F  080F               	movf	15,w	;volatile
   859     0040  398F               	andlw	-113
   860     0041  3840               	iorlw	64
   861     0042  008F               	movwf	15	;volatile
   862     0043                     l144:	
   863                           ;oscilador.c: 22:     }
   864                           
   865                           
   866                           ;oscilador.c: 23:     if (IRCF == 3){
   867     0043  3003               	movlw	3
   868     0044  0673               	xorwf	setupINTOSC@IRCF,w
   869     0045  1D03               	btfss	3,2
   870     0046  2848               	goto	u101
   871     0047  2849               	goto	u100
   872     0048                     u101:
   873     0048  284F               	goto	l145
   874     0049                     u100:
   875     0049                     l810:
   876                           
   877                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
   878     0049  1683               	bsf	3,5	;RP0=1, select bank1
   879     004A  1303               	bcf	3,6	;RP1=0, select bank1
   880     004B  080F               	movf	15,w	;volatile
   881     004C  398F               	andlw	-113
   882     004D  3830               	iorlw	48
   883     004E  008F               	movwf	15	;volatile
   884     004F                     l145:	
   885                           ;oscilador.c: 25:     }
   886                           
   887                           
   888                           ;oscilador.c: 26:     if (IRCF == 2){
   889     004F  3002               	movlw	2
   890     0050  0673               	xorwf	setupINTOSC@IRCF,w
   891     0051  1D03               	btfss	3,2
   892     0052  2854               	goto	u111
   893     0053  2855               	goto	u110
   894     0054                     u111:
   895     0054  285B               	goto	l146
   896     0055                     u110:
   897     0055                     l812:
   898                           
   899                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
   900     0055  1683               	bsf	3,5	;RP0=1, select bank1
   901     0056  1303               	bcf	3,6	;RP1=0, select bank1
   902     0057  080F               	movf	15,w	;volatile
   903     0058  398F               	andlw	-113
   904     0059  3820               	iorlw	32
   905     005A  008F               	movwf	15	;volatile
   906     005B                     l146:	
   907                           ;oscilador.c: 28:     }
   908                           
   909                           
   910                           ;oscilador.c: 29:     if (IRCF == 1){
   911     005B  0373               	decf	setupINTOSC@IRCF,w
   912     005C  1D03               	btfss	3,2
   913     005D  285F               	goto	u121
   914     005E  2860               	goto	u120
   915     005F                     u121:
   916     005F  2866               	goto	l147
   917     0060                     u120:
   918     0060                     l814:
   919                           
   920                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
   921     0060  1683               	bsf	3,5	;RP0=1, select bank1
   922     0061  1303               	bcf	3,6	;RP1=0, select bank1
   923     0062  080F               	movf	15,w	;volatile
   924     0063  398F               	andlw	-113
   925     0064  3810               	iorlw	16
   926     0065  008F               	movwf	15	;volatile
   927     0066                     l147:	
   928                           ;oscilador.c: 31:     }
   929                           
   930                           
   931                           ;oscilador.c: 32:     if (IRCF == 0){
   932     0066  0873               	movf	setupINTOSC@IRCF,w
   933     0067  1D03               	btfss	3,2
   934     0068  286A               	goto	u131
   935     0069  286B               	goto	u130
   936     006A                     u131:
   937     006A  286F               	goto	l818
   938     006B                     u130:
   939     006B                     l816:
   940                           
   941                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
   942     006B  308F               	movlw	-113
   943     006C  1683               	bsf	3,5	;RP0=1, select bank1
   944     006D  1303               	bcf	3,6	;RP1=0, select bank1
   945     006E  058F               	andwf	15,f	;volatile
   946     006F                     l818:
   947                           
   948                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
   949     006F  1683               	bsf	3,5	;RP0=1, select bank1
   950     0070  1303               	bcf	3,6	;RP1=0, select bank1
   951     0071  140F               	bsf	15,0	;volatile
   952     0072                     l149:
   953     0072  0008               	return
   954     0073                     __end_of_setupINTOSC:
   955                           
   956                           	psect	text2
   957     0126                     __ptext2:	
   958 ;; *************** function _portsetup *****************
   959 ;; Defined at:
   960 ;;		line 70 in file "main.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         0       0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 3
   981 ;; This function calls:
   982 ;;		_spiInit
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988     0126                     _portsetup:	
   989                           ;psect for function _portsetup
   990                           
   991     0126                     l988:	
   992                           ;incstack = 0
   993                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
   994                           
   995                           
   996                           ;main.c: 71:     TRISD = 0;
   997     0126  1683               	bsf	3,5	;RP0=1, select bank1
   998     0127  1303               	bcf	3,6	;RP1=0, select bank1
   999     0128  0188               	clrf	8	;volatile
  1000                           
  1001                           ;main.c: 72:     PORTD = 0;
  1002     0129  1283               	bcf	3,5	;RP0=0, select bank0
  1003     012A  1303               	bcf	3,6	;RP1=0, select bank0
  1004     012B  0188               	clrf	8	;volatile
  1005     012C                     l990:
  1006                           
  1007                           ;main.c: 74:     INTCONbits.GIE = 1;
  1008     012C  178B               	bsf	11,7	;volatile
  1009     012D                     l992:
  1010                           
  1011                           ;main.c: 75:     INTCONbits.PEIE = 1;
  1012     012D  170B               	bsf	11,6	;volatile
  1013     012E                     l994:
  1014                           
  1015                           ;main.c: 76:     PIR1bits.SSPIF = 0;
  1016     012E  118C               	bcf	12,3	;volatile
  1017     012F                     l996:
  1018                           
  1019                           ;main.c: 77:     PIE1bits.SSPIE = 1;
  1020     012F  1683               	bsf	3,5	;RP0=1, select bank1
  1021     0130  1303               	bcf	3,6	;RP1=0, select bank1
  1022     0131  158C               	bsf	12,3	;volatile
  1023     0132                     l998:
  1024                           
  1025                           ;main.c: 78:     TRISAbits.TRISA5 = 1;
  1026     0132  1685               	bsf	5,5	;volatile
  1027     0133                     l1000:
  1028                           
  1029                           ;main.c: 79:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
  1030     0133  01F3               	clrf	spiInit@sDataSample
  1031     0134  01F4               	clrf	spiInit@sClockIdle
  1032     0135  01F5               	clrf	spiInit@sTransmitEdge
  1033     0136  3024               	movlw	36
  1034     0137  120A  118A  213D  120A  118A  	fcall	_spiInit
  1035     013C                     l47:
  1036     013C  0008               	return
  1037     013D                     __end_of_portsetup:
  1038                           
  1039                           	psect	text3
  1040     013D                     __ptext3:	
  1041 ;; *************** function _spiInit *****************
  1042 ;; Defined at:
  1043 ;;		line 12 in file "SPI.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  sType           1    wreg     enum E1292
  1046 ;;  sDataSample     1    3[COMMON] enum E1300
  1047 ;;  sClockIdle      1    4[COMMON] enum E1304
  1048 ;;  sTransmitEdg    1    5[COMMON] enum E1308
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  sType           1    6[COMMON] enum E1292
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         3       0       0       0       0
  1061 ;;      Locals:         1       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         4       0       0       0       0
  1064 ;;Total ram usage:        4 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; Hardware stack levels required when called: 2
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_portsetup
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074     013D                     _spiInit:	
  1075                           ;psect for function _spiInit
  1076                           
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1080                           ;spiInit@sType stored from wreg
  1081     013D  00F6               	movwf	spiInit@sType
  1082     013E                     l978:
  1083                           
  1084                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1085     013E  1683               	bsf	3,5	;RP0=1, select bank1
  1086     013F  1303               	bcf	3,6	;RP1=0, select bank1
  1087     0140  1287               	bcf	7,5	;volatile
  1088                           
  1089                           ;SPI.c: 15:     if(sType & 0b00000100)
  1090     0141  1D76               	btfss	spiInit@sType,2
  1091     0142  2944               	goto	u311
  1092     0143  2945               	goto	u310
  1093     0144                     u311:
  1094     0144  2949               	goto	l984
  1095     0145                     u310:
  1096     0145                     l980:
  1097                           
  1098                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1099     0145  0875               	movf	spiInit@sTransmitEdge,w
  1100     0146  0094               	movwf	20	;volatile
  1101     0147                     l982:
  1102                           
  1103                           ;SPI.c: 18:         TRISC3 = 1;
  1104     0147  1587               	bsf	7,3	;volatile
  1105                           
  1106                           ;SPI.c: 19:     }
  1107     0148  294D               	goto	l118
  1108     0149                     l984:
  1109                           
  1110                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1111     0149  0873               	movf	spiInit@sDataSample,w
  1112     014A  0475               	iorwf	spiInit@sTransmitEdge,w
  1113     014B  0094               	movwf	20	;volatile
  1114     014C                     l986:
  1115                           
  1116                           ;SPI.c: 23:         TRISC3 = 0;
  1117     014C  1187               	bcf	7,3	;volatile
  1118     014D                     l118:	
  1119                           ;SPI.c: 24:     }
  1120                           
  1121                           
  1122                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1123     014D  0876               	movf	spiInit@sType,w
  1124     014E  0474               	iorwf	spiInit@sClockIdle,w
  1125     014F  1283               	bcf	3,5	;RP0=0, select bank0
  1126     0150  1303               	bcf	3,6	;RP1=0, select bank0
  1127     0151  0094               	movwf	20	;volatile
  1128     0152                     l119:
  1129     0152  0008               	return
  1130     0153                     __end_of_spiInit:
  1131                           
  1132                           	psect	text4
  1133     0073                     __ptext4:	
  1134 ;; *************** function _ADC_read *****************
  1135 ;; Defined at:
  1136 ;;		line 41 in file "setupADC.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  channel         2    3[COMMON] int 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2    3[COMMON] unsigned int 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         2       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          2       0       0       0       0
  1153 ;;      Totals:         4       0       0       0       0
  1154 ;;Total ram usage:        4 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 2
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164     0073                     _ADC_read:	
  1165                           ;psect for function _ADC_read
  1166                           
  1167     0073                     l1012:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  1170                           
  1171                           
  1172                           ;setupADC.c: 42:     if(channel ==0){
  1173     0073  0873               	movf	ADC_read@channel,w
  1174     0074  0474               	iorwf	ADC_read@channel+1,w
  1175     0075  1D03               	btfss	3,2
  1176     0076  2878               	goto	u351
  1177     0077  2879               	goto	u350
  1178     0078                     u351:
  1179     0078  2891               	goto	l1024
  1180     0079                     u350:
  1181     0079                     l1014:
  1182                           
  1183                           ;setupADC.c: 43:         ADCON0bits.CHS = 0b0000;
  1184     0079  30C3               	movlw	-61
  1185     007A  1283               	bcf	3,5	;RP0=0, select bank0
  1186     007B  1303               	bcf	3,6	;RP1=0, select bank0
  1187     007C  059F               	andwf	31,f	;volatile
  1188     007D                     l1016:
  1189                           
  1190                           ;setupADC.c: 44:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1191     007D  3008               	movlw	8
  1192     007E  00F5               	movwf	??_ADC_read
  1193     007F                     u427:
  1194     007F  0BF5               	decfsz	??_ADC_read,f
  1195     0080  287F               	goto	u427
  1196     0081                     l1018:
  1197                           
  1198                           ;setupADC.c: 45:         ADCON0bits.GO = 1;
  1199     0081  1283               	bcf	3,5	;RP0=0, select bank0
  1200     0082  1303               	bcf	3,6	;RP1=0, select bank0
  1201     0083  149F               	bsf	31,1	;volatile
  1202     0084                     l175:	
  1203                           ;setupADC.c: 46:         while (ADCON0bits.GO);
  1204                           
  1205     0084  189F               	btfsc	31,1	;volatile
  1206     0085  2887               	goto	u361
  1207     0086  2888               	goto	u360
  1208     0087                     u361:
  1209     0087  2884               	goto	l175
  1210     0088                     u360:
  1211     0088                     l177:
  1212                           
  1213                           ;setupADC.c: 47:         ADIF = 0;
  1214     0088  130C               	bcf	12,6	;volatile
  1215     0089                     l1020:
  1216                           
  1217                           ;setupADC.c: 48:         return ADRESH;
  1218     0089  081E               	movf	30,w	;volatile
  1219     008A  00F5               	movwf	??_ADC_read
  1220     008B  01F6               	clrf	??_ADC_read+1
  1221     008C  0875               	movf	??_ADC_read,w
  1222     008D  00F3               	movwf	?_ADC_read
  1223     008E  0876               	movf	??_ADC_read+1,w
  1224     008F  00F4               	movwf	?_ADC_read+1
  1225     0090  28C2               	goto	l178
  1226     0091                     l1024:
  1227                           
  1228                           ;setupADC.c: 50:     if(channel ==1){
  1229     0091  0373               	decf	ADC_read@channel,w
  1230     0092  0474               	iorwf	ADC_read@channel+1,w
  1231     0093  1D03               	btfss	3,2
  1232     0094  2896               	goto	u371
  1233     0095  2897               	goto	u370
  1234     0096                     u371:
  1235     0096  28A9               	goto	l1036
  1236     0097                     u370:
  1237     0097                     l1026:
  1238                           
  1239                           ;setupADC.c: 51:         ADCON0bits.CHS = 0b0001;
  1240     0097  1283               	bcf	3,5	;RP0=0, select bank0
  1241     0098  1303               	bcf	3,6	;RP1=0, select bank0
  1242     0099  081F               	movf	31,w	;volatile
  1243     009A  39C3               	andlw	-61
  1244     009B  3804               	iorlw	4
  1245     009C  009F               	movwf	31	;volatile
  1246     009D                     l1028:
  1247                           
  1248                           ;setupADC.c: 52:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1249     009D  3008               	movlw	8
  1250     009E  00F5               	movwf	??_ADC_read
  1251     009F                     u437:
  1252     009F  0BF5               	decfsz	??_ADC_read,f
  1253     00A0  289F               	goto	u437
  1254     00A1                     l1030:
  1255                           
  1256                           ;setupADC.c: 53:         ADCON0bits.GO = 1;
  1257     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1258     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1259     00A3  149F               	bsf	31,1	;volatile
  1260     00A4                     l180:	
  1261                           ;setupADC.c: 54:         while (ADCON0bits.GO);
  1262                           
  1263     00A4  189F               	btfsc	31,1	;volatile
  1264     00A5  28A7               	goto	u381
  1265     00A6  28A8               	goto	u380
  1266     00A7                     u381:
  1267     00A7  28A4               	goto	l180
  1268     00A8                     u380:
  1269     00A8  2888               	goto	l177
  1270     00A9                     l1036:
  1271                           
  1272                           ;setupADC.c: 58:     if(channel ==2){
  1273     00A9  3002               	movlw	2
  1274     00AA  0673               	xorwf	ADC_read@channel,w
  1275     00AB  0474               	iorwf	ADC_read@channel+1,w
  1276     00AC  1D03               	btfss	3,2
  1277     00AD  28AF               	goto	u391
  1278     00AE  28B0               	goto	u390
  1279     00AF                     u391:
  1280     00AF  28C2               	goto	l178
  1281     00B0                     u390:
  1282     00B0                     l1038:
  1283                           
  1284                           ;setupADC.c: 59:         ADCON0bits.CHS = 0b0010;
  1285     00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1286     00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1287     00B2  081F               	movf	31,w	;volatile
  1288     00B3  39C3               	andlw	-61
  1289     00B4  3808               	iorlw	8
  1290     00B5  009F               	movwf	31	;volatile
  1291     00B6                     l1040:
  1292                           
  1293                           ;setupADC.c: 60:         _delay((unsigned long)((100)*(1000000/4000000.0)));
  1294     00B6  3008               	movlw	8
  1295     00B7  00F5               	movwf	??_ADC_read
  1296     00B8                     u447:
  1297     00B8  0BF5               	decfsz	??_ADC_read,f
  1298     00B9  28B8               	goto	u447
  1299     00BA                     l1042:
  1300                           
  1301                           ;setupADC.c: 61:         ADCON0bits.GO = 1;
  1302     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1303     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1304     00BC  149F               	bsf	31,1	;volatile
  1305     00BD                     l184:	
  1306                           ;setupADC.c: 62:         while (ADCON0bits.GO);
  1307                           
  1308     00BD  189F               	btfsc	31,1	;volatile
  1309     00BE  28C0               	goto	u401
  1310     00BF  28C1               	goto	u400
  1311     00C0                     u401:
  1312     00C0  28BD               	goto	l184
  1313     00C1                     u400:
  1314     00C1  2888               	goto	l177
  1315     00C2                     l178:
  1316     00C2  0008               	return
  1317     00C3                     __end_of_ADC_read:
  1318                           
  1319                           	psect	text5
  1320     00C3                     __ptext5:	
  1321 ;; *************** function _ADC_config *****************
  1322 ;; Defined at:
  1323 ;;		line 11 in file "setupADC.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  channel         2    3[COMMON] int 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         2       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0
  1339 ;;      Temps:          1       0       0       0       0
  1340 ;;      Totals:         3       0       0       0       0
  1341 ;;Total ram usage:        3 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 2
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351     00C3                     _ADC_config:	
  1352                           ;psect for function _ADC_config
  1353                           
  1354     00C3                     l1002:	
  1355                           ;incstack = 0
  1356                           ; Regs used in _ADC_config: [wreg]
  1357                           
  1358                           
  1359                           ;setupADC.c: 12:     if((channel & 0x01) == 1){
  1360     00C3  1C73               	btfss	ADC_config@channel,0
  1361     00C4  28C6               	goto	u321
  1362     00C5  28C7               	goto	u320
  1363     00C6                     u321:
  1364     00C6  28D0               	goto	l168
  1365     00C7                     u320:
  1366     00C7                     l1004:
  1367                           
  1368                           ;setupADC.c: 13:         PORTAbits.RA0 = 0;
  1369     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1370     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1371     00C9  1005               	bcf	5,0	;volatile
  1372                           
  1373                           ;setupADC.c: 14:         TRISAbits.TRISA0 = 1;
  1374     00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1375     00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1376     00CC  1405               	bsf	5,0	;volatile
  1377                           
  1378                           ;setupADC.c: 15:         ANSELbits.ANS0 = 1;
  1379     00CD  1683               	bsf	3,5	;RP0=1, select bank3
  1380     00CE  1703               	bsf	3,6	;RP1=1, select bank3
  1381     00CF  1408               	bsf	8,0	;volatile
  1382     00D0                     l168:	
  1383                           ;setupADC.c: 16:     }
  1384                           
  1385                           
  1386                           ;setupADC.c: 17:     if((channel & 0x02) == 0x02){
  1387     00D0  1CF3               	btfss	ADC_config@channel,1
  1388     00D1  28D3               	goto	u331
  1389     00D2  28D4               	goto	u330
  1390     00D3                     u331:
  1391     00D3  28DD               	goto	l169
  1392     00D4                     u330:
  1393     00D4                     l1006:
  1394                           
  1395                           ;setupADC.c: 18:         PORTAbits.RA1 = 0;
  1396     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1397     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1398     00D6  1085               	bcf	5,1	;volatile
  1399                           
  1400                           ;setupADC.c: 19:         TRISAbits.TRISA1 = 1;
  1401     00D7  1683               	bsf	3,5	;RP0=1, select bank1
  1402     00D8  1303               	bcf	3,6	;RP1=0, select bank1
  1403     00D9  1485               	bsf	5,1	;volatile
  1404                           
  1405                           ;setupADC.c: 20:         ANSELbits.ANS1 = 1;
  1406     00DA  1683               	bsf	3,5	;RP0=1, select bank3
  1407     00DB  1703               	bsf	3,6	;RP1=1, select bank3
  1408     00DC  1488               	bsf	8,1	;volatile
  1409     00DD                     l169:	
  1410                           ;setupADC.c: 22:     }
  1411                           
  1412                           
  1413                           ;setupADC.c: 23:     if((channel & 0x04) == 0x4){
  1414     00DD  1D73               	btfss	ADC_config@channel,2
  1415     00DE  28E0               	goto	u341
  1416     00DF  28E1               	goto	u340
  1417     00E0                     u341:
  1418     00E0  28EA               	goto	l170
  1419     00E1                     u340:
  1420     00E1                     l1008:
  1421                           
  1422                           ;setupADC.c: 24:         PORTAbits.RA2 = 0;
  1423     00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1424     00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1425     00E3  1105               	bcf	5,2	;volatile
  1426                           
  1427                           ;setupADC.c: 25:         TRISAbits.TRISA2 = 1;
  1428     00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1429     00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1430     00E6  1505               	bsf	5,2	;volatile
  1431                           
  1432                           ;setupADC.c: 26:         ANSELbits.ANS2 = 1;
  1433     00E7  1683               	bsf	3,5	;RP0=1, select bank3
  1434     00E8  1703               	bsf	3,6	;RP1=1, select bank3
  1435     00E9  1508               	bsf	8,2	;volatile
  1436     00EA                     l170:	
  1437                           ;setupADC.c: 27:     }
  1438                           
  1439                           
  1440                           ;setupADC.c: 29:     ADCON0bits.ADCS1 = 0;
  1441     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1442     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1443     00EC  139F               	bcf	31,7	;volatile
  1444                           
  1445                           ;setupADC.c: 30:     ADCON0bits.ADCS0 = 1;
  1446     00ED  171F               	bsf	31,6	;volatile
  1447                           
  1448                           ;setupADC.c: 32:     ADCON1bits.VCFG1 = 0;
  1449     00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1450     00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1451     00F0  129F               	bcf	31,5	;volatile
  1452                           
  1453                           ;setupADC.c: 33:     ADCON1bits.VCFG0 = 0;
  1454     00F1  121F               	bcf	31,4	;volatile
  1455                           
  1456                           ;setupADC.c: 35:     ADCON1bits.ADFM = 0;
  1457     00F2  139F               	bcf	31,7	;volatile
  1458                           
  1459                           ;setupADC.c: 37:     ADCON0bits.ADON = 1;
  1460     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1461     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1462     00F5  141F               	bsf	31,0	;volatile
  1463     00F6                     l1010:
  1464                           
  1465                           ;setupADC.c: 38:     _delay((unsigned long)((100)*(1000000/4000000.0)));
  1466     00F6  3008               	movlw	8
  1467     00F7  00F5               	movwf	??_ADC_config
  1468     00F8                     u457:
  1469     00F8  0BF5               	decfsz	??_ADC_config,f
  1470     00F9  28F8               	goto	u457
  1471     00FA                     l171:
  1472     00FA  0008               	return
  1473     00FB                     __end_of_ADC_config:
  1474                           
  1475                           	psect	text6
  1476     0153                     __ptext6:	
  1477 ;; *************** function _isr *****************
  1478 ;; Defined at:
  1479 ;;		line 52 in file "main.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, pclath, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0
  1495 ;;      Temps:          2       0       0       0       0
  1496 ;;      Totals:         2       0       0       0       0
  1497 ;;Total ram usage:        2 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 1
  1500 ;; This function calls:
  1501 ;;		_spiWrite
  1502 ;; This function is called by:
  1503 ;;		Interrupt level 1
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507     0153                     _isr:	
  1508                           ;psect for function _isr
  1509                           
  1510     0153                     i1l912:
  1511                           
  1512                           ;main.c: 53:     if(SSPIF == 1){
  1513     0153  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0154  1303               	bcf	3,6	;RP1=0, select bank0
  1515     0155  1D8C               	btfss	12,3	;volatile
  1516     0156  2958               	goto	u25_21
  1517     0157  2959               	goto	u25_20
  1518     0158                     u25_21:
  1519     0158  2962               	goto	i1l36
  1520     0159                     u25_20:
  1521     0159                     i1l914:
  1522                           
  1523                           ;main.c: 54:         spiWrite(lecADC);
  1524     0159  0879               	movf	_lecADC,w
  1525     015A  120A  118A  2169  120A  118A  	fcall	_spiWrite
  1526     015F                     i1l916:
  1527                           
  1528                           ;main.c: 55:         SSPIF = 0;
  1529     015F  1283               	bcf	3,5	;RP0=0, select bank0
  1530     0160  1303               	bcf	3,6	;RP1=0, select bank0
  1531     0161  118C               	bcf	12,3	;volatile
  1532     0162                     i1l36:
  1533     0162  0872               	movf	??_isr+1,w
  1534     0163  008A               	movwf	10
  1535     0164  0E71               	swapf	??_isr,w
  1536     0165  0083               	movwf	3
  1537     0166  0EFE               	swapf	btemp,f
  1538     0167  0E7E               	swapf	btemp,w
  1539     0168  0009               	retfie
  1540     0169                     __end_of_isr:
  1541                           
  1542                           	psect	intentry
  1543     0004                     __pintentry:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1546                           
  1547     0004                     interrupt_function:
  1548     007E                     saved_w	set	btemp
  1549     0004  00FE               	movwf	btemp
  1550     0005  0E03               	swapf	3,w
  1551     0006  00F1               	movwf	??_isr
  1552     0007  080A               	movf	10,w
  1553     0008  00F2               	movwf	??_isr+1
  1554     0009  120A  118A  2953   	ljmp	_isr
  1555                           
  1556                           	psect	text7
  1557     0169                     __ptext7:	
  1558 ;; *************** function _spiWrite *****************
  1559 ;; Defined at:
  1560 ;;		line 34 in file "SPI.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  dat             1    wreg     unsigned char 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  dat             1    0[COMMON] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1574 ;;      Params:         0       0       0       0       0
  1575 ;;      Locals:         1       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0
  1577 ;;      Totals:         1       0       0       0       0
  1578 ;;Total ram usage:        1 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_isr
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587     0169                     _spiWrite:	
  1588                           ;psect for function _spiWrite
  1589                           
  1590                           
  1591                           ;incstack = 0
  1592                           ; Regs used in _spiWrite: [wreg]
  1593                           ;spiWrite@dat stored from wreg
  1594     0169  00F0               	movwf	spiWrite@dat
  1595     016A                     i1l798:
  1596                           
  1597                           ;SPI.c: 34: void spiWrite(uint8_t dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1598     016A  0870               	movf	spiWrite@dat,w
  1599     016B  1283               	bcf	3,5	;RP0=0, select bank0
  1600     016C  1303               	bcf	3,6	;RP1=0, select bank0
  1601     016D  0093               	movwf	19	;volatile
  1602     016E                     i1l128:
  1603     016E  0008               	return
  1604     016F                     __end_of_spiWrite:
  1605     007E                     btemp	set	126	;btemp
  1606     007E                     wtemp0	set	126
  1607                           
  1608                           	psect	idloc
  1609                           
  1610                           ;Config register IDLOC0 @ 0x2000
  1611                           ;	unspecified, using default values
  1612     2000                     	org	8192
  1613     2000  3FFF               	dw	16383
  1614                           
  1615                           ;Config register IDLOC1 @ 0x2001
  1616                           ;	unspecified, using default values
  1617     2001                     	org	8193
  1618     2001  3FFF               	dw	16383
  1619                           
  1620                           ;Config register IDLOC2 @ 0x2002
  1621                           ;	unspecified, using default values
  1622     2002                     	org	8194
  1623     2002  3FFF               	dw	16383
  1624                           
  1625                           ;Config register IDLOC3 @ 0x2003
  1626                           ;	unspecified, using default values
  1627     2003                     	org	8195
  1628     2003  3FFF               	dw	16383
  1629                           
  1630                           	psect	config
  1631                           
  1632                           ;Config register CONFIG1 @ 0x2007
  1633                           ;	Oscillator Selection bits
  1634                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1635                           ;	Watchdog Timer Enable bit
  1636                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1637                           ;	Power-up Timer Enable bit
  1638                           ;	PWRTE = OFF, PWRT disabled
  1639                           ;	RE3/MCLR pin function select bit
  1640                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1641                           ;	Code Protection bit
  1642                           ;	CP = OFF, Program memory code protection is disabled
  1643                           ;	Data Code Protection bit
  1644                           ;	CPD = OFF, Data memory code protection is disabled
  1645                           ;	Brown Out Reset Selection bits
  1646                           ;	BOREN = OFF, BOR disabled
  1647                           ;	Internal External Switchover bit
  1648                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1649                           ;	Fail-Safe Clock Monitor Enabled bit
  1650                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1651                           ;	Low Voltage Programming Enable bit
  1652                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1653                           ;	In-Circuit Debugger Mode bit
  1654                           ;	DEBUG = 0x1, unprogramme  1655     2007                     	org	8199
  1656     2007  20D4               	dw	8404
  1657                           
  1658                           ;Config register CONFIG2 @ 0x2008
  1659                           ;	Brown-out Reset Selection bit
  1660                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1661                           ;	Flash Program Memory Self Write Enable bits
  1662                           ;	WRT = OFF, Write protection off
  1663     2008                     	org	8200
  1664     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_read
    _portsetup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     764
                                              7 COMMON     2     2      0
                         _ADC_config
                           _ADC_read
                          _portsetup
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     120
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             4     2      2     142
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           3     1      2     142
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_read
   _portsetup
     _spiInit
   _setupINTOSC

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 11:46:59 2023

            _SSPSTATbits 0094                       l41 010F                       l47 013C  
                     u60 001B                       u61 001A                       u70 0025  
                     u71 0024                       u80 0031                       u81 0030  
                     u90 003D                       u91 003C                      l141 001F  
                    l118 014D                      l142 002B                      l119 0152  
                    l143 0037                      l144 0043                      l145 004F  
                    l170 00EA                      l146 005B                      l171 00FA  
                    l147 0066                      l180 00A4                      l149 0072  
                    l175 0084                      l168 00D0                      l184 00BD  
                    l169 00DD                      l177 0088                      l178 00C2  
                    l800 0015                      l810 0049                      l802 001B  
                    l812 0055                      l804 0025                      l814 0060  
                    l806 0031                      l816 006B                      l808 003D  
                    l818 006F                      l980 0145                      l982 0147  
                    l990 012C                      l984 0149                      l992 012D  
                    l986 014C                      l978 013E                      l994 012E  
                    l996 012F                      l988 0126                      l998 0132  
                    _RD3 0043                      u100 0049                      _RD4 0044  
                    u101 0048                      _RD5 0045                      u110 0055  
                    _RD6 0046                      u111 0054                      _RD7 0047  
                    u120 0060                      u121 005F                      u130 006B  
                    u131 006A                      u310 0145                      u311 0144  
                    u320 00C7                      u400 00C1                      u321 00C6  
                    u401 00C0                      u330 00D4                      u331 00D3  
                    u340 00E1                      u341 00E0                      u350 0079  
                    u351 0078                      u360 0088                      u361 0087  
                    u417 011D                      u370 0097                      u371 0096  
                    u427 007F                      u380 00A8                      u381 00A7  
                    u437 009F                      u390 00B0                      u447 00B8  
                    u391 00AF                      u457 00F8                      _isr 0153  
                   l1000 0133                     l1010 00F6                     l1002 00C3  
                   l1004 00C7                     l1020 0089                     l1012 0073  
                   l1006 00D4                     l1030 00A1                     l1014 0079  
                   l1008 00E1                     l1040 00B6                     l1016 007D  
                   l1024 0091                     l1042 00BA                     l1026 0097  
                   l1018 0081                     l1050 0119                     l1028 009D  
                   l1036 00A9                     l1038 00B0                     l1048 00FB  
                   _ADIF 0066                     ?_isr 0070                     i1l36 0162  
                   _main 00FB                     btemp 007E                     start 000C  
       __end_of_ADC_read 00C3                    ??_isr 0071                    ?_main 0070  
                  i1l128 016E                    i1l912 0153                    i1l914 0159  
                  i1l916 015F                    i1l798 016A                    u25_20 0159  
                  u25_21 0158                    _PORTD 0008                    _TRISD 0088  
                  _SSPIF 0063                    pclath 000A          __end_of_spiInit 0153  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0126                   ??_main 0077                   _ADRESH 001E  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013             ??_ADC_config 0075                   _lecADC 0079  
           ?_setupINTOSC 0070                   saved_w 007E         __end_of_spiWrite 016F  
              ??_spiInit 0076                ?_ADC_read 0073       __end_of_ADC_config 00FB  
__end_of__initialization 0010           __pcstackCOMMON 0070          ADC_read@channel 0073  
             ??_ADC_read 0075               __pmaintext 00FB               __pintentry 0004  
                _SSPSTAT 0094                ?_spiWrite 0070                _ANSELbits 0188  
                __ptext1 0014                  __ptext2 0126                  __ptext3 013D  
                __ptext4 0073                  __ptext5 00C3                  __ptext6 0153  
                __ptext7 0169                  _spiInit 013D     end_of_initialization 0010  
             ??_spiWrite 0070        __end_of_portsetup 013D                _PORTAbits 0005  
              _PORTDbits 0008                _TRISAbits 0085              spiWrite@dat 0070  
    start_initialization 000F              __end_of_isr 0169        ADC_config@channel 0073  
            __pbssCOMMON 0079                ___latbits 0002          setupINTOSC@IRCF 0073  
               ?_spiInit 0073                 _ADC_read 0073     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0073  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
          ??_setupINTOSC 0073                _portsetup 0126               _ADC_config 00C3  
             ?_portsetup 0070      __end_of_setupINTOSC 0073                 _spiWrite 0169  
           spiInit@sType 0076        spiInit@sClockIdle 0074               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F              ?_ADC_config 0073  
            ??_portsetup 0077              _setupINTOSC 0014  
