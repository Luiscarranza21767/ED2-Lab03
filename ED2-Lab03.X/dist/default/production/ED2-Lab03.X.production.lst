

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 02:57:13 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51     0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     0007                     	;# 
    95     0008                     	;# 
    96     0009                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000D                     	;# 
   101     000E                     	;# 
   102     000E                     	;# 
   103     000F                     	;# 
   104     0010                     	;# 
   105     0011                     	;# 
   106     0012                     	;# 
   107     0013                     	;# 
   108     0014                     	;# 
   109     0015                     	;# 
   110     0015                     	;# 
   111     0016                     	;# 
   112     0017                     	;# 
   113     0018                     	;# 
   114     0019                     	;# 
   115     001A                     	;# 
   116     001B                     	;# 
   117     001B                     	;# 
   118     001C                     	;# 
   119     001D                     	;# 
   120     001E                     	;# 
   121     001F                     	;# 
   122     0081                     	;# 
   123     0085                     	;# 
   124     0086                     	;# 
   125     0087                     	;# 
   126     0088                     	;# 
   127     0089                     	;# 
   128     008C                     	;# 
   129     008D                     	;# 
   130     008E                     	;# 
   131     008F                     	;# 
   132     0090                     	;# 
   133     0091                     	;# 
   134     0092                     	;# 
   135     0093                     	;# 
   136     0093                     	;# 
   137     0093                     	;# 
   138     0094                     	;# 
   139     0095                     	;# 
   140     0096                     	;# 
   141     0097                     	;# 
   142     0098                     	;# 
   143     0099                     	;# 
   144     009A                     	;# 
   145     009B                     	;# 
   146     009C                     	;# 
   147     009D                     	;# 
   148     009E                     	;# 
   149     009F                     	;# 
   150     0105                     	;# 
   151     0107                     	;# 
   152     0108                     	;# 
   153     0109                     	;# 
   154     010C                     	;# 
   155     010C                     	;# 
   156     010D                     	;# 
   157     010E                     	;# 
   158     010F                     	;# 
   159     0185                     	;# 
   160     0187                     	;# 
   161     0188                     	;# 
   162     0189                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0000                     	;# 
   166     0001                     	;# 
   167     0002                     	;# 
   168     0003                     	;# 
   169     0004                     	;# 
   170     0005                     	;# 
   171     0006                     	;# 
   172     0007                     	;# 
   173     0008                     	;# 
   174     0009                     	;# 
   175     000A                     	;# 
   176     000B                     	;# 
   177     000C                     	;# 
   178     000D                     	;# 
   179     000E                     	;# 
   180     000E                     	;# 
   181     000F                     	;# 
   182     0010                     	;# 
   183     0011                     	;# 
   184     0012                     	;# 
   185     0013                     	;# 
   186     0014                     	;# 
   187     0015                     	;# 
   188     0015                     	;# 
   189     0016                     	;# 
   190     0017                     	;# 
   191     0018                     	;# 
   192     0019                     	;# 
   193     001A                     	;# 
   194     001B                     	;# 
   195     001B                     	;# 
   196     001C                     	;# 
   197     001D                     	;# 
   198     001E                     	;# 
   199     001F                     	;# 
   200     0081                     	;# 
   201     0085                     	;# 
   202     0086                     	;# 
   203     0087                     	;# 
   204     0088                     	;# 
   205     0089                     	;# 
   206     008C                     	;# 
   207     008D                     	;# 
   208     008E                     	;# 
   209     008F                     	;# 
   210     0090                     	;# 
   211     0091                     	;# 
   212     0092                     	;# 
   213     0093                     	;# 
   214     0093                     	;# 
   215     0093                     	;# 
   216     0094                     	;# 
   217     0095                     	;# 
   218     0096                     	;# 
   219     0097                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009A                     	;# 
   223     009B                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     0105                     	;# 
   229     0107                     	;# 
   230     0108                     	;# 
   231     0109                     	;# 
   232     010C                     	;# 
   233     010C                     	;# 
   234     010D                     	;# 
   235     010E                     	;# 
   236     010F                     	;# 
   237     0185                     	;# 
   238     0187                     	;# 
   239     0188                     	;# 
   240     0189                     	;# 
   241     018C                     	;# 
   242     018D                     	;# 
   243     0000                     	;# 
   244     0001                     	;# 
   245     0002                     	;# 
   246     0003                     	;# 
   247     0004                     	;# 
   248     0005                     	;# 
   249     0006                     	;# 
   250     0007                     	;# 
   251     0008                     	;# 
   252     0009                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0013                     	;# 
   264     0014                     	;# 
   265     0015                     	;# 
   266     0015                     	;# 
   267     0016                     	;# 
   268     0017                     	;# 
   269     0018                     	;# 
   270     0019                     	;# 
   271     001A                     	;# 
   272     001B                     	;# 
   273     001B                     	;# 
   274     001C                     	;# 
   275     001D                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     0081                     	;# 
   279     0085                     	;# 
   280     0086                     	;# 
   281     0087                     	;# 
   282     0088                     	;# 
   283     0089                     	;# 
   284     008C                     	;# 
   285     008D                     	;# 
   286     008E                     	;# 
   287     008F                     	;# 
   288     0090                     	;# 
   289     0091                     	;# 
   290     0092                     	;# 
   291     0093                     	;# 
   292     0093                     	;# 
   293     0093                     	;# 
   294     0094                     	;# 
   295     0095                     	;# 
   296     0096                     	;# 
   297     0097                     	;# 
   298     0098                     	;# 
   299     0099                     	;# 
   300     009A                     	;# 
   301     009B                     	;# 
   302     009C                     	;# 
   303     009D                     	;# 
   304     009E                     	;# 
   305     009F                     	;# 
   306     0105                     	;# 
   307     0107                     	;# 
   308     0108                     	;# 
   309     0109                     	;# 
   310     010C                     	;# 
   311     010C                     	;# 
   312     010D                     	;# 
   313     010E                     	;# 
   314     010F                     	;# 
   315     0185                     	;# 
   316     0187                     	;# 
   317     0188                     	;# 
   318     0189                     	;# 
   319     018C                     	;# 
   320     018D                     	;# 
   321     0000                     	;# 
   322     0001                     	;# 
   323     0002                     	;# 
   324     0003                     	;# 
   325     0004                     	;# 
   326     0005                     	;# 
   327     0006                     	;# 
   328     0007                     	;# 
   329     0008                     	;# 
   330     0009                     	;# 
   331     000A                     	;# 
   332     000B                     	;# 
   333     000C                     	;# 
   334     000D                     	;# 
   335     000E                     	;# 
   336     000E                     	;# 
   337     000F                     	;# 
   338     0010                     	;# 
   339     0011                     	;# 
   340     0012                     	;# 
   341     0013                     	;# 
   342     0014                     	;# 
   343     0015                     	;# 
   344     0015                     	;# 
   345     0016                     	;# 
   346     0017                     	;# 
   347     0018                     	;# 
   348     0019                     	;# 
   349     001A                     	;# 
   350     001B                     	;# 
   351     001B                     	;# 
   352     001C                     	;# 
   353     001D                     	;# 
   354     001E                     	;# 
   355     001F                     	;# 
   356     0081                     	;# 
   357     0085                     	;# 
   358     0086                     	;# 
   359     0087                     	;# 
   360     0088                     	;# 
   361     0089                     	;# 
   362     008C                     	;# 
   363     008D                     	;# 
   364     008E                     	;# 
   365     008F                     	;# 
   366     0090                     	;# 
   367     0091                     	;# 
   368     0092                     	;# 
   369     0093                     	;# 
   370     0093                     	;# 
   371     0093                     	;# 
   372     0094                     	;# 
   373     0095                     	;# 
   374     0096                     	;# 
   375     0097                     	;# 
   376     0098                     	;# 
   377     0099                     	;# 
   378     009A                     	;# 
   379     009B                     	;# 
   380     009C                     	;# 
   381     009D                     	;# 
   382     009E                     	;# 
   383     009F                     	;# 
   384     0105                     	;# 
   385     0107                     	;# 
   386     0108                     	;# 
   387     0109                     	;# 
   388     010C                     	;# 
   389     010C                     	;# 
   390     010D                     	;# 
   391     010E                     	;# 
   392     010F                     	;# 
   393     0185                     	;# 
   394     0187                     	;# 
   395     0188                     	;# 
   396     0189                     	;# 
   397     018C                     	;# 
   398     018D                     	;# 
   399     0000                     	;# 
   400     0001                     	;# 
   401     0002                     	;# 
   402     0003                     	;# 
   403     0004                     	;# 
   404     0005                     	;# 
   405     0006                     	;# 
   406     0007                     	;# 
   407     0008                     	;# 
   408     0009                     	;# 
   409     000A                     	;# 
   410     000B                     	;# 
   411     000C                     	;# 
   412     000D                     	;# 
   413     000E                     	;# 
   414     000E                     	;# 
   415     000F                     	;# 
   416     0010                     	;# 
   417     0011                     	;# 
   418     0012                     	;# 
   419     0013                     	;# 
   420     0014                     	;# 
   421     0015                     	;# 
   422     0015                     	;# 
   423     0016                     	;# 
   424     0017                     	;# 
   425     0018                     	;# 
   426     0019                     	;# 
   427     001A                     	;# 
   428     001B                     	;# 
   429     001B                     	;# 
   430     001C                     	;# 
   431     001D                     	;# 
   432     001E                     	;# 
   433     001F                     	;# 
   434     0081                     	;# 
   435     0085                     	;# 
   436     0086                     	;# 
   437     0087                     	;# 
   438     0088                     	;# 
   439     0089                     	;# 
   440     008C                     	;# 
   441     008D                     	;# 
   442     008E                     	;# 
   443     008F                     	;# 
   444     0090                     	;# 
   445     0091                     	;# 
   446     0092                     	;# 
   447     0093                     	;# 
   448     0093                     	;# 
   449     0093                     	;# 
   450     0094                     	;# 
   451     0095                     	;# 
   452     0096                     	;# 
   453     0097                     	;# 
   454     0098                     	;# 
   455     0099                     	;# 
   456     009A                     	;# 
   457     009B                     	;# 
   458     009C                     	;# 
   459     009D                     	;# 
   460     009E                     	;# 
   461     009F                     	;# 
   462     0105                     	;# 
   463     0107                     	;# 
   464     0108                     	;# 
   465     0109                     	;# 
   466     010C                     	;# 
   467     010C                     	;# 
   468     010D                     	;# 
   469     010E                     	;# 
   470     010F                     	;# 
   471     0185                     	;# 
   472     0187                     	;# 
   473     0188                     	;# 
   474     0189                     	;# 
   475     018C                     	;# 
   476     018D                     	;# 
   477                           
   478                           	psect	strings
   479     1800                     __pstrings:
   480     1800                     stringtab:
   481     1800                     __stringtab:
   482                           
   483                           ;	String table - string pointers are 1 byte each
   484     1800  1BFF               	btfsc	btemp+1,7
   485     1801  280A               	ljmp	stringcode
   486     1802  1383               	bcf	3,7
   487     1803  187F               	btfsc	btemp+1,0
   488     1804  1783               	bsf	3,7
   489     1805  0800               	movf	0,w
   490     1806  0A84               	incf	4,f
   491     1807  1903               	skipnz
   492     1808  0AFF               	incf	btemp+1,f
   493     1809  0008               	return
   494     180A                     stringcode:
   495     180A                     stringdir:
   496     180A  3018               	movlw	high stringdir
   497     180B  008A               	movwf	10
   498     180C  0804               	movf	4,w
   499     180D  0A84               	incf	4,f
   500     180E  0782               	addwf	2,f
   501     180F                     __stringbase:
   502     180F  3400               	retlw	0
   503     1810                     __end_of__stringtab:
   504     1810                     __powers_:
   505     1810  3400               	retlw	0
   506     1811  3400               	retlw	0
   507     1812  3480               	retlw	128
   508     1813  343F               	retlw	63
   509     1814  3400               	retlw	0
   510     1815  3400               	retlw	0
   511     1816  3420               	retlw	32
   512     1817  3441               	retlw	65
   513     1818  3400               	retlw	0
   514     1819  3400               	retlw	0
   515     181A  34C8               	retlw	200
   516     181B  3442               	retlw	66
   517     181C  3400               	retlw	0
   518     181D  3400               	retlw	0
   519     181E  347A               	retlw	122
   520     181F  3444               	retlw	68
   521     1820  3400               	retlw	0
   522     1821  3440               	retlw	64
   523     1822  341C               	retlw	28
   524     1823  3446               	retlw	70
   525     1824  3400               	retlw	0
   526     1825  3450               	retlw	80
   527     1826  34C3               	retlw	195
   528     1827  3447               	retlw	71
   529     1828  3400               	retlw	0
   530     1829  3424               	retlw	36
   531     182A  3474               	retlw	116
   532     182B  3449               	retlw	73
   533     182C  3480               	retlw	128
   534     182D  3496               	retlw	150
   535     182E  3418               	retlw	24
   536     182F  344B               	retlw	75
   537     1830  3420               	retlw	32
   538     1831  34BC               	retlw	188
   539     1832  34BE               	retlw	190
   540     1833  344C               	retlw	76
   541     1834  3428               	retlw	40
   542     1835  346B               	retlw	107
   543     1836  346E               	retlw	110
   544     1837  344E               	retlw	78
   545     1838  34F9               	retlw	249
   546     1839  3402               	retlw	2
   547     183A  3415               	retlw	21
   548     183B  3450               	retlw	80
   549     183C  34EC               	retlw	236
   550     183D  3478               	retlw	120
   551     183E  34AD               	retlw	173
   552     183F  3460               	retlw	96
   553     1840  34CA               	retlw	202
   554     1841  34F2               	retlw	242
   555     1842  3449               	retlw	73
   556     1843  3471               	retlw	113
   557     1844                     __end_of__powers_:
   558     1844                     __npowers_:
   559     1844  3400               	retlw	0
   560     1845  3400               	retlw	0
   561     1846  3480               	retlw	128
   562     1847  343F               	retlw	63
   563     1848  34CD               	retlw	205
   564     1849  34CC               	retlw	204
   565     184A  34CC               	retlw	204
   566     184B  343D               	retlw	61
   567     184C  340A               	retlw	10
   568     184D  34D7               	retlw	215
   569     184E  3423               	retlw	35
   570     184F  343C               	retlw	60
   571     1850  346F               	retlw	111
   572     1851  3412               	retlw	18
   573     1852  3483               	retlw	131
   574     1853  343A               	retlw	58
   575     1854  3417               	retlw	23
   576     1855  34B7               	retlw	183
   577     1856  34D1               	retlw	209
   578     1857  3438               	retlw	56
   579     1858  34AC               	retlw	172
   580     1859  34C5               	retlw	197
   581     185A  3427               	retlw	39
   582     185B  3437               	retlw	55
   583     185C  34BD               	retlw	189
   584     185D  3437               	retlw	55
   585     185E  3486               	retlw	134
   586     185F  3435               	retlw	53
   587     1860  3495               	retlw	149
   588     1861  34BF               	retlw	191
   589     1862  34D6               	retlw	214
   590     1863  3433               	retlw	51
   591     1864  3477               	retlw	119
   592     1865  34CC               	retlw	204
   593     1866  342B               	retlw	43
   594     1867  3432               	retlw	50
   595     1868  345F               	retlw	95
   596     1869  3470               	retlw	112
   597     186A  3489               	retlw	137
   598     186B  3430               	retlw	48
   599     186C  34FF               	retlw	255
   600     186D  34E6               	retlw	230
   601     186E  34DB               	retlw	219
   602     186F  342E               	retlw	46
   603     1870  3408               	retlw	8
   604     1871  34E5               	retlw	229
   605     1872  343C               	retlw	60
   606     1873  341E               	retlw	30
   607     1874  3460               	retlw	96
   608     1875  3442               	retlw	66
   609     1876  34A2               	retlw	162
   610     1877  340D               	retlw	13
   611     1878                     __end_of__npowers_:
   612     1878                     _dpowers:
   613     1878  3401               	retlw	1
   614     1879  3400               	retlw	0
   615     187A  3400               	retlw	0
   616     187B  3400               	retlw	0
   617     187C  340A               	retlw	10
   618     187D  3400               	retlw	0
   619     187E  3400               	retlw	0
   620     187F  3400               	retlw	0
   621     1880  3464               	retlw	100
   622     1881  3400               	retlw	0
   623     1882  3400               	retlw	0
   624     1883  3400               	retlw	0
   625     1884  34E8               	retlw	232
   626     1885  3403               	retlw	3
   627     1886  3400               	retlw	0
   628     1887  3400               	retlw	0
   629     1888  3410               	retlw	16
   630     1889  3427               	retlw	39
   631     188A  3400               	retlw	0
   632     188B  3400               	retlw	0
   633     188C  34A0               	retlw	160
   634     188D  3486               	retlw	134
   635     188E  3401               	retlw	1
   636     188F  3400               	retlw	0
   637     1890  3440               	retlw	64
   638     1891  3442               	retlw	66
   639     1892  340F               	retlw	15
   640     1893  3400               	retlw	0
   641     1894  3480               	retlw	128
   642     1895  3496               	retlw	150
   643     1896  3498               	retlw	152
   644     1897  3400               	retlw	0
   645     1898  3400               	retlw	0
   646     1899  34E1               	retlw	225
   647     189A  34F5               	retlw	245
   648     189B  3405               	retlw	5
   649     189C  3400               	retlw	0
   650     189D  34CA               	retlw	202
   651     189E  349A               	retlw	154
   652     189F  343B               	retlw	59
   653     18A0                     __end_of_dpowers:
   654     0013                     _SSPBUF	set	19
   655     0014                     _SSPCON	set	20
   656     0008                     _PORTDbits	set	8
   657     0006                     _PORTB	set	6
   658     0008                     _PORTD	set	8
   659     0007                     _PORTCbits	set	7
   660     0043                     _RD3	set	67
   661     0047                     _RD7	set	71
   662     0046                     _RD6	set	70
   663     0045                     _RD5	set	69
   664     0044                     _RD4	set	68
   665     0094                     _SSPSTATbits	set	148
   666     0094                     _SSPSTAT	set	148
   667     008F                     _OSCCONbits	set	143
   668     0087                     _TRISCbits	set	135
   669     0087                     _TRISC	set	135
   670     0086                     _TRISB	set	134
   671     0088                     _TRISD	set	136
   672     043B                     _TRISC3	set	1083
   673     043D                     _TRISC5	set	1085
   674     0189                     _ANSELH	set	393
   675     0188                     _ANSEL	set	392
   676     18A0                     STR_1:
   677     18A0  3453               	retlw	83	;'S'
   678     18A1  3431               	retlw	49	;'1'
   679     18A2  343A               	retlw	58	;':'
   680     18A3  3420               	retlw	32	;' '
   681     18A4  3420               	retlw	32	;' '
   682     18A5  3420               	retlw	32	;' '
   683     18A6  3453               	retlw	83	;'S'
   684     18A7  3432               	retlw	50	;'2'
   685     18A8  343A               	retlw	58	;':'
   686     18A9  3420               	retlw	32	;' '
   687     18AA  3420               	retlw	32	;' '
   688     18AB  3420               	retlw	32	;' '
   689     18AC  3453               	retlw	83	;'S'
   690     18AD  3433               	retlw	51	;'3'
   691     18AE  343A               	retlw	58	;':'
   692     18AF  3400               	retlw	0
   693     18B0                     STR_2:
   694     18B0  3425               	retlw	37	;'%'
   695     18B1  342E               	retlw	46	;'.'
   696     18B2  3432               	retlw	50	;'2'
   697     18B3  3466               	retlw	102	;'f'
   698     18B4  3400               	retlw	0
   699     18B0                     
   700                           	psect	cinit
   701     07EB                     start_initialization:	
   702                           ; #config settings
   703                           
   704     07EB                     __initialization:
   705                           
   706                           ; Clear objects allocated to BANK0
   707     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   708     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   709     07ED  01EE               	clrf	__pbssBANK0& (0+127)
   710                           
   711                           ; Clear objects allocated to BANK1
   712     07EE  1683               	bsf	3,5	;RP0=1, select bank1
   713     07EF  1303               	bcf	3,6	;RP1=0, select bank1
   714     07F0  01C7               	clrf	__pbssBANK1& (0+127)
   715     07F1  01C8               	clrf	(__pbssBANK1+1)& (0+127)
   716     07F2  01C9               	clrf	(__pbssBANK1+2)& (0+127)
   717     07F3  01CA               	clrf	(__pbssBANK1+3)& (0+127)
   718     07F4  01CB               	clrf	(__pbssBANK1+4)& (0+127)
   719     07F5  01CC               	clrf	(__pbssBANK1+5)& (0+127)
   720     07F6  01CD               	clrf	(__pbssBANK1+6)& (0+127)
   721     07F7  01CE               	clrf	(__pbssBANK1+7)& (0+127)
   722     07F8  01CF               	clrf	(__pbssBANK1+8)& (0+127)
   723     07F9  01D0               	clrf	(__pbssBANK1+9)& (0+127)
   724     07FA  01D1               	clrf	(__pbssBANK1+10)& (0+127)
   725     07FB  01D2               	clrf	(__pbssBANK1+11)& (0+127)
   726     07FC                     end_of_initialization:	
   727                           ;End of C runtime variable initialization code
   728                           
   729     07FC                     __end_of__initialization:
   730     07FC  0183               	clrf	3
   731     07FD  120A  118A  2851   	ljmp	_main	;jump to C main() function
   732                           
   733                           	psect	bssBANK0
   734     006E                     __pbssBANK0:
   735     006E                     _cont:
   736     006E                     	ds	1
   737                           
   738                           	psect	bssBANK1
   739     00C7                     __pbssBANK1:
   740     00C7                     _conver:
   741     00C7                     	ds	4
   742     00CB                     _contador:
   743     00CB                     	ds	3
   744     00CE                     _lecADC2:
   745     00CE                     	ds	1
   746     00CF                     _lecADC:
   747     00CF                     	ds	1
   748     00D0                     _valADC:
   749     00D0                     	ds	3
   750                           
   751                           	psect	cstackBANK1
   752     00A0                     __pcstackBANK1:
   753     00A0                     ?_sprintf:
   754     00A0                     sprintf@f:	
   755                           ; 2 bytes @ 0x0
   756                           
   757                           
   758                           ; 1 bytes @ 0x0
   759     00A0                     	ds	5
   760     00A5                     ??_sprintf:
   761                           
   762                           ; 1 bytes @ 0x5
   763     00A5                     	ds	5
   764     00AA                     _sprintf$1093:
   765                           
   766                           ; 4 bytes @ 0xA
   767     00AA                     	ds	4
   768     00AE                     sprintf@ap:
   769                           
   770                           ; 1 bytes @ 0xE
   771     00AE                     	ds	1
   772     00AF                     sprintf@flag:
   773                           
   774                           ; 2 bytes @ 0xF
   775     00AF                     	ds	2
   776     00B1                     sprintf@val:
   777                           
   778                           ; 4 bytes @ 0x11
   779     00B1                     	ds	4
   780     00B5                     sprintf@eexp:
   781                           
   782                           ; 2 bytes @ 0x15
   783     00B5                     	ds	2
   784     00B7                     sprintf@tmpval:
   785                           
   786                           ; 4 bytes @ 0x17
   787     00B7                     	ds	4
   788     00BB                     sprintf@sp:
   789                           
   790                           ; 1 bytes @ 0x1B
   791     00BB                     	ds	1
   792     00BC                     sprintf@prec:
   793                           
   794                           ; 2 bytes @ 0x1C
   795     00BC                     	ds	2
   796     00BE                     sprintf@fval:
   797                           
   798                           ; 4 bytes @ 0x1E
   799     00BE                     	ds	4
   800     00C2                     sprintf@c:
   801                           
   802                           ; 1 bytes @ 0x22
   803     00C2                     	ds	1
   804     00C3                     ??_main:
   805                           
   806                           ; 1 bytes @ 0x23
   807     00C3                     	ds	4
   808                           
   809                           	psect	cstackCOMMON
   810     0070                     __pcstackCOMMON:
   811     0070                     ?_isdigit:
   812     0070                     ?___fleq:	
   813                           ; 1 bit 
   814                           
   815     0070                     ?___flge:	
   816                           ; 1 bit 
   817                           
   818     0070                     ?_setupINTOSC:	
   819                           ; 1 bit 
   820                           
   821     0070                     ??_setupINTOSC:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0070                     ?_portsetup:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0070                     ?_Lcd_Init:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0070                     ?_Lcd_Clear:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0070                     ?_spiWrite:	
   834                           ; 1 bytes @ 0x0
   835                           
   836     0070                     ??_spiWrite:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0070                     ?_spiRead:	
   840                           ; 1 bytes @ 0x0
   841                           
   842     0070                     ??_spiRead:	
   843                           ; 1 bytes @ 0x0
   844                           
   845     0070                     ?_spiInit:	
   846                           ; 1 bytes @ 0x0
   847                           
   848     0070                     ??_isdigit:	
   849                           ; 1 bytes @ 0x0
   850                           
   851     0070                     ?_main:	
   852                           ; 1 bytes @ 0x0
   853                           
   854     0070                     ?_Lcd_Port:	
   855                           ; 1 bytes @ 0x0
   856                           
   857     0070                     ??_Lcd_Port:	
   858                           ; 1 bytes @ 0x0
   859                           
   860     0070                     ?_Lcd_Cmd:	
   861                           ; 1 bytes @ 0x0
   862                           
   863     0070                     ?_Lcd_Write_Char:	
   864                           ; 1 bytes @ 0x0
   865                           
   866     0070                     ?_spiReceiveWait:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0070                     ??_spiReceiveWait:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0070                     ?__Umul8_16:	
   873                           ; 1 bytes @ 0x0
   874                           
   875     0070                     ?___wmul:	
   876                           ; 2 bytes @ 0x0
   877                           
   878     0070                     ?___awmod:	
   879                           ; 2 bytes @ 0x0
   880                           
   881     0070                     ?___lwmod:	
   882                           ; 2 bytes @ 0x0
   883                           
   884     0070                     ?__tdiv_to_l_:	
   885                           ; 2 bytes @ 0x0
   886                           
   887     0070                     ?__div_to_l_:	
   888                           ; 4 bytes @ 0x0
   889                           
   890     0070                     ?___lldiv:	
   891                           ; 4 bytes @ 0x0
   892                           
   893     0070                     ?___flneg:	
   894                           ; 4 bytes @ 0x0
   895                           
   896     0070                     ?___llmod:	
   897                           ; 4 bytes @ 0x0
   898                           
   899     0070                     ?___xxtofl:	
   900                           ; 4 bytes @ 0x0
   901                           
   902     0070                     Lcd_Port@a:	
   903                           ; 4 bytes @ 0x0
   904                           
   905     0070                     setupINTOSC@IRCF:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     spiInit@sDataSample:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     spiWrite@dat:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     __Umul8_16@multiplicand:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     _isdigit$907:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ___wmul@multiplier:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     ___awmod@divisor:	
   924                           ; 2 bytes @ 0x0
   925                           
   926     0070                     ___lwmod@divisor:	
   927                           ; 2 bytes @ 0x0
   928                           
   929     0070                     ___lldiv@divisor:	
   930                           ; 2 bytes @ 0x0
   931                           
   932     0070                     __div_to_l_@f1:	
   933                           ; 4 bytes @ 0x0
   934                           
   935     0070                     ___fleq@ff1:	
   936                           ; 4 bytes @ 0x0
   937                           
   938     0070                     ___flge@ff1:	
   939                           ; 4 bytes @ 0x0
   940                           
   941     0070                     ___flneg@f1:	
   942                           ; 4 bytes @ 0x0
   943                           
   944     0070                     __tdiv_to_l_@f1:	
   945                           ; 4 bytes @ 0x0
   946                           
   947     0070                     ___llmod@divisor:	
   948                           ; 4 bytes @ 0x0
   949                           
   950     0070                     ___xxtofl@val:	
   951                           ; 4 bytes @ 0x0
   952                           
   953                           
   954                           ; 4 bytes @ 0x0
   955     0070                     	ds	1
   956     0071                     ??_Lcd_Cmd:
   957     0071                     ??_Lcd_Write_Char:	
   958                           ; 1 bytes @ 0x1
   959                           
   960     0071                     spiInit@sClockIdle:	
   961                           ; 1 bytes @ 0x1
   962                           
   963     0071                     isdigit@c:	
   964                           ; 1 bytes @ 0x1
   965                           
   966                           
   967                           ; 1 bytes @ 0x1
   968     0071                     	ds	1
   969     0072                     ??__Umul8_16:
   970     0072                     Lcd_Write_Char@temp:	
   971                           ; 1 bytes @ 0x2
   972                           
   973     0072                     spiInit@sTransmitEdge:	
   974                           ; 1 bytes @ 0x2
   975                           
   976     0072                     ___wmul@multiplicand:	
   977                           ; 1 bytes @ 0x2
   978                           
   979     0072                     ___awmod@dividend:	
   980                           ; 2 bytes @ 0x2
   981                           
   982     0072                     ___lwmod@dividend:	
   983                           ; 2 bytes @ 0x2
   984                           
   985                           
   986                           ; 2 bytes @ 0x2
   987     0072                     	ds	1
   988     0073                     ??_spiInit:
   989     0073                     Lcd_Cmd@a:	
   990                           ; 1 bytes @ 0x3
   991                           
   992     0073                     Lcd_Write_Char@y:	
   993                           ; 1 bytes @ 0x3
   994                           
   995     0073                     spiInit@sType:	
   996                           ; 1 bytes @ 0x3
   997                           
   998                           
   999                           ; 1 bytes @ 0x3
  1000     0073                     	ds	1
  1001     0074                     ??_portsetup:
  1002     0074                     ??_Lcd_Init:	
  1003                           ; 1 bytes @ 0x4
  1004                           
  1005     0074                     ??_Lcd_Clear:	
  1006                           ; 1 bytes @ 0x4
  1007                           
  1008     0074                     ?_Lcd_Set_Cursor:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011     0074                     ??___wmul:	
  1012                           ; 1 bytes @ 0x4
  1013                           
  1014     0074                     ??___awmod:	
  1015                           ; 1 bytes @ 0x4
  1016                           
  1017     0074                     ??___flneg:	
  1018                           ; 1 bytes @ 0x4
  1019                           
  1020     0074                     ??___lwmod:	
  1021                           ; 1 bytes @ 0x4
  1022                           
  1023     0074                     ??___xxtofl:	
  1024                           ; 1 bytes @ 0x4
  1025                           
  1026     0074                     Lcd_Set_Cursor@b:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029     0074                     Lcd_Write_Char@a:	
  1030                           ; 1 bytes @ 0x4
  1031                           
  1032     0074                     ___wmul@product:	
  1033                           ; 1 bytes @ 0x4
  1034                           
  1035     0074                     __Umul8_16@product:	
  1036                           ; 2 bytes @ 0x4
  1037                           
  1038     0074                     ___lldiv@dividend:	
  1039                           ; 2 bytes @ 0x4
  1040                           
  1041     0074                     __div_to_l_@f2:	
  1042                           ; 4 bytes @ 0x4
  1043                           
  1044     0074                     ___fleq@ff2:	
  1045                           ; 4 bytes @ 0x4
  1046                           
  1047     0074                     ___flge@ff2:	
  1048                           ; 4 bytes @ 0x4
  1049                           
  1050     0074                     __tdiv_to_l_@f2:	
  1051                           ; 4 bytes @ 0x4
  1052                           
  1053     0074                     ___llmod@dividend:	
  1054                           ; 4 bytes @ 0x4
  1055                           
  1056                           
  1057                           ; 4 bytes @ 0x4
  1058     0074                     	ds	1
  1059     0075                     ??_Lcd_Set_Cursor:
  1060     0075                     ?_Lcd_Write_String:	
  1061                           ; 1 bytes @ 0x5
  1062                           
  1063     0075                     ___awmod@counter:	
  1064                           ; 1 bytes @ 0x5
  1065                           
  1066     0075                     ___lwmod@counter:	
  1067                           ; 1 bytes @ 0x5
  1068                           
  1069     0075                     Lcd_Write_String@a:	
  1070                           ; 1 bytes @ 0x5
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x5
  1074     0075                     	ds	1
  1075     0076                     ?___lwdiv:
  1076     0076                     Lcd_Set_Cursor@a:	
  1077                           ; 2 bytes @ 0x6
  1078                           
  1079     0076                     ___awmod@sign:	
  1080                           ; 1 bytes @ 0x6
  1081                           
  1082     0076                     ___lwdiv@divisor:	
  1083                           ; 1 bytes @ 0x6
  1084                           
  1085     0076                     __Umul8_16@word_mpld:	
  1086                           ; 2 bytes @ 0x6
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0x6
  1090     0076                     	ds	1
  1091     0077                     ??_Lcd_Write_String:
  1092     0077                     ?___awdiv:	
  1093                           ; 1 bytes @ 0x7
  1094                           
  1095     0077                     Lcd_Set_Cursor@z:	
  1096                           ; 2 bytes @ 0x7
  1097                           
  1098     0077                     ___awdiv@divisor:	
  1099                           ; 1 bytes @ 0x7
  1100                           
  1101                           
  1102                           ; 2 bytes @ 0x7
  1103     0077                     	ds	1
  1104     0078                     ??__tdiv_to_l_:
  1105     0078                     ??__div_to_l_:	
  1106                           ; 1 bytes @ 0x8
  1107                           
  1108     0078                     ??___lldiv:	
  1109                           ; 1 bytes @ 0x8
  1110                           
  1111     0078                     ??___fleq:	
  1112                           ; 1 bytes @ 0x8
  1113                           
  1114     0078                     ??___flge:	
  1115                           ; 1 bytes @ 0x8
  1116                           
  1117     0078                     ??___llmod:	
  1118                           ; 1 bytes @ 0x8
  1119                           
  1120     0078                     Lcd_Set_Cursor@y:	
  1121                           ; 1 bytes @ 0x8
  1122                           
  1123     0078                     __Umul8_16@multiplier:	
  1124                           ; 1 bytes @ 0x8
  1125                           
  1126     0078                     ___xxtofl@sign:	
  1127                           ; 1 bytes @ 0x8
  1128                           
  1129     0078                     ___lwdiv@dividend:	
  1130                           ; 1 bytes @ 0x8
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x8
  1134     0078                     	ds	1
  1135     0079                     Lcd_Set_Cursor@temp:
  1136     0079                     ___llmod@counter:	
  1137                           ; 1 bytes @ 0x9
  1138                           
  1139     0079                     ___xxtofl@exp:	
  1140                           ; 1 bytes @ 0x9
  1141                           
  1142     0079                     ___awdiv@dividend:	
  1143                           ; 1 bytes @ 0x9
  1144                           
  1145     0079                     ___lldiv@quotient:	
  1146                           ; 2 bytes @ 0x9
  1147                           
  1148                           
  1149                           ; 4 bytes @ 0x9
  1150     0079                     	ds	1
  1151     007A                     ??___lwdiv:
  1152     007A                     Lcd_Write_String@i:	
  1153                           ; 1 bytes @ 0xA
  1154                           
  1155     007A                     ___xxtofl@arg:	
  1156                           ; 2 bytes @ 0xA
  1157                           
  1158                           
  1159                           ; 4 bytes @ 0xA
  1160     007A                     	ds	1
  1161     007B                     ??___awdiv:
  1162     007B                     ___lwdiv@quotient:	
  1163                           ; 1 bytes @ 0xB
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0xB
  1167     007B                     	ds	2
  1168     007D                     ___lldiv@counter:
  1169     007D                     ___lwdiv@counter:	
  1170                           ; 1 bytes @ 0xD
  1171                           
  1172                           
  1173                           ; 1 bytes @ 0xD
  1174     007D                     	ds	1
  1175     007E                     ??___flsub:
  1176                           
  1177                           	psect	cstackBANK0
  1178     0020                     __pcstackBANK0:	
  1179                           ; 1 bytes @ 0xE
  1180                           
  1181     0020                     ___awdiv@counter:
  1182     0020                     __div_to_l_@quot:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185     0020                     __tdiv_to_l_@quot:	
  1186                           ; 4 bytes @ 0x0
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x0
  1190     0020                     	ds	1
  1191     0021                     ___awdiv@sign:
  1192                           
  1193                           ; 1 bytes @ 0x1
  1194     0021                     	ds	1
  1195     0022                     ___awdiv@quotient:
  1196                           
  1197                           ; 2 bytes @ 0x2
  1198     0022                     	ds	2
  1199     0024                     ?___flmul:
  1200     0024                     __div_to_l_@cntr:	
  1201                           ; 4 bytes @ 0x4
  1202                           
  1203     0024                     __tdiv_to_l_@cntr:	
  1204                           ; 1 bytes @ 0x4
  1205                           
  1206     0024                     ___flmul@b:	
  1207                           ; 1 bytes @ 0x4
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0x4
  1211     0024                     	ds	1
  1212     0025                     __div_to_l_@exp1:
  1213     0025                     __tdiv_to_l_@exp1:	
  1214                           ; 1 bytes @ 0x5
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0x5
  1218     0025                     	ds	3
  1219     0028                     ___flmul@a:
  1220                           
  1221                           ; 4 bytes @ 0x8
  1222     0028                     	ds	4
  1223     002C                     ??___flmul:
  1224                           
  1225                           ; 1 bytes @ 0xC
  1226     002C                     	ds	5
  1227     0031                     ___flmul@sign:
  1228                           
  1229                           ; 1 bytes @ 0x11
  1230     0031                     	ds	1
  1231     0032                     ___flmul@grs:
  1232                           
  1233                           ; 4 bytes @ 0x12
  1234     0032                     	ds	4
  1235     0036                     ___flmul@aexp:
  1236                           
  1237                           ; 1 bytes @ 0x16
  1238     0036                     	ds	1
  1239     0037                     ___flmul@bexp:
  1240                           
  1241                           ; 1 bytes @ 0x17
  1242     0037                     	ds	1
  1243     0038                     ___flmul@prod:
  1244                           
  1245                           ; 4 bytes @ 0x18
  1246     0038                     	ds	4
  1247     003C                     ___flmul@temp:
  1248                           
  1249                           ; 2 bytes @ 0x1C
  1250     003C                     	ds	2
  1251     003E                     ?_fround:
  1252     003E                     ?_scale:	
  1253                           ; 4 bytes @ 0x1E
  1254                           
  1255     003E                     ?___fldiv:	
  1256                           ; 4 bytes @ 0x1E
  1257                           
  1258     003E                     ___fldiv@a:	
  1259                           ; 4 bytes @ 0x1E
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x1E
  1263     003E                     	ds	4
  1264     0042                     ??_fround:
  1265     0042                     ??_scale:	
  1266                           ; 1 bytes @ 0x22
  1267                           
  1268     0042                     ___fldiv@b:	
  1269                           ; 1 bytes @ 0x22
  1270                           
  1271                           
  1272                           ; 4 bytes @ 0x22
  1273     0042                     	ds	4
  1274     0046                     ??___fldiv:
  1275                           
  1276                           ; 1 bytes @ 0x26
  1277     0046                     	ds	3
  1278     0049                     _fround$1091:
  1279                           
  1280                           ; 4 bytes @ 0x29
  1281     0049                     	ds	2
  1282     004B                     ___fldiv@rem:
  1283                           
  1284                           ; 4 bytes @ 0x2B
  1285     004B                     	ds	1
  1286     004C                     _scale$1092:
  1287                           
  1288                           ; 4 bytes @ 0x2C
  1289     004C                     	ds	1
  1290     004D                     _fround$1090:
  1291                           
  1292                           ; 4 bytes @ 0x2D
  1293     004D                     	ds	2
  1294     004F                     ___fldiv@sign:
  1295                           
  1296                           ; 1 bytes @ 0x2F
  1297     004F                     	ds	1
  1298     0050                     scale@scl:
  1299     0050                     ___fldiv@new_exp:	
  1300                           ; 1 bytes @ 0x30
  1301                           
  1302                           
  1303                           ; 2 bytes @ 0x30
  1304     0050                     	ds	1
  1305     0051                     ?___fltol:
  1306     0051                     fround@prec:	
  1307                           ; 4 bytes @ 0x31
  1308                           
  1309     0051                     ___fltol@f1:	
  1310                           ; 1 bytes @ 0x31
  1311                           
  1312                           
  1313                           ; 4 bytes @ 0x31
  1314     0051                     	ds	1
  1315     0052                     ?___fladd:
  1316     0052                     ___fladd@b:	
  1317                           ; 4 bytes @ 0x32
  1318                           
  1319     0052                     ___fldiv@grs:	
  1320                           ; 4 bytes @ 0x32
  1321                           
  1322                           
  1323                           ; 4 bytes @ 0x32
  1324     0052                     	ds	3
  1325     0055                     ??___fltol:
  1326                           
  1327                           ; 1 bytes @ 0x35
  1328     0055                     	ds	1
  1329     0056                     ___fldiv@bexp:
  1330     0056                     ___fladd@a:	
  1331                           ; 1 bytes @ 0x36
  1332                           
  1333                           
  1334                           ; 4 bytes @ 0x36
  1335     0056                     	ds	1
  1336     0057                     ___fldiv@aexp:
  1337                           
  1338                           ; 1 bytes @ 0x37
  1339     0057                     	ds	2
  1340     0059                     ___fltol@sign1:
  1341                           
  1342                           ; 1 bytes @ 0x39
  1343     0059                     	ds	1
  1344     005A                     ??___fladd:
  1345     005A                     ___fltol@exp1:	
  1346                           ; 1 bytes @ 0x3A
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0x3A
  1350     005A                     	ds	8
  1351     0062                     ___fladd@signs:
  1352                           
  1353                           ; 1 bytes @ 0x42
  1354     0062                     	ds	1
  1355     0063                     ___fladd@aexp:
  1356                           
  1357                           ; 1 bytes @ 0x43
  1358     0063                     	ds	1
  1359     0064                     ___fladd@bexp:
  1360                           
  1361                           ; 1 bytes @ 0x44
  1362     0064                     	ds	1
  1363     0065                     ___fladd@grs:
  1364                           
  1365                           ; 1 bytes @ 0x45
  1366     0065                     	ds	1
  1367     0066                     ?___flsub:
  1368     0066                     ___flsub@a:	
  1369                           ; 4 bytes @ 0x46
  1370                           
  1371                           
  1372                           ; 4 bytes @ 0x46
  1373     0066                     	ds	4
  1374     006A                     ___flsub@b:
  1375                           
  1376                           ; 4 bytes @ 0x4A
  1377     006A                     	ds	4
  1378                           
  1379                           	psect	maintext
  1380     0051                     __pmaintext:	
  1381 ;;
  1382 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1383 ;;
  1384 ;; *************** function _main *****************
  1385 ;; Defined at:
  1386 ;;		line 56 in file "main.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : B00/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0
  1402 ;;      Temps:          0       0       4       0       0
  1403 ;;      Totals:         0       0       4       0       0
  1404 ;;Total ram usage:        4 bytes
  1405 ;; Hardware stack levels required when called: 4
  1406 ;; This function calls:
  1407 ;;		_Lcd_Clear
  1408 ;;		_Lcd_Init
  1409 ;;		_Lcd_Set_Cursor
  1410 ;;		_Lcd_Write_String
  1411 ;;		___fldiv
  1412 ;;		___flmul
  1413 ;;		___xxtofl
  1414 ;;		_portsetup
  1415 ;;		_setupINTOSC
  1416 ;;		_spiRead
  1417 ;;		_spiWrite
  1418 ;;		_sprintf
  1419 ;; This function is called by:
  1420 ;;		Startup code after reset
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424     0051                     _main:	
  1425                           ;psect for function _main
  1426                           
  1427     0051                     l3619:	
  1428                           ;incstack = 0
  1429                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1430                           
  1431                           
  1432                           ;main.c: 57:     setupINTOSC(6);
  1433     0051  3006               	movlw	6
  1434     0052  160A  158A  265A  120A  118A  	fcall	_setupINTOSC
  1435                           
  1436                           ;main.c: 58:     portsetup();
  1437     0057  160A  158A  23DE  120A  118A  	fcall	_portsetup
  1438                           
  1439                           ;main.c: 59:     Lcd_Init();
  1440     005C  160A  158A  25FD  120A  118A  	fcall	_Lcd_Init
  1441                           
  1442                           ;main.c: 60:     Lcd_Clear();
  1443     0061  160A  158A  236D  120A  118A  	fcall	_Lcd_Clear
  1444                           
  1445                           ;main.c: 61:     Lcd_Set_Cursor(1,2);
  1446     0066  3002               	movlw	2
  1447     0067  00F4               	movwf	Lcd_Set_Cursor@b
  1448     0068  3001               	movlw	1
  1449     0069  160A  158A  2563  120A  118A  	fcall	_Lcd_Set_Cursor
  1450     006E                     l3621:
  1451                           
  1452                           ;main.c: 62:     Lcd_Write_String("S1:   S2:   S3:");
  1453     006E  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1454     006F  00F5               	movwf	Lcd_Write_String@a
  1455     0070  3080               	movlw	128
  1456     0071  00F6               	movwf	Lcd_Write_String@a+1
  1457     0072  160A  158A  24DD  120A  118A  	fcall	_Lcd_Write_String
  1458     0077                     l3623:
  1459                           
  1460                           ;main.c: 66:         PORTCbits.RC2 = 0;
  1461     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1462     0078  1303               	bcf	3,6	;RP1=0, select bank0
  1463     0079  1107               	bcf	7,2	;volatile
  1464     007A                     l3625:
  1465                           
  1466                           ;main.c: 67:         PORTCbits.RC1 = 1;
  1467     007A  1487               	bsf	7,1	;volatile
  1468     007B                     l3627:
  1469                           
  1470                           ;main.c: 68:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1471     007B  30C7               	movlw	199
  1472     007C  1683               	bsf	3,5	;RP0=1, select bank1
  1473     007D  1303               	bcf	3,6	;RP1=0, select bank1
  1474     007E  00C3               	movwf	??_main^(0+128)
  1475     007F                     u6197:
  1476     007F  2880               	nop2
  1477     0080  0BC3               	decfsz	??_main^(0+128),f
  1478     0081  287F               	goto	u6197
  1479     0082  2883               	nop2
  1480     0083                     l3629:
  1481                           
  1482                           ;main.c: 69:         spiWrite(0);
  1483     0083  3000               	movlw	0
  1484     0084  160A  158A  234C  120A  118A  	fcall	_spiWrite
  1485     0089                     l3631:
  1486                           
  1487                           ;main.c: 70:         lecADC = spiRead();
  1488     0089  160A  158A  2359  120A  118A  	fcall	_spiRead
  1489     008E  1683               	bsf	3,5	;RP0=1, select bank1
  1490     008F  1303               	bcf	3,6	;RP1=0, select bank1
  1491     0090  00CF               	movwf	_lecADC^(0+128)
  1492     0091                     l3633:
  1493                           
  1494                           ;main.c: 72:         PORTCbits.RC2 = 1;
  1495     0091  1283               	bcf	3,5	;RP0=0, select bank0
  1496     0092  1303               	bcf	3,6	;RP1=0, select bank0
  1497     0093  1507               	bsf	7,2	;volatile
  1498     0094                     l3635:
  1499                           
  1500                           ;main.c: 73:         PORTCbits.RC1 = 0;
  1501     0094  1087               	bcf	7,1	;volatile
  1502     0095                     l3637:
  1503                           
  1504                           ;main.c: 74:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1505     0095  30C7               	movlw	199
  1506     0096  1683               	bsf	3,5	;RP0=1, select bank1
  1507     0097  1303               	bcf	3,6	;RP1=0, select bank1
  1508     0098  00C3               	movwf	??_main^(0+128)
  1509     0099                     u6207:
  1510     0099  289A               	nop2
  1511     009A  0BC3               	decfsz	??_main^(0+128),f
  1512     009B  2899               	goto	u6207
  1513     009C  289D               	nop2
  1514     009D                     l3639:
  1515                           
  1516                           ;main.c: 75:         spiWrite(0);
  1517     009D  3000               	movlw	0
  1518     009E  160A  158A  234C  120A  118A  	fcall	_spiWrite
  1519     00A3                     l3641:
  1520                           
  1521                           ;main.c: 76:         lecADC2 = spiRead();
  1522     00A3  160A  158A  2359  120A  118A  	fcall	_spiRead
  1523     00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1524     00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1525     00AA  00CE               	movwf	_lecADC2^(0+128)
  1526     00AB                     l3643:
  1527                           
  1528                           ;main.c: 86:         conver = (lecADC*5.0)/255;
  1529     00AB  3043               	movlw	67
  1530     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1531     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1532     00AE  00C1               	movwf	___fldiv@a+3
  1533     00AF  307F               	movlw	127
  1534     00B0  00C0               	movwf	___fldiv@a+2
  1535     00B1  3000               	movlw	0
  1536     00B2  00BF               	movwf	___fldiv@a+1
  1537     00B3  3000               	movlw	0
  1538     00B4  00BE               	movwf	___fldiv@a
  1539     00B5  3040               	movlw	64
  1540     00B6  00A7               	movwf	___flmul@b+3
  1541     00B7  30A0               	movlw	160
  1542     00B8  00A6               	movwf	___flmul@b+2
  1543     00B9  3000               	movlw	0
  1544     00BA  00A5               	movwf	___flmul@b+1
  1545     00BB  3000               	movlw	0
  1546     00BC  00A4               	movwf	___flmul@b
  1547     00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1548     00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1549     00BF  084F               	movf	_lecADC^(0+128),w
  1550     00C0  00C3               	movwf	??_main^(0+128)
  1551     00C1  01C4               	clrf	(??_main^(0+128)+1)
  1552     00C2  01C5               	clrf	(??_main^(0+128)+2)
  1553     00C3  01C6               	clrf	(??_main^(0+128)+3)
  1554     00C4  0846               	movf	(??_main+3)^(0+128),w
  1555     00C5  00F3               	movwf	___xxtofl@val+3
  1556     00C6  0845               	movf	(??_main+2)^(0+128),w
  1557     00C7  00F2               	movwf	___xxtofl@val+2
  1558     00C8  0844               	movf	(??_main+1)^(0+128),w
  1559     00C9  00F1               	movwf	___xxtofl@val+1
  1560     00CA  0843               	movf	??_main^(0+128),w
  1561     00CB  00F0               	movwf	___xxtofl@val
  1562     00CC  3001               	movlw	1
  1563     00CD  160A  118A  2112  120A  118A  	fcall	___xxtofl
  1564     00D2  0873               	movf	?___xxtofl+3,w
  1565     00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1566     00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1567     00D5  00AB               	movwf	___flmul@a+3
  1568     00D6  0872               	movf	?___xxtofl+2,w
  1569     00D7  00AA               	movwf	___flmul@a+2
  1570     00D8  0871               	movf	?___xxtofl+1,w
  1571     00D9  00A9               	movwf	___flmul@a+1
  1572     00DA  0870               	movf	?___xxtofl,w
  1573     00DB  00A8               	movwf	___flmul@a
  1574     00DC  120A  158A  215C  120A  118A  	fcall	___flmul
  1575     00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1576     00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1577     00E3  0827               	movf	?___flmul+3,w
  1578     00E4  00C5               	movwf	___fldiv@b+3
  1579     00E5  0826               	movf	?___flmul+2,w
  1580     00E6  00C4               	movwf	___fldiv@b+2
  1581     00E7  0825               	movf	?___flmul+1,w
  1582     00E8  00C3               	movwf	___fldiv@b+1
  1583     00E9  0824               	movf	?___flmul,w
  1584     00EA  00C2               	movwf	___fldiv@b
  1585     00EB  160A  118A  21CA  120A  118A  	fcall	___fldiv
  1586     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1587     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1588     00F2  0841               	movf	?___fldiv+3,w
  1589     00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1590     00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1591     00F5  00CA               	movwf	(_conver+3)^(0+128)
  1592     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1593     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1594     00F8  0840               	movf	?___fldiv+2,w
  1595     00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1596     00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1597     00FB  00C9               	movwf	(_conver+2)^(0+128)
  1598     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1599     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1600     00FE  083F               	movf	?___fldiv+1,w
  1601     00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1602     0100  1303               	bcf	3,6	;RP1=0, select bank1
  1603     0101  00C8               	movwf	(_conver+1)^(0+128)
  1604     0102  1283               	bcf	3,5	;RP0=0, select bank0
  1605     0103  1303               	bcf	3,6	;RP1=0, select bank0
  1606     0104  083E               	movf	?___fldiv,w
  1607     0105  1683               	bsf	3,5	;RP0=1, select bank1
  1608     0106  1303               	bcf	3,6	;RP1=0, select bank1
  1609     0107  00C7               	movwf	_conver^(0+128)
  1610     0108                     l3645:
  1611                           
  1612                           ;main.c: 87:         sprintf(valADC, "%.2f", conver);
  1613     0108  30A1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1614     0109  00A0               	movwf	sprintf@f^(0+128)
  1615     010A  084A               	movf	(_conver+3)^(0+128),w
  1616     010B  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1617     010C  0849               	movf	(_conver+2)^(0+128),w
  1618     010D  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1619     010E  0848               	movf	(_conver+1)^(0+128),w
  1620     010F  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1621     0110  0847               	movf	_conver^(0+128),w
  1622     0111  00A1               	movwf	(?_sprintf^(0+128)+1)
  1623     0112  30D0               	movlw	(low (_valADC| 0))& (0+255)
  1624     0113  120A  118A  21AB  120A  118A  	fcall	_sprintf
  1625     0118                     l3647:
  1626                           
  1627                           ;main.c: 88:         Lcd_Set_Cursor(2,1);
  1628     0118  01F4               	clrf	Lcd_Set_Cursor@b
  1629     0119  0AF4               	incf	Lcd_Set_Cursor@b,f
  1630     011A  3002               	movlw	2
  1631     011B  160A  158A  2563  120A  118A  	fcall	_Lcd_Set_Cursor
  1632     0120                     l3649:
  1633                           
  1634                           ;main.c: 89:         Lcd_Write_String(valADC);
  1635     0120  30D0               	movlw	(low (_valADC| 0))& (0+255)
  1636     0121  00F5               	movwf	Lcd_Write_String@a
  1637     0122  3000               	movlw	0
  1638     0123  00F6               	movwf	Lcd_Write_String@a+1
  1639     0124  160A  158A  24DD  120A  118A  	fcall	_Lcd_Write_String
  1640     0129                     l3651:
  1641                           
  1642                           ;main.c: 96:         conver = (lecADC2*5.0)/255;
  1643     0129  3043               	movlw	67
  1644     012A  1283               	bcf	3,5	;RP0=0, select bank0
  1645     012B  1303               	bcf	3,6	;RP1=0, select bank0
  1646     012C  00C1               	movwf	___fldiv@a+3
  1647     012D  307F               	movlw	127
  1648     012E  00C0               	movwf	___fldiv@a+2
  1649     012F  3000               	movlw	0
  1650     0130  00BF               	movwf	___fldiv@a+1
  1651     0131  3000               	movlw	0
  1652     0132  00BE               	movwf	___fldiv@a
  1653     0133  3040               	movlw	64
  1654     0134  00A7               	movwf	___flmul@b+3
  1655     0135  30A0               	movlw	160
  1656     0136  00A6               	movwf	___flmul@b+2
  1657     0137  3000               	movlw	0
  1658     0138  00A5               	movwf	___flmul@b+1
  1659     0139  3000               	movlw	0
  1660     013A  00A4               	movwf	___flmul@b
  1661     013B  1683               	bsf	3,5	;RP0=1, select bank1
  1662     013C  1303               	bcf	3,6	;RP1=0, select bank1
  1663     013D  084E               	movf	_lecADC2^(0+128),w
  1664     013E  00C3               	movwf	??_main^(0+128)
  1665     013F  01C4               	clrf	(??_main^(0+128)+1)
  1666     0140  01C5               	clrf	(??_main^(0+128)+2)
  1667     0141  01C6               	clrf	(??_main^(0+128)+3)
  1668     0142  0846               	movf	(??_main+3)^(0+128),w
  1669     0143  00F3               	movwf	___xxtofl@val+3
  1670     0144  0845               	movf	(??_main+2)^(0+128),w
  1671     0145  00F2               	movwf	___xxtofl@val+2
  1672     0146  0844               	movf	(??_main+1)^(0+128),w
  1673     0147  00F1               	movwf	___xxtofl@val+1
  1674     0148  0843               	movf	??_main^(0+128),w
  1675     0149  00F0               	movwf	___xxtofl@val
  1676     014A  3001               	movlw	1
  1677     014B  160A  118A  2112  120A  118A  	fcall	___xxtofl
  1678     0150  0873               	movf	?___xxtofl+3,w
  1679     0151  1283               	bcf	3,5	;RP0=0, select bank0
  1680     0152  1303               	bcf	3,6	;RP1=0, select bank0
  1681     0153  00AB               	movwf	___flmul@a+3
  1682     0154  0872               	movf	?___xxtofl+2,w
  1683     0155  00AA               	movwf	___flmul@a+2
  1684     0156  0871               	movf	?___xxtofl+1,w
  1685     0157  00A9               	movwf	___flmul@a+1
  1686     0158  0870               	movf	?___xxtofl,w
  1687     0159  00A8               	movwf	___flmul@a
  1688     015A  120A  158A  215C  120A  118A  	fcall	___flmul
  1689     015F  1283               	bcf	3,5	;RP0=0, select bank0
  1690     0160  1303               	bcf	3,6	;RP1=0, select bank0
  1691     0161  0827               	movf	?___flmul+3,w
  1692     0162  00C5               	movwf	___fldiv@b+3
  1693     0163  0826               	movf	?___flmul+2,w
  1694     0164  00C4               	movwf	___fldiv@b+2
  1695     0165  0825               	movf	?___flmul+1,w
  1696     0166  00C3               	movwf	___fldiv@b+1
  1697     0167  0824               	movf	?___flmul,w
  1698     0168  00C2               	movwf	___fldiv@b
  1699     0169  160A  118A  21CA  120A  118A  	fcall	___fldiv
  1700     016E  1283               	bcf	3,5	;RP0=0, select bank0
  1701     016F  1303               	bcf	3,6	;RP1=0, select bank0
  1702     0170  0841               	movf	?___fldiv+3,w
  1703     0171  1683               	bsf	3,5	;RP0=1, select bank1
  1704     0172  1303               	bcf	3,6	;RP1=0, select bank1
  1705     0173  00CA               	movwf	(_conver+3)^(0+128)
  1706     0174  1283               	bcf	3,5	;RP0=0, select bank0
  1707     0175  1303               	bcf	3,6	;RP1=0, select bank0
  1708     0176  0840               	movf	?___fldiv+2,w
  1709     0177  1683               	bsf	3,5	;RP0=1, select bank1
  1710     0178  1303               	bcf	3,6	;RP1=0, select bank1
  1711     0179  00C9               	movwf	(_conver+2)^(0+128)
  1712     017A  1283               	bcf	3,5	;RP0=0, select bank0
  1713     017B  1303               	bcf	3,6	;RP1=0, select bank0
  1714     017C  083F               	movf	?___fldiv+1,w
  1715     017D  1683               	bsf	3,5	;RP0=1, select bank1
  1716     017E  1303               	bcf	3,6	;RP1=0, select bank1
  1717     017F  00C8               	movwf	(_conver+1)^(0+128)
  1718     0180  1283               	bcf	3,5	;RP0=0, select bank0
  1719     0181  1303               	bcf	3,6	;RP1=0, select bank0
  1720     0182  083E               	movf	?___fldiv,w
  1721     0183  1683               	bsf	3,5	;RP0=1, select bank1
  1722     0184  1303               	bcf	3,6	;RP1=0, select bank1
  1723     0185  00C7               	movwf	_conver^(0+128)
  1724                           
  1725                           ;main.c: 97:         sprintf(valADC, "%.2f", conver);
  1726     0186  30A1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1727     0187  00A0               	movwf	sprintf@f^(0+128)
  1728     0188  084A               	movf	(_conver+3)^(0+128),w
  1729     0189  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1730     018A  0849               	movf	(_conver+2)^(0+128),w
  1731     018B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1732     018C  0848               	movf	(_conver+1)^(0+128),w
  1733     018D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1734     018E  0847               	movf	_conver^(0+128),w
  1735     018F  00A1               	movwf	(?_sprintf^(0+128)+1)
  1736     0190  30D0               	movlw	(low (_valADC| 0))& (0+255)
  1737     0191  120A  118A  21AB  120A  118A  	fcall	_sprintf
  1738     0196                     l3653:
  1739                           
  1740                           ;main.c: 98:         Lcd_Set_Cursor(2,13);
  1741     0196  300D               	movlw	13
  1742     0197  00F4               	movwf	Lcd_Set_Cursor@b
  1743     0198  3002               	movlw	2
  1744     0199  160A  158A  2563  120A  118A  	fcall	_Lcd_Set_Cursor
  1745     019E                     l3655:
  1746                           
  1747                           ;main.c: 99:         Lcd_Write_String(valADC);
  1748     019E  30D0               	movlw	(low (_valADC| 0))& (0+255)
  1749     019F  00F5               	movwf	Lcd_Write_String@a
  1750     01A0  3000               	movlw	0
  1751     01A1  00F6               	movwf	Lcd_Write_String@a+1
  1752     01A2  160A  158A  24DD  120A  118A  	fcall	_Lcd_Write_String
  1753     01A7  2877               	goto	l3623
  1754     01A8  120A  118A  2800   	ljmp	start
  1755     01AB                     __end_of_main:
  1756                           
  1757                           	psect	text1
  1758     01AB                     __ptext1:	
  1759 ;; *************** function _sprintf *****************
  1760 ;; Defined at:
  1761 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  sp              1    wreg     PTR unsigned char 
  1764 ;;		 -> valADC(3), 
  1765 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1766 ;;		 -> STR_3(5), STR_2(5), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1769 ;;		 -> valADC(3), 
  1770 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1771 ;;  tmpval          4   23[BANK1 ] struct .
  1772 ;;  val             4   17[BANK1 ] unsigned long 
  1773 ;;  prec            2   28[BANK1 ] int 
  1774 ;;  eexp            2   21[BANK1 ] int 
  1775 ;;  flag            2   15[BANK1 ] unsigned short 
  1776 ;;  cp              2    0        PTR const unsigned char 
  1777 ;;  len             2    0        unsigned int 
  1778 ;;  width           2    0        int 
  1779 ;;  c               1   34[BANK1 ] unsigned char 
  1780 ;;  ap              1   14[BANK1 ] PTR void [1]
  1781 ;;		 -> ?_sprintf(2), 
  1782 ;;  d               1    0        unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  2    0[BANK1 ] int 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       0       5       0       0
  1793 ;;      Locals:         0       0      25       0       0
  1794 ;;      Temps:          0       0       5       0       0
  1795 ;;      Totals:         0       0      35       0       0
  1796 ;;Total ram usage:       35 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 3
  1799 ;; This function calls:
  1800 ;;		___awdiv
  1801 ;;		___fladd
  1802 ;;		___fleq
  1803 ;;		___flge
  1804 ;;		___flmul
  1805 ;;		___flneg
  1806 ;;		___flsub
  1807 ;;		___fltol
  1808 ;;		___lldiv
  1809 ;;		___llmod
  1810 ;;		___wmul
  1811 ;;		___xxtofl
  1812 ;;		__div_to_l_
  1813 ;;		__tdiv_to_l_
  1814 ;;		_fround
  1815 ;;		_isdigit
  1816 ;;		_scale
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822     01AB                     _sprintf:	
  1823                           ;psect for function _sprintf
  1824                           
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1828                           ;sprintf@sp stored from wreg
  1829     01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1830     01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1831     01AD  00BB               	movwf	sprintf@sp^(0+128)
  1832     01AE                     l3271:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1835     01AE  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1836     01AF  00AE               	movwf	sprintf@ap^(0+128)
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1839     01B0  2FD6               	goto	l3465
  1840     01B1                     l3273:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1843     01B1  3025               	movlw	37
  1844     01B2  0642               	xorwf	sprintf@c^(0+128),w
  1845     01B3  1903               	btfsc	3,2
  1846     01B4  29B6               	goto	u5551
  1847     01B5  29B7               	goto	u5550
  1848     01B6                     u5551:
  1849     01B6  29C1               	goto	l3279
  1850     01B7                     u5550:
  1851     01B7                     l3275:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1854     01B7  083B               	movf	sprintf@sp^(0+128),w
  1855     01B8  0084               	movwf	4
  1856     01B9  0842               	movf	sprintf@c^(0+128),w
  1857     01BA  1383               	bcf	3,7	;select IRP bank0
  1858     01BB  0080               	movwf	0
  1859     01BC                     l3277:
  1860     01BC  3001               	movlw	1
  1861     01BD  00A5               	movwf	??_sprintf^(0+128)
  1862     01BE  0825               	movf	??_sprintf^(0+128),w
  1863     01BF  07BB               	addwf	sprintf@sp^(0+128),f
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1866     01C0  2FD6               	goto	l3465
  1867     01C1                     l3279:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1870     01C1  01AF               	clrf	sprintf@flag^(0+128)
  1871     01C2  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1872     01C3                     l3281:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1875     01C3  0820               	movf	sprintf@f^(0+128),w
  1876     01C4  0084               	movwf	4
  1877     01C5  160A  158A  200A  120A  118A  	fcall	stringdir
  1878     01CA  3A2E               	xorlw	46
  1879     01CB  1D03               	skipz
  1880     01CC  29CE               	goto	u5561
  1881     01CD  29CF               	goto	u5560
  1882     01CE                     u5561:
  1883     01CE  2A14               	goto	l3297
  1884     01CF                     u5560:
  1885     01CF                     l3283:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1888     01CF  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1889     01D0                     l3285:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  1892     01D0  3001               	movlw	1
  1893     01D1  00A5               	movwf	??_sprintf^(0+128)
  1894     01D2  0825               	movf	??_sprintf^(0+128),w
  1895     01D3  07A0               	addwf	sprintf@f^(0+128),f
  1896     01D4                     l3287:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1899     01D4  01BC               	clrf	sprintf@prec^(0+128)
  1900     01D5  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1903     01D6  2A03               	goto	l3295
  1904     01D7                     l3289:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1907     01D7  300A               	movlw	10
  1908     01D8  00F0               	movwf	___wmul@multiplier
  1909     01D9  3000               	movlw	0
  1910     01DA  00F1               	movwf	___wmul@multiplier+1
  1911     01DB  1683               	bsf	3,5	;RP0=1, select bank1
  1912     01DC  1303               	bcf	3,6	;RP1=0, select bank1
  1913     01DD  083D               	movf	(sprintf@prec+1)^(0+128),w
  1914     01DE  00F3               	movwf	___wmul@multiplicand+1
  1915     01DF  083C               	movf	sprintf@prec^(0+128),w
  1916     01E0  00F2               	movwf	___wmul@multiplicand
  1917     01E1  160A  158A  2424  120A  118A  	fcall	___wmul
  1918     01E6  0871               	movf	?___wmul+1,w
  1919     01E7  1683               	bsf	3,5	;RP0=1, select bank1
  1920     01E8  1303               	bcf	3,6	;RP1=0, select bank1
  1921     01E9  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1922     01EA  0870               	movf	?___wmul,w
  1923     01EB  00BC               	movwf	sprintf@prec^(0+128)
  1924     01EC                     l3291:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1927     01EC  0820               	movf	sprintf@f^(0+128),w
  1928     01ED  0084               	movwf	4
  1929     01EE  160A  158A  200A  120A  118A  	fcall	stringdir
  1930     01F3  3ED0               	addlw	208
  1931     01F4  00A5               	movwf	??_sprintf^(0+128)
  1932     01F5  30FF               	movlw	255
  1933     01F6  1803               	skipnc
  1934     01F7  3000               	movlw	0
  1935     01F8  00A6               	movwf	(??_sprintf^(0+128)+1)
  1936     01F9  0825               	movf	??_sprintf^(0+128),w
  1937     01FA  07BC               	addwf	sprintf@prec^(0+128),f
  1938     01FB  1803               	skipnc
  1939     01FC  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  1940     01FD  0826               	movf	(??_sprintf+1)^(0+128),w
  1941     01FE  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  1942     01FF                     l3293:
  1943     01FF  3001               	movlw	1
  1944     0200  00A5               	movwf	??_sprintf^(0+128)
  1945     0201  0825               	movf	??_sprintf^(0+128),w
  1946     0202  07A0               	addwf	sprintf@f^(0+128),f
  1947     0203                     l3295:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1950     0203  0820               	movf	sprintf@f^(0+128),w
  1951     0204  0084               	movwf	4
  1952     0205  160A  158A  200A  120A  118A  	fcall	stringdir
  1953     020A  160A  158A  237A  120A  118A  	fcall	_isdigit
  1954     020F  1803               	btfsc	3,0
  1955     0210  2A12               	goto	u5571
  1956     0211  2A13               	goto	u5570
  1957     0212                     u5571:
  1958     0212  29D7               	goto	l3289
  1959     0213                     u5570:
  1960     0213  2A1A               	goto	l3303
  1961     0214                     l3297:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1964     0214  01BC               	clrf	sprintf@prec^(0+128)
  1965     0215  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1966     0216                     l3299:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1969     0216  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1970     0217  2A1A               	goto	l3303
  1971     0218                     l293:	
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1973                           
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1976     0218  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1979     0219  2A36               	goto	l3305
  1980     021A                     l3303:
  1981     021A  3001               	movlw	1
  1982     021B  1683               	bsf	3,5	;RP0=1, select bank1
  1983     021C  1303               	bcf	3,6	;RP1=0, select bank1
  1984     021D  07A0               	addwf	sprintf@f^(0+128),f
  1985     021E  30FF               	movlw	-1
  1986     021F  0720               	addwf	sprintf@f^(0+128),w
  1987     0220  0084               	movwf	4
  1988     0221  160A  158A  200A  120A  118A  	fcall	stringdir
  1989     0226  00C2               	movwf	sprintf@c^(0+128)
  1990     0227  00A5               	movwf	??_sprintf^(0+128)
  1991     0228  01A6               	clrf	(??_sprintf^(0+128)+1)
  1992                           
  1993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1994                           ; Switch size 1, requested type "simple"
  1995                           ; Number of cases is 1, Range of values is 0 to 0
  1996                           ; switch strategies available:
  1997                           ; Name         Instructions Cycles
  1998                           ; simple_byte            4     3 (average)
  1999                           ; direct_byte           11     8 (fixed)
  2000                           ; jumptable            260     6 (fixed)
  2001                           ;	Chosen strategy is simple_byte
  2002     0229  0826               	movf	(??_sprintf+1)^(0+128),w
  2003     022A  3A00               	xorlw	0	; case 0
  2004     022B  1903               	skipnz
  2005     022C  2A2E               	goto	l3691
  2006     022D  2FD6               	goto	l3465
  2007     022E                     l3691:
  2008                           
  2009                           ; Switch size 1, requested type "simple"
  2010                           ; Number of cases is 2, Range of values is 0 to 102
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte            7     4 (average)
  2014                           ; jumptable            260     6 (fixed)
  2015                           ;	Chosen strategy is simple_byte
  2016     022E  0825               	movf	??_sprintf^(0+128),w
  2017     022F  3A00               	xorlw	0	; case 0
  2018     0230  1903               	skipnz
  2019     0231  2FE6               	goto	l3467
  2020     0232  3A66               	xorlw	102	; case 102
  2021     0233  1903               	skipnz
  2022     0234  2A18               	goto	l293
  2023     0235  2FD6               	goto	l3465
  2024     0236                     l3305:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2027     0236  3000               	movlw	0
  2028     0237  052F               	andwf	sprintf@flag^(0+128),w
  2029     0238  00A5               	movwf	??_sprintf^(0+128)
  2030     0239  3007               	movlw	7
  2031     023A  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2032     023B  00A6               	movwf	(??_sprintf+1)^(0+128)
  2033     023C  0825               	movf	??_sprintf^(0+128),w
  2034     023D  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2035     023E  1903               	btfsc	3,2
  2036     023F  2A41               	goto	u5581
  2037     0240  2A42               	goto	u5580
  2038     0241                     u5581:
  2039     0241  2F93               	goto	l3447
  2040     0242                     u5580:
  2041     0242                     l3307:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2044     0242  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2045     0243  2A45               	goto	u5591
  2046     0244  2A46               	goto	u5590
  2047     0245                     u5591:
  2048     0245  2A4A               	goto	l3311
  2049     0246                     u5590:
  2050     0246                     l3309:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2053     0246  3006               	movlw	6
  2054     0247  00BC               	movwf	sprintf@prec^(0+128)
  2055     0248  3000               	movlw	0
  2056     0249  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2057     024A                     l3311:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2060     024A  082E               	movf	sprintf@ap^(0+128),w
  2061     024B  0084               	movwf	4
  2062     024C  1383               	bcf	3,7	;select IRP bank0
  2063     024D  0800               	movf	0,w
  2064     024E  00BE               	movwf	sprintf@fval^(0+128)
  2065     024F  0A84               	incf	4,f
  2066     0250  0800               	movf	0,w
  2067     0251  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2068     0252  0A84               	incf	4,f
  2069     0253  0800               	movf	0,w
  2070     0254  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2071     0255  0A84               	incf	4,f
  2072     0256  0800               	movf	0,w
  2073     0257  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2074     0258                     l3313:
  2075     0258  3004               	movlw	4
  2076     0259  00A5               	movwf	??_sprintf^(0+128)
  2077     025A  0825               	movf	??_sprintf^(0+128),w
  2078     025B  07AE               	addwf	sprintf@ap^(0+128),f
  2079     025C                     l3315:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2082     025C  0841               	movf	(sprintf@fval+3)^(0+128),w
  2083     025D  00F3               	movwf	___flge@ff1+3
  2084     025E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2085     025F  00F2               	movwf	___flge@ff1+2
  2086     0260  083F               	movf	(sprintf@fval+1)^(0+128),w
  2087     0261  00F1               	movwf	___flge@ff1+1
  2088     0262  083E               	movf	sprintf@fval^(0+128),w
  2089     0263  00F0               	movwf	___flge@ff1
  2090     0264  3000               	movlw	0
  2091     0265  00F7               	movwf	___flge@ff2+3
  2092     0266  3000               	movlw	0
  2093     0267  00F6               	movwf	___flge@ff2+2
  2094     0268  3000               	movlw	0
  2095     0269  00F5               	movwf	___flge@ff2+1
  2096     026A  3000               	movlw	0
  2097     026B  00F4               	movwf	___flge@ff2
  2098     026C  120A  158A  2002  120A  118A  	fcall	___flge
  2099     0271  1803               	btfsc	3,0
  2100     0272  2A74               	goto	u5601
  2101     0273  2A75               	goto	u5600
  2102     0274                     u5601:
  2103     0274  2A92               	goto	l3321
  2104     0275                     u5600:
  2105     0275                     l3317:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2108     0275  1683               	bsf	3,5	;RP0=1, select bank1
  2109     0276  1303               	bcf	3,6	;RP1=0, select bank1
  2110     0277  0841               	movf	(sprintf@fval+3)^(0+128),w
  2111     0278  00F3               	movwf	___flneg@f1+3
  2112     0279  0840               	movf	(sprintf@fval+2)^(0+128),w
  2113     027A  00F2               	movwf	___flneg@f1+2
  2114     027B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2115     027C  00F1               	movwf	___flneg@f1+1
  2116     027D  083E               	movf	sprintf@fval^(0+128),w
  2117     027E  00F0               	movwf	___flneg@f1
  2118     027F  160A  158A  2362  120A  118A  	fcall	___flneg
  2119     0284  0873               	movf	?___flneg+3,w
  2120     0285  1683               	bsf	3,5	;RP0=1, select bank1
  2121     0286  1303               	bcf	3,6	;RP1=0, select bank1
  2122     0287  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2123     0288  0872               	movf	?___flneg+2,w
  2124     0289  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2125     028A  0871               	movf	?___flneg+1,w
  2126     028B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2127     028C  0870               	movf	?___flneg,w
  2128     028D  00BE               	movwf	sprintf@fval^(0+128)
  2129     028E                     l3319:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2132     028E  3003               	movlw	3
  2133     028F  04AF               	iorwf	sprintf@flag^(0+128),f
  2134     0290  3000               	movlw	0
  2135     0291  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2136     0292                     l3321:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2139     0292  1683               	bsf	3,5	;RP0=1, select bank1
  2140     0293  1303               	bcf	3,6	;RP1=0, select bank1
  2141     0294  01B5               	clrf	sprintf@eexp^(0+128)
  2142     0295  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2143     0296                     l3323:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2146     0296  0841               	movf	(sprintf@fval+3)^(0+128),w
  2147     0297  00F3               	movwf	___fleq@ff1+3
  2148     0298  0840               	movf	(sprintf@fval+2)^(0+128),w
  2149     0299  00F2               	movwf	___fleq@ff1+2
  2150     029A  083F               	movf	(sprintf@fval+1)^(0+128),w
  2151     029B  00F1               	movwf	___fleq@ff1+1
  2152     029C  083E               	movf	sprintf@fval^(0+128),w
  2153     029D  00F0               	movwf	___fleq@ff1
  2154     029E  3000               	movlw	0
  2155     029F  00F7               	movwf	___fleq@ff2+3
  2156     02A0  3000               	movlw	0
  2157     02A1  00F6               	movwf	___fleq@ff2+2
  2158     02A2  3000               	movlw	0
  2159     02A3  00F5               	movwf	___fleq@ff2+1
  2160     02A4  3000               	movlw	0
  2161     02A5  00F4               	movwf	___fleq@ff2
  2162     02A6  120A  118A  2003  120A  118A  	fcall	___fleq
  2163     02AB  1803               	btfsc	3,0
  2164     02AC  2AAE               	goto	u5611
  2165     02AD  2AAF               	goto	u5610
  2166     02AE                     u5611:
  2167     02AE  2B9F               	goto	l3349
  2168     02AF                     u5610:
  2169     02AF                     l3325:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2172     02AF  1003               	clrc
  2173     02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2174     02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2175     02B2  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2176     02B3  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2177     02B4  3E82               	addlw	130
  2178     02B5  00B5               	movwf	sprintf@eexp^(0+128)
  2179     02B6  30FF               	movlw	255
  2180     02B7  1803               	skipnc
  2181     02B8  3000               	movlw	0
  2182     02B9  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2183     02BA                     l3327:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2186     02BA  30FF               	movlw	255
  2187     02BB  07B5               	addwf	sprintf@eexp^(0+128),f
  2188     02BC  1803               	skipnc
  2189     02BD  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2190     02BE  30FF               	movlw	255
  2191     02BF  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2192     02C0                     l3329:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2195     02C0  3003               	movlw	3
  2196     02C1  00F0               	movwf	___wmul@multiplier
  2197     02C2  3000               	movlw	0
  2198     02C3  00F1               	movwf	___wmul@multiplier+1
  2199     02C4  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2200     02C5  00F3               	movwf	___wmul@multiplicand+1
  2201     02C6  0835               	movf	sprintf@eexp^(0+128),w
  2202     02C7  00F2               	movwf	___wmul@multiplicand
  2203     02C8  160A  158A  2424  120A  118A  	fcall	___wmul
  2204     02CD  0871               	movf	?___wmul+1,w
  2205     02CE  1683               	bsf	3,5	;RP0=1, select bank1
  2206     02CF  1303               	bcf	3,6	;RP1=0, select bank1
  2207     02D0  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2208     02D1  0870               	movf	?___wmul,w
  2209     02D2  00B5               	movwf	sprintf@eexp^(0+128)
  2210     02D3                     l3331:
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2213     02D3  300A               	movlw	10
  2214     02D4  00F7               	movwf	___awdiv@divisor
  2215     02D5  3000               	movlw	0
  2216     02D6  00F8               	movwf	___awdiv@divisor+1
  2217     02D7  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2218     02D8  00FA               	movwf	___awdiv@dividend+1
  2219     02D9  0835               	movf	sprintf@eexp^(0+128),w
  2220     02DA  00F9               	movwf	___awdiv@dividend
  2221     02DB  160A  158A  271F  120A  118A  	fcall	___awdiv
  2222     02E0  0878               	movf	?___awdiv+1,w
  2223     02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2224     02E2  1303               	bcf	3,6	;RP1=0, select bank1
  2225     02E3  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2226     02E4  0877               	movf	?___awdiv,w
  2227     02E5  00B5               	movwf	sprintf@eexp^(0+128)
  2228     02E6                     l3333:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2231     02E6  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2232     02E7  2AE9               	goto	u5621
  2233     02E8  2AEA               	goto	u5620
  2234     02E9                     u5621:
  2235     02E9  2AF0               	goto	l3337
  2236     02EA                     u5620:
  2237     02EA                     l3335:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2240     02EA  30FF               	movlw	255
  2241     02EB  07B5               	addwf	sprintf@eexp^(0+128),f
  2242     02EC  1803               	skipnc
  2243     02ED  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2244     02EE  30FF               	movlw	255
  2245     02EF  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2246     02F0                     l3337:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2249     02F0  0335               	decf	sprintf@eexp^(0+128),w
  2250     02F1  3AFF               	xorlw	255
  2251     02F2  120A  158A  24A1  120A  118A  	fcall	_scale
  2252     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2253     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2254     02F9  0841               	movf	?_scale+3,w
  2255     02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2256     02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2257     02FC  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2258     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2259     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2260     02FF  0840               	movf	?_scale+2,w
  2261     0300  1683               	bsf	3,5	;RP0=1, select bank1
  2262     0301  1303               	bcf	3,6	;RP1=0, select bank1
  2263     0302  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2264     0303  1283               	bcf	3,5	;RP0=0, select bank0
  2265     0304  1303               	bcf	3,6	;RP1=0, select bank0
  2266     0305  083F               	movf	?_scale+1,w
  2267     0306  1683               	bsf	3,5	;RP0=1, select bank1
  2268     0307  1303               	bcf	3,6	;RP1=0, select bank1
  2269     0308  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2270     0309  1283               	bcf	3,5	;RP0=0, select bank0
  2271     030A  1303               	bcf	3,6	;RP1=0, select bank0
  2272     030B  083E               	movf	?_scale,w
  2273     030C  1683               	bsf	3,5	;RP0=1, select bank1
  2274     030D  1303               	bcf	3,6	;RP1=0, select bank1
  2275     030E  00B7               	movwf	sprintf@tmpval^(0+128)
  2276     030F                     l3339:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2279     030F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2280     0310  1283               	bcf	3,5	;RP0=0, select bank0
  2281     0311  1303               	bcf	3,6	;RP1=0, select bank0
  2282     0312  00A7               	movwf	___flmul@b+3
  2283     0313  1683               	bsf	3,5	;RP0=1, select bank1
  2284     0314  1303               	bcf	3,6	;RP1=0, select bank1
  2285     0315  0840               	movf	(sprintf@fval+2)^(0+128),w
  2286     0316  1283               	bcf	3,5	;RP0=0, select bank0
  2287     0317  1303               	bcf	3,6	;RP1=0, select bank0
  2288     0318  00A6               	movwf	___flmul@b+2
  2289     0319  1683               	bsf	3,5	;RP0=1, select bank1
  2290     031A  1303               	bcf	3,6	;RP1=0, select bank1
  2291     031B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2292     031C  1283               	bcf	3,5	;RP0=0, select bank0
  2293     031D  1303               	bcf	3,6	;RP1=0, select bank0
  2294     031E  00A5               	movwf	___flmul@b+1
  2295     031F  1683               	bsf	3,5	;RP0=1, select bank1
  2296     0320  1303               	bcf	3,6	;RP1=0, select bank1
  2297     0321  083E               	movf	sprintf@fval^(0+128),w
  2298     0322  1283               	bcf	3,5	;RP0=0, select bank0
  2299     0323  1303               	bcf	3,6	;RP1=0, select bank0
  2300     0324  00A4               	movwf	___flmul@b
  2301     0325  1683               	bsf	3,5	;RP0=1, select bank1
  2302     0326  1303               	bcf	3,6	;RP1=0, select bank1
  2303     0327  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2304     0328  1283               	bcf	3,5	;RP0=0, select bank0
  2305     0329  1303               	bcf	3,6	;RP1=0, select bank0
  2306     032A  00AB               	movwf	___flmul@a+3
  2307     032B  1683               	bsf	3,5	;RP0=1, select bank1
  2308     032C  1303               	bcf	3,6	;RP1=0, select bank1
  2309     032D  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2310     032E  1283               	bcf	3,5	;RP0=0, select bank0
  2311     032F  1303               	bcf	3,6	;RP1=0, select bank0
  2312     0330  00AA               	movwf	___flmul@a+2
  2313     0331  1683               	bsf	3,5	;RP0=1, select bank1
  2314     0332  1303               	bcf	3,6	;RP1=0, select bank1
  2315     0333  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2316     0334  1283               	bcf	3,5	;RP0=0, select bank0
  2317     0335  1303               	bcf	3,6	;RP1=0, select bank0
  2318     0336  00A9               	movwf	___flmul@a+1
  2319     0337  1683               	bsf	3,5	;RP0=1, select bank1
  2320     0338  1303               	bcf	3,6	;RP1=0, select bank1
  2321     0339  0837               	movf	sprintf@tmpval^(0+128),w
  2322     033A  1283               	bcf	3,5	;RP0=0, select bank0
  2323     033B  1303               	bcf	3,6	;RP1=0, select bank0
  2324     033C  00A8               	movwf	___flmul@a
  2325     033D  120A  158A  215C  120A  118A  	fcall	___flmul
  2326     0342  1283               	bcf	3,5	;RP0=0, select bank0
  2327     0343  1303               	bcf	3,6	;RP1=0, select bank0
  2328     0344  0827               	movf	?___flmul+3,w
  2329     0345  1683               	bsf	3,5	;RP0=1, select bank1
  2330     0346  1303               	bcf	3,6	;RP1=0, select bank1
  2331     0347  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2332     0348  1283               	bcf	3,5	;RP0=0, select bank0
  2333     0349  1303               	bcf	3,6	;RP1=0, select bank0
  2334     034A  0826               	movf	?___flmul+2,w
  2335     034B  1683               	bsf	3,5	;RP0=1, select bank1
  2336     034C  1303               	bcf	3,6	;RP1=0, select bank1
  2337     034D  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2338     034E  1283               	bcf	3,5	;RP0=0, select bank0
  2339     034F  1303               	bcf	3,6	;RP1=0, select bank0
  2340     0350  0825               	movf	?___flmul+1,w
  2341     0351  1683               	bsf	3,5	;RP0=1, select bank1
  2342     0352  1303               	bcf	3,6	;RP1=0, select bank1
  2343     0353  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2344     0354  1283               	bcf	3,5	;RP0=0, select bank0
  2345     0355  1303               	bcf	3,6	;RP1=0, select bank0
  2346     0356  0824               	movf	?___flmul,w
  2347     0357  1683               	bsf	3,5	;RP0=1, select bank1
  2348     0358  1303               	bcf	3,6	;RP1=0, select bank1
  2349     0359  00B7               	movwf	sprintf@tmpval^(0+128)
  2350     035A                     l3341:
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2353     035A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2354     035B  00F3               	movwf	___flge@ff1+3
  2355     035C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2356     035D  00F2               	movwf	___flge@ff1+2
  2357     035E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2358     035F  00F1               	movwf	___flge@ff1+1
  2359     0360  0837               	movf	sprintf@tmpval^(0+128),w
  2360     0361  00F0               	movwf	___flge@ff1
  2361     0362  303F               	movlw	63
  2362     0363  00F7               	movwf	___flge@ff2+3
  2363     0364  3080               	movlw	128
  2364     0365  00F6               	movwf	___flge@ff2+2
  2365     0366  3000               	movlw	0
  2366     0367  00F5               	movwf	___flge@ff2+1
  2367     0368  3000               	movlw	0
  2368     0369  00F4               	movwf	___flge@ff2
  2369     036A  120A  158A  2002  120A  118A  	fcall	___flge
  2370     036F  1803               	btfsc	3,0
  2371     0370  2B72               	goto	u5631
  2372     0371  2B73               	goto	u5630
  2373     0372                     u5631:
  2374     0372  2B7C               	goto	l3345
  2375     0373                     u5630:
  2376     0373                     l3343:
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2379     0373  30FF               	movlw	255
  2380     0374  1683               	bsf	3,5	;RP0=1, select bank1
  2381     0375  1303               	bcf	3,6	;RP1=0, select bank1
  2382     0376  07B5               	addwf	sprintf@eexp^(0+128),f
  2383     0377  1803               	skipnc
  2384     0378  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2385     0379  30FF               	movlw	255
  2386     037A  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2387     037B  2B9F               	goto	l3349
  2388     037C                     l3345:
  2389     037C  1683               	bsf	3,5	;RP0=1, select bank1
  2390     037D  1303               	bcf	3,6	;RP1=0, select bank1
  2391     037E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2392     037F  00F3               	movwf	___flge@ff1+3
  2393     0380  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2394     0381  00F2               	movwf	___flge@ff1+2
  2395     0382  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2396     0383  00F1               	movwf	___flge@ff1+1
  2397     0384  0837               	movf	sprintf@tmpval^(0+128),w
  2398     0385  00F0               	movwf	___flge@ff1
  2399     0386  3041               	movlw	65
  2400     0387  00F7               	movwf	___flge@ff2+3
  2401     0388  3020               	movlw	32
  2402     0389  00F6               	movwf	___flge@ff2+2
  2403     038A  3000               	movlw	0
  2404     038B  00F5               	movwf	___flge@ff2+1
  2405     038C  3000               	movlw	0
  2406     038D  00F4               	movwf	___flge@ff2
  2407     038E  120A  158A  2002  120A  118A  	fcall	___flge
  2408     0393  1C03               	btfss	3,0
  2409     0394  2B96               	goto	u5641
  2410     0395  2B97               	goto	u5640
  2411     0396                     u5641:
  2412     0396  2B9F               	goto	l3349
  2413     0397                     u5640:
  2414     0397                     l3347:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2417     0397  3001               	movlw	1
  2418     0398  1683               	bsf	3,5	;RP0=1, select bank1
  2419     0399  1303               	bcf	3,6	;RP1=0, select bank1
  2420     039A  07B5               	addwf	sprintf@eexp^(0+128),f
  2421     039B  1803               	skipnc
  2422     039C  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2423     039D  3000               	movlw	0
  2424     039E  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2425     039F                     l3349:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2428     039F  1683               	bsf	3,5	;RP0=1, select bank1
  2429     03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2430     03A1  083D               	movf	(sprintf@prec+1)^(0+128),w
  2431     03A2  3A80               	xorlw	128
  2432     03A3  00FF               	movwf	btemp+1
  2433     03A4  3080               	movlw	128
  2434     03A5  027F               	subwf	btemp+1,w
  2435     03A6  1D03               	skipz
  2436     03A7  2BAA               	goto	u5655
  2437     03A8  300D               	movlw	13
  2438     03A9  023C               	subwf	sprintf@prec^(0+128),w
  2439     03AA                     u5655:
  2440     03AA  1803               	skipnc
  2441     03AB  2BAD               	goto	u5651
  2442     03AC  2BAE               	goto	u5650
  2443     03AD                     u5651:
  2444     03AD  2BF5               	goto	l3353
  2445     03AE                     u5650:
  2446     03AE                     l3351:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2449     03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2450     03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2451     03B0  083C               	movf	sprintf@prec^(0+128),w
  2452     03B1  160A  118A  239D  120A  118A  	fcall	_fround
  2453     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2454     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2455     03B8  0841               	movf	?_fround+3,w
  2456     03B9  00D5               	movwf	___fladd@b+3
  2457     03BA  0840               	movf	?_fround+2,w
  2458     03BB  00D4               	movwf	___fladd@b+2
  2459     03BC  083F               	movf	?_fround+1,w
  2460     03BD  00D3               	movwf	___fladd@b+1
  2461     03BE  083E               	movf	?_fround,w
  2462     03BF  00D2               	movwf	___fladd@b
  2463     03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2464     03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2465     03C2  0841               	movf	(sprintf@fval+3)^(0+128),w
  2466     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2467     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2468     03C5  00D9               	movwf	___fladd@a+3
  2469     03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2470     03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2471     03C8  0840               	movf	(sprintf@fval+2)^(0+128),w
  2472     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2473     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2474     03CB  00D8               	movwf	___fladd@a+2
  2475     03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2476     03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2477     03CE  083F               	movf	(sprintf@fval+1)^(0+128),w
  2478     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2479     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2480     03D1  00D7               	movwf	___fladd@a+1
  2481     03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2482     03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2483     03D4  083E               	movf	sprintf@fval^(0+128),w
  2484     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2485     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2486     03D7  00D6               	movwf	___fladd@a
  2487     03D8  160A  118A  25A8  120A  118A  	fcall	___fladd
  2488     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2489     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2490     03DF  0855               	movf	?___fladd+3,w
  2491     03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2492     03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2493     03E2  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2494     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2495     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2496     03E5  0854               	movf	?___fladd+2,w
  2497     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2498     03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2499     03E8  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2500     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2501     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2502     03EB  0853               	movf	?___fladd+1,w
  2503     03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2504     03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2505     03EE  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2506     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2507     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2508     03F1  0852               	movf	?___fladd,w
  2509     03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2510     03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2511     03F4  00BE               	movwf	sprintf@fval^(0+128)
  2512     03F5                     l3353:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2515     03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2516     03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2517     03F7  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2518     03F8  3A80               	xorlw	128
  2519     03F9  00FF               	movwf	btemp+1
  2520     03FA  3080               	movlw	128
  2521     03FB  027F               	subwf	btemp+1,w
  2522     03FC  1D03               	skipz
  2523     03FD  2C00               	goto	u5665
  2524     03FE  300A               	movlw	10
  2525     03FF  0235               	subwf	sprintf@eexp^(0+128),w
  2526     0400                     u5665:
  2527     0400  1803               	skipnc
  2528     0401  2C03               	goto	u5661
  2529     0402  2C04               	goto	u5660
  2530     0403                     u5661:
  2531     0403  2C55               	goto	l3361
  2532     0404                     u5660:
  2533     0404                     l3355:
  2534     0404  1683               	bsf	3,5	;RP0=1, select bank1
  2535     0405  1303               	bcf	3,6	;RP1=0, select bank1
  2536     0406  0841               	movf	(sprintf@fval+3)^(0+128),w
  2537     0407  00F3               	movwf	___fleq@ff1+3
  2538     0408  0840               	movf	(sprintf@fval+2)^(0+128),w
  2539     0409  00F2               	movwf	___fleq@ff1+2
  2540     040A  083F               	movf	(sprintf@fval+1)^(0+128),w
  2541     040B  00F1               	movwf	___fleq@ff1+1
  2542     040C  083E               	movf	sprintf@fval^(0+128),w
  2543     040D  00F0               	movwf	___fleq@ff1
  2544     040E  3000               	movlw	0
  2545     040F  00F7               	movwf	___fleq@ff2+3
  2546     0410  3000               	movlw	0
  2547     0411  00F6               	movwf	___fleq@ff2+2
  2548     0412  3000               	movlw	0
  2549     0413  00F5               	movwf	___fleq@ff2+1
  2550     0414  3000               	movlw	0
  2551     0415  00F4               	movwf	___fleq@ff2
  2552     0416  120A  118A  2003  120A  118A  	fcall	___fleq
  2553     041B  1803               	btfsc	3,0
  2554     041C  2C1E               	goto	u5671
  2555     041D  2C1F               	goto	u5670
  2556     041E                     u5671:
  2557     041E  2CC7               	goto	l3375
  2558     041F                     u5670:
  2559     041F                     l3357:
  2560     041F  1683               	bsf	3,5	;RP0=1, select bank1
  2561     0420  1303               	bcf	3,6	;RP1=0, select bank1
  2562     0421  0841               	movf	(sprintf@fval+3)^(0+128),w
  2563     0422  1283               	bcf	3,5	;RP0=0, select bank0
  2564     0423  1303               	bcf	3,6	;RP1=0, select bank0
  2565     0424  00D4               	movwf	___fltol@f1+3
  2566     0425  1683               	bsf	3,5	;RP0=1, select bank1
  2567     0426  1303               	bcf	3,6	;RP1=0, select bank1
  2568     0427  0840               	movf	(sprintf@fval+2)^(0+128),w
  2569     0428  1283               	bcf	3,5	;RP0=0, select bank0
  2570     0429  1303               	bcf	3,6	;RP1=0, select bank0
  2571     042A  00D3               	movwf	___fltol@f1+2
  2572     042B  1683               	bsf	3,5	;RP0=1, select bank1
  2573     042C  1303               	bcf	3,6	;RP1=0, select bank1
  2574     042D  083F               	movf	(sprintf@fval+1)^(0+128),w
  2575     042E  1283               	bcf	3,5	;RP0=0, select bank0
  2576     042F  1303               	bcf	3,6	;RP1=0, select bank0
  2577     0430  00D2               	movwf	___fltol@f1+1
  2578     0431  1683               	bsf	3,5	;RP0=1, select bank1
  2579     0432  1303               	bcf	3,6	;RP1=0, select bank1
  2580     0433  083E               	movf	sprintf@fval^(0+128),w
  2581     0434  1283               	bcf	3,5	;RP0=0, select bank0
  2582     0435  1303               	bcf	3,6	;RP1=0, select bank0
  2583     0436  00D1               	movwf	___fltol@f1
  2584     0437  160A  158A  2788  120A  118A  	fcall	___fltol
  2585     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2586     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2587     043E  0854               	movf	?___fltol+3,w
  2588     043F  0453               	iorwf	?___fltol+2,w
  2589     0440  0452               	iorwf	?___fltol+1,w
  2590     0441  0451               	iorwf	?___fltol,w
  2591     0442  1D03               	skipz
  2592     0443  2C45               	goto	u5681
  2593     0444  2C46               	goto	u5680
  2594     0445                     u5681:
  2595     0445  2CC7               	goto	l3375
  2596     0446                     u5680:
  2597     0446                     l3359:
  2598     0446  1683               	bsf	3,5	;RP0=1, select bank1
  2599     0447  1303               	bcf	3,6	;RP1=0, select bank1
  2600     0448  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2601     0449  3A80               	xorlw	128
  2602     044A  00FF               	movwf	btemp+1
  2603     044B  3080               	movlw	128
  2604     044C  027F               	subwf	btemp+1,w
  2605     044D  1D03               	skipz
  2606     044E  2C51               	goto	u5695
  2607     044F  3002               	movlw	2
  2608     0450  0235               	subwf	sprintf@eexp^(0+128),w
  2609     0451                     u5695:
  2610     0451  1C03               	skipc
  2611     0452  2C54               	goto	u5691
  2612     0453  2C55               	goto	u5690
  2613     0454                     u5691:
  2614     0454  2CC7               	goto	l3375
  2615     0455                     u5690:
  2616     0455                     l3361:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2619     0455  1683               	bsf	3,5	;RP0=1, select bank1
  2620     0456  1303               	bcf	3,6	;RP1=0, select bank1
  2621     0457  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2622     0458  00F3               	movwf	___flge@ff1+3
  2623     0459  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2624     045A  00F2               	movwf	___flge@ff1+2
  2625     045B  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2626     045C  00F1               	movwf	___flge@ff1+1
  2627     045D  0837               	movf	sprintf@tmpval^(0+128),w
  2628     045E  00F0               	movwf	___flge@ff1
  2629     045F  3040               	movlw	64
  2630     0460  00F7               	movwf	___flge@ff2+3
  2631     0461  3089               	movlw	137
  2632     0462  00F6               	movwf	___flge@ff2+2
  2633     0463  3070               	movlw	112
  2634     0464  00F5               	movwf	___flge@ff2+1
  2635     0465  305F               	movlw	95
  2636     0466  00F4               	movwf	___flge@ff2
  2637     0467  120A  158A  2002  120A  118A  	fcall	___flge
  2638     046C  1803               	btfsc	3,0
  2639     046D  2C6F               	goto	u5701
  2640     046E  2C70               	goto	u5700
  2641     046F                     u5701:
  2642     046F  2C79               	goto	l3365
  2643     0470                     u5700:
  2644     0470                     l3363:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2647     0470  30F7               	movlw	247
  2648     0471  1683               	bsf	3,5	;RP0=1, select bank1
  2649     0472  1303               	bcf	3,6	;RP1=0, select bank1
  2650     0473  07B5               	addwf	sprintf@eexp^(0+128),f
  2651     0474  1803               	skipnc
  2652     0475  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2653     0476  30FF               	movlw	255
  2654     0477  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2657     0478  2C81               	goto	l3367
  2658     0479                     l3365:
  2659                           
  2660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2661     0479  30F8               	movlw	248
  2662     047A  1683               	bsf	3,5	;RP0=1, select bank1
  2663     047B  1303               	bcf	3,6	;RP1=0, select bank1
  2664     047C  07B5               	addwf	sprintf@eexp^(0+128),f
  2665     047D  1803               	skipnc
  2666     047E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2667     047F  30FF               	movlw	255
  2668     0480  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2669     0481                     l3367:
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2672     0481  0835               	movf	sprintf@eexp^(0+128),w
  2673     0482  120A  158A  24A1  120A  118A  	fcall	_scale
  2674     0487  1283               	bcf	3,5	;RP0=0, select bank0
  2675     0488  1303               	bcf	3,6	;RP1=0, select bank0
  2676     0489  0841               	movf	?_scale+3,w
  2677     048A  1683               	bsf	3,5	;RP0=1, select bank1
  2678     048B  1303               	bcf	3,6	;RP1=0, select bank1
  2679     048C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2680     048D  1283               	bcf	3,5	;RP0=0, select bank0
  2681     048E  1303               	bcf	3,6	;RP1=0, select bank0
  2682     048F  0840               	movf	?_scale+2,w
  2683     0490  1683               	bsf	3,5	;RP0=1, select bank1
  2684     0491  1303               	bcf	3,6	;RP1=0, select bank1
  2685     0492  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2686     0493  1283               	bcf	3,5	;RP0=0, select bank0
  2687     0494  1303               	bcf	3,6	;RP1=0, select bank0
  2688     0495  083F               	movf	?_scale+1,w
  2689     0496  1683               	bsf	3,5	;RP0=1, select bank1
  2690     0497  1303               	bcf	3,6	;RP1=0, select bank1
  2691     0498  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2692     0499  1283               	bcf	3,5	;RP0=0, select bank0
  2693     049A  1303               	bcf	3,6	;RP1=0, select bank0
  2694     049B  083E               	movf	?_scale,w
  2695     049C  1683               	bsf	3,5	;RP0=1, select bank1
  2696     049D  1303               	bcf	3,6	;RP1=0, select bank1
  2697     049E  00B7               	movwf	sprintf@tmpval^(0+128)
  2698     049F                     l3369:
  2699     049F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2700     04A0  00F3               	movwf	__div_to_l_@f1+3
  2701     04A1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2702     04A2  00F2               	movwf	__div_to_l_@f1+2
  2703     04A3  083F               	movf	(sprintf@fval+1)^(0+128),w
  2704     04A4  00F1               	movwf	__div_to_l_@f1+1
  2705     04A5  083E               	movf	sprintf@fval^(0+128),w
  2706     04A6  00F0               	movwf	__div_to_l_@f1
  2707     04A7  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2708     04A8  00F7               	movwf	__div_to_l_@f2+3
  2709     04A9  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2710     04AA  00F6               	movwf	__div_to_l_@f2+2
  2711     04AB  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2712     04AC  00F5               	movwf	__div_to_l_@f2+1
  2713     04AD  0837               	movf	sprintf@tmpval^(0+128),w
  2714     04AE  00F4               	movwf	__div_to_l_@f2
  2715     04AF  120A  158A  20A4  120A  118A  	fcall	__div_to_l_
  2716     04B4  0873               	movf	?__div_to_l_+3,w
  2717     04B5  1683               	bsf	3,5	;RP0=1, select bank1
  2718     04B6  1303               	bcf	3,6	;RP1=0, select bank1
  2719     04B7  00B4               	movwf	(sprintf@val+3)^(0+128)
  2720     04B8  0872               	movf	?__div_to_l_+2,w
  2721     04B9  00B3               	movwf	(sprintf@val+2)^(0+128)
  2722     04BA  0871               	movf	?__div_to_l_+1,w
  2723     04BB  00B2               	movwf	(sprintf@val+1)^(0+128)
  2724     04BC  0870               	movf	?__div_to_l_,w
  2725     04BD  00B1               	movwf	sprintf@val^(0+128)
  2726     04BE                     l3373:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2729     04BE  3000               	movlw	0
  2730     04BF  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2731     04C0  3000               	movlw	0
  2732     04C1  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2733     04C2  3000               	movlw	0
  2734     04C3  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2735     04C4  3000               	movlw	0
  2736     04C5  00BE               	movwf	sprintf@fval^(0+128)
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2739     04C6  2D4B               	goto	l3381
  2740     04C7                     l3375:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2743     04C7  1683               	bsf	3,5	;RP0=1, select bank1
  2744     04C8  1303               	bcf	3,6	;RP1=0, select bank1
  2745     04C9  0841               	movf	(sprintf@fval+3)^(0+128),w
  2746     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2747     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2748     04CC  00D4               	movwf	___fltol@f1+3
  2749     04CD  1683               	bsf	3,5	;RP0=1, select bank1
  2750     04CE  1303               	bcf	3,6	;RP1=0, select bank1
  2751     04CF  0840               	movf	(sprintf@fval+2)^(0+128),w
  2752     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2753     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2754     04D2  00D3               	movwf	___fltol@f1+2
  2755     04D3  1683               	bsf	3,5	;RP0=1, select bank1
  2756     04D4  1303               	bcf	3,6	;RP1=0, select bank1
  2757     04D5  083F               	movf	(sprintf@fval+1)^(0+128),w
  2758     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2759     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2760     04D8  00D2               	movwf	___fltol@f1+1
  2761     04D9  1683               	bsf	3,5	;RP0=1, select bank1
  2762     04DA  1303               	bcf	3,6	;RP1=0, select bank1
  2763     04DB  083E               	movf	sprintf@fval^(0+128),w
  2764     04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2765     04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2766     04DE  00D1               	movwf	___fltol@f1
  2767     04DF  160A  158A  2788  120A  118A  	fcall	___fltol
  2768     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2769     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2770     04E6  0854               	movf	?___fltol+3,w
  2771     04E7  1683               	bsf	3,5	;RP0=1, select bank1
  2772     04E8  1303               	bcf	3,6	;RP1=0, select bank1
  2773     04E9  00B4               	movwf	(sprintf@val+3)^(0+128)
  2774     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2775     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2776     04EC  0853               	movf	?___fltol+2,w
  2777     04ED  1683               	bsf	3,5	;RP0=1, select bank1
  2778     04EE  1303               	bcf	3,6	;RP1=0, select bank1
  2779     04EF  00B3               	movwf	(sprintf@val+2)^(0+128)
  2780     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2781     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2782     04F2  0852               	movf	?___fltol+1,w
  2783     04F3  1683               	bsf	3,5	;RP0=1, select bank1
  2784     04F4  1303               	bcf	3,6	;RP1=0, select bank1
  2785     04F5  00B2               	movwf	(sprintf@val+1)^(0+128)
  2786     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2787     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2788     04F8  0851               	movf	?___fltol,w
  2789     04F9  1683               	bsf	3,5	;RP0=1, select bank1
  2790     04FA  1303               	bcf	3,6	;RP1=0, select bank1
  2791     04FB  00B1               	movwf	sprintf@val^(0+128)
  2792     04FC                     l3377:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2795     04FC  0834               	movf	(sprintf@val+3)^(0+128),w
  2796     04FD  00F3               	movwf	___xxtofl@val+3
  2797     04FE  0833               	movf	(sprintf@val+2)^(0+128),w
  2798     04FF  00F2               	movwf	___xxtofl@val+2
  2799     0500  0832               	movf	(sprintf@val+1)^(0+128),w
  2800     0501  00F1               	movwf	___xxtofl@val+1
  2801     0502  0831               	movf	sprintf@val^(0+128),w
  2802     0503  00F0               	movwf	___xxtofl@val
  2803     0504  3000               	movlw	0
  2804     0505  160A  118A  2112  120A  118A  	fcall	___xxtofl
  2805     050A  0873               	movf	?___xxtofl+3,w
  2806     050B  1283               	bcf	3,5	;RP0=0, select bank0
  2807     050C  1303               	bcf	3,6	;RP1=0, select bank0
  2808     050D  00E9               	movwf	___flsub@a+3
  2809     050E  0872               	movf	?___xxtofl+2,w
  2810     050F  00E8               	movwf	___flsub@a+2
  2811     0510  0871               	movf	?___xxtofl+1,w
  2812     0511  00E7               	movwf	___flsub@a+1
  2813     0512  0870               	movf	?___xxtofl,w
  2814     0513  00E6               	movwf	___flsub@a
  2815     0514  1683               	bsf	3,5	;RP0=1, select bank1
  2816     0515  1303               	bcf	3,6	;RP1=0, select bank1
  2817     0516  0841               	movf	(sprintf@fval+3)^(0+128),w
  2818     0517  1283               	bcf	3,5	;RP0=0, select bank0
  2819     0518  1303               	bcf	3,6	;RP1=0, select bank0
  2820     0519  00ED               	movwf	___flsub@b+3
  2821     051A  1683               	bsf	3,5	;RP0=1, select bank1
  2822     051B  1303               	bcf	3,6	;RP1=0, select bank1
  2823     051C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2824     051D  1283               	bcf	3,5	;RP0=0, select bank0
  2825     051E  1303               	bcf	3,6	;RP1=0, select bank0
  2826     051F  00EC               	movwf	___flsub@b+2
  2827     0520  1683               	bsf	3,5	;RP0=1, select bank1
  2828     0521  1303               	bcf	3,6	;RP1=0, select bank1
  2829     0522  083F               	movf	(sprintf@fval+1)^(0+128),w
  2830     0523  1283               	bcf	3,5	;RP0=0, select bank0
  2831     0524  1303               	bcf	3,6	;RP1=0, select bank0
  2832     0525  00EB               	movwf	___flsub@b+1
  2833     0526  1683               	bsf	3,5	;RP0=1, select bank1
  2834     0527  1303               	bcf	3,6	;RP1=0, select bank1
  2835     0528  083E               	movf	sprintf@fval^(0+128),w
  2836     0529  1283               	bcf	3,5	;RP0=0, select bank0
  2837     052A  1303               	bcf	3,6	;RP1=0, select bank0
  2838     052B  00EA               	movwf	___flsub@b
  2839     052C  160A  158A  2400  120A  118A  	fcall	___flsub
  2840     0531  1283               	bcf	3,5	;RP0=0, select bank0
  2841     0532  1303               	bcf	3,6	;RP1=0, select bank0
  2842     0533  0869               	movf	?___flsub+3,w
  2843     0534  1683               	bsf	3,5	;RP0=1, select bank1
  2844     0535  1303               	bcf	3,6	;RP1=0, select bank1
  2845     0536  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2846     0537  1283               	bcf	3,5	;RP0=0, select bank0
  2847     0538  1303               	bcf	3,6	;RP1=0, select bank0
  2848     0539  0868               	movf	?___flsub+2,w
  2849     053A  1683               	bsf	3,5	;RP0=1, select bank1
  2850     053B  1303               	bcf	3,6	;RP1=0, select bank1
  2851     053C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2852     053D  1283               	bcf	3,5	;RP0=0, select bank0
  2853     053E  1303               	bcf	3,6	;RP1=0, select bank0
  2854     053F  0867               	movf	?___flsub+1,w
  2855     0540  1683               	bsf	3,5	;RP0=1, select bank1
  2856     0541  1303               	bcf	3,6	;RP1=0, select bank1
  2857     0542  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2858     0543  1283               	bcf	3,5	;RP0=0, select bank0
  2859     0544  1303               	bcf	3,6	;RP1=0, select bank0
  2860     0545  0866               	movf	?___flsub,w
  2861     0546  1683               	bsf	3,5	;RP0=1, select bank1
  2862     0547  1303               	bcf	3,6	;RP1=0, select bank1
  2863     0548  00BE               	movwf	sprintf@fval^(0+128)
  2864     0549                     l3379:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2867     0549  01B5               	clrf	sprintf@eexp^(0+128)
  2868     054A  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2869     054B                     l3381:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2872     054B  01C2               	clrf	sprintf@c^(0+128)
  2873     054C  0AC2               	incf	sprintf@c^(0+128),f
  2874     054D                     l3387:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2877     054D  0842               	movf	sprintf@c^(0+128),w
  2878     054E  00A5               	movwf	??_sprintf^(0+128)
  2879     054F  3001               	movlw	1
  2880     0550                     u5715:
  2881     0550  1003               	clrc
  2882     0551  0DA5               	rlf	??_sprintf^(0+128),f
  2883     0552  3EFF               	addlw	-1
  2884     0553  1D03               	skipz
  2885     0554  2D50               	goto	u5715
  2886     0555  1003               	clrc
  2887     0556  0D25               	rlf	??_sprintf^(0+128),w
  2888     0557  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2889     0558  0084               	movwf	4
  2890     0559  160A  158A  200A  120A  118A  	fcall	stringdir
  2891     055E  00A6               	movwf	(??_sprintf+1)^(0+128)
  2892     055F  160A  158A  200A  120A  118A  	fcall	stringdir
  2893     0564  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2894     0565  160A  158A  200A  120A  118A  	fcall	stringdir
  2895     056A  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2896     056B  160A  158A  200A  120A  118A  	fcall	stringdir
  2897     0570  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2898     0571  0829               	movf	(??_sprintf+4)^(0+128),w
  2899     0572  0234               	subwf	(sprintf@val+3)^(0+128),w
  2900     0573  1D03               	skipz
  2901     0574  2D7F               	goto	u5725
  2902     0575  0828               	movf	(??_sprintf+3)^(0+128),w
  2903     0576  0233               	subwf	(sprintf@val+2)^(0+128),w
  2904     0577  1D03               	skipz
  2905     0578  2D7F               	goto	u5725
  2906     0579  0827               	movf	(??_sprintf+2)^(0+128),w
  2907     057A  0232               	subwf	(sprintf@val+1)^(0+128),w
  2908     057B  1D03               	skipz
  2909     057C  2D7F               	goto	u5725
  2910     057D  0826               	movf	(??_sprintf+1)^(0+128),w
  2911     057E  0231               	subwf	sprintf@val^(0+128),w
  2912     057F                     u5725:
  2913     057F  1803               	skipnc
  2914     0580  2D82               	goto	u5721
  2915     0581  2D83               	goto	u5720
  2916     0582                     u5721:
  2917     0582  2D84               	goto	l3391
  2918     0583                     u5720:
  2919     0583  2D8E               	goto	l3393
  2920     0584                     l3391:
  2921     0584  3001               	movlw	1
  2922     0585  00A5               	movwf	??_sprintf^(0+128)
  2923     0586  0825               	movf	??_sprintf^(0+128),w
  2924     0587  07C2               	addwf	sprintf@c^(0+128),f
  2925     0588  300A               	movlw	10
  2926     0589  0642               	xorwf	sprintf@c^(0+128),w
  2927     058A  1D03               	btfss	3,2
  2928     058B  2D8D               	goto	u5731
  2929     058C  2D8E               	goto	u5730
  2930     058D                     u5731:
  2931     058D  2D4D               	goto	l3387
  2932     058E                     u5730:
  2933     058E                     l3393:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2936     058E  3003               	movlw	3
  2937     058F  052F               	andwf	sprintf@flag^(0+128),w
  2938     0590  00A5               	movwf	??_sprintf^(0+128)
  2939     0591  3000               	movlw	0
  2940     0592  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2941     0593  00A6               	movwf	(??_sprintf+1)^(0+128)
  2942     0594  0825               	movf	??_sprintf^(0+128),w
  2943     0595  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2944     0596  1903               	btfsc	3,2
  2945     0597  2D99               	goto	u5741
  2946     0598  2D9A               	goto	u5740
  2947     0599                     u5741:
  2948     0599  2E08               	goto	l319
  2949     059A                     u5740:
  2950     059A                     l3395:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2953     059A  083B               	movf	sprintf@sp^(0+128),w
  2954     059B  0084               	movwf	4
  2955     059C  302D               	movlw	45
  2956     059D  1383               	bcf	3,7	;select IRP bank0
  2957     059E  0080               	movwf	0
  2958     059F                     l3397:
  2959     059F  3001               	movlw	1
  2960     05A0  00A5               	movwf	??_sprintf^(0+128)
  2961     05A1  0825               	movf	??_sprintf^(0+128),w
  2962     05A2  07BB               	addwf	sprintf@sp^(0+128),f
  2963     05A3  2E08               	goto	l319
  2964     05A4                     l3399:
  2965                           
  2966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2967     05A4  0842               	movf	sprintf@c^(0+128),w
  2968     05A5  00A5               	movwf	??_sprintf^(0+128)
  2969     05A6  3001               	movlw	1
  2970     05A7                     u5755:
  2971     05A7  1003               	clrc
  2972     05A8  0DA5               	rlf	??_sprintf^(0+128),f
  2973     05A9  3EFF               	addlw	-1
  2974     05AA  1D03               	skipz
  2975     05AB  2DA7               	goto	u5755
  2976     05AC  1003               	clrc
  2977     05AD  0D25               	rlf	??_sprintf^(0+128),w
  2978     05AE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2979     05AF  0084               	movwf	4
  2980     05B0  160A  158A  200A  120A  118A  	fcall	stringdir
  2981     05B5  00F0               	movwf	___lldiv@divisor
  2982     05B6  160A  158A  200A  120A  118A  	fcall	stringdir
  2983     05BB  00F1               	movwf	___lldiv@divisor+1
  2984     05BC  160A  158A  200A  120A  118A  	fcall	stringdir
  2985     05C1  00F2               	movwf	___lldiv@divisor+2
  2986     05C2  160A  158A  200A  120A  118A  	fcall	stringdir
  2987     05C7  00F3               	movwf	___lldiv@divisor+3
  2988     05C8  0834               	movf	(sprintf@val+3)^(0+128),w
  2989     05C9  00F7               	movwf	___lldiv@dividend+3
  2990     05CA  0833               	movf	(sprintf@val+2)^(0+128),w
  2991     05CB  00F6               	movwf	___lldiv@dividend+2
  2992     05CC  0832               	movf	(sprintf@val+1)^(0+128),w
  2993     05CD  00F5               	movwf	___lldiv@dividend+1
  2994     05CE  0831               	movf	sprintf@val^(0+128),w
  2995     05CF  00F4               	movwf	___lldiv@dividend
  2996     05D0  160A  158A  26B9  120A  118A  	fcall	___lldiv
  2997     05D5  0873               	movf	?___lldiv+3,w
  2998     05D6  1683               	bsf	3,5	;RP0=1, select bank1
  2999     05D7  1303               	bcf	3,6	;RP1=0, select bank1
  3000     05D8  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3001     05D9  0872               	movf	?___lldiv+2,w
  3002     05DA  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3003     05DB  0871               	movf	?___lldiv+1,w
  3004     05DC  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3005     05DD  0870               	movf	?___lldiv,w
  3006     05DE  00B7               	movwf	sprintf@tmpval^(0+128)
  3007     05DF                     l3401:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3010     05DF  3000               	movlw	0
  3011     05E0  00F3               	movwf	___llmod@divisor+3
  3012     05E1  3000               	movlw	0
  3013     05E2  00F2               	movwf	___llmod@divisor+2
  3014     05E3  3000               	movlw	0
  3015     05E4  00F1               	movwf	___llmod@divisor+1
  3016     05E5  300A               	movlw	10
  3017     05E6  00F0               	movwf	___llmod@divisor
  3018     05E7  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3019     05E8  00F7               	movwf	___llmod@dividend+3
  3020     05E9  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3021     05EA  00F6               	movwf	___llmod@dividend+2
  3022     05EB  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3023     05EC  00F5               	movwf	___llmod@dividend+1
  3024     05ED  0837               	movf	sprintf@tmpval^(0+128),w
  3025     05EE  00F4               	movwf	___llmod@dividend
  3026     05EF  160A  158A  25A9  120A  118A  	fcall	___llmod
  3027     05F4  0873               	movf	?___llmod+3,w
  3028     05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3029     05F6  1303               	bcf	3,6	;RP1=0, select bank1
  3030     05F7  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3031     05F8  0872               	movf	?___llmod+2,w
  3032     05F9  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3033     05FA  0871               	movf	?___llmod+1,w
  3034     05FB  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3035     05FC  0870               	movf	?___llmod,w
  3036     05FD  00B7               	movwf	sprintf@tmpval^(0+128)
  3037     05FE                     l3403:
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3040     05FE  083B               	movf	sprintf@sp^(0+128),w
  3041     05FF  0084               	movwf	4
  3042     0600  0837               	movf	sprintf@tmpval^(0+128),w
  3043     0601  3E30               	addlw	48
  3044     0602  1383               	bcf	3,7	;select IRP bank0
  3045     0603  0080               	movwf	0
  3046     0604  3001               	movlw	1
  3047     0605  00A5               	movwf	??_sprintf^(0+128)
  3048     0606  0825               	movf	??_sprintf^(0+128),w
  3049     0607  07BB               	addwf	sprintf@sp^(0+128),f
  3050     0608                     l319:	
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3052                           
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3055     0608  3001               	movlw	1
  3056     0609  02C2               	subwf	sprintf@c^(0+128),f
  3057     060A  0A42               	incf	sprintf@c^(0+128),w
  3058     060B  1D03               	btfss	3,2
  3059     060C  2E0E               	goto	u5761
  3060     060D  2E0F               	goto	u5760
  3061     060E                     u5761:
  3062     060E  2DA4               	goto	l3399
  3063     060F                     u5760:
  3064     060F  2E21               	goto	l3411
  3065     0610                     l3405:
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3068     0610  1683               	bsf	3,5	;RP0=1, select bank1
  3069     0611  1303               	bcf	3,6	;RP1=0, select bank1
  3070     0612  083B               	movf	sprintf@sp^(0+128),w
  3071     0613  0084               	movwf	4
  3072     0614  3030               	movlw	48
  3073     0615  1383               	bcf	3,7	;select IRP bank0
  3074     0616  0080               	movwf	0
  3075     0617                     l3407:
  3076     0617  3001               	movlw	1
  3077     0618  00A5               	movwf	??_sprintf^(0+128)
  3078     0619  0825               	movf	??_sprintf^(0+128),w
  3079     061A  07BB               	addwf	sprintf@sp^(0+128),f
  3080     061B                     l3409:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3083     061B  30FF               	movlw	255
  3084     061C  07B5               	addwf	sprintf@eexp^(0+128),f
  3085     061D  1803               	skipnc
  3086     061E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3087     061F  30FF               	movlw	255
  3088     0620  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3089     0621                     l3411:
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3092     0621  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3093     0622  3A80               	xorlw	128
  3094     0623  00FF               	movwf	btemp+1
  3095     0624  3080               	movlw	128
  3096     0625  027F               	subwf	btemp+1,w
  3097     0626  1D03               	skipz
  3098     0627  2E2A               	goto	u5775
  3099     0628  3001               	movlw	1
  3100     0629  0235               	subwf	sprintf@eexp^(0+128),w
  3101     062A                     u5775:
  3102     062A  1803               	skipnc
  3103     062B  2E2D               	goto	u5771
  3104     062C  2E2E               	goto	u5770
  3105     062D                     u5771:
  3106     062D  2E10               	goto	l3405
  3107     062E                     u5770:
  3108     062E                     l3413:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3111     062E  1683               	bsf	3,5	;RP0=1, select bank1
  3112     062F  1303               	bcf	3,6	;RP1=0, select bank1
  3113     0630  083D               	movf	(sprintf@prec+1)^(0+128),w
  3114     0631  3A80               	xorlw	128
  3115     0632  00FF               	movwf	btemp+1
  3116     0633  3080               	movlw	128
  3117     0634  027F               	subwf	btemp+1,w
  3118     0635  1D03               	skipz
  3119     0636  2E39               	goto	u5785
  3120     0637  3009               	movlw	9
  3121     0638  023C               	subwf	sprintf@prec^(0+128),w
  3122     0639                     u5785:
  3123     0639  1C03               	skipc
  3124     063A  2E3C               	goto	u5781
  3125     063B  2E3D               	goto	u5780
  3126     063C                     u5781:
  3127     063C  2E42               	goto	l3417
  3128     063D                     u5780:
  3129     063D                     l3415:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3132     063D  3008               	movlw	8
  3133     063E  1683               	bsf	3,5	;RP0=1, select bank1
  3134     063F  1303               	bcf	3,6	;RP1=0, select bank1
  3135     0640  00C2               	movwf	sprintf@c^(0+128)
  3136     0641  2E46               	goto	l326
  3137     0642                     l3417:
  3138                           
  3139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3140     0642  1683               	bsf	3,5	;RP0=1, select bank1
  3141     0643  1303               	bcf	3,6	;RP1=0, select bank1
  3142     0644  083C               	movf	sprintf@prec^(0+128),w
  3143     0645  00C2               	movwf	sprintf@c^(0+128)
  3144     0646                     l326:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3147     0646  0842               	movf	sprintf@c^(0+128),w
  3148     0647  00A5               	movwf	??_sprintf^(0+128)
  3149     0648  01A6               	clrf	(??_sprintf^(0+128)+1)
  3150     0649  0825               	movf	??_sprintf^(0+128),w
  3151     064A  02BC               	subwf	sprintf@prec^(0+128),f
  3152     064B  0826               	movf	(??_sprintf+1)^(0+128),w
  3153     064C  1C03               	skipc
  3154     064D  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3155     064E  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3156     064F                     l3419:
  3157                           
  3158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3159     064F  0842               	movf	sprintf@c^(0+128),w
  3160     0650  1903               	btfsc	3,2
  3161     0651  2E53               	goto	u5791
  3162     0652  2E54               	goto	u5790
  3163     0653                     u5791:
  3164     0653  2E5D               	goto	l3425
  3165     0654                     u5790:
  3166     0654                     l3421:
  3167                           
  3168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3169     0654  083B               	movf	sprintf@sp^(0+128),w
  3170     0655  0084               	movwf	4
  3171     0656  302E               	movlw	46
  3172     0657  1383               	bcf	3,7	;select IRP bank0
  3173     0658  0080               	movwf	0
  3174     0659                     l3423:
  3175     0659  3001               	movlw	1
  3176     065A  00A5               	movwf	??_sprintf^(0+128)
  3177     065B  0825               	movf	??_sprintf^(0+128),w
  3178     065C  07BB               	addwf	sprintf@sp^(0+128),f
  3179     065D                     l3425:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3182     065D  0842               	movf	sprintf@c^(0+128),w
  3183     065E  120A  158A  24A1  120A  118A  	fcall	_scale
  3184     0663  1283               	bcf	3,5	;RP0=0, select bank0
  3185     0664  1303               	bcf	3,6	;RP1=0, select bank0
  3186     0665  0841               	movf	?_scale+3,w
  3187     0666  1683               	bsf	3,5	;RP0=1, select bank1
  3188     0667  1303               	bcf	3,6	;RP1=0, select bank1
  3189     0668  00AD               	movwf	(_sprintf$1093+3)^(0+128)
  3190     0669  1283               	bcf	3,5	;RP0=0, select bank0
  3191     066A  1303               	bcf	3,6	;RP1=0, select bank0
  3192     066B  0840               	movf	?_scale+2,w
  3193     066C  1683               	bsf	3,5	;RP0=1, select bank1
  3194     066D  1303               	bcf	3,6	;RP1=0, select bank1
  3195     066E  00AC               	movwf	(_sprintf$1093+2)^(0+128)
  3196     066F  1283               	bcf	3,5	;RP0=0, select bank0
  3197     0670  1303               	bcf	3,6	;RP1=0, select bank0
  3198     0671  083F               	movf	?_scale+1,w
  3199     0672  1683               	bsf	3,5	;RP0=1, select bank1
  3200     0673  1303               	bcf	3,6	;RP1=0, select bank1
  3201     0674  00AB               	movwf	(_sprintf$1093+1)^(0+128)
  3202     0675  1283               	bcf	3,5	;RP0=0, select bank0
  3203     0676  1303               	bcf	3,6	;RP1=0, select bank0
  3204     0677  083E               	movf	?_scale,w
  3205     0678  1683               	bsf	3,5	;RP0=1, select bank1
  3206     0679  1303               	bcf	3,6	;RP1=0, select bank1
  3207     067A  00AA               	movwf	_sprintf$1093^(0+128)
  3208     067B                     l3427:
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3211     067B  082D               	movf	(_sprintf$1093+3)^(0+128),w
  3212     067C  1283               	bcf	3,5	;RP0=0, select bank0
  3213     067D  1303               	bcf	3,6	;RP1=0, select bank0
  3214     067E  00AB               	movwf	___flmul@a+3
  3215     067F  1683               	bsf	3,5	;RP0=1, select bank1
  3216     0680  1303               	bcf	3,6	;RP1=0, select bank1
  3217     0681  082C               	movf	(_sprintf$1093+2)^(0+128),w
  3218     0682  1283               	bcf	3,5	;RP0=0, select bank0
  3219     0683  1303               	bcf	3,6	;RP1=0, select bank0
  3220     0684  00AA               	movwf	___flmul@a+2
  3221     0685  1683               	bsf	3,5	;RP0=1, select bank1
  3222     0686  1303               	bcf	3,6	;RP1=0, select bank1
  3223     0687  082B               	movf	(_sprintf$1093+1)^(0+128),w
  3224     0688  1283               	bcf	3,5	;RP0=0, select bank0
  3225     0689  1303               	bcf	3,6	;RP1=0, select bank0
  3226     068A  00A9               	movwf	___flmul@a+1
  3227     068B  1683               	bsf	3,5	;RP0=1, select bank1
  3228     068C  1303               	bcf	3,6	;RP1=0, select bank1
  3229     068D  082A               	movf	_sprintf$1093^(0+128),w
  3230     068E  1283               	bcf	3,5	;RP0=0, select bank0
  3231     068F  1303               	bcf	3,6	;RP1=0, select bank0
  3232     0690  00A8               	movwf	___flmul@a
  3233     0691  1683               	bsf	3,5	;RP0=1, select bank1
  3234     0692  1303               	bcf	3,6	;RP1=0, select bank1
  3235     0693  0841               	movf	(sprintf@fval+3)^(0+128),w
  3236     0694  1283               	bcf	3,5	;RP0=0, select bank0
  3237     0695  1303               	bcf	3,6	;RP1=0, select bank0
  3238     0696  00A7               	movwf	___flmul@b+3
  3239     0697  1683               	bsf	3,5	;RP0=1, select bank1
  3240     0698  1303               	bcf	3,6	;RP1=0, select bank1
  3241     0699  0840               	movf	(sprintf@fval+2)^(0+128),w
  3242     069A  1283               	bcf	3,5	;RP0=0, select bank0
  3243     069B  1303               	bcf	3,6	;RP1=0, select bank0
  3244     069C  00A6               	movwf	___flmul@b+2
  3245     069D  1683               	bsf	3,5	;RP0=1, select bank1
  3246     069E  1303               	bcf	3,6	;RP1=0, select bank1
  3247     069F  083F               	movf	(sprintf@fval+1)^(0+128),w
  3248     06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3249     06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3250     06A2  00A5               	movwf	___flmul@b+1
  3251     06A3  1683               	bsf	3,5	;RP0=1, select bank1
  3252     06A4  1303               	bcf	3,6	;RP1=0, select bank1
  3253     06A5  083E               	movf	sprintf@fval^(0+128),w
  3254     06A6  1283               	bcf	3,5	;RP0=0, select bank0
  3255     06A7  1303               	bcf	3,6	;RP1=0, select bank0
  3256     06A8  00A4               	movwf	___flmul@b
  3257     06A9  120A  158A  215C  120A  118A  	fcall	___flmul
  3258     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3259     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3260     06B0  0827               	movf	?___flmul+3,w
  3261     06B1  00D4               	movwf	___fltol@f1+3
  3262     06B2  0826               	movf	?___flmul+2,w
  3263     06B3  00D3               	movwf	___fltol@f1+2
  3264     06B4  0825               	movf	?___flmul+1,w
  3265     06B5  00D2               	movwf	___fltol@f1+1
  3266     06B6  0824               	movf	?___flmul,w
  3267     06B7  00D1               	movwf	___fltol@f1
  3268     06B8  160A  158A  2788  120A  118A  	fcall	___fltol
  3269     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  3270     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  3271     06BF  0854               	movf	?___fltol+3,w
  3272     06C0  1683               	bsf	3,5	;RP0=1, select bank1
  3273     06C1  1303               	bcf	3,6	;RP1=0, select bank1
  3274     06C2  00B4               	movwf	(sprintf@val+3)^(0+128)
  3275     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  3276     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  3277     06C5  0853               	movf	?___fltol+2,w
  3278     06C6  1683               	bsf	3,5	;RP0=1, select bank1
  3279     06C7  1303               	bcf	3,6	;RP1=0, select bank1
  3280     06C8  00B3               	movwf	(sprintf@val+2)^(0+128)
  3281     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  3282     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  3283     06CB  0852               	movf	?___fltol+1,w
  3284     06CC  1683               	bsf	3,5	;RP0=1, select bank1
  3285     06CD  1303               	bcf	3,6	;RP1=0, select bank1
  3286     06CE  00B2               	movwf	(sprintf@val+1)^(0+128)
  3287     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3288     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3289     06D1  0851               	movf	?___fltol,w
  3290     06D2  1683               	bsf	3,5	;RP0=1, select bank1
  3291     06D3  1303               	bcf	3,6	;RP1=0, select bank1
  3292     06D4  00B1               	movwf	sprintf@val^(0+128)
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3295     06D5  2F75               	goto	l3437
  3296     06D6                     l3429:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3299     06D6  0842               	movf	sprintf@c^(0+128),w
  3300     06D7  00A5               	movwf	??_sprintf^(0+128)
  3301     06D8  3001               	movlw	1
  3302     06D9                     u5805:
  3303     06D9  1003               	clrc
  3304     06DA  0DA5               	rlf	??_sprintf^(0+128),f
  3305     06DB  3EFF               	addlw	-1
  3306     06DC  1D03               	skipz
  3307     06DD  2ED9               	goto	u5805
  3308     06DE  1003               	clrc
  3309     06DF  0D25               	rlf	??_sprintf^(0+128),w
  3310     06E0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3311     06E1  0084               	movwf	4
  3312     06E2  160A  158A  200A  120A  118A  	fcall	stringdir
  3313     06E7  00F0               	movwf	___lldiv@divisor
  3314     06E8  160A  158A  200A  120A  118A  	fcall	stringdir
  3315     06ED  00F1               	movwf	___lldiv@divisor+1
  3316     06EE  160A  158A  200A  120A  118A  	fcall	stringdir
  3317     06F3  00F2               	movwf	___lldiv@divisor+2
  3318     06F4  160A  158A  200A  120A  118A  	fcall	stringdir
  3319     06F9  00F3               	movwf	___lldiv@divisor+3
  3320     06FA  0834               	movf	(sprintf@val+3)^(0+128),w
  3321     06FB  00F7               	movwf	___lldiv@dividend+3
  3322     06FC  0833               	movf	(sprintf@val+2)^(0+128),w
  3323     06FD  00F6               	movwf	___lldiv@dividend+2
  3324     06FE  0832               	movf	(sprintf@val+1)^(0+128),w
  3325     06FF  00F5               	movwf	___lldiv@dividend+1
  3326     0700  0831               	movf	sprintf@val^(0+128),w
  3327     0701  00F4               	movwf	___lldiv@dividend
  3328     0702  160A  158A  26B9  120A  118A  	fcall	___lldiv
  3329     0707  0873               	movf	?___lldiv+3,w
  3330     0708  1683               	bsf	3,5	;RP0=1, select bank1
  3331     0709  1303               	bcf	3,6	;RP1=0, select bank1
  3332     070A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3333     070B  0872               	movf	?___lldiv+2,w
  3334     070C  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3335     070D  0871               	movf	?___lldiv+1,w
  3336     070E  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3337     070F  0870               	movf	?___lldiv,w
  3338     0710  00B7               	movwf	sprintf@tmpval^(0+128)
  3339     0711                     l3431:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3342     0711  3000               	movlw	0
  3343     0712  00F3               	movwf	___llmod@divisor+3
  3344     0713  3000               	movlw	0
  3345     0714  00F2               	movwf	___llmod@divisor+2
  3346     0715  3000               	movlw	0
  3347     0716  00F1               	movwf	___llmod@divisor+1
  3348     0717  300A               	movlw	10
  3349     0718  00F0               	movwf	___llmod@divisor
  3350     0719  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3351     071A  00F7               	movwf	___llmod@dividend+3
  3352     071B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3353     071C  00F6               	movwf	___llmod@dividend+2
  3354     071D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3355     071E  00F5               	movwf	___llmod@dividend+1
  3356     071F  0837               	movf	sprintf@tmpval^(0+128),w
  3357     0720  00F4               	movwf	___llmod@dividend
  3358     0721  160A  158A  25A9  120A  118A  	fcall	___llmod
  3359     0726  0873               	movf	?___llmod+3,w
  3360     0727  1683               	bsf	3,5	;RP0=1, select bank1
  3361     0728  1303               	bcf	3,6	;RP1=0, select bank1
  3362     0729  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3363     072A  0872               	movf	?___llmod+2,w
  3364     072B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3365     072C  0871               	movf	?___llmod+1,w
  3366     072D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3367     072E  0870               	movf	?___llmod,w
  3368     072F  00B7               	movwf	sprintf@tmpval^(0+128)
  3369     0730                     l3433:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3372     0730  083B               	movf	sprintf@sp^(0+128),w
  3373     0731  0084               	movwf	4
  3374     0732  0837               	movf	sprintf@tmpval^(0+128),w
  3375     0733  3E30               	addlw	48
  3376     0734  1383               	bcf	3,7	;select IRP bank0
  3377     0735  0080               	movwf	0
  3378     0736  3001               	movlw	1
  3379     0737  00A5               	movwf	??_sprintf^(0+128)
  3380     0738  0825               	movf	??_sprintf^(0+128),w
  3381     0739  07BB               	addwf	sprintf@sp^(0+128),f
  3382     073A                     l3435:
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3385     073A  0842               	movf	sprintf@c^(0+128),w
  3386     073B  00A5               	movwf	??_sprintf^(0+128)
  3387     073C  3001               	movlw	1
  3388     073D                     u5815:
  3389     073D  1003               	clrc
  3390     073E  0DA5               	rlf	??_sprintf^(0+128),f
  3391     073F  3EFF               	addlw	-1
  3392     0740  1D03               	skipz
  3393     0741  2F3D               	goto	u5815
  3394     0742  1003               	clrc
  3395     0743  0D25               	rlf	??_sprintf^(0+128),w
  3396     0744  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3397     0745  0084               	movwf	4
  3398     0746  160A  158A  200A  120A  118A  	fcall	stringdir
  3399     074B  00F0               	movwf	___llmod@divisor
  3400     074C  160A  158A  200A  120A  118A  	fcall	stringdir
  3401     0751  00F1               	movwf	___llmod@divisor+1
  3402     0752  160A  158A  200A  120A  118A  	fcall	stringdir
  3403     0757  00F2               	movwf	___llmod@divisor+2
  3404     0758  160A  158A  200A  120A  118A  	fcall	stringdir
  3405     075D  00F3               	movwf	___llmod@divisor+3
  3406     075E  0834               	movf	(sprintf@val+3)^(0+128),w
  3407     075F  00F7               	movwf	___llmod@dividend+3
  3408     0760  0833               	movf	(sprintf@val+2)^(0+128),w
  3409     0761  00F6               	movwf	___llmod@dividend+2
  3410     0762  0832               	movf	(sprintf@val+1)^(0+128),w
  3411     0763  00F5               	movwf	___llmod@dividend+1
  3412     0764  0831               	movf	sprintf@val^(0+128),w
  3413     0765  00F4               	movwf	___llmod@dividend
  3414     0766  160A  158A  25A9  120A  118A  	fcall	___llmod
  3415     076B  0873               	movf	?___llmod+3,w
  3416     076C  1683               	bsf	3,5	;RP0=1, select bank1
  3417     076D  1303               	bcf	3,6	;RP1=0, select bank1
  3418     076E  00B4               	movwf	(sprintf@val+3)^(0+128)
  3419     076F  0872               	movf	?___llmod+2,w
  3420     0770  00B3               	movwf	(sprintf@val+2)^(0+128)
  3421     0771  0871               	movf	?___llmod+1,w
  3422     0772  00B2               	movwf	(sprintf@val+1)^(0+128)
  3423     0773  0870               	movf	?___llmod,w
  3424     0774  00B1               	movwf	sprintf@val^(0+128)
  3425     0775                     l3437:
  3426                           
  3427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3428     0775  3001               	movlw	1
  3429     0776  02C2               	subwf	sprintf@c^(0+128),f
  3430     0777  0A42               	incf	sprintf@c^(0+128),w
  3431     0778  1D03               	btfss	3,2
  3432     0779  2F7B               	goto	u5821
  3433     077A  2F7C               	goto	u5820
  3434     077B                     u5821:
  3435     077B  2ED6               	goto	l3429
  3436     077C                     u5820:
  3437     077C  2F8C               	goto	l3445
  3438     077D                     l3439:
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3441     077D  083B               	movf	sprintf@sp^(0+128),w
  3442     077E  0084               	movwf	4
  3443     077F  3030               	movlw	48
  3444     0780  1383               	bcf	3,7	;select IRP bank0
  3445     0781  0080               	movwf	0
  3446     0782                     l3441:
  3447     0782  3001               	movlw	1
  3448     0783  00A5               	movwf	??_sprintf^(0+128)
  3449     0784  0825               	movf	??_sprintf^(0+128),w
  3450     0785  07BB               	addwf	sprintf@sp^(0+128),f
  3451     0786                     l3443:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3454     0786  30FF               	movlw	255
  3455     0787  07BC               	addwf	sprintf@prec^(0+128),f
  3456     0788  1803               	skipnc
  3457     0789  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3458     078A  30FF               	movlw	255
  3459     078B  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3460     078C                     l3445:
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3463     078C  083C               	movf	sprintf@prec^(0+128),w
  3464     078D  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3465     078E  1D03               	btfss	3,2
  3466     078F  2F91               	goto	u5831
  3467     0790  2F92               	goto	u5830
  3468     0791                     u5831:
  3469     0791  2F7D               	goto	l3439
  3470     0792                     u5830:
  3471     0792  2FD6               	goto	l3465
  3472     0793                     l3447:
  3473                           
  3474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3475     0793  083C               	movf	sprintf@prec^(0+128),w
  3476     0794  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3477     0795  1D03               	btfss	3,2
  3478     0796  2F98               	goto	u5841
  3479     0797  2F99               	goto	u5840
  3480     0798                     u5841:
  3481     0798  2FA7               	goto	l334
  3482     0799                     u5840:
  3483     0799                     l3449:
  3484     0799  0834               	movf	(sprintf@val+3)^(0+128),w
  3485     079A  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3486     079B  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3487     079C  0431               	iorwf	sprintf@val^(0+128),w
  3488     079D  1D03               	skipz
  3489     079E  2FA0               	goto	u5851
  3490     079F  2FA1               	goto	u5850
  3491     07A0                     u5851:
  3492     07A0  2FA7               	goto	l334
  3493     07A1                     u5850:
  3494     07A1                     l3451:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3497     07A1  3001               	movlw	1
  3498     07A2  07BC               	addwf	sprintf@prec^(0+128),f
  3499     07A3  1803               	skipnc
  3500     07A4  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3501     07A5  3000               	movlw	0
  3502     07A6  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3503     07A7                     l334:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3506     07A7  083D               	movf	(sprintf@prec+1)^(0+128),w
  3507     07A8  3A80               	xorlw	128
  3508     07A9  3C80               	sublw	128
  3509     07AA  1D03               	skipz
  3510     07AB  2FAE               	goto	u5865
  3511     07AC  083C               	movf	sprintf@prec^(0+128),w
  3512     07AD  0242               	subwf	sprintf@c^(0+128),w
  3513     07AE                     u5865:
  3514     07AE  1803               	skipnc
  3515     07AF  2FB1               	goto	u5861
  3516     07B0  2FB2               	goto	u5860
  3517     07B1                     u5861:
  3518     07B1  2FB3               	goto	l3455
  3519     07B2                     u5860:
  3520     07B2                     l3453:
  3521     07B2  2FC2               	goto	l3459
  3522     07B3                     l3455:
  3523     07B3  1683               	bsf	3,5	;RP0=1, select bank1
  3524     07B4  1303               	bcf	3,6	;RP1=0, select bank1
  3525     07B5  083D               	movf	(sprintf@prec+1)^(0+128),w
  3526     07B6  3A80               	xorlw	128
  3527     07B7  00A5               	movwf	??_sprintf^(0+128)
  3528     07B8  3080               	movlw	128
  3529     07B9  0225               	subwf	??_sprintf^(0+128),w
  3530     07BA  1D03               	skipz
  3531     07BB  2FBE               	goto	u5875
  3532     07BC  0842               	movf	sprintf@c^(0+128),w
  3533     07BD  023C               	subwf	sprintf@prec^(0+128),w
  3534     07BE                     u5875:
  3535     07BE  1803               	skipnc
  3536     07BF  2FC1               	goto	u5871
  3537     07C0  2FC2               	goto	u5870
  3538     07C1                     u5871:
  3539     07C1  2FC2               	goto	l3459
  3540     07C2                     u5870:
  3541     07C2                     l3457:
  3542     07C2                     l3459:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3545     07C2  3003               	movlw	3
  3546     07C3  1683               	bsf	3,5	;RP0=1, select bank1
  3547     07C4  1303               	bcf	3,6	;RP1=0, select bank1
  3548     07C5  052F               	andwf	sprintf@flag^(0+128),w
  3549     07C6  00A5               	movwf	??_sprintf^(0+128)
  3550     07C7  3000               	movlw	0
  3551     07C8  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3552     07C9  00A6               	movwf	(??_sprintf+1)^(0+128)
  3553     07CA  0825               	movf	??_sprintf^(0+128),w
  3554     07CB  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3555     07CC  1903               	btfsc	3,2
  3556     07CD  2FCF               	goto	u5881
  3557     07CE  2FD0               	goto	u5880
  3558     07CF                     u5881:
  3559     07CF  2FD6               	goto	l3465
  3560     07D0                     u5880:
  3561     07D0                     l3461:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3564     07D0  083B               	movf	sprintf@sp^(0+128),w
  3565     07D1  0084               	movwf	4
  3566     07D2  302D               	movlw	45
  3567     07D3  1383               	bcf	3,7	;select IRP bank0
  3568     07D4  0080               	movwf	0
  3569     07D5  29BC               	goto	l3277
  3570     07D6                     l3465:
  3571                           
  3572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3573     07D6  3001               	movlw	1
  3574     07D7  07A0               	addwf	sprintf@f^(0+128),f
  3575     07D8  30FF               	movlw	-1
  3576     07D9  0720               	addwf	sprintf@f^(0+128),w
  3577     07DA  0084               	movwf	4
  3578     07DB  160A  158A  200A  120A  118A  	fcall	stringdir
  3579     07E0  00C2               	movwf	sprintf@c^(0+128)
  3580     07E1  0842               	movf	sprintf@c^(0+128),w
  3581     07E2  1D03               	btfss	3,2
  3582     07E3  2FE5               	goto	u5891
  3583     07E4  2FE6               	goto	u5890
  3584     07E5                     u5891:
  3585     07E5  29B1               	goto	l3273
  3586     07E6                     u5890:
  3587     07E6                     l3467:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3590     07E6  083B               	movf	sprintf@sp^(0+128),w
  3591     07E7  0084               	movwf	4
  3592     07E8  1383               	bcf	3,7	;select IRP bank0
  3593     07E9  0180               	clrf	0
  3594     07EA                     l340:
  3595     07EA  0008               	return
  3596     07EB                     __end_of_sprintf:
  3597                           
  3598                           	psect	text2
  3599     0CA1                     __ptext2:	
  3600 ;; *************** function _scale *****************
  3601 ;; Defined at:
  3602 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  scl             1    wreg     char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  scl             1   48[BANK0 ] char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  4   30[BANK0 ] char 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3616 ;;      Params:         0       4       0       0       0
  3617 ;;      Locals:         0       5       0       0       0
  3618 ;;      Temps:          0      10       0       0       0
  3619 ;;      Totals:         0      19       0       0       0
  3620 ;;Total ram usage:       19 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 2
  3623 ;; This function calls:
  3624 ;;		___awdiv
  3625 ;;		___awmod
  3626 ;;		___flmul
  3627 ;; This function is called by:
  3628 ;;		_sprintf
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632     0CA1                     _scale:	
  3633                           ;psect for function _scale
  3634                           
  3635                           
  3636                           ;incstack = 0
  3637                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3638                           ;scale@scl stored from wreg
  3639     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3640     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3641     0CA3  00D0               	movwf	scale@scl
  3642     0CA4                     l2853:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3645     0CA4  1FD0               	btfss	scale@scl,7
  3646     0CA5  2CA7               	goto	u4431
  3647     0CA6  2CA8               	goto	u4430
  3648     0CA7                     u4431:
  3649     0CA7  2E55               	goto	l2875
  3650     0CA8                     u4430:
  3651     0CA8                     l2855:
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3654     0CA8  09D0               	comf	scale@scl,f
  3655     0CA9  0AD0               	incf	scale@scl,f
  3656     0CAA                     l2857:
  3657                           
  3658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3659     0CAA  0850               	movf	scale@scl,w
  3660     0CAB  3A80               	xorlw	128
  3661     0CAC  3E12               	addlw	-238
  3662     0CAD  1C03               	skipc
  3663     0CAE  2CB0               	goto	u4441
  3664     0CAF  2CB1               	goto	u4440
  3665     0CB0                     u4441:
  3666     0CB0  2D99               	goto	l2865
  3667     0CB1                     u4440:
  3668     0CB1                     l2859:
  3669                           
  3670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3671     0CB1  300A               	movlw	10
  3672     0CB2  00F7               	movwf	___awdiv@divisor
  3673     0CB3  3000               	movlw	0
  3674     0CB4  00F8               	movwf	___awdiv@divisor+1
  3675     0CB5  0850               	movf	scale@scl,w
  3676     0CB6  00F2               	movwf	___awmod@dividend
  3677     0CB7  01F3               	clrf	___awmod@dividend+1
  3678     0CB8  1BF2               	btfsc	___awmod@dividend,7
  3679     0CB9  03F3               	decf	___awmod@dividend+1,f
  3680     0CBA  3064               	movlw	100
  3681     0CBB  00F0               	movwf	___awmod@divisor
  3682     0CBC  3000               	movlw	0
  3683     0CBD  00F1               	movwf	___awmod@divisor+1
  3684     0CBE  160A  118A  2002  120A  158A  	fcall	___awmod
  3685     0CC3  0871               	movf	?___awmod+1,w
  3686     0CC4  00FA               	movwf	___awdiv@dividend+1
  3687     0CC5  0870               	movf	?___awmod,w
  3688     0CC6  00F9               	movwf	___awdiv@dividend
  3689     0CC7  160A  158A  271F  120A  158A  	fcall	___awdiv
  3690     0CCC  0877               	movf	?___awdiv,w
  3691     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  3692     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  3693     0CCF  00C2               	movwf	??_scale
  3694     0CD0  3001               	movlw	1
  3695     0CD1                     u4455:
  3696     0CD1  1003               	clrc
  3697     0CD2  0DC2               	rlf	??_scale,f
  3698     0CD3  3EFF               	addlw	-1
  3699     0CD4  1D03               	skipz
  3700     0CD5  2CD1               	goto	u4455
  3701     0CD6  1003               	clrc
  3702     0CD7  0D42               	rlf	??_scale,w
  3703     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3704     0CD9  0084               	movwf	4
  3705     0CDA  160A  158A  200A  120A  158A  	fcall	stringdir
  3706     0CDF  00C3               	movwf	??_scale+1
  3707     0CE0  160A  158A  200A  120A  158A  	fcall	stringdir
  3708     0CE5  00C4               	movwf	??_scale+2
  3709     0CE6  160A  158A  200A  120A  158A  	fcall	stringdir
  3710     0CEB  00C5               	movwf	??_scale+3
  3711     0CEC  160A  158A  200A  120A  158A  	fcall	stringdir
  3712     0CF1  00C6               	movwf	??_scale+4
  3713     0CF2  0846               	movf	??_scale+4,w
  3714     0CF3  00A7               	movwf	___flmul@b+3
  3715     0CF4  0845               	movf	??_scale+3,w
  3716     0CF5  00A6               	movwf	___flmul@b+2
  3717     0CF6  0844               	movf	??_scale+2,w
  3718     0CF7  00A5               	movwf	___flmul@b+1
  3719     0CF8  0843               	movf	??_scale+1,w
  3720     0CF9  00A4               	movwf	___flmul@b
  3721     0CFA  3064               	movlw	100
  3722     0CFB  00F7               	movwf	___awdiv@divisor
  3723     0CFC  3000               	movlw	0
  3724     0CFD  00F8               	movwf	___awdiv@divisor+1
  3725     0CFE  0850               	movf	scale@scl,w
  3726     0CFF  00F9               	movwf	___awdiv@dividend
  3727     0D00  01FA               	clrf	___awdiv@dividend+1
  3728     0D01  1BF9               	btfsc	___awdiv@dividend,7
  3729     0D02  03FA               	decf	___awdiv@dividend+1,f
  3730     0D03  160A  158A  271F  120A  158A  	fcall	___awdiv
  3731     0D08  0877               	movf	?___awdiv,w
  3732     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  3733     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  3734     0D0B  00C7               	movwf	??_scale+5
  3735     0D0C  3001               	movlw	1
  3736     0D0D                     u4465:
  3737     0D0D  1003               	clrc
  3738     0D0E  0DC7               	rlf	??_scale+5,f
  3739     0D0F  3EFF               	addlw	-1
  3740     0D10  1D03               	skipz
  3741     0D11  2D0D               	goto	u4465
  3742     0D12  1003               	clrc
  3743     0D13  0D47               	rlf	??_scale+5,w
  3744     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3745     0D15  0084               	movwf	4
  3746     0D16  160A  158A  200A  120A  158A  	fcall	stringdir
  3747     0D1B  00C8               	movwf	??_scale+6
  3748     0D1C  160A  158A  200A  120A  158A  	fcall	stringdir
  3749     0D21  00C9               	movwf	??_scale+7
  3750     0D22  160A  158A  200A  120A  158A  	fcall	stringdir
  3751     0D27  00CA               	movwf	??_scale+8
  3752     0D28  160A  158A  200A  120A  158A  	fcall	stringdir
  3753     0D2D  00CB               	movwf	??_scale+9
  3754     0D2E  084B               	movf	??_scale+9,w
  3755     0D2F  00AB               	movwf	___flmul@a+3
  3756     0D30  084A               	movf	??_scale+8,w
  3757     0D31  00AA               	movwf	___flmul@a+2
  3758     0D32  0849               	movf	??_scale+7,w
  3759     0D33  00A9               	movwf	___flmul@a+1
  3760     0D34  0848               	movf	??_scale+6,w
  3761     0D35  00A8               	movwf	___flmul@a
  3762     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  3763     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  3764     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  3765     0D3D  0827               	movf	?___flmul+3,w
  3766     0D3E  00CF               	movwf	_scale$1092+3
  3767     0D3F  0826               	movf	?___flmul+2,w
  3768     0D40  00CE               	movwf	_scale$1092+2
  3769     0D41  0825               	movf	?___flmul+1,w
  3770     0D42  00CD               	movwf	_scale$1092+1
  3771     0D43  0824               	movf	?___flmul,w
  3772     0D44  00CC               	movwf	_scale$1092
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3775     0D45  300A               	movlw	10
  3776     0D46  00F0               	movwf	___awmod@divisor
  3777     0D47  3000               	movlw	0
  3778     0D48  00F1               	movwf	___awmod@divisor+1
  3779     0D49  0850               	movf	scale@scl,w
  3780     0D4A  00F2               	movwf	___awmod@dividend
  3781     0D4B  01F3               	clrf	___awmod@dividend+1
  3782     0D4C  1BF2               	btfsc	___awmod@dividend,7
  3783     0D4D  03F3               	decf	___awmod@dividend+1,f
  3784     0D4E  160A  118A  2002  120A  158A  	fcall	___awmod
  3785     0D53  0870               	movf	?___awmod,w
  3786     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  3787     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  3788     0D56  00C2               	movwf	??_scale
  3789     0D57  3001               	movlw	1
  3790     0D58                     u4475:
  3791     0D58  1003               	clrc
  3792     0D59  0DC2               	rlf	??_scale,f
  3793     0D5A  3EFF               	addlw	-1
  3794     0D5B  1D03               	skipz
  3795     0D5C  2D58               	goto	u4475
  3796     0D5D  1003               	clrc
  3797     0D5E  0D42               	rlf	??_scale,w
  3798     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3799     0D60  0084               	movwf	4
  3800     0D61  160A  158A  200A  120A  158A  	fcall	stringdir
  3801     0D66  00C3               	movwf	??_scale+1
  3802     0D67  160A  158A  200A  120A  158A  	fcall	stringdir
  3803     0D6C  00C4               	movwf	??_scale+2
  3804     0D6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3805     0D72  00C5               	movwf	??_scale+3
  3806     0D73  160A  158A  200A  120A  158A  	fcall	stringdir
  3807     0D78  00C6               	movwf	??_scale+4
  3808     0D79  0846               	movf	??_scale+4,w
  3809     0D7A  00A7               	movwf	___flmul@b+3
  3810     0D7B  0845               	movf	??_scale+3,w
  3811     0D7C  00A6               	movwf	___flmul@b+2
  3812     0D7D  0844               	movf	??_scale+2,w
  3813     0D7E  00A5               	movwf	___flmul@b+1
  3814     0D7F  0843               	movf	??_scale+1,w
  3815     0D80  00A4               	movwf	___flmul@b
  3816     0D81  084F               	movf	_scale$1092+3,w
  3817     0D82  00AB               	movwf	___flmul@a+3
  3818     0D83  084E               	movf	_scale$1092+2,w
  3819     0D84  00AA               	movwf	___flmul@a+2
  3820     0D85  084D               	movf	_scale$1092+1,w
  3821     0D86  00A9               	movwf	___flmul@a+1
  3822     0D87  084C               	movf	_scale$1092,w
  3823     0D88  00A8               	movwf	___flmul@a
  3824     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  3825     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  3826     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  3827     0D90  0827               	movf	?___flmul+3,w
  3828     0D91  00C1               	movwf	?_scale+3
  3829     0D92  0826               	movf	?___flmul+2,w
  3830     0D93  00C0               	movwf	?_scale+2
  3831     0D94  0825               	movf	?___flmul+1,w
  3832     0D95  00BF               	movwf	?_scale+1
  3833     0D96  0824               	movf	?___flmul,w
  3834     0D97  00BE               	movwf	?_scale
  3835     0D98  2FFF               	goto	l274
  3836     0D99                     l2865:
  3837     0D99  0850               	movf	scale@scl,w
  3838     0D9A  3A80               	xorlw	128
  3839     0D9B  3E75               	addlw	-139
  3840     0D9C  1C03               	skipc
  3841     0D9D  2D9F               	goto	u4481
  3842     0D9E  2DA0               	goto	u4480
  3843     0D9F                     u4481:
  3844     0D9F  2E28               	goto	l2871
  3845     0DA0                     u4480:
  3846     0DA0                     l2867:
  3847                           
  3848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3849     0DA0  300A               	movlw	10
  3850     0DA1  00F0               	movwf	___awmod@divisor
  3851     0DA2  3000               	movlw	0
  3852     0DA3  00F1               	movwf	___awmod@divisor+1
  3853     0DA4  0850               	movf	scale@scl,w
  3854     0DA5  00F2               	movwf	___awmod@dividend
  3855     0DA6  01F3               	clrf	___awmod@dividend+1
  3856     0DA7  1BF2               	btfsc	___awmod@dividend,7
  3857     0DA8  03F3               	decf	___awmod@dividend+1,f
  3858     0DA9  160A  118A  2002  120A  158A  	fcall	___awmod
  3859     0DAE  0870               	movf	?___awmod,w
  3860     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3861     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  3862     0DB1  00C2               	movwf	??_scale
  3863     0DB2  3001               	movlw	1
  3864     0DB3                     u4495:
  3865     0DB3  1003               	clrc
  3866     0DB4  0DC2               	rlf	??_scale,f
  3867     0DB5  3EFF               	addlw	-1
  3868     0DB6  1D03               	skipz
  3869     0DB7  2DB3               	goto	u4495
  3870     0DB8  1003               	clrc
  3871     0DB9  0D42               	rlf	??_scale,w
  3872     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3873     0DBB  0084               	movwf	4
  3874     0DBC  160A  158A  200A  120A  158A  	fcall	stringdir
  3875     0DC1  00C3               	movwf	??_scale+1
  3876     0DC2  160A  158A  200A  120A  158A  	fcall	stringdir
  3877     0DC7  00C4               	movwf	??_scale+2
  3878     0DC8  160A  158A  200A  120A  158A  	fcall	stringdir
  3879     0DCD  00C5               	movwf	??_scale+3
  3880     0DCE  160A  158A  200A  120A  158A  	fcall	stringdir
  3881     0DD3  00C6               	movwf	??_scale+4
  3882     0DD4  0846               	movf	??_scale+4,w
  3883     0DD5  00A7               	movwf	___flmul@b+3
  3884     0DD6  0845               	movf	??_scale+3,w
  3885     0DD7  00A6               	movwf	___flmul@b+2
  3886     0DD8  0844               	movf	??_scale+2,w
  3887     0DD9  00A5               	movwf	___flmul@b+1
  3888     0DDA  0843               	movf	??_scale+1,w
  3889     0DDB  00A4               	movwf	___flmul@b
  3890     0DDC  300A               	movlw	10
  3891     0DDD  00F7               	movwf	___awdiv@divisor
  3892     0DDE  3000               	movlw	0
  3893     0DDF  00F8               	movwf	___awdiv@divisor+1
  3894     0DE0  0850               	movf	scale@scl,w
  3895     0DE1  00F9               	movwf	___awdiv@dividend
  3896     0DE2  01FA               	clrf	___awdiv@dividend+1
  3897     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  3898     0DE4  03FA               	decf	___awdiv@dividend+1,f
  3899     0DE5  160A  158A  271F  120A  158A  	fcall	___awdiv
  3900     0DEA  0877               	movf	?___awdiv,w
  3901     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3902     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3903     0DED  00C7               	movwf	??_scale+5
  3904     0DEE  3001               	movlw	1
  3905     0DEF                     u4505:
  3906     0DEF  1003               	clrc
  3907     0DF0  0DC7               	rlf	??_scale+5,f
  3908     0DF1  3EFF               	addlw	-1
  3909     0DF2  1D03               	skipz
  3910     0DF3  2DEF               	goto	u4505
  3911     0DF4  1003               	clrc
  3912     0DF5  0D47               	rlf	??_scale+5,w
  3913     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3914     0DF7  0084               	movwf	4
  3915     0DF8  160A  158A  200A  120A  158A  	fcall	stringdir
  3916     0DFD  00C8               	movwf	??_scale+6
  3917     0DFE  160A  158A  200A  120A  158A  	fcall	stringdir
  3918     0E03  00C9               	movwf	??_scale+7
  3919     0E04  160A  158A  200A  120A  158A  	fcall	stringdir
  3920     0E09  00CA               	movwf	??_scale+8
  3921     0E0A  160A  158A  200A  120A  158A  	fcall	stringdir
  3922     0E0F  00CB               	movwf	??_scale+9
  3923     0E10  084B               	movf	??_scale+9,w
  3924     0E11  00AB               	movwf	___flmul@a+3
  3925     0E12  084A               	movf	??_scale+8,w
  3926     0E13  00AA               	movwf	___flmul@a+2
  3927     0E14  0849               	movf	??_scale+7,w
  3928     0E15  00A9               	movwf	___flmul@a+1
  3929     0E16  0848               	movf	??_scale+6,w
  3930     0E17  00A8               	movwf	___flmul@a
  3931     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  3932     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3933     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  3934     0E1F  0827               	movf	?___flmul+3,w
  3935     0E20  00C1               	movwf	?_scale+3
  3936     0E21  0826               	movf	?___flmul+2,w
  3937     0E22  00C0               	movwf	?_scale+2
  3938     0E23  0825               	movf	?___flmul+1,w
  3939     0E24  00BF               	movwf	?_scale+1
  3940     0E25  0824               	movf	?___flmul,w
  3941     0E26  00BE               	movwf	?_scale
  3942     0E27  2FFF               	goto	l274
  3943     0E28                     l2871:
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3946     0E28  0850               	movf	scale@scl,w
  3947     0E29  00C2               	movwf	??_scale
  3948     0E2A  3001               	movlw	1
  3949     0E2B                     u4515:
  3950     0E2B  1003               	clrc
  3951     0E2C  0DC2               	rlf	??_scale,f
  3952     0E2D  3EFF               	addlw	-1
  3953     0E2E  1D03               	skipz
  3954     0E2F  2E2B               	goto	u4515
  3955     0E30  1003               	clrc
  3956     0E31  0D42               	rlf	??_scale,w
  3957     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3958     0E33  0084               	movwf	4
  3959     0E34  160A  158A  200A  120A  158A  	fcall	stringdir
  3960     0E39  00C3               	movwf	??_scale+1
  3961     0E3A  160A  158A  200A  120A  158A  	fcall	stringdir
  3962     0E3F  00C4               	movwf	??_scale+2
  3963     0E40  160A  158A  200A  120A  158A  	fcall	stringdir
  3964     0E45  00C5               	movwf	??_scale+3
  3965     0E46  160A  158A  200A  120A  158A  	fcall	stringdir
  3966     0E4B  00C6               	movwf	??_scale+4
  3967     0E4C  0846               	movf	??_scale+4,w
  3968     0E4D  00C1               	movwf	?_scale+3
  3969     0E4E  0845               	movf	??_scale+3,w
  3970     0E4F  00C0               	movwf	?_scale+2
  3971     0E50  0844               	movf	??_scale+2,w
  3972     0E51  00BF               	movwf	?_scale+1
  3973     0E52  0843               	movf	??_scale+1,w
  3974     0E53  00BE               	movwf	?_scale
  3975     0E54  2FFF               	goto	l274
  3976     0E55                     l2875:
  3977                           
  3978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3979     0E55  0850               	movf	scale@scl,w
  3980     0E56  3A80               	xorlw	128
  3981     0E57  3E12               	addlw	-238
  3982     0E58  1C03               	skipc
  3983     0E59  2E5B               	goto	u4521
  3984     0E5A  2E5C               	goto	u4520
  3985     0E5B                     u4521:
  3986     0E5B  2F44               	goto	l2883
  3987     0E5C                     u4520:
  3988     0E5C                     l2877:
  3989                           
  3990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3991     0E5C  300A               	movlw	10
  3992     0E5D  00F7               	movwf	___awdiv@divisor
  3993     0E5E  3000               	movlw	0
  3994     0E5F  00F8               	movwf	___awdiv@divisor+1
  3995     0E60  0850               	movf	scale@scl,w
  3996     0E61  00F2               	movwf	___awmod@dividend
  3997     0E62  01F3               	clrf	___awmod@dividend+1
  3998     0E63  1BF2               	btfsc	___awmod@dividend,7
  3999     0E64  03F3               	decf	___awmod@dividend+1,f
  4000     0E65  3064               	movlw	100
  4001     0E66  00F0               	movwf	___awmod@divisor
  4002     0E67  3000               	movlw	0
  4003     0E68  00F1               	movwf	___awmod@divisor+1
  4004     0E69  160A  118A  2002  120A  158A  	fcall	___awmod
  4005     0E6E  0871               	movf	?___awmod+1,w
  4006     0E6F  00FA               	movwf	___awdiv@dividend+1
  4007     0E70  0870               	movf	?___awmod,w
  4008     0E71  00F9               	movwf	___awdiv@dividend
  4009     0E72  160A  158A  271F  120A  158A  	fcall	___awdiv
  4010     0E77  0877               	movf	?___awdiv,w
  4011     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4012     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4013     0E7A  00C2               	movwf	??_scale
  4014     0E7B  3001               	movlw	1
  4015     0E7C                     u4535:
  4016     0E7C  1003               	clrc
  4017     0E7D  0DC2               	rlf	??_scale,f
  4018     0E7E  3EFF               	addlw	-1
  4019     0E7F  1D03               	skipz
  4020     0E80  2E7C               	goto	u4535
  4021     0E81  1003               	clrc
  4022     0E82  0D42               	rlf	??_scale,w
  4023     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4024     0E84  0084               	movwf	4
  4025     0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  4026     0E8A  00C3               	movwf	??_scale+1
  4027     0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  4028     0E90  00C4               	movwf	??_scale+2
  4029     0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  4030     0E96  00C5               	movwf	??_scale+3
  4031     0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  4032     0E9C  00C6               	movwf	??_scale+4
  4033     0E9D  0846               	movf	??_scale+4,w
  4034     0E9E  00A7               	movwf	___flmul@b+3
  4035     0E9F  0845               	movf	??_scale+3,w
  4036     0EA0  00A6               	movwf	___flmul@b+2
  4037     0EA1  0844               	movf	??_scale+2,w
  4038     0EA2  00A5               	movwf	___flmul@b+1
  4039     0EA3  0843               	movf	??_scale+1,w
  4040     0EA4  00A4               	movwf	___flmul@b
  4041     0EA5  3064               	movlw	100
  4042     0EA6  00F7               	movwf	___awdiv@divisor
  4043     0EA7  3000               	movlw	0
  4044     0EA8  00F8               	movwf	___awdiv@divisor+1
  4045     0EA9  0850               	movf	scale@scl,w
  4046     0EAA  00F9               	movwf	___awdiv@dividend
  4047     0EAB  01FA               	clrf	___awdiv@dividend+1
  4048     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  4049     0EAD  03FA               	decf	___awdiv@dividend+1,f
  4050     0EAE  160A  158A  271F  120A  158A  	fcall	___awdiv
  4051     0EB3  0877               	movf	?___awdiv,w
  4052     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4053     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4054     0EB6  00C7               	movwf	??_scale+5
  4055     0EB7  3001               	movlw	1
  4056     0EB8                     u4545:
  4057     0EB8  1003               	clrc
  4058     0EB9  0DC7               	rlf	??_scale+5,f
  4059     0EBA  3EFF               	addlw	-1
  4060     0EBB  1D03               	skipz
  4061     0EBC  2EB8               	goto	u4545
  4062     0EBD  1003               	clrc
  4063     0EBE  0D47               	rlf	??_scale+5,w
  4064     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4065     0EC0  0084               	movwf	4
  4066     0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  4067     0EC6  00C8               	movwf	??_scale+6
  4068     0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  4069     0ECC  00C9               	movwf	??_scale+7
  4070     0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  4071     0ED2  00CA               	movwf	??_scale+8
  4072     0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  4073     0ED8  00CB               	movwf	??_scale+9
  4074     0ED9  084B               	movf	??_scale+9,w
  4075     0EDA  00AB               	movwf	___flmul@a+3
  4076     0EDB  084A               	movf	??_scale+8,w
  4077     0EDC  00AA               	movwf	___flmul@a+2
  4078     0EDD  0849               	movf	??_scale+7,w
  4079     0EDE  00A9               	movwf	___flmul@a+1
  4080     0EDF  0848               	movf	??_scale+6,w
  4081     0EE0  00A8               	movwf	___flmul@a
  4082     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4083     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4084     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4085     0EE8  0827               	movf	?___flmul+3,w
  4086     0EE9  00CF               	movwf	_scale$1092+3
  4087     0EEA  0826               	movf	?___flmul+2,w
  4088     0EEB  00CE               	movwf	_scale$1092+2
  4089     0EEC  0825               	movf	?___flmul+1,w
  4090     0EED  00CD               	movwf	_scale$1092+1
  4091     0EEE  0824               	movf	?___flmul,w
  4092     0EEF  00CC               	movwf	_scale$1092
  4093                           
  4094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4095     0EF0  300A               	movlw	10
  4096     0EF1  00F0               	movwf	___awmod@divisor
  4097     0EF2  3000               	movlw	0
  4098     0EF3  00F1               	movwf	___awmod@divisor+1
  4099     0EF4  0850               	movf	scale@scl,w
  4100     0EF5  00F2               	movwf	___awmod@dividend
  4101     0EF6  01F3               	clrf	___awmod@dividend+1
  4102     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4103     0EF8  03F3               	decf	___awmod@dividend+1,f
  4104     0EF9  160A  118A  2002  120A  158A  	fcall	___awmod
  4105     0EFE  0870               	movf	?___awmod,w
  4106     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4107     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4108     0F01  00C2               	movwf	??_scale
  4109     0F02  3001               	movlw	1
  4110     0F03                     u4555:
  4111     0F03  1003               	clrc
  4112     0F04  0DC2               	rlf	??_scale,f
  4113     0F05  3EFF               	addlw	-1
  4114     0F06  1D03               	skipz
  4115     0F07  2F03               	goto	u4555
  4116     0F08  1003               	clrc
  4117     0F09  0D42               	rlf	??_scale,w
  4118     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4119     0F0B  0084               	movwf	4
  4120     0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4121     0F11  00C3               	movwf	??_scale+1
  4122     0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  4123     0F17  00C4               	movwf	??_scale+2
  4124     0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  4125     0F1D  00C5               	movwf	??_scale+3
  4126     0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  4127     0F23  00C6               	movwf	??_scale+4
  4128     0F24  0846               	movf	??_scale+4,w
  4129     0F25  00A7               	movwf	___flmul@b+3
  4130     0F26  0845               	movf	??_scale+3,w
  4131     0F27  00A6               	movwf	___flmul@b+2
  4132     0F28  0844               	movf	??_scale+2,w
  4133     0F29  00A5               	movwf	___flmul@b+1
  4134     0F2A  0843               	movf	??_scale+1,w
  4135     0F2B  00A4               	movwf	___flmul@b
  4136     0F2C  084F               	movf	_scale$1092+3,w
  4137     0F2D  00AB               	movwf	___flmul@a+3
  4138     0F2E  084E               	movf	_scale$1092+2,w
  4139     0F2F  00AA               	movwf	___flmul@a+2
  4140     0F30  084D               	movf	_scale$1092+1,w
  4141     0F31  00A9               	movwf	___flmul@a+1
  4142     0F32  084C               	movf	_scale$1092,w
  4143     0F33  00A8               	movwf	___flmul@a
  4144     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4145     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4146     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4147     0F3B  0827               	movf	?___flmul+3,w
  4148     0F3C  00C1               	movwf	?_scale+3
  4149     0F3D  0826               	movf	?___flmul+2,w
  4150     0F3E  00C0               	movwf	?_scale+2
  4151     0F3F  0825               	movf	?___flmul+1,w
  4152     0F40  00BF               	movwf	?_scale+1
  4153     0F41  0824               	movf	?___flmul,w
  4154     0F42  00BE               	movwf	?_scale
  4155     0F43  2FFF               	goto	l274
  4156     0F44                     l2883:
  4157     0F44  0850               	movf	scale@scl,w
  4158     0F45  3A80               	xorlw	128
  4159     0F46  3E75               	addlw	-139
  4160     0F47  1C03               	skipc
  4161     0F48  2F4A               	goto	u4561
  4162     0F49  2F4B               	goto	u4560
  4163     0F4A                     u4561:
  4164     0F4A  2FD3               	goto	l2889
  4165     0F4B                     u4560:
  4166     0F4B                     l2885:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4169     0F4B  300A               	movlw	10
  4170     0F4C  00F0               	movwf	___awmod@divisor
  4171     0F4D  3000               	movlw	0
  4172     0F4E  00F1               	movwf	___awmod@divisor+1
  4173     0F4F  0850               	movf	scale@scl,w
  4174     0F50  00F2               	movwf	___awmod@dividend
  4175     0F51  01F3               	clrf	___awmod@dividend+1
  4176     0F52  1BF2               	btfsc	___awmod@dividend,7
  4177     0F53  03F3               	decf	___awmod@dividend+1,f
  4178     0F54  160A  118A  2002  120A  158A  	fcall	___awmod
  4179     0F59  0870               	movf	?___awmod,w
  4180     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4181     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4182     0F5C  00C2               	movwf	??_scale
  4183     0F5D  3001               	movlw	1
  4184     0F5E                     u4575:
  4185     0F5E  1003               	clrc
  4186     0F5F  0DC2               	rlf	??_scale,f
  4187     0F60  3EFF               	addlw	-1
  4188     0F61  1D03               	skipz
  4189     0F62  2F5E               	goto	u4575
  4190     0F63  1003               	clrc
  4191     0F64  0D42               	rlf	??_scale,w
  4192     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4193     0F66  0084               	movwf	4
  4194     0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  4195     0F6C  00C3               	movwf	??_scale+1
  4196     0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4197     0F72  00C4               	movwf	??_scale+2
  4198     0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  4199     0F78  00C5               	movwf	??_scale+3
  4200     0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  4201     0F7E  00C6               	movwf	??_scale+4
  4202     0F7F  0846               	movf	??_scale+4,w
  4203     0F80  00A7               	movwf	___flmul@b+3
  4204     0F81  0845               	movf	??_scale+3,w
  4205     0F82  00A6               	movwf	___flmul@b+2
  4206     0F83  0844               	movf	??_scale+2,w
  4207     0F84  00A5               	movwf	___flmul@b+1
  4208     0F85  0843               	movf	??_scale+1,w
  4209     0F86  00A4               	movwf	___flmul@b
  4210     0F87  300A               	movlw	10
  4211     0F88  00F7               	movwf	___awdiv@divisor
  4212     0F89  3000               	movlw	0
  4213     0F8A  00F8               	movwf	___awdiv@divisor+1
  4214     0F8B  0850               	movf	scale@scl,w
  4215     0F8C  00F9               	movwf	___awdiv@dividend
  4216     0F8D  01FA               	clrf	___awdiv@dividend+1
  4217     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4218     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4219     0F90  160A  158A  271F  120A  158A  	fcall	___awdiv
  4220     0F95  0877               	movf	?___awdiv,w
  4221     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4222     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4223     0F98  00C7               	movwf	??_scale+5
  4224     0F99  3001               	movlw	1
  4225     0F9A                     u4585:
  4226     0F9A  1003               	clrc
  4227     0F9B  0DC7               	rlf	??_scale+5,f
  4228     0F9C  3EFF               	addlw	-1
  4229     0F9D  1D03               	skipz
  4230     0F9E  2F9A               	goto	u4585
  4231     0F9F  1003               	clrc
  4232     0FA0  0D47               	rlf	??_scale+5,w
  4233     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4234     0FA2  0084               	movwf	4
  4235     0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4236     0FA8  00C8               	movwf	??_scale+6
  4237     0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4238     0FAE  00C9               	movwf	??_scale+7
  4239     0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  4240     0FB4  00CA               	movwf	??_scale+8
  4241     0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  4242     0FBA  00CB               	movwf	??_scale+9
  4243     0FBB  084B               	movf	??_scale+9,w
  4244     0FBC  00AB               	movwf	___flmul@a+3
  4245     0FBD  084A               	movf	??_scale+8,w
  4246     0FBE  00AA               	movwf	___flmul@a+2
  4247     0FBF  0849               	movf	??_scale+7,w
  4248     0FC0  00A9               	movwf	___flmul@a+1
  4249     0FC1  0848               	movf	??_scale+6,w
  4250     0FC2  00A8               	movwf	___flmul@a
  4251     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4252     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4253     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4254     0FCA  0827               	movf	?___flmul+3,w
  4255     0FCB  00C1               	movwf	?_scale+3
  4256     0FCC  0826               	movf	?___flmul+2,w
  4257     0FCD  00C0               	movwf	?_scale+2
  4258     0FCE  0825               	movf	?___flmul+1,w
  4259     0FCF  00BF               	movwf	?_scale+1
  4260     0FD0  0824               	movf	?___flmul,w
  4261     0FD1  00BE               	movwf	?_scale
  4262     0FD2  2FFF               	goto	l274
  4263     0FD3                     l2889:
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4266     0FD3  0850               	movf	scale@scl,w
  4267     0FD4  00C2               	movwf	??_scale
  4268     0FD5  3001               	movlw	1
  4269     0FD6                     u4595:
  4270     0FD6  1003               	clrc
  4271     0FD7  0DC2               	rlf	??_scale,f
  4272     0FD8  3EFF               	addlw	-1
  4273     0FD9  1D03               	skipz
  4274     0FDA  2FD6               	goto	u4595
  4275     0FDB  1003               	clrc
  4276     0FDC  0D42               	rlf	??_scale,w
  4277     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4278     0FDE  0084               	movwf	4
  4279     0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  4280     0FE4  00C3               	movwf	??_scale+1
  4281     0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4282     0FEA  00C4               	movwf	??_scale+2
  4283     0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  4284     0FF0  00C5               	movwf	??_scale+3
  4285     0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  4286     0FF6  00C6               	movwf	??_scale+4
  4287     0FF7  0846               	movf	??_scale+4,w
  4288     0FF8  00C1               	movwf	?_scale+3
  4289     0FF9  0845               	movf	??_scale+3,w
  4290     0FFA  00C0               	movwf	?_scale+2
  4291     0FFB  0844               	movf	??_scale+2,w
  4292     0FFC  00BF               	movwf	?_scale+1
  4293     0FFD  0843               	movf	??_scale+1,w
  4294     0FFE  00BE               	movwf	?_scale
  4295     0FFF                     l274:
  4296     0FFF  0008               	return
  4297     1000                     __end_of_scale:
  4298                           
  4299                           	psect	text3
  4300     1002                     __ptext3:	
  4301 ;; *************** function ___awmod *****************
  4302 ;; Defined at:
  4303 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  divisor         2    0[COMMON] int 
  4306 ;;  dividend        2    2[COMMON] int 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  sign            1    6[COMMON] unsigned char 
  4309 ;;  counter         1    5[COMMON] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  2    0[COMMON] int 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4319 ;;      Params:         4       0       0       0       0
  4320 ;;      Locals:         2       0       0       0       0
  4321 ;;      Temps:          1       0       0       0       0
  4322 ;;      Totals:         7       0       0       0       0
  4323 ;;Total ram usage:        7 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_scale
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332     1002                     ___awmod:	
  4333                           ;psect for function ___awmod
  4334                           
  4335     1002                     l2373:	
  4336                           ;incstack = 0
  4337                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4338                           
  4339     1002  01F6               	clrf	___awmod@sign
  4340     1003                     l2375:
  4341     1003  1FF3               	btfss	___awmod@dividend+1,7
  4342     1004  2806               	goto	u3271
  4343     1005  2807               	goto	u3270
  4344     1006                     u3271:
  4345     1006  280E               	goto	l2381
  4346     1007                     u3270:
  4347     1007                     l2377:
  4348     1007  09F2               	comf	___awmod@dividend,f
  4349     1008  09F3               	comf	___awmod@dividend+1,f
  4350     1009  0AF2               	incf	___awmod@dividend,f
  4351     100A  1903               	skipnz
  4352     100B  0AF3               	incf	___awmod@dividend+1,f
  4353     100C                     l2379:
  4354     100C  01F6               	clrf	___awmod@sign
  4355     100D  0AF6               	incf	___awmod@sign,f
  4356     100E                     l2381:
  4357     100E  1FF1               	btfss	___awmod@divisor+1,7
  4358     100F  2811               	goto	u3281
  4359     1010  2812               	goto	u3280
  4360     1011                     u3281:
  4361     1011  2817               	goto	l2385
  4362     1012                     u3280:
  4363     1012                     l2383:
  4364     1012  09F0               	comf	___awmod@divisor,f
  4365     1013  09F1               	comf	___awmod@divisor+1,f
  4366     1014  0AF0               	incf	___awmod@divisor,f
  4367     1015  1903               	skipnz
  4368     1016  0AF1               	incf	___awmod@divisor+1,f
  4369     1017                     l2385:
  4370     1017  0870               	movf	___awmod@divisor,w
  4371     1018  0471               	iorwf	___awmod@divisor+1,w
  4372     1019  1903               	btfsc	3,2
  4373     101A  281C               	goto	u3291
  4374     101B  281D               	goto	u3290
  4375     101C                     u3291:
  4376     101C  284C               	goto	l2403
  4377     101D                     u3290:
  4378     101D                     l2387:
  4379     101D  01F5               	clrf	___awmod@counter
  4380     101E  0AF5               	incf	___awmod@counter,f
  4381     101F  282B               	goto	l2393
  4382     1020                     l2389:
  4383     1020  3001               	movlw	1
  4384     1021                     u3305:
  4385     1021  1003               	clrc
  4386     1022  0DF0               	rlf	___awmod@divisor,f
  4387     1023  0DF1               	rlf	___awmod@divisor+1,f
  4388     1024  3EFF               	addlw	-1
  4389     1025  1D03               	skipz
  4390     1026  2821               	goto	u3305
  4391     1027                     l2391:
  4392     1027  3001               	movlw	1
  4393     1028  00F4               	movwf	??___awmod
  4394     1029  0874               	movf	??___awmod,w
  4395     102A  07F5               	addwf	___awmod@counter,f
  4396     102B                     l2393:
  4397     102B  1FF1               	btfss	___awmod@divisor+1,7
  4398     102C  282E               	goto	u3311
  4399     102D  282F               	goto	u3310
  4400     102E                     u3311:
  4401     102E  2820               	goto	l2389
  4402     102F                     u3310:
  4403     102F                     l2395:
  4404     102F  0871               	movf	___awmod@divisor+1,w
  4405     1030  0273               	subwf	___awmod@dividend+1,w
  4406     1031  1D03               	skipz
  4407     1032  2835               	goto	u3325
  4408     1033  0870               	movf	___awmod@divisor,w
  4409     1034  0272               	subwf	___awmod@dividend,w
  4410     1035                     u3325:
  4411     1035  1C03               	skipc
  4412     1036  2838               	goto	u3321
  4413     1037  2839               	goto	u3320
  4414     1038                     u3321:
  4415     1038  283F               	goto	l2399
  4416     1039                     u3320:
  4417     1039                     l2397:
  4418     1039  0870               	movf	___awmod@divisor,w
  4419     103A  02F2               	subwf	___awmod@dividend,f
  4420     103B  0871               	movf	___awmod@divisor+1,w
  4421     103C  1C03               	skipc
  4422     103D  03F3               	decf	___awmod@dividend+1,f
  4423     103E  02F3               	subwf	___awmod@dividend+1,f
  4424     103F                     l2399:
  4425     103F  3001               	movlw	1
  4426     1040                     u3335:
  4427     1040  1003               	clrc
  4428     1041  0CF1               	rrf	___awmod@divisor+1,f
  4429     1042  0CF0               	rrf	___awmod@divisor,f
  4430     1043  3EFF               	addlw	-1
  4431     1044  1D03               	skipz
  4432     1045  2840               	goto	u3335
  4433     1046                     l2401:
  4434     1046  3001               	movlw	1
  4435     1047  02F5               	subwf	___awmod@counter,f
  4436     1048  1D03               	btfss	3,2
  4437     1049  284B               	goto	u3341
  4438     104A  284C               	goto	u3340
  4439     104B                     u3341:
  4440     104B  282F               	goto	l2395
  4441     104C                     u3340:
  4442     104C                     l2403:
  4443     104C  0876               	movf	___awmod@sign,w
  4444     104D  1903               	btfsc	3,2
  4445     104E  2850               	goto	u3351
  4446     104F  2851               	goto	u3350
  4447     1050                     u3351:
  4448     1050  2856               	goto	l2407
  4449     1051                     u3350:
  4450     1051                     l2405:
  4451     1051  09F2               	comf	___awmod@dividend,f
  4452     1052  09F3               	comf	___awmod@dividend+1,f
  4453     1053  0AF2               	incf	___awmod@dividend,f
  4454     1054  1903               	skipnz
  4455     1055  0AF3               	incf	___awmod@dividend+1,f
  4456     1056                     l2407:
  4457     1056  0873               	movf	___awmod@dividend+1,w
  4458     1057  00F1               	movwf	?___awmod+1
  4459     1058  0872               	movf	___awmod@dividend,w
  4460     1059  00F0               	movwf	?___awmod
  4461     105A                     l510:
  4462     105A  0008               	return
  4463     105B                     __end_of___awmod:
  4464                           
  4465                           	psect	text4
  4466     1F1F                     __ptext4:	
  4467 ;; *************** function ___awdiv *****************
  4468 ;; Defined at:
  4469 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  divisor         2    7[COMMON] int 
  4472 ;;  dividend        2    9[COMMON] int 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  quotient        2    2[BANK0 ] int 
  4475 ;;  sign            1    1[BANK0 ] unsigned char 
  4476 ;;  counter         1    0[BANK0 ] unsigned char 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  2    7[COMMON] int 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4486 ;;      Params:         4       0       0       0       0
  4487 ;;      Locals:         0       4       0       0       0
  4488 ;;      Temps:          1       0       0       0       0
  4489 ;;      Totals:         5       4       0       0       0
  4490 ;;Total ram usage:        9 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_scale
  4496 ;;		_sprintf
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500     1F1F                     ___awdiv:	
  4501                           ;psect for function ___awdiv
  4502                           
  4503     1F1F                     l2329:	
  4504                           ;incstack = 0
  4505                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4506                           
  4507     1F1F  1283               	bcf	3,5	;RP0=0, select bank0
  4508     1F20  1303               	bcf	3,6	;RP1=0, select bank0
  4509     1F21  01A1               	clrf	___awdiv@sign
  4510     1F22                     l2331:
  4511     1F22  1FF8               	btfss	___awdiv@divisor+1,7
  4512     1F23  2F25               	goto	u3171
  4513     1F24  2F26               	goto	u3170
  4514     1F25                     u3171:
  4515     1F25  2F2D               	goto	l2337
  4516     1F26                     u3170:
  4517     1F26                     l2333:
  4518     1F26  09F7               	comf	___awdiv@divisor,f
  4519     1F27  09F8               	comf	___awdiv@divisor+1,f
  4520     1F28  0AF7               	incf	___awdiv@divisor,f
  4521     1F29  1903               	skipnz
  4522     1F2A  0AF8               	incf	___awdiv@divisor+1,f
  4523     1F2B                     l2335:
  4524     1F2B  01A1               	clrf	___awdiv@sign
  4525     1F2C  0AA1               	incf	___awdiv@sign,f
  4526     1F2D                     l2337:
  4527     1F2D  1FFA               	btfss	___awdiv@dividend+1,7
  4528     1F2E  2F30               	goto	u3181
  4529     1F2F  2F31               	goto	u3180
  4530     1F30                     u3181:
  4531     1F30  2F3A               	goto	l2343
  4532     1F31                     u3180:
  4533     1F31                     l2339:
  4534     1F31  09F9               	comf	___awdiv@dividend,f
  4535     1F32  09FA               	comf	___awdiv@dividend+1,f
  4536     1F33  0AF9               	incf	___awdiv@dividend,f
  4537     1F34  1903               	skipnz
  4538     1F35  0AFA               	incf	___awdiv@dividend+1,f
  4539     1F36                     l2341:
  4540     1F36  3001               	movlw	1
  4541     1F37  00FB               	movwf	??___awdiv
  4542     1F38  087B               	movf	??___awdiv,w
  4543     1F39  06A1               	xorwf	___awdiv@sign,f
  4544     1F3A                     l2343:
  4545     1F3A  01A2               	clrf	___awdiv@quotient
  4546     1F3B  01A3               	clrf	___awdiv@quotient+1
  4547     1F3C                     l2345:
  4548     1F3C  0877               	movf	___awdiv@divisor,w
  4549     1F3D  0478               	iorwf	___awdiv@divisor+1,w
  4550     1F3E  1903               	btfsc	3,2
  4551     1F3F  2F41               	goto	u3191
  4552     1F40  2F42               	goto	u3190
  4553     1F41                     u3191:
  4554     1F41  2F79               	goto	l2365
  4555     1F42                     u3190:
  4556     1F42                     l2347:
  4557     1F42  01A0               	clrf	___awdiv@counter
  4558     1F43  0AA0               	incf	___awdiv@counter,f
  4559     1F44  2F50               	goto	l2353
  4560     1F45                     l2349:
  4561     1F45  3001               	movlw	1
  4562     1F46                     u3205:
  4563     1F46  1003               	clrc
  4564     1F47  0DF7               	rlf	___awdiv@divisor,f
  4565     1F48  0DF8               	rlf	___awdiv@divisor+1,f
  4566     1F49  3EFF               	addlw	-1
  4567     1F4A  1D03               	skipz
  4568     1F4B  2F46               	goto	u3205
  4569     1F4C                     l2351:
  4570     1F4C  3001               	movlw	1
  4571     1F4D  00FB               	movwf	??___awdiv
  4572     1F4E  087B               	movf	??___awdiv,w
  4573     1F4F  07A0               	addwf	___awdiv@counter,f
  4574     1F50                     l2353:
  4575     1F50  1FF8               	btfss	___awdiv@divisor+1,7
  4576     1F51  2F53               	goto	u3211
  4577     1F52  2F54               	goto	u3210
  4578     1F53                     u3211:
  4579     1F53  2F45               	goto	l2349
  4580     1F54                     u3210:
  4581     1F54                     l2355:
  4582     1F54  3001               	movlw	1
  4583     1F55                     u3225:
  4584     1F55  1003               	clrc
  4585     1F56  0DA2               	rlf	___awdiv@quotient,f
  4586     1F57  0DA3               	rlf	___awdiv@quotient+1,f
  4587     1F58  3EFF               	addlw	-1
  4588     1F59  1D03               	skipz
  4589     1F5A  2F55               	goto	u3225
  4590     1F5B  0878               	movf	___awdiv@divisor+1,w
  4591     1F5C  027A               	subwf	___awdiv@dividend+1,w
  4592     1F5D  1D03               	skipz
  4593     1F5E  2F61               	goto	u3235
  4594     1F5F  0877               	movf	___awdiv@divisor,w
  4595     1F60  0279               	subwf	___awdiv@dividend,w
  4596     1F61                     u3235:
  4597     1F61  1C03               	skipc
  4598     1F62  2F64               	goto	u3231
  4599     1F63  2F65               	goto	u3230
  4600     1F64                     u3231:
  4601     1F64  2F6C               	goto	l2361
  4602     1F65                     u3230:
  4603     1F65                     l2357:
  4604     1F65  0877               	movf	___awdiv@divisor,w
  4605     1F66  02F9               	subwf	___awdiv@dividend,f
  4606     1F67  0878               	movf	___awdiv@divisor+1,w
  4607     1F68  1C03               	skipc
  4608     1F69  03FA               	decf	___awdiv@dividend+1,f
  4609     1F6A  02FA               	subwf	___awdiv@dividend+1,f
  4610     1F6B                     l2359:
  4611     1F6B  1422               	bsf	___awdiv@quotient,0
  4612     1F6C                     l2361:
  4613     1F6C  3001               	movlw	1
  4614     1F6D                     u3245:
  4615     1F6D  1003               	clrc
  4616     1F6E  0CF8               	rrf	___awdiv@divisor+1,f
  4617     1F6F  0CF7               	rrf	___awdiv@divisor,f
  4618     1F70  3EFF               	addlw	-1
  4619     1F71  1D03               	skipz
  4620     1F72  2F6D               	goto	u3245
  4621     1F73                     l2363:
  4622     1F73  3001               	movlw	1
  4623     1F74  02A0               	subwf	___awdiv@counter,f
  4624     1F75  1D03               	btfss	3,2
  4625     1F76  2F78               	goto	u3251
  4626     1F77  2F79               	goto	u3250
  4627     1F78                     u3251:
  4628     1F78  2F54               	goto	l2355
  4629     1F79                     u3250:
  4630     1F79                     l2365:
  4631     1F79  0821               	movf	___awdiv@sign,w
  4632     1F7A  1903               	btfsc	3,2
  4633     1F7B  2F7D               	goto	u3261
  4634     1F7C  2F7E               	goto	u3260
  4635     1F7D                     u3261:
  4636     1F7D  2F83               	goto	l2369
  4637     1F7E                     u3260:
  4638     1F7E                     l2367:
  4639     1F7E  09A2               	comf	___awdiv@quotient,f
  4640     1F7F  09A3               	comf	___awdiv@quotient+1,f
  4641     1F80  0AA2               	incf	___awdiv@quotient,f
  4642     1F81  1903               	skipnz
  4643     1F82  0AA3               	incf	___awdiv@quotient+1,f
  4644     1F83                     l2369:
  4645     1F83  0823               	movf	___awdiv@quotient+1,w
  4646     1F84  00F8               	movwf	?___awdiv+1
  4647     1F85  0822               	movf	___awdiv@quotient,w
  4648     1F86  00F7               	movwf	?___awdiv
  4649     1F87                     l497:
  4650     1F87  0008               	return
  4651     1F88                     __end_of___awdiv:
  4652                           
  4653                           	psect	text5
  4654     1B7A                     __ptext5:	
  4655 ;; *************** function _isdigit *****************
  4656 ;; Defined at:
  4657 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  c               1    wreg     unsigned char 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  c               1    1[COMMON] unsigned char 
  4662 ;; Return value:  Size  Location     Type
  4663 ;;		None               void
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4671 ;;      Params:         0       0       0       0       0
  4672 ;;      Locals:         2       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0
  4674 ;;      Totals:         2       0       0       0       0
  4675 ;;Total ram usage:        2 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_sprintf
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684     1B7A                     _isdigit:	
  4685                           ;psect for function _isdigit
  4686                           
  4687                           
  4688                           ;incstack = 0
  4689                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4690                           ;isdigit@c stored from wreg
  4691     1B7A  00F1               	movwf	isdigit@c
  4692     1B7B                     l2893:
  4693     1B7B  01F0               	clrf	_isdigit$907
  4694     1B7C                     l2895:
  4695     1B7C  303A               	movlw	58
  4696     1B7D  0271               	subwf	isdigit@c,w
  4697     1B7E  1803               	skipnc
  4698     1B7F  2B81               	goto	u4601
  4699     1B80  2B82               	goto	u4600
  4700     1B81                     u4601:
  4701     1B81  2B8A               	goto	l2901
  4702     1B82                     u4600:
  4703     1B82                     l2897:
  4704     1B82  3030               	movlw	48
  4705     1B83  0271               	subwf	isdigit@c,w
  4706     1B84  1C03               	skipc
  4707     1B85  2B87               	goto	u4611
  4708     1B86  2B88               	goto	u4610
  4709     1B87                     u4611:
  4710     1B87  2B8A               	goto	l2901
  4711     1B88                     u4610:
  4712     1B88                     l2899:
  4713     1B88  01F0               	clrf	_isdigit$907
  4714     1B89  0AF0               	incf	_isdigit$907,f
  4715     1B8A                     l2901:
  4716     1B8A  0C70               	rrf	_isdigit$907,w
  4717     1B8B                     l831:
  4718     1B8B  0008               	return
  4719     1B8C                     __end_of_isdigit:
  4720                           
  4721                           	psect	text6
  4722     139D                     __ptext6:	
  4723 ;; *************** function _fround *****************
  4724 ;; Defined at:
  4725 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  prec            1    wreg     unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  prec            1   49[BANK0 ] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  4   30[BANK0 ] unsigned char 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4739 ;;      Params:         0       4       0       0       0
  4740 ;;      Locals:         0       9       0       0       0
  4741 ;;      Temps:          0       7       0       0       0
  4742 ;;      Totals:         0      20       0       0       0
  4743 ;;Total ram usage:       20 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 2
  4746 ;; This function calls:
  4747 ;;		___flmul
  4748 ;;		___lwdiv
  4749 ;;		___lwmod
  4750 ;; This function is called by:
  4751 ;;		_sprintf
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755     139D                     _fround:	
  4756                           ;psect for function _fround
  4757                           
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4761                           ;fround@prec stored from wreg
  4762     139D  1283               	bcf	3,5	;RP0=0, select bank0
  4763     139E  1303               	bcf	3,6	;RP1=0, select bank0
  4764     139F  00D1               	movwf	fround@prec
  4765     13A0                     l2835:
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4768     13A0  306E               	movlw	110
  4769     13A1  0251               	subwf	fround@prec,w
  4770     13A2  1C03               	skipc
  4771     13A3  2BA5               	goto	u4351
  4772     13A4  2BA6               	goto	u4350
  4773     13A5                     u4351:
  4774     13A5  2CB3               	goto	l2843
  4775     13A6                     u4350:
  4776     13A6                     l2837:
  4777                           
  4778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4779     13A6  303F               	movlw	63
  4780     13A7  00A7               	movwf	___flmul@b+3
  4781     13A8  3000               	movlw	0
  4782     13A9  00A6               	movwf	___flmul@b+2
  4783     13AA  3000               	movlw	0
  4784     13AB  00A5               	movwf	___flmul@b+1
  4785     13AC  3000               	movlw	0
  4786     13AD  00A4               	movwf	___flmul@b
  4787     13AE  3064               	movlw	100
  4788     13AF  00F6               	movwf	___lwdiv@divisor
  4789     13B0  3000               	movlw	0
  4790     13B1  00F7               	movwf	___lwdiv@divisor+1
  4791     13B2  0851               	movf	fround@prec,w
  4792     13B3  00C2               	movwf	??_fround
  4793     13B4  01C3               	clrf	??_fround+1
  4794     13B5  0842               	movf	??_fround,w
  4795     13B6  00F8               	movwf	___lwdiv@dividend
  4796     13B7  0843               	movf	??_fround+1,w
  4797     13B8  00F9               	movwf	___lwdiv@dividend+1
  4798     13B9  160A  158A  251F  160A  118A  	fcall	___lwdiv
  4799     13BE  0876               	movf	?___lwdiv,w
  4800     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4801     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4802     13C1  00C4               	movwf	??_fround+2
  4803     13C2  3001               	movlw	1
  4804     13C3                     u4365:
  4805     13C3  1003               	clrc
  4806     13C4  0DC4               	rlf	??_fround+2,f
  4807     13C5  3EFF               	addlw	-1
  4808     13C6  1D03               	skipz
  4809     13C7  2BC3               	goto	u4365
  4810     13C8  1003               	clrc
  4811     13C9  0D44               	rlf	??_fround+2,w
  4812     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4813     13CB  0084               	movwf	4
  4814     13CC  160A  158A  200A  160A  118A  	fcall	stringdir
  4815     13D1  00C5               	movwf	??_fround+3
  4816     13D2  160A  158A  200A  160A  118A  	fcall	stringdir
  4817     13D7  00C6               	movwf	??_fround+4
  4818     13D8  160A  158A  200A  160A  118A  	fcall	stringdir
  4819     13DD  00C7               	movwf	??_fround+5
  4820     13DE  160A  158A  200A  160A  118A  	fcall	stringdir
  4821     13E3  00C8               	movwf	??_fround+6
  4822     13E4  0848               	movf	??_fround+6,w
  4823     13E5  00AB               	movwf	___flmul@a+3
  4824     13E6  0847               	movf	??_fround+5,w
  4825     13E7  00AA               	movwf	___flmul@a+2
  4826     13E8  0846               	movf	??_fround+4,w
  4827     13E9  00A9               	movwf	___flmul@a+1
  4828     13EA  0845               	movf	??_fround+3,w
  4829     13EB  00A8               	movwf	___flmul@a
  4830     13EC  120A  158A  215C  160A  118A  	fcall	___flmul
  4831     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  4832     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  4833     13F3  0827               	movf	?___flmul+3,w
  4834     13F4  00D0               	movwf	_fround$1090+3
  4835     13F5  0826               	movf	?___flmul+2,w
  4836     13F6  00CF               	movwf	_fround$1090+2
  4837     13F7  0825               	movf	?___flmul+1,w
  4838     13F8  00CE               	movwf	_fround$1090+1
  4839     13F9  0824               	movf	?___flmul,w
  4840     13FA  00CD               	movwf	_fround$1090
  4841                           
  4842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4843     13FB  300A               	movlw	10
  4844     13FC  00F6               	movwf	___lwdiv@divisor
  4845     13FD  3000               	movlw	0
  4846     13FE  00F7               	movwf	___lwdiv@divisor+1
  4847     13FF  0851               	movf	fround@prec,w
  4848     1400  00C2               	movwf	??_fround
  4849     1401  01C3               	clrf	??_fround+1
  4850     1402  0842               	movf	??_fround,w
  4851     1403  00F2               	movwf	___lwmod@dividend
  4852     1404  0843               	movf	??_fround+1,w
  4853     1405  00F3               	movwf	___lwmod@dividend+1
  4854     1406  3064               	movlw	100
  4855     1407  00F0               	movwf	___lwmod@divisor
  4856     1408  3000               	movlw	0
  4857     1409  00F1               	movwf	___lwmod@divisor+1
  4858     140A  160A  158A  24A3  160A  118A  	fcall	___lwmod
  4859     140F  0871               	movf	?___lwmod+1,w
  4860     1410  00F9               	movwf	___lwdiv@dividend+1
  4861     1411  0870               	movf	?___lwmod,w
  4862     1412  00F8               	movwf	___lwdiv@dividend
  4863     1413  160A  158A  251F  160A  118A  	fcall	___lwdiv
  4864     1418  0876               	movf	?___lwdiv,w
  4865     1419  1283               	bcf	3,5	;RP0=0, select bank0
  4866     141A  1303               	bcf	3,6	;RP1=0, select bank0
  4867     141B  00C4               	movwf	??_fround+2
  4868     141C  3001               	movlw	1
  4869     141D                     u4375:
  4870     141D  1003               	clrc
  4871     141E  0DC4               	rlf	??_fround+2,f
  4872     141F  3EFF               	addlw	-1
  4873     1420  1D03               	skipz
  4874     1421  2C1D               	goto	u4375
  4875     1422  1003               	clrc
  4876     1423  0D44               	rlf	??_fround+2,w
  4877     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4878     1425  0084               	movwf	4
  4879     1426  160A  158A  200A  160A  118A  	fcall	stringdir
  4880     142B  00C5               	movwf	??_fround+3
  4881     142C  160A  158A  200A  160A  118A  	fcall	stringdir
  4882     1431  00C6               	movwf	??_fround+4
  4883     1432  160A  158A  200A  160A  118A  	fcall	stringdir
  4884     1437  00C7               	movwf	??_fround+5
  4885     1438  160A  158A  200A  160A  118A  	fcall	stringdir
  4886     143D  00C8               	movwf	??_fround+6
  4887     143E  0848               	movf	??_fround+6,w
  4888     143F  00A7               	movwf	___flmul@b+3
  4889     1440  0847               	movf	??_fround+5,w
  4890     1441  00A6               	movwf	___flmul@b+2
  4891     1442  0846               	movf	??_fround+4,w
  4892     1443  00A5               	movwf	___flmul@b+1
  4893     1444  0845               	movf	??_fround+3,w
  4894     1445  00A4               	movwf	___flmul@b
  4895     1446  0850               	movf	_fround$1090+3,w
  4896     1447  00AB               	movwf	___flmul@a+3
  4897     1448  084F               	movf	_fround$1090+2,w
  4898     1449  00AA               	movwf	___flmul@a+2
  4899     144A  084E               	movf	_fround$1090+1,w
  4900     144B  00A9               	movwf	___flmul@a+1
  4901     144C  084D               	movf	_fround$1090,w
  4902     144D  00A8               	movwf	___flmul@a
  4903     144E  120A  158A  215C  160A  118A  	fcall	___flmul
  4904     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4905     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4906     1455  0827               	movf	?___flmul+3,w
  4907     1456  00CC               	movwf	_fround$1091+3
  4908     1457  0826               	movf	?___flmul+2,w
  4909     1458  00CB               	movwf	_fround$1091+2
  4910     1459  0825               	movf	?___flmul+1,w
  4911     145A  00CA               	movwf	_fround$1091+1
  4912     145B  0824               	movf	?___flmul,w
  4913     145C  00C9               	movwf	_fround$1091
  4914                           
  4915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4916     145D  300A               	movlw	10
  4917     145E  00F0               	movwf	___lwmod@divisor
  4918     145F  3000               	movlw	0
  4919     1460  00F1               	movwf	___lwmod@divisor+1
  4920     1461  0851               	movf	fround@prec,w
  4921     1462  00C2               	movwf	??_fround
  4922     1463  01C3               	clrf	??_fround+1
  4923     1464  0842               	movf	??_fround,w
  4924     1465  00F2               	movwf	___lwmod@dividend
  4925     1466  0843               	movf	??_fround+1,w
  4926     1467  00F3               	movwf	___lwmod@dividend+1
  4927     1468  160A  158A  24A3  160A  118A  	fcall	___lwmod
  4928     146D  0870               	movf	?___lwmod,w
  4929     146E  1283               	bcf	3,5	;RP0=0, select bank0
  4930     146F  1303               	bcf	3,6	;RP1=0, select bank0
  4931     1470  00C4               	movwf	??_fround+2
  4932     1471  3001               	movlw	1
  4933     1472                     u4385:
  4934     1472  1003               	clrc
  4935     1473  0DC4               	rlf	??_fround+2,f
  4936     1474  3EFF               	addlw	-1
  4937     1475  1D03               	skipz
  4938     1476  2C72               	goto	u4385
  4939     1477  1003               	clrc
  4940     1478  0D44               	rlf	??_fround+2,w
  4941     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4942     147A  0084               	movwf	4
  4943     147B  160A  158A  200A  160A  118A  	fcall	stringdir
  4944     1480  00C5               	movwf	??_fround+3
  4945     1481  160A  158A  200A  160A  118A  	fcall	stringdir
  4946     1486  00C6               	movwf	??_fround+4
  4947     1487  160A  158A  200A  160A  118A  	fcall	stringdir
  4948     148C  00C7               	movwf	??_fround+5
  4949     148D  160A  158A  200A  160A  118A  	fcall	stringdir
  4950     1492  00C8               	movwf	??_fround+6
  4951     1493  0848               	movf	??_fround+6,w
  4952     1494  00A7               	movwf	___flmul@b+3
  4953     1495  0847               	movf	??_fround+5,w
  4954     1496  00A6               	movwf	___flmul@b+2
  4955     1497  0846               	movf	??_fround+4,w
  4956     1498  00A5               	movwf	___flmul@b+1
  4957     1499  0845               	movf	??_fround+3,w
  4958     149A  00A4               	movwf	___flmul@b
  4959     149B  084C               	movf	_fround$1091+3,w
  4960     149C  00AB               	movwf	___flmul@a+3
  4961     149D  084B               	movf	_fround$1091+2,w
  4962     149E  00AA               	movwf	___flmul@a+2
  4963     149F  084A               	movf	_fround$1091+1,w
  4964     14A0  00A9               	movwf	___flmul@a+1
  4965     14A1  0849               	movf	_fround$1091,w
  4966     14A2  00A8               	movwf	___flmul@a
  4967     14A3  120A  158A  215C  160A  118A  	fcall	___flmul
  4968     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4969     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4970     14AA  0827               	movf	?___flmul+3,w
  4971     14AB  00C1               	movwf	?_fround+3
  4972     14AC  0826               	movf	?___flmul+2,w
  4973     14AD  00C0               	movwf	?_fround+2
  4974     14AE  0825               	movf	?___flmul+1,w
  4975     14AF  00BF               	movwf	?_fround+1
  4976     14B0  0824               	movf	?___flmul,w
  4977     14B1  00BE               	movwf	?_fround
  4978     14B2  2DA7               	goto	l267
  4979     14B3                     l2843:
  4980     14B3  300B               	movlw	11
  4981     14B4  0251               	subwf	fround@prec,w
  4982     14B5  1C03               	skipc
  4983     14B6  2CB8               	goto	u4391
  4984     14B7  2CB9               	goto	u4390
  4985     14B8                     u4391:
  4986     14B8  2D64               	goto	l2849
  4987     14B9                     u4390:
  4988     14B9                     l2845:
  4989                           
  4990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4991     14B9  303F               	movlw	63
  4992     14BA  00A7               	movwf	___flmul@b+3
  4993     14BB  3000               	movlw	0
  4994     14BC  00A6               	movwf	___flmul@b+2
  4995     14BD  3000               	movlw	0
  4996     14BE  00A5               	movwf	___flmul@b+1
  4997     14BF  3000               	movlw	0
  4998     14C0  00A4               	movwf	___flmul@b
  4999     14C1  300A               	movlw	10
  5000     14C2  00F6               	movwf	___lwdiv@divisor
  5001     14C3  3000               	movlw	0
  5002     14C4  00F7               	movwf	___lwdiv@divisor+1
  5003     14C5  0851               	movf	fround@prec,w
  5004     14C6  00C2               	movwf	??_fround
  5005     14C7  01C3               	clrf	??_fround+1
  5006     14C8  0842               	movf	??_fround,w
  5007     14C9  00F8               	movwf	___lwdiv@dividend
  5008     14CA  0843               	movf	??_fround+1,w
  5009     14CB  00F9               	movwf	___lwdiv@dividend+1
  5010     14CC  160A  158A  251F  160A  118A  	fcall	___lwdiv
  5011     14D1  0876               	movf	?___lwdiv,w
  5012     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  5013     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  5014     14D4  00C4               	movwf	??_fround+2
  5015     14D5  3001               	movlw	1
  5016     14D6                     u4405:
  5017     14D6  1003               	clrc
  5018     14D7  0DC4               	rlf	??_fround+2,f
  5019     14D8  3EFF               	addlw	-1
  5020     14D9  1D03               	skipz
  5021     14DA  2CD6               	goto	u4405
  5022     14DB  1003               	clrc
  5023     14DC  0D44               	rlf	??_fround+2,w
  5024     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5025     14DE  0084               	movwf	4
  5026     14DF  160A  158A  200A  160A  118A  	fcall	stringdir
  5027     14E4  00C5               	movwf	??_fround+3
  5028     14E5  160A  158A  200A  160A  118A  	fcall	stringdir
  5029     14EA  00C6               	movwf	??_fround+4
  5030     14EB  160A  158A  200A  160A  118A  	fcall	stringdir
  5031     14F0  00C7               	movwf	??_fround+5
  5032     14F1  160A  158A  200A  160A  118A  	fcall	stringdir
  5033     14F6  00C8               	movwf	??_fround+6
  5034     14F7  0848               	movf	??_fround+6,w
  5035     14F8  00AB               	movwf	___flmul@a+3
  5036     14F9  0847               	movf	??_fround+5,w
  5037     14FA  00AA               	movwf	___flmul@a+2
  5038     14FB  0846               	movf	??_fround+4,w
  5039     14FC  00A9               	movwf	___flmul@a+1
  5040     14FD  0845               	movf	??_fround+3,w
  5041     14FE  00A8               	movwf	___flmul@a
  5042     14FF  120A  158A  215C  160A  118A  	fcall	___flmul
  5043     1504  1283               	bcf	3,5	;RP0=0, select bank0
  5044     1505  1303               	bcf	3,6	;RP1=0, select bank0
  5045     1506  0827               	movf	?___flmul+3,w
  5046     1507  00D0               	movwf	_fround$1090+3
  5047     1508  0826               	movf	?___flmul+2,w
  5048     1509  00CF               	movwf	_fround$1090+2
  5049     150A  0825               	movf	?___flmul+1,w
  5050     150B  00CE               	movwf	_fround$1090+1
  5051     150C  0824               	movf	?___flmul,w
  5052     150D  00CD               	movwf	_fround$1090
  5053                           
  5054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5055     150E  300A               	movlw	10
  5056     150F  00F0               	movwf	___lwmod@divisor
  5057     1510  3000               	movlw	0
  5058     1511  00F1               	movwf	___lwmod@divisor+1
  5059     1512  0851               	movf	fround@prec,w
  5060     1513  00C2               	movwf	??_fround
  5061     1514  01C3               	clrf	??_fround+1
  5062     1515  0842               	movf	??_fround,w
  5063     1516  00F2               	movwf	___lwmod@dividend
  5064     1517  0843               	movf	??_fround+1,w
  5065     1518  00F3               	movwf	___lwmod@dividend+1
  5066     1519  160A  158A  24A3  160A  118A  	fcall	___lwmod
  5067     151E  0870               	movf	?___lwmod,w
  5068     151F  1283               	bcf	3,5	;RP0=0, select bank0
  5069     1520  1303               	bcf	3,6	;RP1=0, select bank0
  5070     1521  00C4               	movwf	??_fround+2
  5071     1522  3001               	movlw	1
  5072     1523                     u4415:
  5073     1523  1003               	clrc
  5074     1524  0DC4               	rlf	??_fround+2,f
  5075     1525  3EFF               	addlw	-1
  5076     1526  1D03               	skipz
  5077     1527  2D23               	goto	u4415
  5078     1528  1003               	clrc
  5079     1529  0D44               	rlf	??_fround+2,w
  5080     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5081     152B  0084               	movwf	4
  5082     152C  160A  158A  200A  160A  118A  	fcall	stringdir
  5083     1531  00C5               	movwf	??_fround+3
  5084     1532  160A  158A  200A  160A  118A  	fcall	stringdir
  5085     1537  00C6               	movwf	??_fround+4
  5086     1538  160A  158A  200A  160A  118A  	fcall	stringdir
  5087     153D  00C7               	movwf	??_fround+5
  5088     153E  160A  158A  200A  160A  118A  	fcall	stringdir
  5089     1543  00C8               	movwf	??_fround+6
  5090     1544  0848               	movf	??_fround+6,w
  5091     1545  00A7               	movwf	___flmul@b+3
  5092     1546  0847               	movf	??_fround+5,w
  5093     1547  00A6               	movwf	___flmul@b+2
  5094     1548  0846               	movf	??_fround+4,w
  5095     1549  00A5               	movwf	___flmul@b+1
  5096     154A  0845               	movf	??_fround+3,w
  5097     154B  00A4               	movwf	___flmul@b
  5098     154C  0850               	movf	_fround$1090+3,w
  5099     154D  00AB               	movwf	___flmul@a+3
  5100     154E  084F               	movf	_fround$1090+2,w
  5101     154F  00AA               	movwf	___flmul@a+2
  5102     1550  084E               	movf	_fround$1090+1,w
  5103     1551  00A9               	movwf	___flmul@a+1
  5104     1552  084D               	movf	_fround$1090,w
  5105     1553  00A8               	movwf	___flmul@a
  5106     1554  120A  158A  215C  160A  118A  	fcall	___flmul
  5107     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5108     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5109     155B  0827               	movf	?___flmul+3,w
  5110     155C  00C1               	movwf	?_fround+3
  5111     155D  0826               	movf	?___flmul+2,w
  5112     155E  00C0               	movwf	?_fround+2
  5113     155F  0825               	movf	?___flmul+1,w
  5114     1560  00BF               	movwf	?_fround+1
  5115     1561  0824               	movf	?___flmul,w
  5116     1562  00BE               	movwf	?_fround
  5117     1563  2DA7               	goto	l267
  5118     1564                     l2849:
  5119                           
  5120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5121     1564  303F               	movlw	63
  5122     1565  00A7               	movwf	___flmul@b+3
  5123     1566  3000               	movlw	0
  5124     1567  00A6               	movwf	___flmul@b+2
  5125     1568  3000               	movlw	0
  5126     1569  00A5               	movwf	___flmul@b+1
  5127     156A  3000               	movlw	0
  5128     156B  00A4               	movwf	___flmul@b
  5129     156C  0851               	movf	fround@prec,w
  5130     156D  00C2               	movwf	??_fround
  5131     156E  3001               	movlw	1
  5132     156F                     u4425:
  5133     156F  1003               	clrc
  5134     1570  0DC2               	rlf	??_fround,f
  5135     1571  3EFF               	addlw	-1
  5136     1572  1D03               	skipz
  5137     1573  2D6F               	goto	u4425
  5138     1574  1003               	clrc
  5139     1575  0D42               	rlf	??_fround,w
  5140     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5141     1577  0084               	movwf	4
  5142     1578  160A  158A  200A  160A  118A  	fcall	stringdir
  5143     157D  00C3               	movwf	??_fround+1
  5144     157E  160A  158A  200A  160A  118A  	fcall	stringdir
  5145     1583  00C4               	movwf	??_fround+2
  5146     1584  160A  158A  200A  160A  118A  	fcall	stringdir
  5147     1589  00C5               	movwf	??_fround+3
  5148     158A  160A  158A  200A  160A  118A  	fcall	stringdir
  5149     158F  00C6               	movwf	??_fround+4
  5150     1590  0846               	movf	??_fround+4,w
  5151     1591  00AB               	movwf	___flmul@a+3
  5152     1592  0845               	movf	??_fround+3,w
  5153     1593  00AA               	movwf	___flmul@a+2
  5154     1594  0844               	movf	??_fround+2,w
  5155     1595  00A9               	movwf	___flmul@a+1
  5156     1596  0843               	movf	??_fround+1,w
  5157     1597  00A8               	movwf	___flmul@a
  5158     1598  120A  158A  215C  160A  118A  	fcall	___flmul
  5159     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5160     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5161     159F  0827               	movf	?___flmul+3,w
  5162     15A0  00C1               	movwf	?_fround+3
  5163     15A1  0826               	movf	?___flmul+2,w
  5164     15A2  00C0               	movwf	?_fround+2
  5165     15A3  0825               	movf	?___flmul+1,w
  5166     15A4  00BF               	movwf	?_fround+1
  5167     15A5  0824               	movf	?___flmul,w
  5168     15A6  00BE               	movwf	?_fround
  5169     15A7                     l267:
  5170     15A7  0008               	return
  5171     15A8                     __end_of_fround:
  5172                           
  5173                           	psect	text7
  5174     1CA3                     __ptext7:	
  5175 ;; *************** function ___lwmod *****************
  5176 ;; Defined at:
  5177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  divisor         2    0[COMMON] unsigned int 
  5180 ;;  dividend        2    2[COMMON] unsigned int 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  counter         1    5[COMMON] unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  2    0[COMMON] unsigned int 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5192 ;;      Params:         4       0       0       0       0
  5193 ;;      Locals:         1       0       0       0       0
  5194 ;;      Temps:          1       0       0       0       0
  5195 ;;      Totals:         6       0       0       0       0
  5196 ;;Total ram usage:        6 bytes
  5197 ;; Hardware stack levels used: 1
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_fround
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205     1CA3                     ___lwmod:	
  5206                           ;psect for function ___lwmod
  5207                           
  5208     1CA3                     l2437:	
  5209                           ;incstack = 0
  5210                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5211                           
  5212     1CA3  0870               	movf	___lwmod@divisor,w
  5213     1CA4  0471               	iorwf	___lwmod@divisor+1,w
  5214     1CA5  1903               	btfsc	3,2
  5215     1CA6  2CA8               	goto	u3431
  5216     1CA7  2CA9               	goto	u3430
  5217     1CA8                     u3431:
  5218     1CA8  2CD8               	goto	l2455
  5219     1CA9                     u3430:
  5220     1CA9                     l2439:
  5221     1CA9  01F5               	clrf	___lwmod@counter
  5222     1CAA  0AF5               	incf	___lwmod@counter,f
  5223     1CAB  2CB7               	goto	l2445
  5224     1CAC                     l2441:
  5225     1CAC  3001               	movlw	1
  5226     1CAD                     u3445:
  5227     1CAD  1003               	clrc
  5228     1CAE  0DF0               	rlf	___lwmod@divisor,f
  5229     1CAF  0DF1               	rlf	___lwmod@divisor+1,f
  5230     1CB0  3EFF               	addlw	-1
  5231     1CB1  1D03               	skipz
  5232     1CB2  2CAD               	goto	u3445
  5233     1CB3                     l2443:
  5234     1CB3  3001               	movlw	1
  5235     1CB4  00F4               	movwf	??___lwmod
  5236     1CB5  0874               	movf	??___lwmod,w
  5237     1CB6  07F5               	addwf	___lwmod@counter,f
  5238     1CB7                     l2445:
  5239     1CB7  1FF1               	btfss	___lwmod@divisor+1,7
  5240     1CB8  2CBA               	goto	u3451
  5241     1CB9  2CBB               	goto	u3450
  5242     1CBA                     u3451:
  5243     1CBA  2CAC               	goto	l2441
  5244     1CBB                     u3450:
  5245     1CBB                     l2447:
  5246     1CBB  0871               	movf	___lwmod@divisor+1,w
  5247     1CBC  0273               	subwf	___lwmod@dividend+1,w
  5248     1CBD  1D03               	skipz
  5249     1CBE  2CC1               	goto	u3465
  5250     1CBF  0870               	movf	___lwmod@divisor,w
  5251     1CC0  0272               	subwf	___lwmod@dividend,w
  5252     1CC1                     u3465:
  5253     1CC1  1C03               	skipc
  5254     1CC2  2CC4               	goto	u3461
  5255     1CC3  2CC5               	goto	u3460
  5256     1CC4                     u3461:
  5257     1CC4  2CCB               	goto	l2451
  5258     1CC5                     u3460:
  5259     1CC5                     l2449:
  5260     1CC5  0870               	movf	___lwmod@divisor,w
  5261     1CC6  02F2               	subwf	___lwmod@dividend,f
  5262     1CC7  0871               	movf	___lwmod@divisor+1,w
  5263     1CC8  1C03               	skipc
  5264     1CC9  03F3               	decf	___lwmod@dividend+1,f
  5265     1CCA  02F3               	subwf	___lwmod@dividend+1,f
  5266     1CCB                     l2451:
  5267     1CCB  3001               	movlw	1
  5268     1CCC                     u3475:
  5269     1CCC  1003               	clrc
  5270     1CCD  0CF1               	rrf	___lwmod@divisor+1,f
  5271     1CCE  0CF0               	rrf	___lwmod@divisor,f
  5272     1CCF  3EFF               	addlw	-1
  5273     1CD0  1D03               	skipz
  5274     1CD1  2CCC               	goto	u3475
  5275     1CD2                     l2453:
  5276     1CD2  3001               	movlw	1
  5277     1CD3  02F5               	subwf	___lwmod@counter,f
  5278     1CD4  1D03               	btfss	3,2
  5279     1CD5  2CD7               	goto	u3481
  5280     1CD6  2CD8               	goto	u3480
  5281     1CD7                     u3481:
  5282     1CD7  2CBB               	goto	l2447
  5283     1CD8                     u3480:
  5284     1CD8                     l2455:
  5285     1CD8  0873               	movf	___lwmod@dividend+1,w
  5286     1CD9  00F1               	movwf	?___lwmod+1
  5287     1CDA  0872               	movf	___lwmod@dividend,w
  5288     1CDB  00F0               	movwf	?___lwmod
  5289     1CDC                     l660:
  5290     1CDC  0008               	return
  5291     1CDD                     __end_of___lwmod:
  5292                           
  5293                           	psect	text8
  5294     1D1F                     __ptext8:	
  5295 ;; *************** function ___lwdiv *****************
  5296 ;; Defined at:
  5297 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  divisor         2    6[COMMON] unsigned int 
  5300 ;;  dividend        2    8[COMMON] unsigned int 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;  quotient        2   11[COMMON] unsigned int 
  5303 ;;  counter         1   13[COMMON] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  2    6[COMMON] unsigned int 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, status,0
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5313 ;;      Params:         4       0       0       0       0
  5314 ;;      Locals:         3       0       0       0       0
  5315 ;;      Temps:          1       0       0       0       0
  5316 ;;      Totals:         8       0       0       0       0
  5317 ;;Total ram usage:        8 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_fround
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326     1D1F                     ___lwdiv:	
  5327                           ;psect for function ___lwdiv
  5328                           
  5329     1D1F                     l2411:	
  5330                           ;incstack = 0
  5331                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5332                           
  5333     1D1F  01FB               	clrf	___lwdiv@quotient
  5334     1D20  01FC               	clrf	___lwdiv@quotient+1
  5335     1D21                     l2413:
  5336     1D21  0876               	movf	___lwdiv@divisor,w
  5337     1D22  0477               	iorwf	___lwdiv@divisor+1,w
  5338     1D23  1903               	btfsc	3,2
  5339     1D24  2D26               	goto	u3361
  5340     1D25  2D27               	goto	u3360
  5341     1D26                     u3361:
  5342     1D26  2D5E               	goto	l2433
  5343     1D27                     u3360:
  5344     1D27                     l2415:
  5345     1D27  01FD               	clrf	___lwdiv@counter
  5346     1D28  0AFD               	incf	___lwdiv@counter,f
  5347     1D29  2D35               	goto	l2421
  5348     1D2A                     l2417:
  5349     1D2A  3001               	movlw	1
  5350     1D2B                     u3375:
  5351     1D2B  1003               	clrc
  5352     1D2C  0DF6               	rlf	___lwdiv@divisor,f
  5353     1D2D  0DF7               	rlf	___lwdiv@divisor+1,f
  5354     1D2E  3EFF               	addlw	-1
  5355     1D2F  1D03               	skipz
  5356     1D30  2D2B               	goto	u3375
  5357     1D31                     l2419:
  5358     1D31  3001               	movlw	1
  5359     1D32  00FA               	movwf	??___lwdiv
  5360     1D33  087A               	movf	??___lwdiv,w
  5361     1D34  07FD               	addwf	___lwdiv@counter,f
  5362     1D35                     l2421:
  5363     1D35  1FF7               	btfss	___lwdiv@divisor+1,7
  5364     1D36  2D38               	goto	u3381
  5365     1D37  2D39               	goto	u3380
  5366     1D38                     u3381:
  5367     1D38  2D2A               	goto	l2417
  5368     1D39                     u3380:
  5369     1D39                     l2423:
  5370     1D39  3001               	movlw	1
  5371     1D3A                     u3395:
  5372     1D3A  1003               	clrc
  5373     1D3B  0DFB               	rlf	___lwdiv@quotient,f
  5374     1D3C  0DFC               	rlf	___lwdiv@quotient+1,f
  5375     1D3D  3EFF               	addlw	-1
  5376     1D3E  1D03               	skipz
  5377     1D3F  2D3A               	goto	u3395
  5378     1D40  0877               	movf	___lwdiv@divisor+1,w
  5379     1D41  0279               	subwf	___lwdiv@dividend+1,w
  5380     1D42  1D03               	skipz
  5381     1D43  2D46               	goto	u3405
  5382     1D44  0876               	movf	___lwdiv@divisor,w
  5383     1D45  0278               	subwf	___lwdiv@dividend,w
  5384     1D46                     u3405:
  5385     1D46  1C03               	skipc
  5386     1D47  2D49               	goto	u3401
  5387     1D48  2D4A               	goto	u3400
  5388     1D49                     u3401:
  5389     1D49  2D51               	goto	l2429
  5390     1D4A                     u3400:
  5391     1D4A                     l2425:
  5392     1D4A  0876               	movf	___lwdiv@divisor,w
  5393     1D4B  02F8               	subwf	___lwdiv@dividend,f
  5394     1D4C  0877               	movf	___lwdiv@divisor+1,w
  5395     1D4D  1C03               	skipc
  5396     1D4E  03F9               	decf	___lwdiv@dividend+1,f
  5397     1D4F  02F9               	subwf	___lwdiv@dividend+1,f
  5398     1D50                     l2427:
  5399     1D50  147B               	bsf	___lwdiv@quotient,0
  5400     1D51                     l2429:
  5401     1D51  3001               	movlw	1
  5402     1D52                     u3415:
  5403     1D52  1003               	clrc
  5404     1D53  0CF7               	rrf	___lwdiv@divisor+1,f
  5405     1D54  0CF6               	rrf	___lwdiv@divisor,f
  5406     1D55  3EFF               	addlw	-1
  5407     1D56  1D03               	skipz
  5408     1D57  2D52               	goto	u3415
  5409     1D58                     l2431:
  5410     1D58  3001               	movlw	1
  5411     1D59  02FD               	subwf	___lwdiv@counter,f
  5412     1D5A  1D03               	btfss	3,2
  5413     1D5B  2D5D               	goto	u3421
  5414     1D5C  2D5E               	goto	u3420
  5415     1D5D                     u3421:
  5416     1D5D  2D39               	goto	l2423
  5417     1D5E                     u3420:
  5418     1D5E                     l2433:
  5419     1D5E  087C               	movf	___lwdiv@quotient+1,w
  5420     1D5F  00F7               	movwf	?___lwdiv+1
  5421     1D60  087B               	movf	___lwdiv@quotient,w
  5422     1D61  00F6               	movwf	?___lwdiv
  5423     1D62                     l650:
  5424     1D62  0008               	return
  5425     1D63                     __end_of___lwdiv:
  5426                           
  5427                           	psect	text9
  5428     095C                     __ptext9:	
  5429 ;; *************** function ___flmul *****************
  5430 ;; Defined at:
  5431 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  b               4    4[BANK0 ] unsigned int 
  5434 ;;  a               4    8[BANK0 ] unsigned int 
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;  prod            4   24[BANK0 ] struct .
  5437 ;;  grs             4   18[BANK0 ] unsigned long 
  5438 ;;  temp            2   28[BANK0 ] struct .
  5439 ;;  bexp            1   23[BANK0 ] unsigned char 
  5440 ;;  aexp            1   22[BANK0 ] unsigned char 
  5441 ;;  sign            1   17[BANK0 ] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  4    4[BANK0 ] unsigned char 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5451 ;;      Params:         0       8       0       0       0
  5452 ;;      Locals:         0      13       0       0       0
  5453 ;;      Temps:          0       5       0       0       0
  5454 ;;      Totals:         0      26       0       0       0
  5455 ;;Total ram usage:       26 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 1
  5458 ;; This function calls:
  5459 ;;		__Umul8_16
  5460 ;; This function is called by:
  5461 ;;		_main
  5462 ;;		_fround
  5463 ;;		_scale
  5464 ;;		_sprintf
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468     095C                     ___flmul:	
  5469                           ;psect for function ___flmul
  5470                           
  5471     095C                     l2653:	
  5472                           ;incstack = 0
  5473                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5474                           
  5475     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5476     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5477     095E  0827               	movf	___flmul@b+3,w
  5478     095F  3980               	andlw	128
  5479     0960  00B1               	movwf	___flmul@sign
  5480     0961                     l2655:
  5481     0961  0827               	movf	___flmul@b+3,w
  5482     0962  00AC               	movwf	??___flmul
  5483     0963  072C               	addwf	??___flmul,w
  5484     0964  00B7               	movwf	___flmul@bexp
  5485     0965                     l2657:
  5486     0965  1FA6               	btfss	___flmul@b+2,7
  5487     0966  2968               	goto	u3951
  5488     0967  2969               	goto	u3950
  5489     0968                     u3951:
  5490     0968  296A               	goto	l2661
  5491     0969                     u3950:
  5492     0969                     l2659:
  5493     0969  1437               	bsf	___flmul@bexp,0
  5494     096A                     l2661:
  5495     096A  0837               	movf	___flmul@bexp,w
  5496     096B  1903               	btfsc	3,2
  5497     096C  296E               	goto	u3961
  5498     096D  296F               	goto	u3960
  5499     096E                     u3961:
  5500     096E  297E               	goto	l2669
  5501     096F                     u3960:
  5502     096F                     l2663:
  5503     096F  0A37               	incf	___flmul@bexp,w
  5504     0970  1D03               	btfss	3,2
  5505     0971  2973               	goto	u3971
  5506     0972  2974               	goto	u3970
  5507     0973                     u3971:
  5508     0973  297C               	goto	l2667
  5509     0974                     u3970:
  5510     0974                     l2665:
  5511     0974  3000               	movlw	0
  5512     0975  00A7               	movwf	___flmul@b+3
  5513     0976  3000               	movlw	0
  5514     0977  00A6               	movwf	___flmul@b+2
  5515     0978  3000               	movlw	0
  5516     0979  00A5               	movwf	___flmul@b+1
  5517     097A  3000               	movlw	0
  5518     097B  00A4               	movwf	___flmul@b
  5519     097C                     l2667:
  5520     097C  17A6               	bsf	___flmul@b+2,7
  5521     097D  2986               	goto	l2671
  5522     097E                     l2669:
  5523     097E  3000               	movlw	0
  5524     097F  00A7               	movwf	___flmul@b+3
  5525     0980  3000               	movlw	0
  5526     0981  00A6               	movwf	___flmul@b+2
  5527     0982  3000               	movlw	0
  5528     0983  00A5               	movwf	___flmul@b+1
  5529     0984  3000               	movlw	0
  5530     0985  00A4               	movwf	___flmul@b
  5531     0986                     l2671:
  5532     0986  082B               	movf	___flmul@a+3,w
  5533     0987  3980               	andlw	128
  5534     0988  00AC               	movwf	??___flmul
  5535     0989  082C               	movf	??___flmul,w
  5536     098A  06B1               	xorwf	___flmul@sign,f
  5537     098B                     l2673:
  5538     098B  082B               	movf	___flmul@a+3,w
  5539     098C  00AC               	movwf	??___flmul
  5540     098D  072C               	addwf	??___flmul,w
  5541     098E  00B6               	movwf	___flmul@aexp
  5542     098F                     l2675:
  5543     098F  1FAA               	btfss	___flmul@a+2,7
  5544     0990  2992               	goto	u3981
  5545     0991  2993               	goto	u3980
  5546     0992                     u3981:
  5547     0992  2994               	goto	l2679
  5548     0993                     u3980:
  5549     0993                     l2677:
  5550     0993  1436               	bsf	___flmul@aexp,0
  5551     0994                     l2679:
  5552     0994  0836               	movf	___flmul@aexp,w
  5553     0995  1903               	btfsc	3,2
  5554     0996  2998               	goto	u3991
  5555     0997  2999               	goto	u3990
  5556     0998                     u3991:
  5557     0998  29A8               	goto	l2687
  5558     0999                     u3990:
  5559     0999                     l2681:
  5560     0999  0A36               	incf	___flmul@aexp,w
  5561     099A  1D03               	btfss	3,2
  5562     099B  299D               	goto	u4001
  5563     099C  299E               	goto	u4000
  5564     099D                     u4001:
  5565     099D  29A6               	goto	l2685
  5566     099E                     u4000:
  5567     099E                     l2683:
  5568     099E  3000               	movlw	0
  5569     099F  00AB               	movwf	___flmul@a+3
  5570     09A0  3000               	movlw	0
  5571     09A1  00AA               	movwf	___flmul@a+2
  5572     09A2  3000               	movlw	0
  5573     09A3  00A9               	movwf	___flmul@a+1
  5574     09A4  3000               	movlw	0
  5575     09A5  00A8               	movwf	___flmul@a
  5576     09A6                     l2685:
  5577     09A6  17AA               	bsf	___flmul@a+2,7
  5578     09A7  29B0               	goto	l2689
  5579     09A8                     l2687:
  5580     09A8  3000               	movlw	0
  5581     09A9  00AB               	movwf	___flmul@a+3
  5582     09AA  3000               	movlw	0
  5583     09AB  00AA               	movwf	___flmul@a+2
  5584     09AC  3000               	movlw	0
  5585     09AD  00A9               	movwf	___flmul@a+1
  5586     09AE  3000               	movlw	0
  5587     09AF  00A8               	movwf	___flmul@a
  5588     09B0                     l2689:
  5589     09B0  0836               	movf	___flmul@aexp,w
  5590     09B1  1903               	btfsc	3,2
  5591     09B2  29B4               	goto	u4011
  5592     09B3  29B5               	goto	u4010
  5593     09B4                     u4011:
  5594     09B4  29BA               	goto	l2693
  5595     09B5                     u4010:
  5596     09B5                     l2691:
  5597     09B5  0837               	movf	___flmul@bexp,w
  5598     09B6  1D03               	btfss	3,2
  5599     09B7  29B9               	goto	u4021
  5600     09B8  29BA               	goto	u4020
  5601     09B9                     u4021:
  5602     09B9  29C3               	goto	l2697
  5603     09BA                     u4020:
  5604     09BA                     l2693:
  5605     09BA  3000               	movlw	0
  5606     09BB  00A7               	movwf	?___flmul+3
  5607     09BC  3000               	movlw	0
  5608     09BD  00A6               	movwf	?___flmul+2
  5609     09BE  3000               	movlw	0
  5610     09BF  00A5               	movwf	?___flmul+1
  5611     09C0  3000               	movlw	0
  5612     09C1  00A4               	movwf	?___flmul
  5613     09C2  2CA0               	goto	l767
  5614     09C3                     l2697:
  5615     09C3  0824               	movf	___flmul@b,w
  5616     09C4  00F0               	movwf	__Umul8_16@multiplicand
  5617     09C5  082A               	movf	___flmul@a+2,w
  5618     09C6  160A  158A  2449  120A  158A  	fcall	__Umul8_16
  5619     09CB  0871               	movf	?__Umul8_16+1,w
  5620     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5621     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5622     09CE  00BD               	movwf	___flmul@temp+1
  5623     09CF  0870               	movf	?__Umul8_16,w
  5624     09D0  00BC               	movwf	___flmul@temp
  5625     09D1                     l2699:
  5626     09D1  083C               	movf	___flmul@temp,w
  5627     09D2  00AC               	movwf	??___flmul
  5628     09D3  01AD               	clrf	??___flmul+1
  5629     09D4  01AE               	clrf	??___flmul+2
  5630     09D5  01AF               	clrf	??___flmul+3
  5631     09D6  082F               	movf	??___flmul+3,w
  5632     09D7  00B5               	movwf	___flmul@grs+3
  5633     09D8  082E               	movf	??___flmul+2,w
  5634     09D9  00B4               	movwf	___flmul@grs+2
  5635     09DA  082D               	movf	??___flmul+1,w
  5636     09DB  00B3               	movwf	___flmul@grs+1
  5637     09DC  082C               	movf	??___flmul,w
  5638     09DD  00B2               	movwf	___flmul@grs
  5639     09DE                     l2701:
  5640     09DE  083D               	movf	___flmul@temp+1,w
  5641     09DF  00AC               	movwf	??___flmul
  5642     09E0  01AD               	clrf	??___flmul+1
  5643     09E1  01AE               	clrf	??___flmul+2
  5644     09E2  01AF               	clrf	??___flmul+3
  5645     09E3  082F               	movf	??___flmul+3,w
  5646     09E4  00BB               	movwf	___flmul@prod+3
  5647     09E5  082E               	movf	??___flmul+2,w
  5648     09E6  00BA               	movwf	___flmul@prod+2
  5649     09E7  082D               	movf	??___flmul+1,w
  5650     09E8  00B9               	movwf	___flmul@prod+1
  5651     09E9  082C               	movf	??___flmul,w
  5652     09EA  00B8               	movwf	___flmul@prod
  5653     09EB  0825               	movf	___flmul@b+1,w
  5654     09EC  00F0               	movwf	__Umul8_16@multiplicand
  5655     09ED  0829               	movf	___flmul@a+1,w
  5656     09EE  160A  158A  2449  120A  158A  	fcall	__Umul8_16
  5657     09F3  0871               	movf	?__Umul8_16+1,w
  5658     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5659     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5660     09F6  00BD               	movwf	___flmul@temp+1
  5661     09F7  0870               	movf	?__Umul8_16,w
  5662     09F8  00BC               	movwf	___flmul@temp
  5663     09F9                     l2703:
  5664     09F9  083C               	movf	___flmul@temp,w
  5665     09FA  00AC               	movwf	??___flmul
  5666     09FB  01AD               	clrf	??___flmul+1
  5667     09FC  01AE               	clrf	??___flmul+2
  5668     09FD  01AF               	clrf	??___flmul+3
  5669     09FE  082C               	movf	??___flmul,w
  5670     09FF  07B2               	addwf	___flmul@grs,f
  5671     0A00  082D               	movf	??___flmul+1,w
  5672     0A01  1103               	clrz
  5673     0A02  1803               	skipnc
  5674     0A03  3E01               	addlw	1
  5675     0A04  1903               	skipnz
  5676     0A05  2A07               	goto	u4031
  5677     0A06  07B3               	addwf	___flmul@grs+1,f
  5678     0A07                     u4031:
  5679     0A07  082E               	movf	??___flmul+2,w
  5680     0A08  1103               	clrz
  5681     0A09  1803               	skipnc
  5682     0A0A  3E01               	addlw	1
  5683     0A0B  1903               	skipnz
  5684     0A0C  2A0E               	goto	u4032
  5685     0A0D  07B4               	addwf	___flmul@grs+2,f
  5686     0A0E                     u4032:
  5687     0A0E  082F               	movf	??___flmul+3,w
  5688     0A0F  1103               	clrz
  5689     0A10  1803               	skipnc
  5690     0A11  3E01               	addlw	1
  5691     0A12  1903               	skipnz
  5692     0A13  2A15               	goto	u4033
  5693     0A14  07B5               	addwf	___flmul@grs+3,f
  5694     0A15                     u4033:
  5695     0A15                     l2705:
  5696     0A15  083D               	movf	___flmul@temp+1,w
  5697     0A16  00AC               	movwf	??___flmul
  5698     0A17  01AD               	clrf	??___flmul+1
  5699     0A18  01AE               	clrf	??___flmul+2
  5700     0A19  01AF               	clrf	??___flmul+3
  5701     0A1A  082C               	movf	??___flmul,w
  5702     0A1B  07B8               	addwf	___flmul@prod,f
  5703     0A1C  082D               	movf	??___flmul+1,w
  5704     0A1D  1103               	clrz
  5705     0A1E  1803               	skipnc
  5706     0A1F  3E01               	addlw	1
  5707     0A20  1903               	skipnz
  5708     0A21  2A23               	goto	u4041
  5709     0A22  07B9               	addwf	___flmul@prod+1,f
  5710     0A23                     u4041:
  5711     0A23  082E               	movf	??___flmul+2,w
  5712     0A24  1103               	clrz
  5713     0A25  1803               	skipnc
  5714     0A26  3E01               	addlw	1
  5715     0A27  1903               	skipnz
  5716     0A28  2A2A               	goto	u4042
  5717     0A29  07BA               	addwf	___flmul@prod+2,f
  5718     0A2A                     u4042:
  5719     0A2A  082F               	movf	??___flmul+3,w
  5720     0A2B  1103               	clrz
  5721     0A2C  1803               	skipnc
  5722     0A2D  3E01               	addlw	1
  5723     0A2E  1903               	skipnz
  5724     0A2F  2A31               	goto	u4043
  5725     0A30  07BB               	addwf	___flmul@prod+3,f
  5726     0A31                     u4043:
  5727     0A31  0826               	movf	___flmul@b+2,w
  5728     0A32  00F0               	movwf	__Umul8_16@multiplicand
  5729     0A33  0828               	movf	___flmul@a,w
  5730     0A34  160A  158A  2449  120A  158A  	fcall	__Umul8_16
  5731     0A39  0871               	movf	?__Umul8_16+1,w
  5732     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  5733     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  5734     0A3C  00BD               	movwf	___flmul@temp+1
  5735     0A3D  0870               	movf	?__Umul8_16,w
  5736     0A3E  00BC               	movwf	___flmul@temp
  5737     0A3F                     l2707:
  5738     0A3F  083C               	movf	___flmul@temp,w
  5739     0A40  00AC               	movwf	??___flmul
  5740     0A41  01AD               	clrf	??___flmul+1
  5741     0A42  01AE               	clrf	??___flmul+2
  5742     0A43  01AF               	clrf	??___flmul+3
  5743     0A44  082C               	movf	??___flmul,w
  5744     0A45  07B2               	addwf	___flmul@grs,f
  5745     0A46  082D               	movf	??___flmul+1,w
  5746     0A47  1103               	clrz
  5747     0A48  1803               	skipnc
  5748     0A49  3E01               	addlw	1
  5749     0A4A  1903               	skipnz
  5750     0A4B  2A4D               	goto	u4051
  5751     0A4C  07B3               	addwf	___flmul@grs+1,f
  5752     0A4D                     u4051:
  5753     0A4D  082E               	movf	??___flmul+2,w
  5754     0A4E  1103               	clrz
  5755     0A4F  1803               	skipnc
  5756     0A50  3E01               	addlw	1
  5757     0A51  1903               	skipnz
  5758     0A52  2A54               	goto	u4052
  5759     0A53  07B4               	addwf	___flmul@grs+2,f
  5760     0A54                     u4052:
  5761     0A54  082F               	movf	??___flmul+3,w
  5762     0A55  1103               	clrz
  5763     0A56  1803               	skipnc
  5764     0A57  3E01               	addlw	1
  5765     0A58  1903               	skipnz
  5766     0A59  2A5B               	goto	u4053
  5767     0A5A  07B5               	addwf	___flmul@grs+3,f
  5768     0A5B                     u4053:
  5769     0A5B                     l2709:
  5770     0A5B  083D               	movf	___flmul@temp+1,w
  5771     0A5C  00AC               	movwf	??___flmul
  5772     0A5D  01AD               	clrf	??___flmul+1
  5773     0A5E  01AE               	clrf	??___flmul+2
  5774     0A5F  01AF               	clrf	??___flmul+3
  5775     0A60  082C               	movf	??___flmul,w
  5776     0A61  07B8               	addwf	___flmul@prod,f
  5777     0A62  082D               	movf	??___flmul+1,w
  5778     0A63  1103               	clrz
  5779     0A64  1803               	skipnc
  5780     0A65  3E01               	addlw	1
  5781     0A66  1903               	skipnz
  5782     0A67  2A69               	goto	u4061
  5783     0A68  07B9               	addwf	___flmul@prod+1,f
  5784     0A69                     u4061:
  5785     0A69  082E               	movf	??___flmul+2,w
  5786     0A6A  1103               	clrz
  5787     0A6B  1803               	skipnc
  5788     0A6C  3E01               	addlw	1
  5789     0A6D  1903               	skipnz
  5790     0A6E  2A70               	goto	u4062
  5791     0A6F  07BA               	addwf	___flmul@prod+2,f
  5792     0A70                     u4062:
  5793     0A70  082F               	movf	??___flmul+3,w
  5794     0A71  1103               	clrz
  5795     0A72  1803               	skipnc
  5796     0A73  3E01               	addlw	1
  5797     0A74  1903               	skipnz
  5798     0A75  2A77               	goto	u4063
  5799     0A76  07BB               	addwf	___flmul@prod+3,f
  5800     0A77                     u4063:
  5801     0A77                     l2711:
  5802     0A77  3008               	movlw	8
  5803     0A78  00AC               	movwf	??___flmul
  5804     0A79                     u4075:
  5805     0A79  1003               	clrc
  5806     0A7A  0DB2               	rlf	___flmul@grs,f
  5807     0A7B  0DB3               	rlf	___flmul@grs+1,f
  5808     0A7C  0DB4               	rlf	___flmul@grs+2,f
  5809     0A7D  0DB5               	rlf	___flmul@grs+3,f
  5810     0A7E  0BAC               	decfsz	??___flmul,f
  5811     0A7F  2A79               	goto	u4075
  5812     0A80                     l2713:
  5813     0A80  0825               	movf	___flmul@b+1,w
  5814     0A81  00F0               	movwf	__Umul8_16@multiplicand
  5815     0A82  0828               	movf	___flmul@a,w
  5816     0A83  160A  158A  2449  120A  158A  	fcall	__Umul8_16
  5817     0A88  0871               	movf	?__Umul8_16+1,w
  5818     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5819     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5820     0A8B  00BD               	movwf	___flmul@temp+1
  5821     0A8C  0870               	movf	?__Umul8_16,w
  5822     0A8D  00BC               	movwf	___flmul@temp
  5823     0A8E                     l2715:
  5824     0A8E  083C               	movf	___flmul@temp,w
  5825     0A8F  00AC               	movwf	??___flmul
  5826     0A90  083D               	movf	___flmul@temp+1,w
  5827     0A91  00AD               	movwf	??___flmul+1
  5828     0A92  01AE               	clrf	??___flmul+2
  5829     0A93  01AF               	clrf	??___flmul+3
  5830     0A94  082C               	movf	??___flmul,w
  5831     0A95  07B2               	addwf	___flmul@grs,f
  5832     0A96  082D               	movf	??___flmul+1,w
  5833     0A97  1103               	clrz
  5834     0A98  1803               	skipnc
  5835     0A99  3E01               	addlw	1
  5836     0A9A  1903               	skipnz
  5837     0A9B  2A9D               	goto	u4081
  5838     0A9C  07B3               	addwf	___flmul@grs+1,f
  5839     0A9D                     u4081:
  5840     0A9D  082E               	movf	??___flmul+2,w
  5841     0A9E  1103               	clrz
  5842     0A9F  1803               	skipnc
  5843     0AA0  3E01               	addlw	1
  5844     0AA1  1903               	skipnz
  5845     0AA2  2AA4               	goto	u4082
  5846     0AA3  07B4               	addwf	___flmul@grs+2,f
  5847     0AA4                     u4082:
  5848     0AA4  082F               	movf	??___flmul+3,w
  5849     0AA5  1103               	clrz
  5850     0AA6  1803               	skipnc
  5851     0AA7  3E01               	addlw	1
  5852     0AA8  1903               	skipnz
  5853     0AA9  2AAB               	goto	u4083
  5854     0AAA  07B5               	addwf	___flmul@grs+3,f
  5855     0AAB                     u4083:
  5856     0AAB                     l2717:
  5857     0AAB  0824               	movf	___flmul@b,w
  5858     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  5859     0AAD  0829               	movf	___flmul@a+1,w
  5860     0AAE  160A  158A  2449  120A  158A  	fcall	__Umul8_16
  5861     0AB3  0871               	movf	?__Umul8_16+1,w
  5862     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5863     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  5864     0AB6  00BD               	movwf	___flmul@temp+1
  5865     0AB7  0870               	movf	?__Umul8_16,w
  5866     0AB8  00BC               	movwf	___flmul@temp
  5867     0AB9                     l2719:
  5868     0AB9  083C               	movf	___flmul@temp,w
  5869     0ABA  00AC               	movwf	??___flmul
  5870     0ABB  083D               	movf	___flmul@temp+1,w
  5871     0ABC  00AD               	movwf	??___flmul+1
  5872     0ABD  01AE               	clrf	??___flmul+2
  5873     0ABE  01AF               	clrf	??___flmul+3
  5874     0ABF  082C               	movf	??___flmul,w
  5875     0AC0  07B2               	addwf	___flmul@grs,f
  5876     0AC1  082D               	movf	??___flmul+1,w
  5877     0AC2  1103               	clrz
  5878     0AC3  1803               	skipnc
  5879     0AC4  3E01               	addlw	1
  5880     0AC5  1903               	skipnz
  5881     0AC6  2AC8               	goto	u4091
  5882     0AC7  07B3               	addwf	___flmul@grs+1,f
  5883     0AC8                     u4091:
  5884     0AC8  082E               	movf	??___flmul+2,w
  5885     0AC9  1103               	clrz
  5886     0ACA  1803               	skipnc
  5887     0ACB  3E01               	addlw	1
  5888     0ACC  1903               	skipnz
  5889     0ACD  2ACF               	goto	u4092
  5890     0ACE  07B4               	addwf	___flmul@grs+2,f
  5891     0ACF                     u4092:
  5892     0ACF  082F               	movf	??___flmul+3,w
  5893     0AD0  1103               	clrz
  5894     0AD1  1803               	skipnc
  5895     0AD2  3E01               	addlw	1
  5896     0AD3  1903               	skipnz
  5897     0AD4  2AD6               	goto	u4093
  5898     0AD5  07B5               	addwf	___flmul@grs+3,f
  5899     0AD6                     u4093:
  5900     0AD6                     l2721:
  5901     0AD6  3008               	movlw	8
  5902     0AD7  00AC               	movwf	??___flmul
  5903     0AD8                     u4105:
  5904     0AD8  1003               	clrc
  5905     0AD9  0DB2               	rlf	___flmul@grs,f
  5906     0ADA  0DB3               	rlf	___flmul@grs+1,f
  5907     0ADB  0DB4               	rlf	___flmul@grs+2,f
  5908     0ADC  0DB5               	rlf	___flmul@grs+3,f
  5909     0ADD  0BAC               	decfsz	??___flmul,f
  5910     0ADE  2AD8               	goto	u4105
  5911     0ADF  0824               	movf	___flmul@b,w
  5912     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5913     0AE1  0828               	movf	___flmul@a,w
  5914     0AE2  160A  158A  2449  120A  158A  	fcall	__Umul8_16
  5915     0AE7  0871               	movf	?__Umul8_16+1,w
  5916     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5917     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5918     0AEA  00BD               	movwf	___flmul@temp+1
  5919     0AEB  0870               	movf	?__Umul8_16,w
  5920     0AEC  00BC               	movwf	___flmul@temp
  5921     0AED                     l2723:
  5922     0AED  083C               	movf	___flmul@temp,w
  5923     0AEE  00AC               	movwf	??___flmul
  5924     0AEF  083D               	movf	___flmul@temp+1,w
  5925     0AF0  00AD               	movwf	??___flmul+1
  5926     0AF1  01AE               	clrf	??___flmul+2
  5927     0AF2  01AF               	clrf	??___flmul+3
  5928     0AF3  082C               	movf	??___flmul,w
  5929     0AF4  07B2               	addwf	___flmul@grs,f
  5930     0AF5  082D               	movf	??___flmul+1,w
  5931     0AF6  1103               	clrz
  5932     0AF7  1803               	skipnc
  5933     0AF8  3E01               	addlw	1
  5934     0AF9  1903               	skipnz
  5935     0AFA  2AFC               	goto	u4111
  5936     0AFB  07B3               	addwf	___flmul@grs+1,f
  5937     0AFC                     u4111:
  5938     0AFC  082E               	movf	??___flmul+2,w
  5939     0AFD  1103               	clrz
  5940     0AFE  1803               	skipnc
  5941     0AFF  3E01               	addlw	1
  5942     0B00  1903               	skipnz
  5943     0B01  2B03               	goto	u4112
  5944     0B02  07B4               	addwf	___flmul@grs+2,f
  5945     0B03                     u4112:
  5946     0B03  082F               	movf	??___flmul+3,w
  5947     0B04  1103               	clrz
  5948     0B05  1803               	skipnc
  5949     0B06  3E01               	addlw	1
  5950     0B07  1903               	skipnz
  5951     0B08  2B0A               	goto	u4113
  5952     0B09  07B5               	addwf	___flmul@grs+3,f
  5953     0B0A                     u4113:
  5954     0B0A                     l2725:
  5955     0B0A  0825               	movf	___flmul@b+1,w
  5956     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5957     0B0C  082A               	movf	___flmul@a+2,w
  5958     0B0D  160A  158A  2449  120A  158A  	fcall	__Umul8_16
  5959     0B12  0871               	movf	?__Umul8_16+1,w
  5960     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5961     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5962     0B15  00BD               	movwf	___flmul@temp+1
  5963     0B16  0870               	movf	?__Umul8_16,w
  5964     0B17  00BC               	movwf	___flmul@temp
  5965     0B18  083C               	movf	___flmul@temp,w
  5966     0B19  00AC               	movwf	??___flmul
  5967     0B1A  083D               	movf	___flmul@temp+1,w
  5968     0B1B  00AD               	movwf	??___flmul+1
  5969     0B1C  01AE               	clrf	??___flmul+2
  5970     0B1D  01AF               	clrf	??___flmul+3
  5971     0B1E  082C               	movf	??___flmul,w
  5972     0B1F  07B8               	addwf	___flmul@prod,f
  5973     0B20  082D               	movf	??___flmul+1,w
  5974     0B21  1103               	clrz
  5975     0B22  1803               	skipnc
  5976     0B23  3E01               	addlw	1
  5977     0B24  1903               	skipnz
  5978     0B25  2B27               	goto	u4121
  5979     0B26  07B9               	addwf	___flmul@prod+1,f
  5980     0B27                     u4121:
  5981     0B27  082E               	movf	??___flmul+2,w
  5982     0B28  1103               	clrz
  5983     0B29  1803               	skipnc
  5984     0B2A  3E01               	addlw	1
  5985     0B2B  1903               	skipnz
  5986     0B2C  2B2E               	goto	u4122
  5987     0B2D  07BA               	addwf	___flmul@prod+2,f
  5988     0B2E                     u4122:
  5989     0B2E  082F               	movf	??___flmul+3,w
  5990     0B2F  1103               	clrz
  5991     0B30  1803               	skipnc
  5992     0B31  3E01               	addlw	1
  5993     0B32  1903               	skipnz
  5994     0B33  2B35               	goto	u4123
  5995     0B34  07BB               	addwf	___flmul@prod+3,f
  5996     0B35                     u4123:
  5997     0B35                     l2727:
  5998     0B35  0826               	movf	___flmul@b+2,w
  5999     0B36  00F0               	movwf	__Umul8_16@multiplicand
  6000     0B37  0829               	movf	___flmul@a+1,w
  6001     0B38  160A  158A  2449  120A  158A  	fcall	__Umul8_16
  6002     0B3D  0871               	movf	?__Umul8_16+1,w
  6003     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  6004     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  6005     0B40  00BD               	movwf	___flmul@temp+1
  6006     0B41  0870               	movf	?__Umul8_16,w
  6007     0B42  00BC               	movwf	___flmul@temp
  6008     0B43                     l2729:
  6009     0B43  083C               	movf	___flmul@temp,w
  6010     0B44  00AC               	movwf	??___flmul
  6011     0B45  083D               	movf	___flmul@temp+1,w
  6012     0B46  00AD               	movwf	??___flmul+1
  6013     0B47  01AE               	clrf	??___flmul+2
  6014     0B48  01AF               	clrf	??___flmul+3
  6015     0B49  082C               	movf	??___flmul,w
  6016     0B4A  07B8               	addwf	___flmul@prod,f
  6017     0B4B  082D               	movf	??___flmul+1,w
  6018     0B4C  1103               	clrz
  6019     0B4D  1803               	skipnc
  6020     0B4E  3E01               	addlw	1
  6021     0B4F  1903               	skipnz
  6022     0B50  2B52               	goto	u4131
  6023     0B51  07B9               	addwf	___flmul@prod+1,f
  6024     0B52                     u4131:
  6025     0B52  082E               	movf	??___flmul+2,w
  6026     0B53  1103               	clrz
  6027     0B54  1803               	skipnc
  6028     0B55  3E01               	addlw	1
  6029     0B56  1903               	skipnz
  6030     0B57  2B59               	goto	u4132
  6031     0B58  07BA               	addwf	___flmul@prod+2,f
  6032     0B59                     u4132:
  6033     0B59  082F               	movf	??___flmul+3,w
  6034     0B5A  1103               	clrz
  6035     0B5B  1803               	skipnc
  6036     0B5C  3E01               	addlw	1
  6037     0B5D  1903               	skipnz
  6038     0B5E  2B60               	goto	u4133
  6039     0B5F  07BB               	addwf	___flmul@prod+3,f
  6040     0B60                     u4133:
  6041     0B60  0826               	movf	___flmul@b+2,w
  6042     0B61  00F0               	movwf	__Umul8_16@multiplicand
  6043     0B62  082A               	movf	___flmul@a+2,w
  6044     0B63  160A  158A  2449  120A  158A  	fcall	__Umul8_16
  6045     0B68  0871               	movf	?__Umul8_16+1,w
  6046     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  6047     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  6048     0B6B  00BD               	movwf	___flmul@temp+1
  6049     0B6C  0870               	movf	?__Umul8_16,w
  6050     0B6D  00BC               	movwf	___flmul@temp
  6051     0B6E                     l2731:
  6052     0B6E  083C               	movf	___flmul@temp,w
  6053     0B6F  00AC               	movwf	??___flmul
  6054     0B70  083D               	movf	___flmul@temp+1,w
  6055     0B71  00AD               	movwf	??___flmul+1
  6056     0B72  01AE               	clrf	??___flmul+2
  6057     0B73  01AF               	clrf	??___flmul+3
  6058     0B74  3008               	movlw	8
  6059     0B75                     u4145:
  6060     0B75  1003               	clrc
  6061     0B76  0DAC               	rlf	??___flmul,f
  6062     0B77  0DAD               	rlf	??___flmul+1,f
  6063     0B78  0DAE               	rlf	??___flmul+2,f
  6064     0B79  0DAF               	rlf	??___flmul+3,f
  6065     0B7A                     u4140:
  6066     0B7A  3EFF               	addlw	-1
  6067     0B7B  1D03               	skipz
  6068     0B7C  2B75               	goto	u4145
  6069     0B7D  082C               	movf	??___flmul,w
  6070     0B7E  07B8               	addwf	___flmul@prod,f
  6071     0B7F  082D               	movf	??___flmul+1,w
  6072     0B80  1103               	clrz
  6073     0B81  1803               	skipnc
  6074     0B82  3E01               	addlw	1
  6075     0B83  1903               	skipnz
  6076     0B84  2B86               	goto	u4151
  6077     0B85  07B9               	addwf	___flmul@prod+1,f
  6078     0B86                     u4151:
  6079     0B86  082E               	movf	??___flmul+2,w
  6080     0B87  1103               	clrz
  6081     0B88  1803               	skipnc
  6082     0B89  3E01               	addlw	1
  6083     0B8A  1903               	skipnz
  6084     0B8B  2B8D               	goto	u4152
  6085     0B8C  07BA               	addwf	___flmul@prod+2,f
  6086     0B8D                     u4152:
  6087     0B8D  082F               	movf	??___flmul+3,w
  6088     0B8E  1103               	clrz
  6089     0B8F  1803               	skipnc
  6090     0B90  3E01               	addlw	1
  6091     0B91  1903               	skipnz
  6092     0B92  2B94               	goto	u4153
  6093     0B93  07BB               	addwf	___flmul@prod+3,f
  6094     0B94                     u4153:
  6095     0B94                     l2733:
  6096     0B94  0832               	movf	___flmul@grs,w
  6097     0B95  00AC               	movwf	??___flmul
  6098     0B96  0833               	movf	___flmul@grs+1,w
  6099     0B97  00AD               	movwf	??___flmul+1
  6100     0B98  0834               	movf	___flmul@grs+2,w
  6101     0B99  00AE               	movwf	??___flmul+2
  6102     0B9A  0835               	movf	___flmul@grs+3,w
  6103     0B9B  00AF               	movwf	??___flmul+3
  6104     0B9C  3018               	movlw	24
  6105     0B9D                     u4165:
  6106     0B9D  1003               	clrc
  6107     0B9E  0CAF               	rrf	??___flmul+3,f
  6108     0B9F  0CAE               	rrf	??___flmul+2,f
  6109     0BA0  0CAD               	rrf	??___flmul+1,f
  6110     0BA1  0CAC               	rrf	??___flmul,f
  6111     0BA2                     u4160:
  6112     0BA2  3EFF               	addlw	-1
  6113     0BA3  1D03               	skipz
  6114     0BA4  2B9D               	goto	u4165
  6115     0BA5  082C               	movf	??___flmul,w
  6116     0BA6  07B8               	addwf	___flmul@prod,f
  6117     0BA7  082D               	movf	??___flmul+1,w
  6118     0BA8  1103               	clrz
  6119     0BA9  1803               	skipnc
  6120     0BAA  3E01               	addlw	1
  6121     0BAB  1903               	skipnz
  6122     0BAC  2BAE               	goto	u4171
  6123     0BAD  07B9               	addwf	___flmul@prod+1,f
  6124     0BAE                     u4171:
  6125     0BAE  082E               	movf	??___flmul+2,w
  6126     0BAF  1103               	clrz
  6127     0BB0  1803               	skipnc
  6128     0BB1  3E01               	addlw	1
  6129     0BB2  1903               	skipnz
  6130     0BB3  2BB5               	goto	u4172
  6131     0BB4  07BA               	addwf	___flmul@prod+2,f
  6132     0BB5                     u4172:
  6133     0BB5  082F               	movf	??___flmul+3,w
  6134     0BB6  1103               	clrz
  6135     0BB7  1803               	skipnc
  6136     0BB8  3E01               	addlw	1
  6137     0BB9  1903               	skipnz
  6138     0BBA  2BBC               	goto	u4173
  6139     0BBB  07BB               	addwf	___flmul@prod+3,f
  6140     0BBC                     u4173:
  6141     0BBC                     l2735:
  6142     0BBC  3008               	movlw	8
  6143     0BBD  00AC               	movwf	??___flmul
  6144     0BBE                     u4185:
  6145     0BBE  1003               	clrc
  6146     0BBF  0DB2               	rlf	___flmul@grs,f
  6147     0BC0  0DB3               	rlf	___flmul@grs+1,f
  6148     0BC1  0DB4               	rlf	___flmul@grs+2,f
  6149     0BC2  0DB5               	rlf	___flmul@grs+3,f
  6150     0BC3  0BAC               	decfsz	??___flmul,f
  6151     0BC4  2BBE               	goto	u4185
  6152     0BC5                     l2737:
  6153     0BC5  0837               	movf	___flmul@bexp,w
  6154     0BC6  0736               	addwf	___flmul@aexp,w
  6155     0BC7  00AC               	movwf	??___flmul
  6156     0BC8  01AD               	clrf	??___flmul+1
  6157     0BC9  0DAD               	rlf	??___flmul+1,f
  6158     0BCA  082C               	movf	??___flmul,w
  6159     0BCB  3E82               	addlw	130
  6160     0BCC  00BC               	movwf	___flmul@temp
  6161     0BCD  082D               	movf	??___flmul+1,w
  6162     0BCE  1803               	skipnc
  6163     0BCF  3E01               	addlw	1
  6164     0BD0  3EFF               	addlw	255
  6165     0BD1  00BD               	movwf	___flmul@temp+1
  6166     0BD2  2BF0               	goto	l2749
  6167     0BD3                     l2739:
  6168     0BD3  3001               	movlw	1
  6169     0BD4  00AC               	movwf	??___flmul
  6170     0BD5                     u4195:
  6171     0BD5  1003               	clrc
  6172     0BD6  0DB8               	rlf	___flmul@prod,f
  6173     0BD7  0DB9               	rlf	___flmul@prod+1,f
  6174     0BD8  0DBA               	rlf	___flmul@prod+2,f
  6175     0BD9  0DBB               	rlf	___flmul@prod+3,f
  6176     0BDA  0BAC               	decfsz	??___flmul,f
  6177     0BDB  2BD5               	goto	u4195
  6178     0BDC                     l2741:
  6179     0BDC  1FB5               	btfss	___flmul@grs+3,7
  6180     0BDD  2BDF               	goto	u4201
  6181     0BDE  2BE0               	goto	u4200
  6182     0BDF                     u4201:
  6183     0BDF  2BE1               	goto	l2745
  6184     0BE0                     u4200:
  6185     0BE0                     l2743:
  6186     0BE0  1438               	bsf	___flmul@prod,0
  6187     0BE1                     l2745:
  6188     0BE1  3001               	movlw	1
  6189     0BE2  00AC               	movwf	??___flmul
  6190     0BE3                     u4215:
  6191     0BE3  1003               	clrc
  6192     0BE4  0DB2               	rlf	___flmul@grs,f
  6193     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6194     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6195     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6196     0BE8  0BAC               	decfsz	??___flmul,f
  6197     0BE9  2BE3               	goto	u4215
  6198     0BEA                     l2747:
  6199     0BEA  30FF               	movlw	255
  6200     0BEB  07BC               	addwf	___flmul@temp,f
  6201     0BEC  1803               	skipnc
  6202     0BED  0ABD               	incf	___flmul@temp+1,f
  6203     0BEE  30FF               	movlw	255
  6204     0BEF  07BD               	addwf	___flmul@temp+1,f
  6205     0BF0                     l2749:
  6206     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6207     0BF1  2BF3               	goto	u4221
  6208     0BF2  2BF4               	goto	u4220
  6209     0BF3                     u4221:
  6210     0BF3  2BD3               	goto	l2739
  6211     0BF4                     u4220:
  6212     0BF4                     l2751:
  6213     0BF4  01B6               	clrf	___flmul@aexp
  6214     0BF5                     l2753:
  6215     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6216     0BF6  2BF8               	goto	u4231
  6217     0BF7  2BF9               	goto	u4230
  6218     0BF8                     u4231:
  6219     0BF8  2C15               	goto	l2761
  6220     0BF9                     u4230:
  6221     0BF9                     l2755:
  6222     0BF9  30FF               	movlw	255
  6223     0BFA  0532               	andwf	___flmul@grs,w
  6224     0BFB  00AC               	movwf	??___flmul
  6225     0BFC  30FF               	movlw	255
  6226     0BFD  0533               	andwf	___flmul@grs+1,w
  6227     0BFE  00AD               	movwf	??___flmul+1
  6228     0BFF  30FF               	movlw	255
  6229     0C00  0534               	andwf	___flmul@grs+2,w
  6230     0C01  00AE               	movwf	??___flmul+2
  6231     0C02  307F               	movlw	127
  6232     0C03  0535               	andwf	___flmul@grs+3,w
  6233     0C04  00AF               	movwf	??___flmul+3
  6234     0C05  082F               	movf	??___flmul+3,w
  6235     0C06  042E               	iorwf	??___flmul+2,w
  6236     0C07  042D               	iorwf	??___flmul+1,w
  6237     0C08  042C               	iorwf	??___flmul,w
  6238     0C09  1903               	skipnz
  6239     0C0A  2C0C               	goto	u4241
  6240     0C0B  2C0D               	goto	u4240
  6241     0C0C                     u4241:
  6242     0C0C  2C10               	goto	l773
  6243     0C0D                     u4240:
  6244     0C0D                     l2757:
  6245     0C0D  01B6               	clrf	___flmul@aexp
  6246     0C0E  0AB6               	incf	___flmul@aexp,f
  6247     0C0F  2C15               	goto	l2761
  6248     0C10                     l773:
  6249     0C10  1C38               	btfss	___flmul@prod,0
  6250     0C11  2C13               	goto	u4251
  6251     0C12  2C14               	goto	u4250
  6252     0C13                     u4251:
  6253     0C13  2C15               	goto	l2761
  6254     0C14                     u4250:
  6255     0C14  2C0D               	goto	l2757
  6256     0C15                     l2761:
  6257     0C15  0836               	movf	___flmul@aexp,w
  6258     0C16  1903               	btfsc	3,2
  6259     0C17  2C19               	goto	u4261
  6260     0C18  2C1A               	goto	u4260
  6261     0C19                     u4261:
  6262     0C19  2C4B               	goto	l2771
  6263     0C1A                     u4260:
  6264     0C1A                     l2763:
  6265     0C1A  3001               	movlw	1
  6266     0C1B  07B8               	addwf	___flmul@prod,f
  6267     0C1C  3000               	movlw	0
  6268     0C1D  1803               	skipnc
  6269     0C1E  3001               	movlw	1
  6270     0C1F  07B9               	addwf	___flmul@prod+1,f
  6271     0C20  3000               	movlw	0
  6272     0C21  1803               	skipnc
  6273     0C22  3001               	movlw	1
  6274     0C23  07BA               	addwf	___flmul@prod+2,f
  6275     0C24  3000               	movlw	0
  6276     0C25  1803               	skipnc
  6277     0C26  3001               	movlw	1
  6278     0C27  07BB               	addwf	___flmul@prod+3,f
  6279     0C28                     l2765:
  6280     0C28  1C3B               	btfss	___flmul@prod+3,0
  6281     0C29  2C2B               	goto	u4271
  6282     0C2A  2C2C               	goto	u4270
  6283     0C2B                     u4271:
  6284     0C2B  2C4B               	goto	l2771
  6285     0C2C                     u4270:
  6286     0C2C                     l2767:
  6287     0C2C  0838               	movf	___flmul@prod,w
  6288     0C2D  00AC               	movwf	??___flmul
  6289     0C2E  0839               	movf	___flmul@prod+1,w
  6290     0C2F  00AD               	movwf	??___flmul+1
  6291     0C30  083A               	movf	___flmul@prod+2,w
  6292     0C31  00AE               	movwf	??___flmul+2
  6293     0C32  083B               	movf	___flmul@prod+3,w
  6294     0C33  00AF               	movwf	??___flmul+3
  6295     0C34  3001               	movlw	1
  6296     0C35  00B0               	movwf	??___flmul+4
  6297     0C36                     u4285:
  6298     0C36  0D2F               	rlf	??___flmul+3,w
  6299     0C37  0CAF               	rrf	??___flmul+3,f
  6300     0C38  0CAE               	rrf	??___flmul+2,f
  6301     0C39  0CAD               	rrf	??___flmul+1,f
  6302     0C3A  0CAC               	rrf	??___flmul,f
  6303     0C3B                     u4280:
  6304     0C3B  0BB0               	decfsz	??___flmul+4,f
  6305     0C3C  2C36               	goto	u4285
  6306     0C3D  082F               	movf	??___flmul+3,w
  6307     0C3E  00BB               	movwf	___flmul@prod+3
  6308     0C3F  082E               	movf	??___flmul+2,w
  6309     0C40  00BA               	movwf	___flmul@prod+2
  6310     0C41  082D               	movf	??___flmul+1,w
  6311     0C42  00B9               	movwf	___flmul@prod+1
  6312     0C43  082C               	movf	??___flmul,w
  6313     0C44  00B8               	movwf	___flmul@prod
  6314     0C45                     l2769:
  6315     0C45  3001               	movlw	1
  6316     0C46  07BC               	addwf	___flmul@temp,f
  6317     0C47  1803               	skipnc
  6318     0C48  0ABD               	incf	___flmul@temp+1,f
  6319     0C49  3000               	movlw	0
  6320     0C4A  07BD               	addwf	___flmul@temp+1,f
  6321     0C4B                     l2771:
  6322     0C4B  083D               	movf	___flmul@temp+1,w
  6323     0C4C  3A80               	xorlw	128
  6324     0C4D  00FF               	movwf	btemp+1
  6325     0C4E  3080               	movlw	128
  6326     0C4F  027F               	subwf	btemp+1,w
  6327     0C50  1D03               	skipz
  6328     0C51  2C54               	goto	u4295
  6329     0C52  30FF               	movlw	255
  6330     0C53  023C               	subwf	___flmul@temp,w
  6331     0C54                     u4295:
  6332     0C54  1C03               	skipc
  6333     0C55  2C57               	goto	u4291
  6334     0C56  2C58               	goto	u4290
  6335     0C57                     u4291:
  6336     0C57  2C63               	goto	l2775
  6337     0C58                     u4290:
  6338     0C58                     l2773:
  6339     0C58  307F               	movlw	127
  6340     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6341     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6342     0C5B  00BB               	movwf	___flmul@prod+3
  6343     0C5C  3080               	movlw	128
  6344     0C5D  00BA               	movwf	___flmul@prod+2
  6345     0C5E  3000               	movlw	0
  6346     0C5F  00B9               	movwf	___flmul@prod+1
  6347     0C60  3000               	movlw	0
  6348     0C61  00B8               	movwf	___flmul@prod
  6349     0C62  2C94               	goto	l779
  6350     0C63                     l2775:
  6351     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6352     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6353     0C65  083D               	movf	___flmul@temp+1,w
  6354     0C66  3A80               	xorlw	128
  6355     0C67  00FF               	movwf	btemp+1
  6356     0C68  3080               	movlw	128
  6357     0C69  027F               	subwf	btemp+1,w
  6358     0C6A  1D03               	skipz
  6359     0C6B  2C6E               	goto	u4305
  6360     0C6C  3001               	movlw	1
  6361     0C6D  023C               	subwf	___flmul@temp,w
  6362     0C6E                     u4305:
  6363     0C6E  1803               	skipnc
  6364     0C6F  2C71               	goto	u4301
  6365     0C70  2C72               	goto	u4300
  6366     0C71                     u4301:
  6367     0C71  2C7E               	goto	l2781
  6368     0C72                     u4300:
  6369     0C72                     l2777:
  6370     0C72  3000               	movlw	0
  6371     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6372     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6373     0C75  00BB               	movwf	___flmul@prod+3
  6374     0C76  3000               	movlw	0
  6375     0C77  00BA               	movwf	___flmul@prod+2
  6376     0C78  3000               	movlw	0
  6377     0C79  00B9               	movwf	___flmul@prod+1
  6378     0C7A  3000               	movlw	0
  6379     0C7B  00B8               	movwf	___flmul@prod
  6380     0C7C                     l2779:
  6381     0C7C  01B1               	clrf	___flmul@sign
  6382     0C7D  2C94               	goto	l779
  6383     0C7E                     l2781:
  6384     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6385     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6386     0C80  083C               	movf	___flmul@temp,w
  6387     0C81  00B7               	movwf	___flmul@bexp
  6388     0C82  30FF               	movlw	255
  6389     0C83  05B8               	andwf	___flmul@prod,f
  6390     0C84  30FF               	movlw	255
  6391     0C85  05B9               	andwf	___flmul@prod+1,f
  6392     0C86  307F               	movlw	127
  6393     0C87  05BA               	andwf	___flmul@prod+2,f
  6394     0C88  3000               	movlw	0
  6395     0C89  05BB               	andwf	___flmul@prod+3,f
  6396     0C8A                     l2783:
  6397     0C8A  1C37               	btfss	___flmul@bexp,0
  6398     0C8B  2C8D               	goto	u4311
  6399     0C8C  2C8E               	goto	u4310
  6400     0C8D                     u4311:
  6401     0C8D  2C8F               	goto	l2787
  6402     0C8E                     u4310:
  6403     0C8E                     l2785:
  6404     0C8E  17BA               	bsf	___flmul@prod+2,7
  6405     0C8F                     l2787:
  6406     0C8F  0837               	movf	___flmul@bexp,w
  6407     0C90  00AC               	movwf	??___flmul
  6408     0C91  1003               	clrc
  6409     0C92  0C2C               	rrf	??___flmul,w
  6410     0C93  00BB               	movwf	___flmul@prod+3
  6411     0C94                     l779:
  6412     0C94  0831               	movf	___flmul@sign,w
  6413     0C95  00AC               	movwf	??___flmul
  6414     0C96  082C               	movf	??___flmul,w
  6415     0C97  04BB               	iorwf	___flmul@prod+3,f
  6416     0C98                     l2789:
  6417     0C98  083B               	movf	___flmul@prod+3,w
  6418     0C99  00A7               	movwf	?___flmul+3
  6419     0C9A  083A               	movf	___flmul@prod+2,w
  6420     0C9B  00A6               	movwf	?___flmul+2
  6421     0C9C  0839               	movf	___flmul@prod+1,w
  6422     0C9D  00A5               	movwf	?___flmul+1
  6423     0C9E  0838               	movf	___flmul@prod,w
  6424     0C9F  00A4               	movwf	?___flmul
  6425     0CA0                     l767:
  6426     0CA0  0008               	return
  6427     0CA1                     __end_of___flmul:
  6428                           
  6429                           	psect	text10
  6430     1C49                     __ptext10:	
  6431 ;; *************** function __Umul8_16 *****************
  6432 ;; Defined at:
  6433 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  multiplier      1    wreg     unsigned char 
  6436 ;;  multiplicand    1    0[COMMON] unsigned char 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  multiplier      1    8[COMMON] unsigned char 
  6439 ;;  word_mpld       2    6[COMMON] unsigned int 
  6440 ;;  product         2    4[COMMON] unsigned int 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  2    0[COMMON] unsigned int 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2, status,0
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6450 ;;      Params:         2       0       0       0       0
  6451 ;;      Locals:         5       0       0       0       0
  6452 ;;      Temps:          2       0       0       0       0
  6453 ;;      Totals:         9       0       0       0       0
  6454 ;;Total ram usage:        9 bytes
  6455 ;; Hardware stack levels used: 1
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		___flmul
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463     1C49                     __Umul8_16:	
  6464                           ;psect for function __Umul8_16
  6465                           
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6469                           ;__Umul8_16@multiplier stored from wreg
  6470     1C49  00F8               	movwf	__Umul8_16@multiplier
  6471     1C4A                     l2305:
  6472     1C4A  01F4               	clrf	__Umul8_16@product
  6473     1C4B  01F5               	clrf	__Umul8_16@product+1
  6474     1C4C                     l2307:
  6475     1C4C  0870               	movf	__Umul8_16@multiplicand,w
  6476     1C4D  00F2               	movwf	??__Umul8_16
  6477     1C4E  01F3               	clrf	??__Umul8_16+1
  6478     1C4F  0872               	movf	??__Umul8_16,w
  6479     1C50  00F6               	movwf	__Umul8_16@word_mpld
  6480     1C51  0873               	movf	??__Umul8_16+1,w
  6481     1C52  00F7               	movwf	__Umul8_16@word_mpld+1
  6482     1C53                     l2309:
  6483     1C53  1C78               	btfss	__Umul8_16@multiplier,0
  6484     1C54  2C56               	goto	u3101
  6485     1C55  2C57               	goto	u3100
  6486     1C56                     u3101:
  6487     1C56  2C5D               	goto	l786
  6488     1C57                     u3100:
  6489     1C57                     l2311:
  6490     1C57  0876               	movf	__Umul8_16@word_mpld,w
  6491     1C58  07F4               	addwf	__Umul8_16@product,f
  6492     1C59  1803               	skipnc
  6493     1C5A  0AF5               	incf	__Umul8_16@product+1,f
  6494     1C5B  0877               	movf	__Umul8_16@word_mpld+1,w
  6495     1C5C  07F5               	addwf	__Umul8_16@product+1,f
  6496     1C5D                     l786:
  6497     1C5D  3001               	movlw	1
  6498     1C5E                     u3115:
  6499     1C5E  1003               	clrc
  6500     1C5F  0DF6               	rlf	__Umul8_16@word_mpld,f
  6501     1C60  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6502     1C61  3EFF               	addlw	-1
  6503     1C62  1D03               	skipz
  6504     1C63  2C5E               	goto	u3115
  6505     1C64  1003               	clrc
  6506     1C65  0CF8               	rrf	__Umul8_16@multiplier,f
  6507     1C66                     l2313:
  6508     1C66  0878               	movf	__Umul8_16@multiplier,w
  6509     1C67  1D03               	btfss	3,2
  6510     1C68  2C6A               	goto	u3121
  6511     1C69  2C6B               	goto	u3120
  6512     1C6A                     u3121:
  6513     1C6A  2C53               	goto	l2309
  6514     1C6B                     u3120:
  6515     1C6B                     l2315:
  6516     1C6B  0875               	movf	__Umul8_16@product+1,w
  6517     1C6C  00F1               	movwf	?__Umul8_16+1
  6518     1C6D  0874               	movf	__Umul8_16@product,w
  6519     1C6E  00F0               	movwf	?__Umul8_16
  6520     1C6F                     l788:
  6521     1C6F  0008               	return
  6522     1C70                     __end_of__Umul8_16:
  6523                           
  6524                           	psect	text11
  6525     105B                     __ptext11:	
  6526 ;; *************** function __tdiv_to_l_ *****************
  6527 ;; Defined at:
  6528 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  f1              4    0[COMMON] float 
  6531 ;;  f2              4    4[COMMON] float 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  quot            4    0[BANK0 ] unsigned long 
  6534 ;;  exp1            1    5[BANK0 ] unsigned char 
  6535 ;;  cntr            1    4[BANK0 ] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  4    0[COMMON] unsigned long 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6545 ;;      Params:         8       0       0       0       0
  6546 ;;      Locals:         0       6       0       0       0
  6547 ;;      Temps:          3       0       0       0       0
  6548 ;;      Totals:        11       6       0       0       0
  6549 ;;Total ram usage:       17 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_sprintf
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558     105B                     __tdiv_to_l_:	
  6559                           ;psect for function __tdiv_to_l_
  6560                           
  6561     105B                     l2905:	
  6562                           ;incstack = 0
  6563                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6564                           
  6565     105B  0870               	movf	__tdiv_to_l_@f1,w
  6566     105C  00F8               	movwf	??__tdiv_to_l_
  6567     105D  0871               	movf	__tdiv_to_l_@f1+1,w
  6568     105E  00F9               	movwf	??__tdiv_to_l_+1
  6569     105F  0872               	movf	__tdiv_to_l_@f1+2,w
  6570     1060  00FA               	movwf	??__tdiv_to_l_+2
  6571     1061  1003               	clrc
  6572     1062  0D79               	rlf	??__tdiv_to_l_+1,w
  6573     1063  0D7A               	rlf	??__tdiv_to_l_+2,w
  6574     1064  1283               	bcf	3,5	;RP0=0, select bank0
  6575     1065  1303               	bcf	3,6	;RP1=0, select bank0
  6576     1066  00A5               	movwf	__tdiv_to_l_@exp1
  6577     1067  0825               	movf	__tdiv_to_l_@exp1,w
  6578     1068  1D03               	btfss	3,2
  6579     1069  286B               	goto	u4621
  6580     106A  286C               	goto	u4620
  6581     106B                     u4621:
  6582     106B  2875               	goto	l2911
  6583     106C                     u4620:
  6584     106C                     l2907:
  6585     106C  3000               	movlw	0
  6586     106D  00F3               	movwf	?__tdiv_to_l_+3
  6587     106E  3000               	movlw	0
  6588     106F  00F2               	movwf	?__tdiv_to_l_+2
  6589     1070  3000               	movlw	0
  6590     1071  00F1               	movwf	?__tdiv_to_l_+1
  6591     1072  3000               	movlw	0
  6592     1073  00F0               	movwf	?__tdiv_to_l_
  6593     1074  2911               	goto	l561
  6594     1075                     l2911:
  6595     1075  0874               	movf	__tdiv_to_l_@f2,w
  6596     1076  00F8               	movwf	??__tdiv_to_l_
  6597     1077  0875               	movf	__tdiv_to_l_@f2+1,w
  6598     1078  00F9               	movwf	??__tdiv_to_l_+1
  6599     1079  0876               	movf	__tdiv_to_l_@f2+2,w
  6600     107A  00FA               	movwf	??__tdiv_to_l_+2
  6601     107B  1003               	clrc
  6602     107C  0D79               	rlf	??__tdiv_to_l_+1,w
  6603     107D  0D7A               	rlf	??__tdiv_to_l_+2,w
  6604     107E  00A4               	movwf	__tdiv_to_l_@cntr
  6605     107F  0824               	movf	__tdiv_to_l_@cntr,w
  6606     1080  1D03               	btfss	3,2
  6607     1081  2883               	goto	u4631
  6608     1082  2884               	goto	u4630
  6609     1083                     u4631:
  6610     1083  2885               	goto	l562
  6611     1084                     u4630:
  6612     1084  286C               	goto	l2907
  6613     1085                     l562:
  6614     1085  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6615     1086                     l2917:
  6616     1086  30FF               	movlw	255
  6617     1087  05F0               	andwf	__tdiv_to_l_@f1,f
  6618     1088  30FF               	movlw	255
  6619     1089  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6620     108A  3000               	movlw	0
  6621     108B  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6622     108C                     l2919:
  6623     108C  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6624     108D  30FF               	movlw	255
  6625     108E  05F4               	andwf	__tdiv_to_l_@f2,f
  6626     108F  30FF               	movlw	255
  6627     1090  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6628     1091  3000               	movlw	0
  6629     1092  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6630     1093  3000               	movlw	0
  6631     1094  00A3               	movwf	__tdiv_to_l_@quot+3
  6632     1095  3000               	movlw	0
  6633     1096  00A2               	movwf	__tdiv_to_l_@quot+2
  6634     1097  3000               	movlw	0
  6635     1098  00A1               	movwf	__tdiv_to_l_@quot+1
  6636     1099  3000               	movlw	0
  6637     109A  00A0               	movwf	__tdiv_to_l_@quot
  6638     109B                     l2921:
  6639     109B  307F               	movlw	127
  6640     109C  02A5               	subwf	__tdiv_to_l_@exp1,f
  6641     109D                     l2923:
  6642     109D  3098               	movlw	152
  6643     109E  0724               	addwf	__tdiv_to_l_@cntr,w
  6644     109F  00F8               	movwf	??__tdiv_to_l_
  6645     10A0  0878               	movf	??__tdiv_to_l_,w
  6646     10A1  02A5               	subwf	__tdiv_to_l_@exp1,f
  6647     10A2  3018               	movlw	24
  6648     10A3  00A4               	movwf	__tdiv_to_l_@cntr
  6649     10A4                     l2925:
  6650     10A4  3001               	movlw	1
  6651     10A5  00F8               	movwf	??__tdiv_to_l_
  6652     10A6                     u4645:
  6653     10A6  1003               	clrc
  6654     10A7  0DA0               	rlf	__tdiv_to_l_@quot,f
  6655     10A8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6656     10A9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6657     10AA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6658     10AB  0BF8               	decfsz	??__tdiv_to_l_,f
  6659     10AC  28A6               	goto	u4645
  6660     10AD                     l2927:
  6661     10AD  0876               	movf	__tdiv_to_l_@f2+2,w
  6662     10AE  0272               	subwf	__tdiv_to_l_@f1+2,w
  6663     10AF  1D03               	skipz
  6664     10B0  28B7               	goto	u4655
  6665     10B1  0875               	movf	__tdiv_to_l_@f2+1,w
  6666     10B2  0271               	subwf	__tdiv_to_l_@f1+1,w
  6667     10B3  1D03               	skipz
  6668     10B4  28B7               	goto	u4655
  6669     10B5  0874               	movf	__tdiv_to_l_@f2,w
  6670     10B6  0270               	subwf	__tdiv_to_l_@f1,w
  6671     10B7                     u4655:
  6672     10B7  1C03               	skipc
  6673     10B8  28BA               	goto	u4651
  6674     10B9  28BB               	goto	u4650
  6675     10BA                     u4651:
  6676     10BA  28C6               	goto	l2933
  6677     10BB                     u4650:
  6678     10BB                     l2929:
  6679     10BB  0874               	movf	__tdiv_to_l_@f2,w
  6680     10BC  02F0               	subwf	__tdiv_to_l_@f1,f
  6681     10BD  0875               	movf	__tdiv_to_l_@f2+1,w
  6682     10BE  1C03               	skipc
  6683     10BF  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6684     10C0  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6685     10C1  0876               	movf	__tdiv_to_l_@f2+2,w
  6686     10C2  1C03               	skipc
  6687     10C3  0A76               	incf	__tdiv_to_l_@f2+2,w
  6688     10C4  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6689     10C5                     l2931:
  6690     10C5  1420               	bsf	__tdiv_to_l_@quot,0
  6691     10C6                     l2933:
  6692     10C6  3001               	movlw	1
  6693     10C7                     u4665:
  6694     10C7  1003               	clrc
  6695     10C8  0DF0               	rlf	__tdiv_to_l_@f1,f
  6696     10C9  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6697     10CA  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6698     10CB  3EFF               	addlw	-1
  6699     10CC  1D03               	skipz
  6700     10CD  28C7               	goto	u4665
  6701     10CE                     l2935:
  6702     10CE  3001               	movlw	1
  6703     10CF  02A4               	subwf	__tdiv_to_l_@cntr,f
  6704     10D0  1D03               	btfss	3,2
  6705     10D1  28D3               	goto	u4671
  6706     10D2  28D4               	goto	u4670
  6707     10D3                     u4671:
  6708     10D3  28A4               	goto	l2925
  6709     10D4                     u4670:
  6710     10D4                     l565:
  6711     10D4  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6712     10D5  28D7               	goto	u4681
  6713     10D6  28D8               	goto	u4680
  6714     10D7                     u4681:
  6715     10D7  28F2               	goto	l2945
  6716     10D8                     u4680:
  6717     10D8                     l2937:
  6718     10D8  0825               	movf	__tdiv_to_l_@exp1,w
  6719     10D9  3A80               	xorlw	128
  6720     10DA  3E97               	addlw	151
  6721     10DB  1803               	skipnc
  6722     10DC  28DE               	goto	u4691
  6723     10DD  28DF               	goto	u4690
  6724     10DE                     u4691:
  6725     10DE  28E0               	goto	l2943
  6726     10DF                     u4690:
  6727     10DF  286C               	goto	l2907
  6728     10E0                     l2943:
  6729     10E0  3001               	movlw	1
  6730     10E1                     u4705:
  6731     10E1  1003               	clrc
  6732     10E2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6733     10E3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6734     10E4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6735     10E5  0CA0               	rrf	__tdiv_to_l_@quot,f
  6736     10E6  3EFF               	addlw	-1
  6737     10E7  1D03               	skipz
  6738     10E8  28E1               	goto	u4705
  6739     10E9  3001               	movlw	1
  6740     10EA  00F8               	movwf	??__tdiv_to_l_
  6741     10EB  0878               	movf	??__tdiv_to_l_,w
  6742     10EC  07A5               	addwf	__tdiv_to_l_@exp1,f
  6743     10ED  1D03               	btfss	3,2
  6744     10EE  28F0               	goto	u4711
  6745     10EF  28F1               	goto	u4710
  6746     10F0                     u4711:
  6747     10F0  28E0               	goto	l2943
  6748     10F1                     u4710:
  6749     10F1  2909               	goto	l2953
  6750     10F2                     l2945:
  6751     10F2  3018               	movlw	24
  6752     10F3  0225               	subwf	__tdiv_to_l_@exp1,w
  6753     10F4  1C03               	skipc
  6754     10F5  28F7               	goto	u4721
  6755     10F6  28F8               	goto	u4720
  6756     10F7                     u4721:
  6757     10F7  2904               	goto	l572
  6758     10F8                     u4720:
  6759     10F8  286C               	goto	l2907
  6760     10F9                     l2951:
  6761     10F9  3001               	movlw	1
  6762     10FA  00F8               	movwf	??__tdiv_to_l_
  6763     10FB                     u4735:
  6764     10FB  1003               	clrc
  6765     10FC  0DA0               	rlf	__tdiv_to_l_@quot,f
  6766     10FD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6767     10FE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6768     10FF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6769     1100  0BF8               	decfsz	??__tdiv_to_l_,f
  6770     1101  28FB               	goto	u4735
  6771     1102  3001               	movlw	1
  6772     1103  02A5               	subwf	__tdiv_to_l_@exp1,f
  6773     1104                     l572:
  6774     1104  0825               	movf	__tdiv_to_l_@exp1,w
  6775     1105  1D03               	btfss	3,2
  6776     1106  2908               	goto	u4741
  6777     1107  2909               	goto	u4740
  6778     1108                     u4741:
  6779     1108  28F9               	goto	l2951
  6780     1109                     u4740:
  6781     1109                     l2953:
  6782     1109  0823               	movf	__tdiv_to_l_@quot+3,w
  6783     110A  00F3               	movwf	?__tdiv_to_l_+3
  6784     110B  0822               	movf	__tdiv_to_l_@quot+2,w
  6785     110C  00F2               	movwf	?__tdiv_to_l_+2
  6786     110D  0821               	movf	__tdiv_to_l_@quot+1,w
  6787     110E  00F1               	movwf	?__tdiv_to_l_+1
  6788     110F  0820               	movf	__tdiv_to_l_@quot,w
  6789     1110  00F0               	movwf	?__tdiv_to_l_
  6790     1111                     l561:
  6791     1111  0008               	return
  6792     1112                     __end_of__tdiv_to_l_:
  6793                           
  6794                           	psect	text12
  6795     08A4                     __ptext12:	
  6796 ;; *************** function __div_to_l_ *****************
  6797 ;; Defined at:
  6798 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  f1              4    0[COMMON] unsigned long 
  6801 ;;  f2              4    4[COMMON] unsigned long 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  quot            4    0[BANK0 ] unsigned long 
  6804 ;;  exp1            1    5[BANK0 ] unsigned char 
  6805 ;;  cntr            1    4[BANK0 ] unsigned char 
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  4    0[COMMON] unsigned long 
  6808 ;; Registers used:
  6809 ;;		wreg, status,2, status,0
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6815 ;;      Params:         8       0       0       0       0
  6816 ;;      Locals:         0       6       0       0       0
  6817 ;;      Temps:          1       0       0       0       0
  6818 ;;      Totals:         9       6       0       0       0
  6819 ;;Total ram usage:       15 bytes
  6820 ;; Hardware stack levels used: 1
  6821 ;; This function calls:
  6822 ;;		Nothing
  6823 ;; This function is called by:
  6824 ;;		_sprintf
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828     08A4                     __div_to_l_:	
  6829                           ;psect for function __div_to_l_
  6830                           
  6831     08A4                     l2957:	
  6832                           ;incstack = 0
  6833                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6834                           
  6835     08A4  1003               	clrc
  6836     08A5  0D72               	rlf	__div_to_l_@f1+2,w
  6837     08A6  0D73               	rlf	__div_to_l_@f1+3,w
  6838     08A7  1283               	bcf	3,5	;RP0=0, select bank0
  6839     08A8  1303               	bcf	3,6	;RP1=0, select bank0
  6840     08A9  00A5               	movwf	__div_to_l_@exp1
  6841     08AA  0825               	movf	__div_to_l_@exp1,w
  6842     08AB  1D03               	btfss	3,2
  6843     08AC  28AE               	goto	u4751
  6844     08AD  28AF               	goto	u4750
  6845     08AE                     u4751:
  6846     08AE  28B8               	goto	l2963
  6847     08AF                     u4750:
  6848     08AF                     l2959:
  6849     08AF  3000               	movlw	0
  6850     08B0  00F3               	movwf	?__div_to_l_+3
  6851     08B1  3000               	movlw	0
  6852     08B2  00F2               	movwf	?__div_to_l_+2
  6853     08B3  3000               	movlw	0
  6854     08B4  00F1               	movwf	?__div_to_l_+1
  6855     08B5  3000               	movlw	0
  6856     08B6  00F0               	movwf	?__div_to_l_
  6857     08B7  295B               	goto	l514
  6858     08B8                     l2963:
  6859     08B8  1003               	clrc
  6860     08B9  0D76               	rlf	__div_to_l_@f2+2,w
  6861     08BA  0D77               	rlf	__div_to_l_@f2+3,w
  6862     08BB  00A4               	movwf	__div_to_l_@cntr
  6863     08BC  0824               	movf	__div_to_l_@cntr,w
  6864     08BD  1D03               	btfss	3,2
  6865     08BE  28C0               	goto	u4761
  6866     08BF  28C1               	goto	u4760
  6867     08C0                     u4761:
  6868     08C0  28C2               	goto	l515
  6869     08C1                     u4760:
  6870     08C1  28AF               	goto	l2959
  6871     08C2                     l515:
  6872     08C2  17F2               	bsf	__div_to_l_@f1+2,7
  6873     08C3                     l2969:
  6874     08C3  30FF               	movlw	255
  6875     08C4  05F0               	andwf	__div_to_l_@f1,f
  6876     08C5  30FF               	movlw	255
  6877     08C6  05F1               	andwf	__div_to_l_@f1+1,f
  6878     08C7  30FF               	movlw	255
  6879     08C8  05F2               	andwf	__div_to_l_@f1+2,f
  6880     08C9  3000               	movlw	0
  6881     08CA  05F3               	andwf	__div_to_l_@f1+3,f
  6882     08CB                     l2971:
  6883     08CB  17F6               	bsf	__div_to_l_@f2+2,7
  6884     08CC  30FF               	movlw	255
  6885     08CD  05F4               	andwf	__div_to_l_@f2,f
  6886     08CE  30FF               	movlw	255
  6887     08CF  05F5               	andwf	__div_to_l_@f2+1,f
  6888     08D0  30FF               	movlw	255
  6889     08D1  05F6               	andwf	__div_to_l_@f2+2,f
  6890     08D2  3000               	movlw	0
  6891     08D3  05F7               	andwf	__div_to_l_@f2+3,f
  6892     08D4  3000               	movlw	0
  6893     08D5  00A3               	movwf	__div_to_l_@quot+3
  6894     08D6  3000               	movlw	0
  6895     08D7  00A2               	movwf	__div_to_l_@quot+2
  6896     08D8  3000               	movlw	0
  6897     08D9  00A1               	movwf	__div_to_l_@quot+1
  6898     08DA  3000               	movlw	0
  6899     08DB  00A0               	movwf	__div_to_l_@quot
  6900     08DC                     l2973:
  6901     08DC  307F               	movlw	127
  6902     08DD  02A5               	subwf	__div_to_l_@exp1,f
  6903     08DE                     l2975:
  6904     08DE  30A0               	movlw	160
  6905     08DF  0724               	addwf	__div_to_l_@cntr,w
  6906     08E0  00F8               	movwf	??__div_to_l_
  6907     08E1  0878               	movf	??__div_to_l_,w
  6908     08E2  02A5               	subwf	__div_to_l_@exp1,f
  6909     08E3  3020               	movlw	32
  6910     08E4  00A4               	movwf	__div_to_l_@cntr
  6911     08E5                     l2977:
  6912     08E5  3001               	movlw	1
  6913     08E6  00F8               	movwf	??__div_to_l_
  6914     08E7                     u4775:
  6915     08E7  1003               	clrc
  6916     08E8  0DA0               	rlf	__div_to_l_@quot,f
  6917     08E9  0DA1               	rlf	__div_to_l_@quot+1,f
  6918     08EA  0DA2               	rlf	__div_to_l_@quot+2,f
  6919     08EB  0DA3               	rlf	__div_to_l_@quot+3,f
  6920     08EC  0BF8               	decfsz	??__div_to_l_,f
  6921     08ED  28E7               	goto	u4775
  6922     08EE                     l2979:
  6923     08EE  0877               	movf	__div_to_l_@f2+3,w
  6924     08EF  0273               	subwf	__div_to_l_@f1+3,w
  6925     08F0  1D03               	skipz
  6926     08F1  28FC               	goto	u4785
  6927     08F2  0876               	movf	__div_to_l_@f2+2,w
  6928     08F3  0272               	subwf	__div_to_l_@f1+2,w
  6929     08F4  1D03               	skipz
  6930     08F5  28FC               	goto	u4785
  6931     08F6  0875               	movf	__div_to_l_@f2+1,w
  6932     08F7  0271               	subwf	__div_to_l_@f1+1,w
  6933     08F8  1D03               	skipz
  6934     08F9  28FC               	goto	u4785
  6935     08FA  0874               	movf	__div_to_l_@f2,w
  6936     08FB  0270               	subwf	__div_to_l_@f1,w
  6937     08FC                     u4785:
  6938     08FC  1C03               	skipc
  6939     08FD  28FF               	goto	u4781
  6940     08FE  2900               	goto	u4780
  6941     08FF                     u4781:
  6942     08FF  290F               	goto	l2985
  6943     0900                     u4780:
  6944     0900                     l2981:
  6945     0900  0874               	movf	__div_to_l_@f2,w
  6946     0901  02F0               	subwf	__div_to_l_@f1,f
  6947     0902  0875               	movf	__div_to_l_@f2+1,w
  6948     0903  1C03               	skipc
  6949     0904  0F75               	incfsz	__div_to_l_@f2+1,w
  6950     0905  02F1               	subwf	__div_to_l_@f1+1,f
  6951     0906  0876               	movf	__div_to_l_@f2+2,w
  6952     0907  1C03               	skipc
  6953     0908  0F76               	incfsz	__div_to_l_@f2+2,w
  6954     0909  02F2               	subwf	__div_to_l_@f1+2,f
  6955     090A  0877               	movf	__div_to_l_@f2+3,w
  6956     090B  1C03               	skipc
  6957     090C  0F77               	incfsz	__div_to_l_@f2+3,w
  6958     090D  02F3               	subwf	__div_to_l_@f1+3,f
  6959     090E                     l2983:
  6960     090E  1420               	bsf	__div_to_l_@quot,0
  6961     090F                     l2985:
  6962     090F  3001               	movlw	1
  6963     0910  00F8               	movwf	??__div_to_l_
  6964     0911                     u4795:
  6965     0911  1003               	clrc
  6966     0912  0DF0               	rlf	__div_to_l_@f1,f
  6967     0913  0DF1               	rlf	__div_to_l_@f1+1,f
  6968     0914  0DF2               	rlf	__div_to_l_@f1+2,f
  6969     0915  0DF3               	rlf	__div_to_l_@f1+3,f
  6970     0916  0BF8               	decfsz	??__div_to_l_,f
  6971     0917  2911               	goto	u4795
  6972     0918                     l2987:
  6973     0918  3001               	movlw	1
  6974     0919  02A4               	subwf	__div_to_l_@cntr,f
  6975     091A  1D03               	btfss	3,2
  6976     091B  291D               	goto	u4801
  6977     091C  291E               	goto	u4800
  6978     091D                     u4801:
  6979     091D  28E5               	goto	l2977
  6980     091E                     u4800:
  6981     091E                     l518:
  6982     091E  1FA5               	btfss	__div_to_l_@exp1,7
  6983     091F  2921               	goto	u4811
  6984     0920  2922               	goto	u4810
  6985     0921                     u4811:
  6986     0921  293C               	goto	l2997
  6987     0922                     u4810:
  6988     0922                     l2989:
  6989     0922  0825               	movf	__div_to_l_@exp1,w
  6990     0923  3A80               	xorlw	128
  6991     0924  3E9F               	addlw	159
  6992     0925  1803               	skipnc
  6993     0926  2928               	goto	u4821
  6994     0927  2929               	goto	u4820
  6995     0928                     u4821:
  6996     0928  292A               	goto	l2995
  6997     0929                     u4820:
  6998     0929  28AF               	goto	l2959
  6999     092A                     l2995:
  7000     092A  3001               	movlw	1
  7001     092B                     u4835:
  7002     092B  1003               	clrc
  7003     092C  0CA3               	rrf	__div_to_l_@quot+3,f
  7004     092D  0CA2               	rrf	__div_to_l_@quot+2,f
  7005     092E  0CA1               	rrf	__div_to_l_@quot+1,f
  7006     092F  0CA0               	rrf	__div_to_l_@quot,f
  7007     0930  3EFF               	addlw	-1
  7008     0931  1D03               	skipz
  7009     0932  292B               	goto	u4835
  7010     0933  3001               	movlw	1
  7011     0934  00F8               	movwf	??__div_to_l_
  7012     0935  0878               	movf	??__div_to_l_,w
  7013     0936  07A5               	addwf	__div_to_l_@exp1,f
  7014     0937  1D03               	btfss	3,2
  7015     0938  293A               	goto	u4841
  7016     0939  293B               	goto	u4840
  7017     093A                     u4841:
  7018     093A  292A               	goto	l2995
  7019     093B                     u4840:
  7020     093B  2953               	goto	l3005
  7021     093C                     l2997:
  7022     093C  3020               	movlw	32
  7023     093D  0225               	subwf	__div_to_l_@exp1,w
  7024     093E  1C03               	skipc
  7025     093F  2941               	goto	u4851
  7026     0940  2942               	goto	u4850
  7027     0941                     u4851:
  7028     0941  294E               	goto	l525
  7029     0942                     u4850:
  7030     0942  28AF               	goto	l2959
  7031     0943                     l3003:
  7032     0943  3001               	movlw	1
  7033     0944  00F8               	movwf	??__div_to_l_
  7034     0945                     u4865:
  7035     0945  1003               	clrc
  7036     0946  0DA0               	rlf	__div_to_l_@quot,f
  7037     0947  0DA1               	rlf	__div_to_l_@quot+1,f
  7038     0948  0DA2               	rlf	__div_to_l_@quot+2,f
  7039     0949  0DA3               	rlf	__div_to_l_@quot+3,f
  7040     094A  0BF8               	decfsz	??__div_to_l_,f
  7041     094B  2945               	goto	u4865
  7042     094C  3001               	movlw	1
  7043     094D  02A5               	subwf	__div_to_l_@exp1,f
  7044     094E                     l525:
  7045     094E  0825               	movf	__div_to_l_@exp1,w
  7046     094F  1D03               	btfss	3,2
  7047     0950  2952               	goto	u4871
  7048     0951  2953               	goto	u4870
  7049     0952                     u4871:
  7050     0952  2943               	goto	l3003
  7051     0953                     u4870:
  7052     0953                     l3005:
  7053     0953  0823               	movf	__div_to_l_@quot+3,w
  7054     0954  00F3               	movwf	?__div_to_l_+3
  7055     0955  0822               	movf	__div_to_l_@quot+2,w
  7056     0956  00F2               	movwf	?__div_to_l_+2
  7057     0957  0821               	movf	__div_to_l_@quot+1,w
  7058     0958  00F1               	movwf	?__div_to_l_+1
  7059     0959  0820               	movf	__div_to_l_@quot,w
  7060     095A  00F0               	movwf	?__div_to_l_
  7061     095B                     l514:
  7062     095B  0008               	return
  7063     095C                     __end_of__div_to_l_:
  7064                           
  7065                           	psect	text13
  7066     1112                     __ptext13:	
  7067 ;; *************** function ___xxtofl *****************
  7068 ;; Defined at:
  7069 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  sign            1    wreg     unsigned char 
  7072 ;;  val             4    0[COMMON] long 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  sign            1    8[COMMON] unsigned char 
  7075 ;;  arg             4   10[COMMON] unsigned long 
  7076 ;;  exp             1    9[COMMON] unsigned char 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  4    0[COMMON] unsigned char 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7086 ;;      Params:         4       0       0       0       0
  7087 ;;      Locals:         6       0       0       0       0
  7088 ;;      Temps:          4       0       0       0       0
  7089 ;;      Totals:        14       0       0       0       0
  7090 ;;Total ram usage:       14 bytes
  7091 ;; Hardware stack levels used: 1
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_main
  7096 ;;		_sprintf
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100     1112                     ___xxtofl:	
  7101                           ;psect for function ___xxtofl
  7102                           
  7103                           
  7104                           ;incstack = 0
  7105                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7106                           ;___xxtofl@sign stored from wreg
  7107     1112  00F8               	movwf	___xxtofl@sign
  7108     1113                     l3149:
  7109     1113  0878               	movf	___xxtofl@sign,w
  7110     1114  1903               	btfsc	3,2
  7111     1115  2917               	goto	u5261
  7112     1116  2918               	goto	u5260
  7113     1117                     u5261:
  7114     1117  292C               	goto	l3155
  7115     1118                     u5260:
  7116     1118                     l3151:
  7117     1118  1FF3               	btfss	___xxtofl@val+3,7
  7118     1119  291B               	goto	u5271
  7119     111A  291C               	goto	u5270
  7120     111B                     u5271:
  7121     111B  292C               	goto	l3155
  7122     111C                     u5270:
  7123     111C                     l3153:
  7124     111C  0970               	comf	___xxtofl@val,w
  7125     111D  00FA               	movwf	___xxtofl@arg
  7126     111E  0971               	comf	___xxtofl@val+1,w
  7127     111F  00FB               	movwf	___xxtofl@arg+1
  7128     1120  0972               	comf	___xxtofl@val+2,w
  7129     1121  00FC               	movwf	___xxtofl@arg+2
  7130     1122  0973               	comf	___xxtofl@val+3,w
  7131     1123  00FD               	movwf	___xxtofl@arg+3
  7132     1124  0AFA               	incf	___xxtofl@arg,f
  7133     1125  1903               	skipnz
  7134     1126  0AFB               	incf	___xxtofl@arg+1,f
  7135     1127  1903               	skipnz
  7136     1128  0AFC               	incf	___xxtofl@arg+2,f
  7137     1129  1903               	skipnz
  7138     112A  0AFD               	incf	___xxtofl@arg+3,f
  7139     112B  2934               	goto	l811
  7140     112C                     l3155:
  7141     112C  0873               	movf	___xxtofl@val+3,w
  7142     112D  00FD               	movwf	___xxtofl@arg+3
  7143     112E  0872               	movf	___xxtofl@val+2,w
  7144     112F  00FC               	movwf	___xxtofl@arg+2
  7145     1130  0871               	movf	___xxtofl@val+1,w
  7146     1131  00FB               	movwf	___xxtofl@arg+1
  7147     1132  0870               	movf	___xxtofl@val,w
  7148     1133  00FA               	movwf	___xxtofl@arg
  7149     1134                     l811:
  7150     1134  0873               	movf	___xxtofl@val+3,w
  7151     1135  0472               	iorwf	___xxtofl@val+2,w
  7152     1136  0471               	iorwf	___xxtofl@val+1,w
  7153     1137  0470               	iorwf	___xxtofl@val,w
  7154     1138  1D03               	skipz
  7155     1139  293B               	goto	u5281
  7156     113A  293C               	goto	u5280
  7157     113B                     u5281:
  7158     113B  2945               	goto	l3161
  7159     113C                     u5280:
  7160     113C                     l3157:
  7161     113C  3000               	movlw	0
  7162     113D  00F3               	movwf	?___xxtofl+3
  7163     113E  3000               	movlw	0
  7164     113F  00F2               	movwf	?___xxtofl+2
  7165     1140  3000               	movlw	0
  7166     1141  00F1               	movwf	?___xxtofl+1
  7167     1142  3000               	movlw	0
  7168     1143  00F0               	movwf	?___xxtofl
  7169     1144  29C9               	goto	l813
  7170     1145                     l3161:
  7171     1145  3096               	movlw	150
  7172     1146  00F9               	movwf	___xxtofl@exp
  7173     1147  2955               	goto	l3165
  7174     1148                     l3163:
  7175     1148  3001               	movlw	1
  7176     1149  00F4               	movwf	??___xxtofl
  7177     114A  0874               	movf	??___xxtofl,w
  7178     114B  07F9               	addwf	___xxtofl@exp,f
  7179     114C  3001               	movlw	1
  7180     114D                     u5295:
  7181     114D  1003               	clrc
  7182     114E  0CFD               	rrf	___xxtofl@arg+3,f
  7183     114F  0CFC               	rrf	___xxtofl@arg+2,f
  7184     1150  0CFB               	rrf	___xxtofl@arg+1,f
  7185     1151  0CFA               	rrf	___xxtofl@arg,f
  7186     1152  3EFF               	addlw	-1
  7187     1153  1D03               	skipz
  7188     1154  294D               	goto	u5295
  7189     1155                     l3165:
  7190     1155  30FE               	movlw	254
  7191     1156  057D               	andwf	___xxtofl@arg+3,w
  7192     1157  1D03               	btfss	3,2
  7193     1158  295A               	goto	u5301
  7194     1159  295B               	goto	u5300
  7195     115A                     u5301:
  7196     115A  2948               	goto	l3163
  7197     115B                     u5300:
  7198     115B  2977               	goto	l817
  7199     115C                     l3167:
  7200     115C  3001               	movlw	1
  7201     115D  00F4               	movwf	??___xxtofl
  7202     115E  0874               	movf	??___xxtofl,w
  7203     115F  07F9               	addwf	___xxtofl@exp,f
  7204     1160                     l3169:
  7205     1160  3001               	movlw	1
  7206     1161  07FA               	addwf	___xxtofl@arg,f
  7207     1162  3000               	movlw	0
  7208     1163  1803               	skipnc
  7209     1164  3001               	movlw	1
  7210     1165  07FB               	addwf	___xxtofl@arg+1,f
  7211     1166  3000               	movlw	0
  7212     1167  1803               	skipnc
  7213     1168  3001               	movlw	1
  7214     1169  07FC               	addwf	___xxtofl@arg+2,f
  7215     116A  3000               	movlw	0
  7216     116B  1803               	skipnc
  7217     116C  3001               	movlw	1
  7218     116D  07FD               	addwf	___xxtofl@arg+3,f
  7219     116E                     l3171:
  7220     116E  3001               	movlw	1
  7221     116F                     u5315:
  7222     116F  1003               	clrc
  7223     1170  0CFD               	rrf	___xxtofl@arg+3,f
  7224     1171  0CFC               	rrf	___xxtofl@arg+2,f
  7225     1172  0CFB               	rrf	___xxtofl@arg+1,f
  7226     1173  0CFA               	rrf	___xxtofl@arg,f
  7227     1174  3EFF               	addlw	-1
  7228     1175  1D03               	skipz
  7229     1176  296F               	goto	u5315
  7230     1177                     l817:
  7231     1177  30FF               	movlw	255
  7232     1178  057D               	andwf	___xxtofl@arg+3,w
  7233     1179  1D03               	btfss	3,2
  7234     117A  297C               	goto	u5321
  7235     117B  297D               	goto	u5320
  7236     117C                     u5321:
  7237     117C  295C               	goto	l3167
  7238     117D                     u5320:
  7239     117D  2989               	goto	l3175
  7240     117E                     l3173:
  7241     117E  3001               	movlw	1
  7242     117F  02F9               	subwf	___xxtofl@exp,f
  7243     1180  3001               	movlw	1
  7244     1181  00F4               	movwf	??___xxtofl
  7245     1182                     u5335:
  7246     1182  1003               	clrc
  7247     1183  0DFA               	rlf	___xxtofl@arg,f
  7248     1184  0DFB               	rlf	___xxtofl@arg+1,f
  7249     1185  0DFC               	rlf	___xxtofl@arg+2,f
  7250     1186  0DFD               	rlf	___xxtofl@arg+3,f
  7251     1187  0BF4               	decfsz	??___xxtofl,f
  7252     1188  2982               	goto	u5335
  7253     1189                     l3175:
  7254     1189  1BFC               	btfsc	___xxtofl@arg+2,7
  7255     118A  298C               	goto	u5341
  7256     118B  298D               	goto	u5340
  7257     118C                     u5341:
  7258     118C  2993               	goto	l824
  7259     118D                     u5340:
  7260     118D                     l3177:
  7261     118D  3002               	movlw	2
  7262     118E  0279               	subwf	___xxtofl@exp,w
  7263     118F  1803               	skipnc
  7264     1190  2992               	goto	u5351
  7265     1191  2993               	goto	u5350
  7266     1192                     u5351:
  7267     1192  297E               	goto	l3173
  7268     1193                     u5350:
  7269     1193                     l824:
  7270     1193  1879               	btfsc	___xxtofl@exp,0
  7271     1194  2996               	goto	u5361
  7272     1195  2997               	goto	u5360
  7273     1196                     u5361:
  7274     1196  299F               	goto	l825
  7275     1197                     u5360:
  7276     1197                     l3179:
  7277     1197  30FF               	movlw	255
  7278     1198  05FA               	andwf	___xxtofl@arg,f
  7279     1199  30FF               	movlw	255
  7280     119A  05FB               	andwf	___xxtofl@arg+1,f
  7281     119B  307F               	movlw	127
  7282     119C  05FC               	andwf	___xxtofl@arg+2,f
  7283     119D  30FF               	movlw	255
  7284     119E  05FD               	andwf	___xxtofl@arg+3,f
  7285     119F                     l825:
  7286     119F  1003               	clrc
  7287     11A0  0CF9               	rrf	___xxtofl@exp,f
  7288     11A1                     l3181:
  7289     11A1  0879               	movf	___xxtofl@exp,w
  7290     11A2  00F4               	movwf	??___xxtofl
  7291     11A3  01F5               	clrf	??___xxtofl+1
  7292     11A4  01F6               	clrf	??___xxtofl+2
  7293     11A5  01F7               	clrf	??___xxtofl+3
  7294     11A6  3018               	movlw	24
  7295     11A7                     u5375:
  7296     11A7  1003               	clrc
  7297     11A8  0DF4               	rlf	??___xxtofl,f
  7298     11A9  0DF5               	rlf	??___xxtofl+1,f
  7299     11AA  0DF6               	rlf	??___xxtofl+2,f
  7300     11AB  0DF7               	rlf	??___xxtofl+3,f
  7301     11AC                     u5370:
  7302     11AC  3EFF               	addlw	-1
  7303     11AD  1D03               	skipz
  7304     11AE  29A7               	goto	u5375
  7305     11AF  0874               	movf	??___xxtofl,w
  7306     11B0  04FA               	iorwf	___xxtofl@arg,f
  7307     11B1  0875               	movf	??___xxtofl+1,w
  7308     11B2  04FB               	iorwf	___xxtofl@arg+1,f
  7309     11B3  0876               	movf	??___xxtofl+2,w
  7310     11B4  04FC               	iorwf	___xxtofl@arg+2,f
  7311     11B5  0877               	movf	??___xxtofl+3,w
  7312     11B6  04FD               	iorwf	___xxtofl@arg+3,f
  7313     11B7                     l3183:
  7314     11B7  0878               	movf	___xxtofl@sign,w
  7315     11B8  1903               	btfsc	3,2
  7316     11B9  29BB               	goto	u5381
  7317     11BA  29BC               	goto	u5380
  7318     11BB                     u5381:
  7319     11BB  29C1               	goto	l3189
  7320     11BC                     u5380:
  7321     11BC                     l3185:
  7322     11BC  1FF3               	btfss	___xxtofl@val+3,7
  7323     11BD  29BF               	goto	u5391
  7324     11BE  29C0               	goto	u5390
  7325     11BF                     u5391:
  7326     11BF  29C1               	goto	l3189
  7327     11C0                     u5390:
  7328     11C0                     l3187:
  7329     11C0  17FD               	bsf	___xxtofl@arg+3,7
  7330     11C1                     l3189:
  7331     11C1  087D               	movf	___xxtofl@arg+3,w
  7332     11C2  00F3               	movwf	?___xxtofl+3
  7333     11C3  087C               	movf	___xxtofl@arg+2,w
  7334     11C4  00F2               	movwf	?___xxtofl+2
  7335     11C5  087B               	movf	___xxtofl@arg+1,w
  7336     11C6  00F1               	movwf	?___xxtofl+1
  7337     11C7  087A               	movf	___xxtofl@arg,w
  7338     11C8  00F0               	movwf	?___xxtofl
  7339     11C9                     l813:
  7340     11C9  0008               	return
  7341     11CA                     __end_of___xxtofl:
  7342                           
  7343                           	psect	text14
  7344     1C24                     __ptext14:	
  7345 ;; *************** function ___wmul *****************
  7346 ;; Defined at:
  7347 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  multiplier      2    0[COMMON] unsigned int 
  7350 ;;  multiplicand    2    2[COMMON] unsigned int 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  product         2    4[COMMON] unsigned int 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  2    0[COMMON] unsigned int 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2, status,0
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7362 ;;      Params:         4       0       0       0       0
  7363 ;;      Locals:         2       0       0       0       0
  7364 ;;      Temps:          0       0       0       0       0
  7365 ;;      Totals:         6       0       0       0       0
  7366 ;;Total ram usage:        6 bytes
  7367 ;; Hardware stack levels used: 1
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_sprintf
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375     1C24                     ___wmul:	
  7376                           ;psect for function ___wmul
  7377                           
  7378     1C24                     l3009:	
  7379                           ;incstack = 0
  7380                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7381                           
  7382     1C24  01F4               	clrf	___wmul@product
  7383     1C25  01F5               	clrf	___wmul@product+1
  7384     1C26                     l3011:
  7385     1C26  1C70               	btfss	___wmul@multiplier,0
  7386     1C27  2C29               	goto	u4881
  7387     1C28  2C2A               	goto	u4880
  7388     1C29                     u4881:
  7389     1C29  2C30               	goto	l344
  7390     1C2A                     u4880:
  7391     1C2A                     l3013:
  7392     1C2A  0872               	movf	___wmul@multiplicand,w
  7393     1C2B  07F4               	addwf	___wmul@product,f
  7394     1C2C  1803               	skipnc
  7395     1C2D  0AF5               	incf	___wmul@product+1,f
  7396     1C2E  0873               	movf	___wmul@multiplicand+1,w
  7397     1C2F  07F5               	addwf	___wmul@product+1,f
  7398     1C30                     l344:
  7399     1C30  3001               	movlw	1
  7400     1C31                     u4895:
  7401     1C31  1003               	clrc
  7402     1C32  0DF2               	rlf	___wmul@multiplicand,f
  7403     1C33  0DF3               	rlf	___wmul@multiplicand+1,f
  7404     1C34  3EFF               	addlw	-1
  7405     1C35  1D03               	skipz
  7406     1C36  2C31               	goto	u4895
  7407     1C37                     l3015:
  7408     1C37  3001               	movlw	1
  7409     1C38                     u4905:
  7410     1C38  1003               	clrc
  7411     1C39  0CF1               	rrf	___wmul@multiplier+1,f
  7412     1C3A  0CF0               	rrf	___wmul@multiplier,f
  7413     1C3B  3EFF               	addlw	-1
  7414     1C3C  1D03               	skipz
  7415     1C3D  2C38               	goto	u4905
  7416     1C3E                     l3017:
  7417     1C3E  0870               	movf	___wmul@multiplier,w
  7418     1C3F  0471               	iorwf	___wmul@multiplier+1,w
  7419     1C40  1D03               	btfss	3,2
  7420     1C41  2C43               	goto	u4911
  7421     1C42  2C44               	goto	u4910
  7422     1C43                     u4911:
  7423     1C43  2C26               	goto	l3011
  7424     1C44                     u4910:
  7425     1C44                     l3019:
  7426     1C44  0875               	movf	___wmul@product+1,w
  7427     1C45  00F1               	movwf	?___wmul+1
  7428     1C46  0874               	movf	___wmul@product,w
  7429     1C47  00F0               	movwf	?___wmul
  7430     1C48                     l346:
  7431     1C48  0008               	return
  7432     1C49                     __end_of___wmul:
  7433                           
  7434                           	psect	text15
  7435     1DA9                     __ptext15:	
  7436 ;; *************** function ___llmod *****************
  7437 ;; Defined at:
  7438 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  divisor         4    0[COMMON] unsigned long 
  7441 ;;  dividend        4    4[COMMON] unsigned long 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;  counter         1    9[COMMON] unsigned char 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  4    0[COMMON] unsigned long 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2, status,0
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7453 ;;      Params:         8       0       0       0       0
  7454 ;;      Locals:         1       0       0       0       0
  7455 ;;      Temps:          1       0       0       0       0
  7456 ;;      Totals:        10       0       0       0       0
  7457 ;;Total ram usage:       10 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; This function calls:
  7460 ;;		Nothing
  7461 ;; This function is called by:
  7462 ;;		_sprintf
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466     1DA9                     ___llmod:	
  7467                           ;psect for function ___llmod
  7468                           
  7469     1DA9                     l3123:	
  7470                           ;incstack = 0
  7471                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7472                           
  7473     1DA9  0873               	movf	___llmod@divisor+3,w
  7474     1DAA  0472               	iorwf	___llmod@divisor+2,w
  7475     1DAB  0471               	iorwf	___llmod@divisor+1,w
  7476     1DAC  0470               	iorwf	___llmod@divisor,w
  7477     1DAD  1903               	skipnz
  7478     1DAE  2DB0               	goto	u5201
  7479     1DAF  2DB1               	goto	u5200
  7480     1DB0                     u5201:
  7481     1DB0  2DF4               	goto	l3139
  7482     1DB1                     u5200:
  7483     1DB1                     l3125:
  7484     1DB1  01F9               	clrf	___llmod@counter
  7485     1DB2  0AF9               	incf	___llmod@counter,f
  7486     1DB3  2DC1               	goto	l3129
  7487     1DB4                     l3127:
  7488     1DB4  3001               	movlw	1
  7489     1DB5  00F8               	movwf	??___llmod
  7490     1DB6                     u5215:
  7491     1DB6  1003               	clrc
  7492     1DB7  0DF0               	rlf	___llmod@divisor,f
  7493     1DB8  0DF1               	rlf	___llmod@divisor+1,f
  7494     1DB9  0DF2               	rlf	___llmod@divisor+2,f
  7495     1DBA  0DF3               	rlf	___llmod@divisor+3,f
  7496     1DBB  0BF8               	decfsz	??___llmod,f
  7497     1DBC  2DB6               	goto	u5215
  7498     1DBD  3001               	movlw	1
  7499     1DBE  00F8               	movwf	??___llmod
  7500     1DBF  0878               	movf	??___llmod,w
  7501     1DC0  07F9               	addwf	___llmod@counter,f
  7502     1DC1                     l3129:
  7503     1DC1  1FF3               	btfss	___llmod@divisor+3,7
  7504     1DC2  2DC4               	goto	u5221
  7505     1DC3  2DC5               	goto	u5220
  7506     1DC4                     u5221:
  7507     1DC4  2DB4               	goto	l3127
  7508     1DC5                     u5220:
  7509     1DC5                     l3131:
  7510     1DC5  0873               	movf	___llmod@divisor+3,w
  7511     1DC6  0277               	subwf	___llmod@dividend+3,w
  7512     1DC7  1D03               	skipz
  7513     1DC8  2DD3               	goto	u5235
  7514     1DC9  0872               	movf	___llmod@divisor+2,w
  7515     1DCA  0276               	subwf	___llmod@dividend+2,w
  7516     1DCB  1D03               	skipz
  7517     1DCC  2DD3               	goto	u5235
  7518     1DCD  0871               	movf	___llmod@divisor+1,w
  7519     1DCE  0275               	subwf	___llmod@dividend+1,w
  7520     1DCF  1D03               	skipz
  7521     1DD0  2DD3               	goto	u5235
  7522     1DD1  0870               	movf	___llmod@divisor,w
  7523     1DD2  0274               	subwf	___llmod@dividend,w
  7524     1DD3                     u5235:
  7525     1DD3  1C03               	skipc
  7526     1DD4  2DD6               	goto	u5231
  7527     1DD5  2DD7               	goto	u5230
  7528     1DD6                     u5231:
  7529     1DD6  2DE5               	goto	l3135
  7530     1DD7                     u5230:
  7531     1DD7                     l3133:
  7532     1DD7  0870               	movf	___llmod@divisor,w
  7533     1DD8  02F4               	subwf	___llmod@dividend,f
  7534     1DD9  0871               	movf	___llmod@divisor+1,w
  7535     1DDA  1C03               	skipc
  7536     1DDB  0F71               	incfsz	___llmod@divisor+1,w
  7537     1DDC  02F5               	subwf	___llmod@dividend+1,f
  7538     1DDD  0872               	movf	___llmod@divisor+2,w
  7539     1DDE  1C03               	skipc
  7540     1DDF  0F72               	incfsz	___llmod@divisor+2,w
  7541     1DE0  02F6               	subwf	___llmod@dividend+2,f
  7542     1DE1  0873               	movf	___llmod@divisor+3,w
  7543     1DE2  1C03               	skipc
  7544     1DE3  0F73               	incfsz	___llmod@divisor+3,w
  7545     1DE4  02F7               	subwf	___llmod@dividend+3,f
  7546     1DE5                     l3135:
  7547     1DE5  3001               	movlw	1
  7548     1DE6                     u5245:
  7549     1DE6  1003               	clrc
  7550     1DE7  0CF3               	rrf	___llmod@divisor+3,f
  7551     1DE8  0CF2               	rrf	___llmod@divisor+2,f
  7552     1DE9  0CF1               	rrf	___llmod@divisor+1,f
  7553     1DEA  0CF0               	rrf	___llmod@divisor,f
  7554     1DEB  3EFF               	addlw	-1
  7555     1DEC  1D03               	skipz
  7556     1DED  2DE6               	goto	u5245
  7557     1DEE                     l3137:
  7558     1DEE  3001               	movlw	1
  7559     1DEF  02F9               	subwf	___llmod@counter,f
  7560     1DF0  1D03               	btfss	3,2
  7561     1DF1  2DF3               	goto	u5251
  7562     1DF2  2DF4               	goto	u5250
  7563     1DF3                     u5251:
  7564     1DF3  2DC5               	goto	l3131
  7565     1DF4                     u5250:
  7566     1DF4                     l3139:
  7567     1DF4  0877               	movf	___llmod@dividend+3,w
  7568     1DF5  00F3               	movwf	?___llmod+3
  7569     1DF6  0876               	movf	___llmod@dividend+2,w
  7570     1DF7  00F2               	movwf	?___llmod+2
  7571     1DF8  0875               	movf	___llmod@dividend+1,w
  7572     1DF9  00F1               	movwf	?___llmod+1
  7573     1DFA  0874               	movf	___llmod@dividend,w
  7574     1DFB  00F0               	movwf	?___llmod
  7575     1DFC                     l600:
  7576     1DFC  0008               	return
  7577     1DFD                     __end_of___llmod:
  7578                           
  7579                           	psect	text16
  7580     1EB9                     __ptext16:	
  7581 ;; *************** function ___lldiv *****************
  7582 ;; Defined at:
  7583 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  divisor         4    0[COMMON] unsigned long 
  7586 ;;  dividend        4    4[COMMON] unsigned long 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  quotient        4    9[COMMON] unsigned long 
  7589 ;;  counter         1   13[COMMON] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  4    0[COMMON] unsigned long 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7599 ;;      Params:         8       0       0       0       0
  7600 ;;      Locals:         5       0       0       0       0
  7601 ;;      Temps:          1       0       0       0       0
  7602 ;;      Totals:        14       0       0       0       0
  7603 ;;Total ram usage:       14 bytes
  7604 ;; Hardware stack levels used: 1
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_sprintf
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612     1EB9                     ___lldiv:	
  7613                           ;psect for function ___lldiv
  7614                           
  7615     1EB9                     l3023:	
  7616                           ;incstack = 0
  7617                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7618                           
  7619     1EB9  3000               	movlw	0
  7620     1EBA  00FC               	movwf	___lldiv@quotient+3
  7621     1EBB  3000               	movlw	0
  7622     1EBC  00FB               	movwf	___lldiv@quotient+2
  7623     1EBD  3000               	movlw	0
  7624     1EBE  00FA               	movwf	___lldiv@quotient+1
  7625     1EBF  3000               	movlw	0
  7626     1EC0  00F9               	movwf	___lldiv@quotient
  7627     1EC1  0873               	movf	___lldiv@divisor+3,w
  7628     1EC2  0472               	iorwf	___lldiv@divisor+2,w
  7629     1EC3  0471               	iorwf	___lldiv@divisor+1,w
  7630     1EC4  0470               	iorwf	___lldiv@divisor,w
  7631     1EC5  1903               	skipnz
  7632     1EC6  2EC8               	goto	u4921
  7633     1EC7  2EC9               	goto	u4920
  7634     1EC8                     u4921:
  7635     1EC8  2F16               	goto	l3043
  7636     1EC9                     u4920:
  7637     1EC9                     l3025:
  7638     1EC9  01FD               	clrf	___lldiv@counter
  7639     1ECA  0AFD               	incf	___lldiv@counter,f
  7640     1ECB  2ED9               	goto	l3029
  7641     1ECC                     l3027:
  7642     1ECC  3001               	movlw	1
  7643     1ECD  00F8               	movwf	??___lldiv
  7644     1ECE                     u4935:
  7645     1ECE  1003               	clrc
  7646     1ECF  0DF0               	rlf	___lldiv@divisor,f
  7647     1ED0  0DF1               	rlf	___lldiv@divisor+1,f
  7648     1ED1  0DF2               	rlf	___lldiv@divisor+2,f
  7649     1ED2  0DF3               	rlf	___lldiv@divisor+3,f
  7650     1ED3  0BF8               	decfsz	??___lldiv,f
  7651     1ED4  2ECE               	goto	u4935
  7652     1ED5  3001               	movlw	1
  7653     1ED6  00F8               	movwf	??___lldiv
  7654     1ED7  0878               	movf	??___lldiv,w
  7655     1ED8  07FD               	addwf	___lldiv@counter,f
  7656     1ED9                     l3029:
  7657     1ED9  1FF3               	btfss	___lldiv@divisor+3,7
  7658     1EDA  2EDC               	goto	u4941
  7659     1EDB  2EDD               	goto	u4940
  7660     1EDC                     u4941:
  7661     1EDC  2ECC               	goto	l3027
  7662     1EDD                     u4940:
  7663     1EDD                     l3031:
  7664     1EDD  3001               	movlw	1
  7665     1EDE  00F8               	movwf	??___lldiv
  7666     1EDF                     u4955:
  7667     1EDF  1003               	clrc
  7668     1EE0  0DF9               	rlf	___lldiv@quotient,f
  7669     1EE1  0DFA               	rlf	___lldiv@quotient+1,f
  7670     1EE2  0DFB               	rlf	___lldiv@quotient+2,f
  7671     1EE3  0DFC               	rlf	___lldiv@quotient+3,f
  7672     1EE4  0BF8               	decfsz	??___lldiv,f
  7673     1EE5  2EDF               	goto	u4955
  7674     1EE6                     l3033:
  7675     1EE6  0873               	movf	___lldiv@divisor+3,w
  7676     1EE7  0277               	subwf	___lldiv@dividend+3,w
  7677     1EE8  1D03               	skipz
  7678     1EE9  2EF4               	goto	u4965
  7679     1EEA  0872               	movf	___lldiv@divisor+2,w
  7680     1EEB  0276               	subwf	___lldiv@dividend+2,w
  7681     1EEC  1D03               	skipz
  7682     1EED  2EF4               	goto	u4965
  7683     1EEE  0871               	movf	___lldiv@divisor+1,w
  7684     1EEF  0275               	subwf	___lldiv@dividend+1,w
  7685     1EF0  1D03               	skipz
  7686     1EF1  2EF4               	goto	u4965
  7687     1EF2  0870               	movf	___lldiv@divisor,w
  7688     1EF3  0274               	subwf	___lldiv@dividend,w
  7689     1EF4                     u4965:
  7690     1EF4  1C03               	skipc
  7691     1EF5  2EF7               	goto	u4961
  7692     1EF6  2EF8               	goto	u4960
  7693     1EF7                     u4961:
  7694     1EF7  2F07               	goto	l3039
  7695     1EF8                     u4960:
  7696     1EF8                     l3035:
  7697     1EF8  0870               	movf	___lldiv@divisor,w
  7698     1EF9  02F4               	subwf	___lldiv@dividend,f
  7699     1EFA  0871               	movf	___lldiv@divisor+1,w
  7700     1EFB  1C03               	skipc
  7701     1EFC  0F71               	incfsz	___lldiv@divisor+1,w
  7702     1EFD  02F5               	subwf	___lldiv@dividend+1,f
  7703     1EFE  0872               	movf	___lldiv@divisor+2,w
  7704     1EFF  1C03               	skipc
  7705     1F00  0F72               	incfsz	___lldiv@divisor+2,w
  7706     1F01  02F6               	subwf	___lldiv@dividend+2,f
  7707     1F02  0873               	movf	___lldiv@divisor+3,w
  7708     1F03  1C03               	skipc
  7709     1F04  0F73               	incfsz	___lldiv@divisor+3,w
  7710     1F05  02F7               	subwf	___lldiv@dividend+3,f
  7711     1F06                     l3037:
  7712     1F06  1479               	bsf	___lldiv@quotient,0
  7713     1F07                     l3039:
  7714     1F07  3001               	movlw	1
  7715     1F08                     u4975:
  7716     1F08  1003               	clrc
  7717     1F09  0CF3               	rrf	___lldiv@divisor+3,f
  7718     1F0A  0CF2               	rrf	___lldiv@divisor+2,f
  7719     1F0B  0CF1               	rrf	___lldiv@divisor+1,f
  7720     1F0C  0CF0               	rrf	___lldiv@divisor,f
  7721     1F0D  3EFF               	addlw	-1
  7722     1F0E  1D03               	skipz
  7723     1F0F  2F08               	goto	u4975
  7724     1F10                     l3041:
  7725     1F10  3001               	movlw	1
  7726     1F11  02FD               	subwf	___lldiv@counter,f
  7727     1F12  1D03               	btfss	3,2
  7728     1F13  2F15               	goto	u4981
  7729     1F14  2F16               	goto	u4980
  7730     1F15                     u4981:
  7731     1F15  2EDD               	goto	l3031
  7732     1F16                     u4980:
  7733     1F16                     l3043:
  7734     1F16  087C               	movf	___lldiv@quotient+3,w
  7735     1F17  00F3               	movwf	?___lldiv+3
  7736     1F18  087B               	movf	___lldiv@quotient+2,w
  7737     1F19  00F2               	movwf	?___lldiv+2
  7738     1F1A  087A               	movf	___lldiv@quotient+1,w
  7739     1F1B  00F1               	movwf	?___lldiv+1
  7740     1F1C  0879               	movf	___lldiv@quotient,w
  7741     1F1D  00F0               	movwf	?___lldiv
  7742     1F1E                     l380:
  7743     1F1E  0008               	return
  7744     1F1F                     __end_of___lldiv:
  7745                           
  7746                           	psect	text17
  7747     1F88                     __ptext17:	
  7748 ;; *************** function ___fltol *****************
  7749 ;; Defined at:
  7750 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  f1              4   49[BANK0 ] unsigned long 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;  exp1            1   58[BANK0 ] unsigned char 
  7755 ;;  sign1           1   57[BANK0 ] unsigned char 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  4   49[BANK0 ] long 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7765 ;;      Params:         0       4       0       0       0
  7766 ;;      Locals:         0       2       0       0       0
  7767 ;;      Temps:          0       4       0       0       0
  7768 ;;      Totals:         0      10       0       0       0
  7769 ;;Total ram usage:       10 bytes
  7770 ;; Hardware stack levels used: 1
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_sprintf
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778     1F88                     ___fltol:	
  7779                           ;psect for function ___fltol
  7780                           
  7781     1F88                     l3087:	
  7782                           ;incstack = 0
  7783                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7784                           
  7785     1F88  1003               	clrc
  7786     1F89  1283               	bcf	3,5	;RP0=0, select bank0
  7787     1F8A  1303               	bcf	3,6	;RP1=0, select bank0
  7788     1F8B  0D53               	rlf	___fltol@f1+2,w
  7789     1F8C  0D54               	rlf	___fltol@f1+3,w
  7790     1F8D  00DA               	movwf	___fltol@exp1
  7791     1F8E  085A               	movf	___fltol@exp1,w
  7792     1F8F  1D03               	btfss	3,2
  7793     1F90  2F92               	goto	u5101
  7794     1F91  2F93               	goto	u5100
  7795     1F92                     u5101:
  7796     1F92  2F9C               	goto	l3093
  7797     1F93                     u5100:
  7798     1F93                     l3089:
  7799     1F93  3000               	movlw	0
  7800     1F94  00D4               	movwf	?___fltol+3
  7801     1F95  3000               	movlw	0
  7802     1F96  00D3               	movwf	?___fltol+2
  7803     1F97  3000               	movlw	0
  7804     1F98  00D2               	movwf	?___fltol+1
  7805     1F99  3000               	movlw	0
  7806     1F9A  00D1               	movwf	?___fltol
  7807     1F9B  2FFF               	goto	l547
  7808     1F9C                     l3093:
  7809     1F9C  0851               	movf	___fltol@f1,w
  7810     1F9D  00D5               	movwf	??___fltol
  7811     1F9E  0852               	movf	___fltol@f1+1,w
  7812     1F9F  00D6               	movwf	??___fltol+1
  7813     1FA0  0853               	movf	___fltol@f1+2,w
  7814     1FA1  00D7               	movwf	??___fltol+2
  7815     1FA2  0854               	movf	___fltol@f1+3,w
  7816     1FA3  00D8               	movwf	??___fltol+3
  7817     1FA4  301F               	movlw	31
  7818     1FA5                     u5115:
  7819     1FA5  1003               	clrc
  7820     1FA6  0CD8               	rrf	??___fltol+3,f
  7821     1FA7  0CD7               	rrf	??___fltol+2,f
  7822     1FA8  0CD6               	rrf	??___fltol+1,f
  7823     1FA9  0CD5               	rrf	??___fltol,f
  7824     1FAA                     u5110:
  7825     1FAA  3EFF               	addlw	-1
  7826     1FAB  1D03               	skipz
  7827     1FAC  2FA5               	goto	u5115
  7828     1FAD  0855               	movf	??___fltol,w
  7829     1FAE  00D9               	movwf	___fltol@sign1
  7830     1FAF                     l3095:
  7831     1FAF  17D3               	bsf	___fltol@f1+2,7
  7832     1FB0                     l3097:
  7833     1FB0  30FF               	movlw	255
  7834     1FB1  05D1               	andwf	___fltol@f1,f
  7835     1FB2  30FF               	movlw	255
  7836     1FB3  05D2               	andwf	___fltol@f1+1,f
  7837     1FB4  30FF               	movlw	255
  7838     1FB5  05D3               	andwf	___fltol@f1+2,f
  7839     1FB6  3000               	movlw	0
  7840     1FB7  05D4               	andwf	___fltol@f1+3,f
  7841     1FB8                     l3099:
  7842     1FB8  3096               	movlw	150
  7843     1FB9  02DA               	subwf	___fltol@exp1,f
  7844     1FBA                     l3101:
  7845     1FBA  1FDA               	btfss	___fltol@exp1,7
  7846     1FBB  2FBD               	goto	u5121
  7847     1FBC  2FBE               	goto	u5120
  7848     1FBD                     u5121:
  7849     1FBD  2FD8               	goto	l3111
  7850     1FBE                     u5120:
  7851     1FBE                     l3103:
  7852     1FBE  085A               	movf	___fltol@exp1,w
  7853     1FBF  3A80               	xorlw	128
  7854     1FC0  3E97               	addlw	151
  7855     1FC1  1803               	skipnc
  7856     1FC2  2FC4               	goto	u5131
  7857     1FC3  2FC5               	goto	u5130
  7858     1FC4                     u5131:
  7859     1FC4  2FC6               	goto	l3109
  7860     1FC5                     u5130:
  7861     1FC5  2F93               	goto	l3089
  7862     1FC6                     l3109:
  7863     1FC6  3001               	movlw	1
  7864     1FC7                     u5145:
  7865     1FC7  1003               	clrc
  7866     1FC8  0CD4               	rrf	___fltol@f1+3,f
  7867     1FC9  0CD3               	rrf	___fltol@f1+2,f
  7868     1FCA  0CD2               	rrf	___fltol@f1+1,f
  7869     1FCB  0CD1               	rrf	___fltol@f1,f
  7870     1FCC  3EFF               	addlw	-1
  7871     1FCD  1D03               	skipz
  7872     1FCE  2FC7               	goto	u5145
  7873     1FCF  3001               	movlw	1
  7874     1FD0  00D5               	movwf	??___fltol
  7875     1FD1  0855               	movf	??___fltol,w
  7876     1FD2  07DA               	addwf	___fltol@exp1,f
  7877     1FD3  1D03               	btfss	3,2
  7878     1FD4  2FD6               	goto	u5151
  7879     1FD5  2FD7               	goto	u5150
  7880     1FD6                     u5151:
  7881     1FD6  2FC6               	goto	l3109
  7882     1FD7                     u5150:
  7883     1FD7  2FEF               	goto	l3119
  7884     1FD8                     l3111:
  7885     1FD8  3020               	movlw	32
  7886     1FD9  025A               	subwf	___fltol@exp1,w
  7887     1FDA  1C03               	skipc
  7888     1FDB  2FDD               	goto	u5161
  7889     1FDC  2FDE               	goto	u5160
  7890     1FDD                     u5161:
  7891     1FDD  2FEA               	goto	l554
  7892     1FDE                     u5160:
  7893     1FDE  2F93               	goto	l3089
  7894     1FDF                     l3117:
  7895     1FDF  3001               	movlw	1
  7896     1FE0  00D5               	movwf	??___fltol
  7897     1FE1                     u5175:
  7898     1FE1  1003               	clrc
  7899     1FE2  0DD1               	rlf	___fltol@f1,f
  7900     1FE3  0DD2               	rlf	___fltol@f1+1,f
  7901     1FE4  0DD3               	rlf	___fltol@f1+2,f
  7902     1FE5  0DD4               	rlf	___fltol@f1+3,f
  7903     1FE6  0BD5               	decfsz	??___fltol,f
  7904     1FE7  2FE1               	goto	u5175
  7905     1FE8  3001               	movlw	1
  7906     1FE9  02DA               	subwf	___fltol@exp1,f
  7907     1FEA                     l554:
  7908     1FEA  085A               	movf	___fltol@exp1,w
  7909     1FEB  1D03               	btfss	3,2
  7910     1FEC  2FEE               	goto	u5181
  7911     1FED  2FEF               	goto	u5180
  7912     1FEE                     u5181:
  7913     1FEE  2FDF               	goto	l3117
  7914     1FEF                     u5180:
  7915     1FEF                     l3119:
  7916     1FEF  0859               	movf	___fltol@sign1,w
  7917     1FF0  1903               	btfsc	3,2
  7918     1FF1  2FF3               	goto	u5191
  7919     1FF2  2FF4               	goto	u5190
  7920     1FF3                     u5191:
  7921     1FF3  2FFF               	goto	l557
  7922     1FF4                     u5190:
  7923     1FF4                     l3121:
  7924     1FF4  09D1               	comf	___fltol@f1,f
  7925     1FF5  09D2               	comf	___fltol@f1+1,f
  7926     1FF6  09D3               	comf	___fltol@f1+2,f
  7927     1FF7  09D4               	comf	___fltol@f1+3,f
  7928     1FF8  0AD1               	incf	___fltol@f1,f
  7929     1FF9  1903               	skipnz
  7930     1FFA  0AD2               	incf	___fltol@f1+1,f
  7931     1FFB  1903               	skipnz
  7932     1FFC  0AD3               	incf	___fltol@f1+2,f
  7933     1FFD  1903               	skipnz
  7934     1FFE  0AD4               	incf	___fltol@f1+3,f
  7935     1FFF                     l557:
  7936     1FFF                     l547:
  7937     1FFF  0008               	return
  7938     2000                     __end_of___fltol:
  7939                           
  7940                           	psect	text18
  7941     1C00                     __ptext18:	
  7942 ;; *************** function ___flsub *****************
  7943 ;; Defined at:
  7944 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  a               4   70[BANK0 ] long 
  7947 ;;  b               4   74[BANK0 ] long 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;		None
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  4   70[BANK0 ] long 
  7952 ;; Registers used:
  7953 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7959 ;;      Params:         0       8       0       0       0
  7960 ;;      Locals:         0       0       0       0       0
  7961 ;;      Temps:          0       0       0       0       0
  7962 ;;      Totals:         0       8       0       0       0
  7963 ;;Total ram usage:        8 bytes
  7964 ;; Hardware stack levels used: 1
  7965 ;; Hardware stack levels required when called: 1
  7966 ;; This function calls:
  7967 ;;		___fladd
  7968 ;; This function is called by:
  7969 ;;		_sprintf
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973     1C00                     ___flsub:	
  7974                           ;psect for function ___flsub
  7975                           
  7976     1C00                     l3143:	
  7977                           ;incstack = 0
  7978                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7979                           
  7980     1C00  3080               	movlw	128
  7981     1C01  1283               	bcf	3,5	;RP0=0, select bank0
  7982     1C02  1303               	bcf	3,6	;RP1=0, select bank0
  7983     1C03  06E9               	xorwf	___flsub@a+3,f
  7984     1C04                     l3145:
  7985     1C04  086D               	movf	___flsub@b+3,w
  7986     1C05  00D5               	movwf	___fladd@b+3
  7987     1C06  086C               	movf	___flsub@b+2,w
  7988     1C07  00D4               	movwf	___fladd@b+2
  7989     1C08  086B               	movf	___flsub@b+1,w
  7990     1C09  00D3               	movwf	___fladd@b+1
  7991     1C0A  086A               	movf	___flsub@b,w
  7992     1C0B  00D2               	movwf	___fladd@b
  7993     1C0C  0869               	movf	___flsub@a+3,w
  7994     1C0D  00D9               	movwf	___fladd@a+3
  7995     1C0E  0868               	movf	___flsub@a+2,w
  7996     1C0F  00D8               	movwf	___fladd@a+2
  7997     1C10  0867               	movf	___flsub@a+1,w
  7998     1C11  00D7               	movwf	___fladd@a+1
  7999     1C12  0866               	movf	___flsub@a,w
  8000     1C13  00D6               	movwf	___fladd@a
  8001     1C14  160A  118A  25A8  160A  158A  	fcall	___fladd
  8002     1C19  1283               	bcf	3,5	;RP0=0, select bank0
  8003     1C1A  1303               	bcf	3,6	;RP1=0, select bank0
  8004     1C1B  0855               	movf	?___fladd+3,w
  8005     1C1C  00E9               	movwf	?___flsub+3
  8006     1C1D  0854               	movf	?___fladd+2,w
  8007     1C1E  00E8               	movwf	?___flsub+2
  8008     1C1F  0853               	movf	?___fladd+1,w
  8009     1C20  00E7               	movwf	?___flsub+1
  8010     1C21  0852               	movf	?___fladd,w
  8011     1C22  00E6               	movwf	?___flsub
  8012     1C23                     l717:
  8013     1C23  0008               	return
  8014     1C24                     __end_of___flsub:
  8015                           
  8016                           	psect	text19
  8017     15A8                     __ptext19:	
  8018 ;; *************** function ___fladd *****************
  8019 ;; Defined at:
  8020 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  b               4   50[BANK0 ] long 
  8023 ;;  a               4   54[BANK0 ] long 
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;  grs             1   69[BANK0 ] unsigned char 
  8026 ;;  bexp            1   68[BANK0 ] unsigned char 
  8027 ;;  aexp            1   67[BANK0 ] unsigned char 
  8028 ;;  signs           1   66[BANK0 ] unsigned char 
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  4   50[BANK0 ] unsigned char 
  8031 ;; Registers used:
  8032 ;;		wreg, status,2, status,0, btemp+1
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8038 ;;      Params:         0       8       0       0       0
  8039 ;;      Locals:         0       4       0       0       0
  8040 ;;      Temps:          0       8       0       0       0
  8041 ;;      Totals:         0      20       0       0       0
  8042 ;;Total ram usage:       20 bytes
  8043 ;; Hardware stack levels used: 1
  8044 ;; This function calls:
  8045 ;;		Nothing
  8046 ;; This function is called by:
  8047 ;;		_sprintf
  8048 ;;		___flsub
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052     15A8                     ___fladd:	
  8053                           ;psect for function ___fladd
  8054                           
  8055     15A8                     l2459:	
  8056                           ;incstack = 0
  8057                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8058                           
  8059     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  8060     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  8061     15AA  0855               	movf	___fladd@b+3,w
  8062     15AB  3980               	andlw	128
  8063     15AC  00E2               	movwf	___fladd@signs
  8064     15AD                     l2461:
  8065     15AD  0855               	movf	___fladd@b+3,w
  8066     15AE  00DA               	movwf	??___fladd
  8067     15AF  075A               	addwf	??___fladd,w
  8068     15B0  00E4               	movwf	___fladd@bexp
  8069     15B1                     l2463:
  8070     15B1  1FD4               	btfss	___fladd@b+2,7
  8071     15B2  2DB4               	goto	u3491
  8072     15B3  2DB5               	goto	u3490
  8073     15B4                     u3491:
  8074     15B4  2DB6               	goto	l2467
  8075     15B5                     u3490:
  8076     15B5                     l2465:
  8077     15B5  1464               	bsf	___fladd@bexp,0
  8078     15B6                     l2467:
  8079     15B6  0864               	movf	___fladd@bexp,w
  8080     15B7  1903               	btfsc	3,2
  8081     15B8  2DBA               	goto	u3501
  8082     15B9  2DBB               	goto	u3500
  8083     15BA                     u3501:
  8084     15BA  2DCB               	goto	l2477
  8085     15BB                     u3500:
  8086     15BB                     l2469:
  8087     15BB  0A64               	incf	___fladd@bexp,w
  8088     15BC  1D03               	btfss	3,2
  8089     15BD  2DBF               	goto	u3511
  8090     15BE  2DC0               	goto	u3510
  8091     15BF                     u3511:
  8092     15BF  2DC8               	goto	l2473
  8093     15C0                     u3510:
  8094     15C0                     l2471:
  8095     15C0  3000               	movlw	0
  8096     15C1  00D5               	movwf	___fladd@b+3
  8097     15C2  3000               	movlw	0
  8098     15C3  00D4               	movwf	___fladd@b+2
  8099     15C4  3000               	movlw	0
  8100     15C5  00D3               	movwf	___fladd@b+1
  8101     15C6  3000               	movlw	0
  8102     15C7  00D2               	movwf	___fladd@b
  8103     15C8                     l2473:
  8104     15C8  17D4               	bsf	___fladd@b+2,7
  8105     15C9                     l2475:
  8106     15C9  01D5               	clrf	___fladd@b+3
  8107     15CA  2DD3               	goto	l2479
  8108     15CB                     l2477:
  8109     15CB  3000               	movlw	0
  8110     15CC  00D5               	movwf	___fladd@b+3
  8111     15CD  3000               	movlw	0
  8112     15CE  00D4               	movwf	___fladd@b+2
  8113     15CF  3000               	movlw	0
  8114     15D0  00D3               	movwf	___fladd@b+1
  8115     15D1  3000               	movlw	0
  8116     15D2  00D2               	movwf	___fladd@b
  8117     15D3                     l2479:
  8118     15D3  0859               	movf	___fladd@a+3,w
  8119     15D4  3980               	andlw	128
  8120     15D5  00E3               	movwf	___fladd@aexp
  8121     15D6                     l2481:
  8122     15D6  0863               	movf	___fladd@aexp,w
  8123     15D7  0662               	xorwf	___fladd@signs,w
  8124     15D8  1903               	skipnz
  8125     15D9  2DDB               	goto	u3521
  8126     15DA  2DDC               	goto	u3520
  8127     15DB                     u3521:
  8128     15DB  2DDD               	goto	l2485
  8129     15DC                     u3520:
  8130     15DC                     l2483:
  8131     15DC  1762               	bsf	___fladd@signs,6
  8132     15DD                     l2485:
  8133     15DD  0859               	movf	___fladd@a+3,w
  8134     15DE  00DA               	movwf	??___fladd
  8135     15DF  075A               	addwf	??___fladd,w
  8136     15E0  00E3               	movwf	___fladd@aexp
  8137     15E1                     l2487:
  8138     15E1  1FD8               	btfss	___fladd@a+2,7
  8139     15E2  2DE4               	goto	u3531
  8140     15E3  2DE5               	goto	u3530
  8141     15E4                     u3531:
  8142     15E4  2DE6               	goto	l2491
  8143     15E5                     u3530:
  8144     15E5                     l2489:
  8145     15E5  1463               	bsf	___fladd@aexp,0
  8146     15E6                     l2491:
  8147     15E6  0863               	movf	___fladd@aexp,w
  8148     15E7  1903               	btfsc	3,2
  8149     15E8  2DEA               	goto	u3541
  8150     15E9  2DEB               	goto	u3540
  8151     15EA                     u3541:
  8152     15EA  2DFB               	goto	l2501
  8153     15EB                     u3540:
  8154     15EB                     l2493:
  8155     15EB  0A63               	incf	___fladd@aexp,w
  8156     15EC  1D03               	btfss	3,2
  8157     15ED  2DEF               	goto	u3551
  8158     15EE  2DF0               	goto	u3550
  8159     15EF                     u3551:
  8160     15EF  2DF8               	goto	l2497
  8161     15F0                     u3550:
  8162     15F0                     l2495:
  8163     15F0  3000               	movlw	0
  8164     15F1  00D9               	movwf	___fladd@a+3
  8165     15F2  3000               	movlw	0
  8166     15F3  00D8               	movwf	___fladd@a+2
  8167     15F4  3000               	movlw	0
  8168     15F5  00D7               	movwf	___fladd@a+1
  8169     15F6  3000               	movlw	0
  8170     15F7  00D6               	movwf	___fladd@a
  8171     15F8                     l2497:
  8172     15F8  17D8               	bsf	___fladd@a+2,7
  8173     15F9                     l2499:
  8174     15F9  01D9               	clrf	___fladd@a+3
  8175     15FA  2E03               	goto	l671
  8176     15FB                     l2501:
  8177     15FB  3000               	movlw	0
  8178     15FC  00D9               	movwf	___fladd@a+3
  8179     15FD  3000               	movlw	0
  8180     15FE  00D8               	movwf	___fladd@a+2
  8181     15FF  3000               	movlw	0
  8182     1600  00D7               	movwf	___fladd@a+1
  8183     1601  3000               	movlw	0
  8184     1602  00D6               	movwf	___fladd@a
  8185     1603                     l671:
  8186     1603  0864               	movf	___fladd@bexp,w
  8187     1604  0263               	subwf	___fladd@aexp,w
  8188     1605  1803               	skipnc
  8189     1606  2E08               	goto	u3561
  8190     1607  2E09               	goto	u3560
  8191     1608                     u3561:
  8192     1608  2E2F               	goto	l2537
  8193     1609                     u3560:
  8194     1609                     l2503:
  8195     1609  1F62               	btfss	___fladd@signs,6
  8196     160A  2E0C               	goto	u3571
  8197     160B  2E0D               	goto	u3570
  8198     160C                     u3571:
  8199     160C  2E11               	goto	l2507
  8200     160D                     u3570:
  8201     160D                     l2505:
  8202     160D  3080               	movlw	128
  8203     160E  00DA               	movwf	??___fladd
  8204     160F  085A               	movf	??___fladd,w
  8205     1610  06E2               	xorwf	___fladd@signs,f
  8206     1611                     l2507:
  8207     1611  0864               	movf	___fladd@bexp,w
  8208     1612  00E5               	movwf	___fladd@grs
  8209     1613                     l2509:
  8210     1613  0863               	movf	___fladd@aexp,w
  8211     1614  00E4               	movwf	___fladd@bexp
  8212     1615                     l2511:
  8213     1615  0865               	movf	___fladd@grs,w
  8214     1616  00E3               	movwf	___fladd@aexp
  8215     1617                     l2513:
  8216     1617  0852               	movf	___fladd@b,w
  8217     1618  00E5               	movwf	___fladd@grs
  8218     1619                     l2515:
  8219     1619  0856               	movf	___fladd@a,w
  8220     161A  00D2               	movwf	___fladd@b
  8221     161B                     l2517:
  8222     161B  0865               	movf	___fladd@grs,w
  8223     161C  00D6               	movwf	___fladd@a
  8224     161D                     l2519:
  8225     161D  0853               	movf	___fladd@b+1,w
  8226     161E  00E5               	movwf	___fladd@grs
  8227     161F                     l2521:
  8228     161F  0857               	movf	___fladd@a+1,w
  8229     1620  00D3               	movwf	___fladd@b+1
  8230     1621                     l2523:
  8231     1621  0865               	movf	___fladd@grs,w
  8232     1622  00D7               	movwf	___fladd@a+1
  8233     1623                     l2525:
  8234     1623  0854               	movf	___fladd@b+2,w
  8235     1624  00E5               	movwf	___fladd@grs
  8236     1625                     l2527:
  8237     1625  0858               	movf	___fladd@a+2,w
  8238     1626  00D4               	movwf	___fladd@b+2
  8239     1627                     l2529:
  8240     1627  0865               	movf	___fladd@grs,w
  8241     1628  00D8               	movwf	___fladd@a+2
  8242     1629                     l2531:
  8243     1629  0855               	movf	___fladd@b+3,w
  8244     162A  00E5               	movwf	___fladd@grs
  8245     162B                     l2533:
  8246     162B  0859               	movf	___fladd@a+3,w
  8247     162C  00D5               	movwf	___fladd@b+3
  8248     162D                     l2535:
  8249     162D  0865               	movf	___fladd@grs,w
  8250     162E  00D9               	movwf	___fladd@a+3
  8251     162F                     l2537:
  8252     162F  01E5               	clrf	___fladd@grs
  8253     1630                     l2539:
  8254     1630  0863               	movf	___fladd@aexp,w
  8255     1631  00DA               	movwf	??___fladd
  8256     1632  01DB               	clrf	??___fladd+1
  8257     1633  085B               	movf	??___fladd+1,w
  8258     1634  00DD               	movwf	??___fladd+3
  8259     1635  0864               	movf	___fladd@bexp,w
  8260     1636  025A               	subwf	??___fladd,w
  8261     1637  00DC               	movwf	??___fladd+2
  8262     1638  1C03               	skipc
  8263     1639  03DD               	decf	??___fladd+3,f
  8264     163A  085D               	movf	??___fladd+3,w
  8265     163B  3A80               	xorlw	128
  8266     163C  00FF               	movwf	btemp+1
  8267     163D  3080               	movlw	128
  8268     163E  027F               	subwf	btemp+1,w
  8269     163F  1D03               	skipz
  8270     1640  2E43               	goto	u3585
  8271     1641  301A               	movlw	26
  8272     1642  025C               	subwf	??___fladd+2,w
  8273     1643                     u3585:
  8274     1643  1C03               	skipc
  8275     1644  2E46               	goto	u3581
  8276     1645  2E47               	goto	u3580
  8277     1646                     u3581:
  8278     1646  2E7E               	goto	l2555
  8279     1647                     u3580:
  8280     1647                     l2541:
  8281     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8282     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8283     1649  0855               	movf	___fladd@b+3,w
  8284     164A  0454               	iorwf	___fladd@b+2,w
  8285     164B  0453               	iorwf	___fladd@b+1,w
  8286     164C  0452               	iorwf	___fladd@b,w
  8287     164D  1D03               	skipz
  8288     164E  2E50               	goto	u3591
  8289     164F  2E52               	goto	u3590
  8290     1650                     u3591:
  8291     1650  3001               	movlw	1
  8292     1651  2E53               	goto	u3600
  8293     1652                     u3590:
  8294     1652  3000               	movlw	0
  8295     1653                     u3600:
  8296     1653  00E5               	movwf	___fladd@grs
  8297     1654  3000               	movlw	0
  8298     1655  00D5               	movwf	___fladd@b+3
  8299     1656  3000               	movlw	0
  8300     1657  00D4               	movwf	___fladd@b+2
  8301     1658  3000               	movlw	0
  8302     1659  00D3               	movwf	___fladd@b+1
  8303     165A  3000               	movlw	0
  8304     165B  00D2               	movwf	___fladd@b
  8305     165C  0863               	movf	___fladd@aexp,w
  8306     165D  00E4               	movwf	___fladd@bexp
  8307     165E  2E86               	goto	l675
  8308     165F                     l677:
  8309     165F  1C65               	btfss	___fladd@grs,0
  8310     1660  2E62               	goto	u3611
  8311     1661  2E63               	goto	u3610
  8312     1662                     u3611:
  8313     1662  2E6A               	goto	l2545
  8314     1663                     u3610:
  8315     1663                     l2543:
  8316     1663  0865               	movf	___fladd@grs,w
  8317     1664  00DA               	movwf	??___fladd
  8318     1665  1003               	clrc
  8319     1666  0C5A               	rrf	??___fladd,w
  8320     1667  3801               	iorlw	1
  8321     1668  00E5               	movwf	___fladd@grs
  8322     1669  2E6C               	goto	l2547
  8323     166A                     l2545:
  8324     166A  1003               	clrc
  8325     166B  0CE5               	rrf	___fladd@grs,f
  8326     166C                     l2547:
  8327     166C  1C52               	btfss	___fladd@b,0
  8328     166D  2E6F               	goto	u3621
  8329     166E  2E70               	goto	u3620
  8330     166F                     u3621:
  8331     166F  2E71               	goto	l2551
  8332     1670                     u3620:
  8333     1670                     l2549:
  8334     1670  17E5               	bsf	___fladd@grs,7
  8335     1671                     l2551:
  8336     1671  3001               	movlw	1
  8337     1672  00DA               	movwf	??___fladd
  8338     1673                     u3635:
  8339     1673  0D55               	rlf	___fladd@b+3,w
  8340     1674  0CD5               	rrf	___fladd@b+3,f
  8341     1675  0CD4               	rrf	___fladd@b+2,f
  8342     1676  0CD3               	rrf	___fladd@b+1,f
  8343     1677  0CD2               	rrf	___fladd@b,f
  8344     1678  0BDA               	decfsz	??___fladd& (0+127),f
  8345     1679  2E73               	goto	u3635
  8346     167A                     l2553:
  8347     167A  3001               	movlw	1
  8348     167B  00DA               	movwf	??___fladd
  8349     167C  085A               	movf	??___fladd,w
  8350     167D  07E4               	addwf	___fladd@bexp,f
  8351     167E                     l2555:
  8352     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8353     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8354     1680  0863               	movf	___fladd@aexp,w
  8355     1681  0264               	subwf	___fladd@bexp,w
  8356     1682  1C03               	skipc
  8357     1683  2E85               	goto	u3641
  8358     1684  2E86               	goto	u3640
  8359     1685                     u3641:
  8360     1685  2E5F               	goto	l677
  8361     1686                     u3640:
  8362     1686                     l675:
  8363     1686  1B62               	btfsc	___fladd@signs,6
  8364     1687  2E89               	goto	u3651
  8365     1688  2E8A               	goto	u3650
  8366     1689                     u3651:
  8367     1689  2ED3               	goto	l2581
  8368     168A                     u3650:
  8369     168A                     l2557:
  8370     168A  0864               	movf	___fladd@bexp,w
  8371     168B  1D03               	btfss	3,2
  8372     168C  2E8E               	goto	u3661
  8373     168D  2E8F               	goto	u3660
  8374     168E                     u3661:
  8375     168E  2E98               	goto	l2563
  8376     168F                     u3660:
  8377     168F                     l2559:
  8378     168F  3000               	movlw	0
  8379     1690  00D5               	movwf	?___fladd+3
  8380     1691  3000               	movlw	0
  8381     1692  00D4               	movwf	?___fladd+2
  8382     1693  3000               	movlw	0
  8383     1694  00D3               	movwf	?___fladd+1
  8384     1695  3000               	movlw	0
  8385     1696  00D2               	movwf	?___fladd
  8386     1697  2FFF               	goto	l684
  8387     1698                     l2563:
  8388     1698  0856               	movf	___fladd@a,w
  8389     1699  07D2               	addwf	___fladd@b,f
  8390     169A  0857               	movf	___fladd@a+1,w
  8391     169B  1103               	clrz
  8392     169C  1803               	skipnc
  8393     169D  3E01               	addlw	1
  8394     169E  1903               	skipnz
  8395     169F  2EA1               	goto	u3671
  8396     16A0  07D3               	addwf	___fladd@b+1,f
  8397     16A1                     u3671:
  8398     16A1  0858               	movf	___fladd@a+2,w
  8399     16A2  1103               	clrz
  8400     16A3  1803               	skipnc
  8401     16A4  3E01               	addlw	1
  8402     16A5  1903               	skipnz
  8403     16A6  2EA8               	goto	u3672
  8404     16A7  07D4               	addwf	___fladd@b+2,f
  8405     16A8                     u3672:
  8406     16A8  0859               	movf	___fladd@a+3,w
  8407     16A9  1103               	clrz
  8408     16AA  1803               	skipnc
  8409     16AB  3E01               	addlw	1
  8410     16AC  1903               	skipnz
  8411     16AD  2EAF               	goto	u3673
  8412     16AE  07D5               	addwf	___fladd@b+3,f
  8413     16AF                     u3673:
  8414     16AF                     l2565:
  8415     16AF  1C55               	btfss	___fladd@b+3,0
  8416     16B0  2EB2               	goto	u3681
  8417     16B1  2EB3               	goto	u3680
  8418     16B2                     u3681:
  8419     16B2  2F87               	goto	l2615
  8420     16B3                     u3680:
  8421     16B3                     l2567:
  8422     16B3  1C65               	btfss	___fladd@grs,0
  8423     16B4  2EB6               	goto	u3691
  8424     16B5  2EB7               	goto	u3690
  8425     16B6                     u3691:
  8426     16B6  2EBE               	goto	l2571
  8427     16B7                     u3690:
  8428     16B7                     l2569:
  8429     16B7  0865               	movf	___fladd@grs,w
  8430     16B8  00DA               	movwf	??___fladd
  8431     16B9  1003               	clrc
  8432     16BA  0C5A               	rrf	??___fladd,w
  8433     16BB  3801               	iorlw	1
  8434     16BC  00E5               	movwf	___fladd@grs
  8435     16BD  2EC0               	goto	l2573
  8436     16BE                     l2571:
  8437     16BE  1003               	clrc
  8438     16BF  0CE5               	rrf	___fladd@grs,f
  8439     16C0                     l2573:
  8440     16C0  1C52               	btfss	___fladd@b,0
  8441     16C1  2EC3               	goto	u3701
  8442     16C2  2EC4               	goto	u3700
  8443     16C3                     u3701:
  8444     16C3  2EC5               	goto	l2577
  8445     16C4                     u3700:
  8446     16C4                     l2575:
  8447     16C4  17E5               	bsf	___fladd@grs,7
  8448     16C5                     l2577:
  8449     16C5  3001               	movlw	1
  8450     16C6  00DA               	movwf	??___fladd
  8451     16C7                     u3715:
  8452     16C7  0D55               	rlf	___fladd@b+3,w
  8453     16C8  0CD5               	rrf	___fladd@b+3,f
  8454     16C9  0CD4               	rrf	___fladd@b+2,f
  8455     16CA  0CD3               	rrf	___fladd@b+1,f
  8456     16CB  0CD2               	rrf	___fladd@b,f
  8457     16CC  0BDA               	decfsz	??___fladd& (0+127),f
  8458     16CD  2EC7               	goto	u3715
  8459     16CE                     l2579:
  8460     16CE  3001               	movlw	1
  8461     16CF  00DA               	movwf	??___fladd
  8462     16D0  085A               	movf	??___fladd,w
  8463     16D1  07E4               	addwf	___fladd@bexp,f
  8464     16D2  2F87               	goto	l2615
  8465     16D3                     l2581:
  8466     16D3  0855               	movf	___fladd@b+3,w
  8467     16D4  3A80               	xorlw	128
  8468     16D5  00FF               	movwf	btemp+1
  8469     16D6  0859               	movf	___fladd@a+3,w
  8470     16D7  3A80               	xorlw	128
  8471     16D8  027F               	subwf	btemp+1,w
  8472     16D9  1D03               	skipz
  8473     16DA  2EE5               	goto	u3723
  8474     16DB  0858               	movf	___fladd@a+2,w
  8475     16DC  0254               	subwf	___fladd@b+2,w
  8476     16DD  1D03               	skipz
  8477     16DE  2EE5               	goto	u3723
  8478     16DF  0857               	movf	___fladd@a+1,w
  8479     16E0  0253               	subwf	___fladd@b+1,w
  8480     16E1  1D03               	skipz
  8481     16E2  2EE5               	goto	u3723
  8482     16E3  0856               	movf	___fladd@a,w
  8483     16E4  0252               	subwf	___fladd@b,w
  8484     16E5                     u3723:
  8485     16E5  1803               	skipnc
  8486     16E6  2EE8               	goto	u3721
  8487     16E7  2EE9               	goto	u3720
  8488     16E8                     u3721:
  8489     16E8  2F41               	goto	l2591
  8490     16E9                     u3720:
  8491     16E9                     l2583:
  8492     16E9  30FF               	movlw	255
  8493     16EA  00DA               	movwf	??___fladd
  8494     16EB  30FF               	movlw	255
  8495     16EC  00DB               	movwf	??___fladd+1
  8496     16ED  30FF               	movlw	255
  8497     16EE  00DC               	movwf	??___fladd+2
  8498     16EF  30FF               	movlw	255
  8499     16F0  00DD               	movwf	??___fladd+3
  8500     16F1  0856               	movf	___fladd@a,w
  8501     16F2  00DE               	movwf	??___fladd+4
  8502     16F3  0857               	movf	___fladd@a+1,w
  8503     16F4  00DF               	movwf	??___fladd+5
  8504     16F5  0858               	movf	___fladd@a+2,w
  8505     16F6  00E0               	movwf	??___fladd+6
  8506     16F7  0859               	movf	___fladd@a+3,w
  8507     16F8  00E1               	movwf	??___fladd+7
  8508     16F9  0852               	movf	___fladd@b,w
  8509     16FA  02DE               	subwf	??___fladd+4,f
  8510     16FB  0853               	movf	___fladd@b+1,w
  8511     16FC  1C03               	skipc
  8512     16FD  0F53               	incfsz	___fladd@b+1,w
  8513     16FE  2F00               	goto	u3731
  8514     16FF  2F01               	goto	u3732
  8515     1700                     u3731:
  8516     1700  02DF               	subwf	??___fladd+5,f
  8517     1701                     u3732:
  8518     1701  0854               	movf	___fladd@b+2,w
  8519     1702  1C03               	skipc
  8520     1703  0F54               	incfsz	___fladd@b+2,w
  8521     1704  2F06               	goto	u3733
  8522     1705  2F07               	goto	u3734
  8523     1706                     u3733:
  8524     1706  02E0               	subwf	??___fladd+6,f
  8525     1707                     u3734:
  8526     1707  0855               	movf	___fladd@b+3,w
  8527     1708  1C03               	skipc
  8528     1709  0F55               	incfsz	___fladd@b+3,w
  8529     170A  2F0C               	goto	u3735
  8530     170B  2F0D               	goto	u3736
  8531     170C                     u3735:
  8532     170C  02E1               	subwf	??___fladd+7,f
  8533     170D                     u3736:
  8534     170D  085E               	movf	??___fladd+4,w
  8535     170E  07DA               	addwf	??___fladd,f
  8536     170F  085F               	movf	??___fladd+5,w
  8537     1710  1803               	skipnc
  8538     1711  0F5F               	incfsz	??___fladd+5,w
  8539     1712  2F14               	goto	u3740
  8540     1713  2F15               	goto	u3741
  8541     1714                     u3740:
  8542     1714  07DB               	addwf	??___fladd+1,f
  8543     1715                     u3741:
  8544     1715  0860               	movf	??___fladd+6,w
  8545     1716  1803               	skipnc
  8546     1717  0F60               	incfsz	??___fladd+6,w
  8547     1718  2F1A               	goto	u3742
  8548     1719  2F1B               	goto	u3743
  8549     171A                     u3742:
  8550     171A  07DC               	addwf	??___fladd+2,f
  8551     171B                     u3743:
  8552     171B  0861               	movf	??___fladd+7,w
  8553     171C  1803               	skipnc
  8554     171D  0A61               	incf	??___fladd+7,w
  8555     171E  07DD               	addwf	??___fladd+3,f
  8556     171F  085D               	movf	??___fladd+3,w
  8557     1720  00D5               	movwf	___fladd@b+3
  8558     1721  085C               	movf	??___fladd+2,w
  8559     1722  00D4               	movwf	___fladd@b+2
  8560     1723  085B               	movf	??___fladd+1,w
  8561     1724  00D3               	movwf	___fladd@b+1
  8562     1725  085A               	movf	??___fladd,w
  8563     1726  00D2               	movwf	___fladd@b
  8564     1727                     l2585:
  8565     1727  3080               	movlw	128
  8566     1728  00DA               	movwf	??___fladd
  8567     1729  085A               	movf	??___fladd,w
  8568     172A  06E2               	xorwf	___fladd@signs,f
  8569     172B  09E5               	comf	___fladd@grs,f
  8570     172C  0AE5               	incf	___fladd@grs,f
  8571     172D                     l2587:
  8572     172D  0865               	movf	___fladd@grs,w
  8573     172E  1D03               	btfss	3,2
  8574     172F  2F31               	goto	u3751
  8575     1730  2F32               	goto	u3750
  8576     1731                     u3751:
  8577     1731  2F4F               	goto	l692
  8578     1732                     u3750:
  8579     1732                     l2589:
  8580     1732  3001               	movlw	1
  8581     1733  07D2               	addwf	___fladd@b,f
  8582     1734  3000               	movlw	0
  8583     1735  1803               	skipnc
  8584     1736  3001               	movlw	1
  8585     1737  07D3               	addwf	___fladd@b+1,f
  8586     1738  3000               	movlw	0
  8587     1739  1803               	skipnc
  8588     173A  3001               	movlw	1
  8589     173B  07D4               	addwf	___fladd@b+2,f
  8590     173C  3000               	movlw	0
  8591     173D  1803               	skipnc
  8592     173E  3001               	movlw	1
  8593     173F  07D5               	addwf	___fladd@b+3,f
  8594     1740  2F4F               	goto	l692
  8595     1741                     l2591:
  8596     1741  0856               	movf	___fladd@a,w
  8597     1742  02D2               	subwf	___fladd@b,f
  8598     1743  0857               	movf	___fladd@a+1,w
  8599     1744  1C03               	skipc
  8600     1745  0F57               	incfsz	___fladd@a+1,w
  8601     1746  02D3               	subwf	___fladd@b+1,f
  8602     1747  0858               	movf	___fladd@a+2,w
  8603     1748  1C03               	skipc
  8604     1749  0F58               	incfsz	___fladd@a+2,w
  8605     174A  02D4               	subwf	___fladd@b+2,f
  8606     174B  0859               	movf	___fladd@a+3,w
  8607     174C  1C03               	skipc
  8608     174D  0F59               	incfsz	___fladd@a+3,w
  8609     174E  02D5               	subwf	___fladd@b+3,f
  8610     174F                     l692:
  8611     174F  0855               	movf	___fladd@b+3,w
  8612     1750  0454               	iorwf	___fladd@b+2,w
  8613     1751  0453               	iorwf	___fladd@b+1,w
  8614     1752  0452               	iorwf	___fladd@b,w
  8615     1753  1D03               	skipz
  8616     1754  2F56               	goto	u3761
  8617     1755  2F57               	goto	u3760
  8618     1756                     u3761:
  8619     1756  2F83               	goto	l2613
  8620     1757                     u3760:
  8621     1757                     l2593:
  8622     1757  0865               	movf	___fladd@grs,w
  8623     1758  1D03               	btfss	3,2
  8624     1759  2F5B               	goto	u3771
  8625     175A  2F5C               	goto	u3770
  8626     175B                     u3771:
  8627     175B  2F83               	goto	l2613
  8628     175C                     u3770:
  8629     175C                     l2595:
  8630     175C  3000               	movlw	0
  8631     175D  00D5               	movwf	?___fladd+3
  8632     175E  3000               	movlw	0
  8633     175F  00D4               	movwf	?___fladd+2
  8634     1760  3000               	movlw	0
  8635     1761  00D3               	movwf	?___fladd+1
  8636     1762  3000               	movlw	0
  8637     1763  00D2               	movwf	?___fladd
  8638     1764  2FFF               	goto	l684
  8639     1765                     l2599:
  8640     1765  3001               	movlw	1
  8641     1766  00DA               	movwf	??___fladd
  8642     1767                     u3785:
  8643     1767  1003               	clrc
  8644     1768  0DD2               	rlf	___fladd@b,f
  8645     1769  0DD3               	rlf	___fladd@b+1,f
  8646     176A  0DD4               	rlf	___fladd@b+2,f
  8647     176B  0DD5               	rlf	___fladd@b+3,f
  8648     176C  0BDA               	decfsz	??___fladd,f
  8649     176D  2F67               	goto	u3785
  8650     176E                     l2601:
  8651     176E  1FE5               	btfss	___fladd@grs,7
  8652     176F  2F71               	goto	u3791
  8653     1770  2F72               	goto	u3790
  8654     1771                     u3791:
  8655     1771  2F73               	goto	l696
  8656     1772                     u3790:
  8657     1772                     l2603:
  8658     1772  1452               	bsf	___fladd@b,0
  8659     1773                     l696:
  8660     1773  1C65               	btfss	___fladd@grs,0
  8661     1774  2F76               	goto	u3801
  8662     1775  2F77               	goto	u3800
  8663     1776                     u3801:
  8664     1776  2F7A               	goto	l2607
  8665     1777                     u3800:
  8666     1777                     l2605:
  8667     1777  1403               	setc
  8668     1778  0DE5               	rlf	___fladd@grs,f
  8669     1779  2F7C               	goto	l2609
  8670     177A                     l2607:
  8671     177A  1003               	clrc
  8672     177B  0DE5               	rlf	___fladd@grs,f
  8673     177C                     l2609:
  8674     177C  0864               	movf	___fladd@bexp,w
  8675     177D  1903               	btfsc	3,2
  8676     177E  2F80               	goto	u3811
  8677     177F  2F81               	goto	u3810
  8678     1780                     u3811:
  8679     1780  2F83               	goto	l2613
  8680     1781                     u3810:
  8681     1781                     l2611:
  8682     1781  3001               	movlw	1
  8683     1782  02E4               	subwf	___fladd@bexp,f
  8684     1783                     l2613:
  8685     1783  1FD4               	btfss	___fladd@b+2,7
  8686     1784  2F86               	goto	u3821
  8687     1785  2F87               	goto	u3820
  8688     1786                     u3821:
  8689     1786  2F65               	goto	l2599
  8690     1787                     u3820:
  8691     1787                     l2615:
  8692     1787  01E3               	clrf	___fladd@aexp
  8693     1788                     l2617:
  8694     1788  1FE5               	btfss	___fladd@grs,7
  8695     1789  2F8B               	goto	u3831
  8696     178A  2F8C               	goto	u3830
  8697     178B                     u3831:
  8698     178B  2F9A               	goto	l2625
  8699     178C                     u3830:
  8700     178C                     l2619:
  8701     178C  0865               	movf	___fladd@grs,w
  8702     178D  397F               	andlw	127
  8703     178E  1903               	btfsc	3,2
  8704     178F  2F91               	goto	u3841
  8705     1790  2F92               	goto	u3840
  8706     1791                     u3841:
  8707     1791  2F95               	goto	l702
  8708     1792                     u3840:
  8709     1792                     l2621:
  8710     1792  01E3               	clrf	___fladd@aexp
  8711     1793  0AE3               	incf	___fladd@aexp,f
  8712     1794  2F9A               	goto	l2625
  8713     1795                     l702:
  8714     1795  1C52               	btfss	___fladd@b,0
  8715     1796  2F98               	goto	u3851
  8716     1797  2F99               	goto	u3850
  8717     1798                     u3851:
  8718     1798  2F9A               	goto	l2625
  8719     1799                     u3850:
  8720     1799  2F92               	goto	l2621
  8721     179A                     l2625:
  8722     179A  0863               	movf	___fladd@aexp,w
  8723     179B  1903               	btfsc	3,2
  8724     179C  2F9E               	goto	u3861
  8725     179D  2F9F               	goto	u3860
  8726     179E                     u3861:
  8727     179E  2FD3               	goto	l705
  8728     179F                     u3860:
  8729     179F                     l2627:
  8730     179F  3001               	movlw	1
  8731     17A0  07D2               	addwf	___fladd@b,f
  8732     17A1  3000               	movlw	0
  8733     17A2  1803               	skipnc
  8734     17A3  3001               	movlw	1
  8735     17A4  07D3               	addwf	___fladd@b+1,f
  8736     17A5  3000               	movlw	0
  8737     17A6  1803               	skipnc
  8738     17A7  3001               	movlw	1
  8739     17A8  07D4               	addwf	___fladd@b+2,f
  8740     17A9  3000               	movlw	0
  8741     17AA  1803               	skipnc
  8742     17AB  3001               	movlw	1
  8743     17AC  07D5               	addwf	___fladd@b+3,f
  8744     17AD                     l2629:
  8745     17AD  1C55               	btfss	___fladd@b+3,0
  8746     17AE  2FB0               	goto	u3871
  8747     17AF  2FB1               	goto	u3870
  8748     17B0                     u3871:
  8749     17B0  2FD3               	goto	l705
  8750     17B1                     u3870:
  8751     17B1                     l2631:
  8752     17B1  0852               	movf	___fladd@b,w
  8753     17B2  00DA               	movwf	??___fladd
  8754     17B3  0853               	movf	___fladd@b+1,w
  8755     17B4  00DB               	movwf	??___fladd+1
  8756     17B5  0854               	movf	___fladd@b+2,w
  8757     17B6  00DC               	movwf	??___fladd+2
  8758     17B7  0855               	movf	___fladd@b+3,w
  8759     17B8  00DD               	movwf	??___fladd+3
  8760     17B9  3001               	movlw	1
  8761     17BA  00DE               	movwf	??___fladd+4
  8762     17BB                     u3885:
  8763     17BB  0D5D               	rlf	??___fladd+3,w
  8764     17BC  0CDD               	rrf	??___fladd+3,f
  8765     17BD  0CDC               	rrf	??___fladd+2,f
  8766     17BE  0CDB               	rrf	??___fladd+1,f
  8767     17BF  0CDA               	rrf	??___fladd,f
  8768     17C0                     u3880:
  8769     17C0  0BDE               	decfsz	??___fladd+4,f
  8770     17C1  2FBB               	goto	u3885
  8771     17C2  085D               	movf	??___fladd+3,w
  8772     17C3  00D5               	movwf	___fladd@b+3
  8773     17C4  085C               	movf	??___fladd+2,w
  8774     17C5  00D4               	movwf	___fladd@b+2
  8775     17C6  085B               	movf	??___fladd+1,w
  8776     17C7  00D3               	movwf	___fladd@b+1
  8777     17C8  085A               	movf	??___fladd,w
  8778     17C9  00D2               	movwf	___fladd@b
  8779     17CA  0A64               	incf	___fladd@bexp,w
  8780     17CB  1903               	btfsc	3,2
  8781     17CC  2FCE               	goto	u3891
  8782     17CD  2FCF               	goto	u3890
  8783     17CE                     u3891:
  8784     17CE  2FD3               	goto	l705
  8785     17CF                     u3890:
  8786     17CF                     l2633:
  8787     17CF  3001               	movlw	1
  8788     17D0  00DA               	movwf	??___fladd
  8789     17D1  085A               	movf	??___fladd,w
  8790     17D2  07E4               	addwf	___fladd@bexp,f
  8791     17D3                     l705:
  8792     17D3  0A64               	incf	___fladd@bexp,w
  8793     17D4  1903               	btfsc	3,2
  8794     17D5  2FD7               	goto	u3901
  8795     17D6  2FD8               	goto	u3900
  8796     17D7                     u3901:
  8797     17D7  2FDD               	goto	l2637
  8798     17D8                     u3900:
  8799     17D8                     l2635:
  8800     17D8  0864               	movf	___fladd@bexp,w
  8801     17D9  1D03               	btfss	3,2
  8802     17DA  2FDC               	goto	u3911
  8803     17DB  2FDD               	goto	u3910
  8804     17DC                     u3911:
  8805     17DC  2FEB               	goto	l2643
  8806     17DD                     u3910:
  8807     17DD                     l2637:
  8808     17DD  3000               	movlw	0
  8809     17DE  00D5               	movwf	___fladd@b+3
  8810     17DF  3000               	movlw	0
  8811     17E0  00D4               	movwf	___fladd@b+2
  8812     17E1  3000               	movlw	0
  8813     17E2  00D3               	movwf	___fladd@b+1
  8814     17E3  3000               	movlw	0
  8815     17E4  00D2               	movwf	___fladd@b
  8816     17E5                     l2639:
  8817     17E5  0864               	movf	___fladd@bexp,w
  8818     17E6  1D03               	btfss	3,2
  8819     17E7  2FE9               	goto	u3921
  8820     17E8  2FEA               	goto	u3920
  8821     17E9                     u3921:
  8822     17E9  2FEB               	goto	l2643
  8823     17EA                     u3920:
  8824     17EA                     l2641:
  8825     17EA  01E2               	clrf	___fladd@signs
  8826     17EB                     l2643:
  8827     17EB  1C64               	btfss	___fladd@bexp,0
  8828     17EC  2FEE               	goto	u3931
  8829     17ED  2FEF               	goto	u3930
  8830     17EE                     u3931:
  8831     17EE  2FF1               	goto	l2647
  8832     17EF                     u3930:
  8833     17EF                     l2645:
  8834     17EF  17D4               	bsf	___fladd@b+2,7
  8835     17F0  2FF5               	goto	l713
  8836     17F1                     l2647:
  8837     17F1  307F               	movlw	127
  8838     17F2  00DA               	movwf	??___fladd
  8839     17F3  085A               	movf	??___fladd,w
  8840     17F4  05D4               	andwf	___fladd@b+2,f
  8841     17F5                     l713:
  8842     17F5  0864               	movf	___fladd@bexp,w
  8843     17F6  00DA               	movwf	??___fladd
  8844     17F7  1003               	clrc
  8845     17F8  0C5A               	rrf	??___fladd,w
  8846     17F9  00D5               	movwf	___fladd@b+3
  8847     17FA                     l2649:
  8848     17FA  1FE2               	btfss	___fladd@signs,7
  8849     17FB  2FFD               	goto	u3941
  8850     17FC  2FFE               	goto	u3940
  8851     17FD                     u3941:
  8852     17FD  2FFF               	goto	l714
  8853     17FE                     u3940:
  8854     17FE                     l2651:
  8855     17FE  17D5               	bsf	___fladd@b+3,7
  8856     17FF                     l714:
  8857     17FF                     l684:
  8858     17FF  0008               	return
  8859     1800                     __end_of___fladd:
  8860                           
  8861                           	psect	text20
  8862     1B62                     __ptext20:	
  8863 ;; *************** function ___flneg *****************
  8864 ;; Defined at:
  8865 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  f1              4    0[COMMON] unsigned char 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;		None
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  4    0[COMMON] unsigned char 
  8872 ;; Registers used:
  8873 ;;		wreg
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8879 ;;      Params:         4       0       0       0       0
  8880 ;;      Locals:         0       0       0       0       0
  8881 ;;      Temps:          0       0       0       0       0
  8882 ;;      Totals:         4       0       0       0       0
  8883 ;;Total ram usage:        4 bytes
  8884 ;; Hardware stack levels used: 1
  8885 ;; This function calls:
  8886 ;;		Nothing
  8887 ;; This function is called by:
  8888 ;;		_sprintf
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892     1B62                     ___flneg:	
  8893                           ;psect for function ___flneg
  8894                           
  8895     1B62                     l3079:	
  8896                           ;incstack = 0
  8897                           ; Regs used in ___flneg: [wreg]
  8898                           
  8899     1B62  0873               	movf	___flneg@f1+3,w
  8900     1B63  0472               	iorwf	___flneg@f1+2,w
  8901     1B64  0471               	iorwf	___flneg@f1+1,w
  8902     1B65  0470               	iorwf	___flneg@f1,w
  8903     1B66  1903               	skipnz
  8904     1B67  2B69               	goto	u5091
  8905     1B68  2B6A               	goto	u5090
  8906     1B69                     u5091:
  8907     1B69  2B6C               	goto	l3083
  8908     1B6A                     u5090:
  8909     1B6A                     l3081:
  8910     1B6A  3080               	movlw	128
  8911     1B6B  06F3               	xorwf	___flneg@f1+3,f
  8912     1B6C                     l3083:
  8913     1B6C                     l543:
  8914     1B6C  0008               	return
  8915     1B6D                     __end_of___flneg:
  8916                           
  8917                           	psect	text21
  8918     0802                     __ptext21:	
  8919 ;; *************** function ___flge *****************
  8920 ;; Defined at:
  8921 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;  ff1             4    0[COMMON] unsigned char 
  8924 ;;  ff2             4    4[COMMON] unsigned char 
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;		None
  8927 ;; Return value:  Size  Location     Type
  8928 ;;		None               void
  8929 ;; Registers used:
  8930 ;;		wreg, status,2, status,0
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/0
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8936 ;;      Params:         8       0       0       0       0
  8937 ;;      Locals:         0       0       0       0       0
  8938 ;;      Temps:          4       0       0       0       0
  8939 ;;      Totals:        12       0       0       0       0
  8940 ;;Total ram usage:       12 bytes
  8941 ;; Hardware stack levels used: 1
  8942 ;; This function calls:
  8943 ;;		Nothing
  8944 ;; This function is called by:
  8945 ;;		_sprintf
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949     0802                     ___flge:	
  8950                           ;psect for function ___flge
  8951                           
  8952     0802                     l3059:	
  8953                           ;incstack = 0
  8954                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8955                           
  8956     0802  3000               	movlw	0
  8957     0803  0570               	andwf	___flge@ff1,w
  8958     0804  00F8               	movwf	??___flge
  8959     0805  3000               	movlw	0
  8960     0806  0571               	andwf	___flge@ff1+1,w
  8961     0807  00F9               	movwf	??___flge+1
  8962     0808  3080               	movlw	128
  8963     0809  0572               	andwf	___flge@ff1+2,w
  8964     080A  00FA               	movwf	??___flge+2
  8965     080B  307F               	movlw	127
  8966     080C  0573               	andwf	___flge@ff1+3,w
  8967     080D  00FB               	movwf	??___flge+3
  8968     080E  087B               	movf	??___flge+3,w
  8969     080F  047A               	iorwf	??___flge+2,w
  8970     0810  0479               	iorwf	??___flge+1,w
  8971     0811  0478               	iorwf	??___flge,w
  8972     0812  1D03               	skipz
  8973     0813  2815               	goto	u5021
  8974     0814  2816               	goto	u5020
  8975     0815                     u5021:
  8976     0815  281E               	goto	l535
  8977     0816                     u5020:
  8978     0816                     l3061:
  8979     0816  3000               	movlw	0
  8980     0817  00F3               	movwf	___flge@ff1+3
  8981     0818  3000               	movlw	0
  8982     0819  00F2               	movwf	___flge@ff1+2
  8983     081A  3000               	movlw	0
  8984     081B  00F1               	movwf	___flge@ff1+1
  8985     081C  3000               	movlw	0
  8986     081D  00F0               	movwf	___flge@ff1
  8987     081E                     l535:
  8988     081E  3000               	movlw	0
  8989     081F  0574               	andwf	___flge@ff2,w
  8990     0820  00F8               	movwf	??___flge
  8991     0821  3000               	movlw	0
  8992     0822  0575               	andwf	___flge@ff2+1,w
  8993     0823  00F9               	movwf	??___flge+1
  8994     0824  3080               	movlw	128
  8995     0825  0576               	andwf	___flge@ff2+2,w
  8996     0826  00FA               	movwf	??___flge+2
  8997     0827  307F               	movlw	127
  8998     0828  0577               	andwf	___flge@ff2+3,w
  8999     0829  00FB               	movwf	??___flge+3
  9000     082A  087B               	movf	??___flge+3,w
  9001     082B  047A               	iorwf	??___flge+2,w
  9002     082C  0479               	iorwf	??___flge+1,w
  9003     082D  0478               	iorwf	??___flge,w
  9004     082E  1D03               	skipz
  9005     082F  2831               	goto	u5031
  9006     0830  2832               	goto	u5030
  9007     0831                     u5031:
  9008     0831  283A               	goto	l3065
  9009     0832                     u5030:
  9010     0832                     l3063:
  9011     0832  3000               	movlw	0
  9012     0833  00F7               	movwf	___flge@ff2+3
  9013     0834  3000               	movlw	0
  9014     0835  00F6               	movwf	___flge@ff2+2
  9015     0836  3000               	movlw	0
  9016     0837  00F5               	movwf	___flge@ff2+1
  9017     0838  3000               	movlw	0
  9018     0839  00F4               	movwf	___flge@ff2
  9019     083A                     l3065:
  9020     083A  1FF3               	btfss	___flge@ff1+3,7
  9021     083B  283D               	goto	u5041
  9022     083C  283E               	goto	u5040
  9023     083D                     u5041:
  9024     083D  2862               	goto	l3069
  9025     083E                     u5040:
  9026     083E                     l3067:
  9027     083E  3000               	movlw	0
  9028     083F  00F8               	movwf	??___flge
  9029     0840  3000               	movlw	0
  9030     0841  00F9               	movwf	??___flge+1
  9031     0842  3000               	movlw	0
  9032     0843  00FA               	movwf	??___flge+2
  9033     0844  3080               	movlw	128
  9034     0845  00FB               	movwf	??___flge+3
  9035     0846  0870               	movf	___flge@ff1,w
  9036     0847  02F8               	subwf	??___flge,f
  9037     0848  0871               	movf	___flge@ff1+1,w
  9038     0849  1C03               	skipc
  9039     084A  0F71               	incfsz	___flge@ff1+1,w
  9040     084B  284D               	goto	u5051
  9041     084C  284E               	goto	u5052
  9042     084D                     u5051:
  9043     084D  02F9               	subwf	??___flge+1,f
  9044     084E                     u5052:
  9045     084E  0872               	movf	___flge@ff1+2,w
  9046     084F  1C03               	skipc
  9047     0850  0F72               	incfsz	___flge@ff1+2,w
  9048     0851  2853               	goto	u5053
  9049     0852  2854               	goto	u5054
  9050     0853                     u5053:
  9051     0853  02FA               	subwf	??___flge+2,f
  9052     0854                     u5054:
  9053     0854  0873               	movf	___flge@ff1+3,w
  9054     0855  1C03               	skipc
  9055     0856  0F73               	incfsz	___flge@ff1+3,w
  9056     0857  2859               	goto	u5055
  9057     0858  285A               	goto	u5056
  9058     0859                     u5055:
  9059     0859  02FB               	subwf	??___flge+3,f
  9060     085A                     u5056:
  9061     085A  087B               	movf	??___flge+3,w
  9062     085B  00F3               	movwf	___flge@ff1+3
  9063     085C  087A               	movf	??___flge+2,w
  9064     085D  00F2               	movwf	___flge@ff1+2
  9065     085E  0879               	movf	??___flge+1,w
  9066     085F  00F1               	movwf	___flge@ff1+1
  9067     0860  0878               	movf	??___flge,w
  9068     0861  00F0               	movwf	___flge@ff1
  9069     0862                     l3069:
  9070     0862  1FF7               	btfss	___flge@ff2+3,7
  9071     0863  2865               	goto	u5061
  9072     0864  2866               	goto	u5060
  9073     0865                     u5061:
  9074     0865  288A               	goto	l538
  9075     0866                     u5060:
  9076     0866                     l3071:
  9077     0866  3000               	movlw	0
  9078     0867  00F8               	movwf	??___flge
  9079     0868  3000               	movlw	0
  9080     0869  00F9               	movwf	??___flge+1
  9081     086A  3000               	movlw	0
  9082     086B  00FA               	movwf	??___flge+2
  9083     086C  3080               	movlw	128
  9084     086D  00FB               	movwf	??___flge+3
  9085     086E  0874               	movf	___flge@ff2,w
  9086     086F  02F8               	subwf	??___flge,f
  9087     0870  0875               	movf	___flge@ff2+1,w
  9088     0871  1C03               	skipc
  9089     0872  0F75               	incfsz	___flge@ff2+1,w
  9090     0873  2875               	goto	u5071
  9091     0874  2876               	goto	u5072
  9092     0875                     u5071:
  9093     0875  02F9               	subwf	??___flge+1,f
  9094     0876                     u5072:
  9095     0876  0876               	movf	___flge@ff2+2,w
  9096     0877  1C03               	skipc
  9097     0878  0F76               	incfsz	___flge@ff2+2,w
  9098     0879  287B               	goto	u5073
  9099     087A  287C               	goto	u5074
  9100     087B                     u5073:
  9101     087B  02FA               	subwf	??___flge+2,f
  9102     087C                     u5074:
  9103     087C  0877               	movf	___flge@ff2+3,w
  9104     087D  1C03               	skipc
  9105     087E  0F77               	incfsz	___flge@ff2+3,w
  9106     087F  2881               	goto	u5075
  9107     0880  2882               	goto	u5076
  9108     0881                     u5075:
  9109     0881  02FB               	subwf	??___flge+3,f
  9110     0882                     u5076:
  9111     0882  087B               	movf	??___flge+3,w
  9112     0883  00F7               	movwf	___flge@ff2+3
  9113     0884  087A               	movf	??___flge+2,w
  9114     0885  00F6               	movwf	___flge@ff2+2
  9115     0886  0879               	movf	??___flge+1,w
  9116     0887  00F5               	movwf	___flge@ff2+1
  9117     0888  0878               	movf	??___flge,w
  9118     0889  00F4               	movwf	___flge@ff2
  9119     088A                     l538:
  9120     088A  3080               	movlw	128
  9121     088B  06F3               	xorwf	___flge@ff1+3,f
  9122     088C  3080               	movlw	128
  9123     088D  06F7               	xorwf	___flge@ff2+3,f
  9124     088E  0877               	movf	___flge@ff2+3,w
  9125     088F  0273               	subwf	___flge@ff1+3,w
  9126     0890  1D03               	skipz
  9127     0891  289C               	goto	u5085
  9128     0892  0876               	movf	___flge@ff2+2,w
  9129     0893  0272               	subwf	___flge@ff1+2,w
  9130     0894  1D03               	skipz
  9131     0895  289C               	goto	u5085
  9132     0896  0875               	movf	___flge@ff2+1,w
  9133     0897  0271               	subwf	___flge@ff1+1,w
  9134     0898  1D03               	skipz
  9135     0899  289C               	goto	u5085
  9136     089A  0874               	movf	___flge@ff2,w
  9137     089B  0270               	subwf	___flge@ff1,w
  9138     089C                     u5085:
  9139     089C  1803               	skipnc
  9140     089D  289F               	goto	u5081
  9141     089E  28A0               	goto	u5080
  9142     089F                     u5081:
  9143     089F  28A2               	goto	l3075
  9144     08A0                     u5080:
  9145     08A0                     l3073:
  9146     08A0  1003               	clrc
  9147     08A1  28A3               	goto	l539
  9148     08A2                     l3075:
  9149     08A2  1403               	setc
  9150     08A3                     l539:
  9151     08A3  0008               	return
  9152     08A4                     __end_of___flge:
  9153                           
  9154                           	psect	text22
  9155     0003                     __ptext22:	
  9156 ;; *************** function ___fleq *****************
  9157 ;; Defined at:
  9158 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;  ff1             4    0[COMMON] unsigned char 
  9161 ;;  ff2             4    4[COMMON] unsigned char 
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;		None               void
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, status,0
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9173 ;;      Params:         8       0       0       0       0
  9174 ;;      Locals:         0       0       0       0       0
  9175 ;;      Temps:          4       0       0       0       0
  9176 ;;      Totals:        12       0       0       0       0
  9177 ;;Total ram usage:       12 bytes
  9178 ;; Hardware stack levels used: 1
  9179 ;; This function calls:
  9180 ;;		Nothing
  9181 ;; This function is called by:
  9182 ;;		_sprintf
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186     0003                     ___fleq:	
  9187                           ;psect for function ___fleq
  9188                           
  9189     0003                     l3047:	
  9190                           ;incstack = 0
  9191                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9192                           
  9193     0003  3000               	movlw	0
  9194     0004  0570               	andwf	___fleq@ff1,w
  9195     0005  00F8               	movwf	??___fleq
  9196     0006  3000               	movlw	0
  9197     0007  0571               	andwf	___fleq@ff1+1,w
  9198     0008  00F9               	movwf	??___fleq+1
  9199     0009  3080               	movlw	128
  9200     000A  0572               	andwf	___fleq@ff1+2,w
  9201     000B  00FA               	movwf	??___fleq+2
  9202     000C  307F               	movlw	127
  9203     000D  0573               	andwf	___fleq@ff1+3,w
  9204     000E  00FB               	movwf	??___fleq+3
  9205     000F  087B               	movf	??___fleq+3,w
  9206     0010  047A               	iorwf	??___fleq+2,w
  9207     0011  0479               	iorwf	??___fleq+1,w
  9208     0012  0478               	iorwf	??___fleq,w
  9209     0013  1D03               	skipz
  9210     0014  2816               	goto	u4991
  9211     0015  2817               	goto	u4990
  9212     0016                     u4991:
  9213     0016  281F               	goto	l530
  9214     0017                     u4990:
  9215     0017                     l3049:
  9216     0017  3000               	movlw	0
  9217     0018  00F3               	movwf	___fleq@ff1+3
  9218     0019  3000               	movlw	0
  9219     001A  00F2               	movwf	___fleq@ff1+2
  9220     001B  3000               	movlw	0
  9221     001C  00F1               	movwf	___fleq@ff1+1
  9222     001D  3000               	movlw	0
  9223     001E  00F0               	movwf	___fleq@ff1
  9224     001F                     l530:
  9225     001F  3000               	movlw	0
  9226     0020  0574               	andwf	___fleq@ff2,w
  9227     0021  00F8               	movwf	??___fleq
  9228     0022  3000               	movlw	0
  9229     0023  0575               	andwf	___fleq@ff2+1,w
  9230     0024  00F9               	movwf	??___fleq+1
  9231     0025  3080               	movlw	128
  9232     0026  0576               	andwf	___fleq@ff2+2,w
  9233     0027  00FA               	movwf	??___fleq+2
  9234     0028  307F               	movlw	127
  9235     0029  0577               	andwf	___fleq@ff2+3,w
  9236     002A  00FB               	movwf	??___fleq+3
  9237     002B  087B               	movf	??___fleq+3,w
  9238     002C  047A               	iorwf	??___fleq+2,w
  9239     002D  0479               	iorwf	??___fleq+1,w
  9240     002E  0478               	iorwf	??___fleq,w
  9241     002F  1D03               	skipz
  9242     0030  2832               	goto	u5001
  9243     0031  2833               	goto	u5000
  9244     0032                     u5001:
  9245     0032  283B               	goto	l531
  9246     0033                     u5000:
  9247     0033                     l3051:
  9248     0033  3000               	movlw	0
  9249     0034  00F7               	movwf	___fleq@ff2+3
  9250     0035  3000               	movlw	0
  9251     0036  00F6               	movwf	___fleq@ff2+2
  9252     0037  3000               	movlw	0
  9253     0038  00F5               	movwf	___fleq@ff2+1
  9254     0039  3000               	movlw	0
  9255     003A  00F4               	movwf	___fleq@ff2
  9256     003B                     l531:
  9257     003B  0877               	movf	___fleq@ff2+3,w
  9258     003C  0673               	xorwf	___fleq@ff1+3,w
  9259     003D  1D03               	skipz
  9260     003E  2849               	goto	u5015
  9261     003F  0876               	movf	___fleq@ff2+2,w
  9262     0040  0672               	xorwf	___fleq@ff1+2,w
  9263     0041  1D03               	skipz
  9264     0042  2849               	goto	u5015
  9265     0043  0875               	movf	___fleq@ff2+1,w
  9266     0044  0671               	xorwf	___fleq@ff1+1,w
  9267     0045  1D03               	skipz
  9268     0046  2849               	goto	u5015
  9269     0047  0874               	movf	___fleq@ff2,w
  9270     0048  0670               	xorwf	___fleq@ff1,w
  9271     0049                     u5015:
  9272     0049  1903               	skipnz
  9273     004A  284C               	goto	u5011
  9274     004B  284D               	goto	u5010
  9275     004C                     u5011:
  9276     004C  284F               	goto	l3055
  9277     004D                     u5010:
  9278     004D                     l3053:
  9279     004D  1003               	clrc
  9280     004E  2850               	goto	l532
  9281     004F                     l3055:
  9282     004F  1403               	setc
  9283     0050                     l532:
  9284     0050  0008               	return
  9285     0051                     __end_of___fleq:
  9286                           
  9287                           	psect	text23
  9288     1B4C                     __ptext23:	
  9289 ;; *************** function _spiWrite *****************
  9290 ;; Defined at:
  9291 ;;		line 34 in file "SPI.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  dat             1    wreg     unsigned char 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  dat             1    0[COMMON] unsigned char 
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		wreg
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9305 ;;      Params:         0       0       0       0       0
  9306 ;;      Locals:         1       0       0       0       0
  9307 ;;      Temps:          0       0       0       0       0
  9308 ;;      Totals:         1       0       0       0       0
  9309 ;;Total ram usage:        1 bytes
  9310 ;; Hardware stack levels used: 1
  9311 ;; This function calls:
  9312 ;;		Nothing
  9313 ;; This function is called by:
  9314 ;;		_main
  9315 ;; This function uses a non-reentrant model
  9316 ;;
  9317                           
  9318     1B4C                     _spiWrite:	
  9319                           ;psect for function _spiWrite
  9320                           
  9321                           
  9322                           ;incstack = 0
  9323                           ; Regs used in _spiWrite: [wreg]
  9324                           ;spiWrite@dat stored from wreg
  9325     1B4C  00F0               	movwf	spiWrite@dat
  9326     1B4D                     l3263:
  9327                           
  9328                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  9329     1B4D  0870               	movf	spiWrite@dat,w
  9330     1B4E  1283               	bcf	3,5	;RP0=0, select bank0
  9331     1B4F  1303               	bcf	3,6	;RP1=0, select bank0
  9332     1B50  0093               	movwf	19	;volatile
  9333     1B51                     l157:
  9334     1B51  0008               	return
  9335     1B52                     __end_of_spiWrite:
  9336                           
  9337                           	psect	text24
  9338     1B59                     __ptext24:	
  9339 ;; *************** function _spiRead *****************
  9340 ;; Defined at:
  9341 ;;		line 47 in file "SPI.c"
  9342 ;; Parameters:    Size  Location     Type
  9343 ;;		None
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;		None
  9346 ;; Return value:  Size  Location     Type
  9347 ;;                  1    wreg      unsigned char 
  9348 ;; Registers used:
  9349 ;;		wreg, status,2, status,0, pclath, cstack
  9350 ;; Tracked objects:
  9351 ;;		On entry : 0/0
  9352 ;;		On exit  : 0/0
  9353 ;;		Unchanged: 0/0
  9354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9355 ;;      Params:         0       0       0       0       0
  9356 ;;      Locals:         0       0       0       0       0
  9357 ;;      Temps:          0       0       0       0       0
  9358 ;;      Totals:         0       0       0       0       0
  9359 ;;Total ram usage:        0 bytes
  9360 ;; Hardware stack levels used: 1
  9361 ;; Hardware stack levels required when called: 1
  9362 ;; This function calls:
  9363 ;;		_spiReceiveWait
  9364 ;; This function is called by:
  9365 ;;		_main
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369     1B59                     _spiRead:	
  9370                           ;psect for function _spiRead
  9371                           
  9372     1B59                     l3265:	
  9373                           ;incstack = 0
  9374                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9375                           
  9376                           
  9377                           ;SPI.c: 49:     spiReceiveWait();
  9378     1B59  160A  158A  2352  160A  158A  	fcall	_spiReceiveWait
  9379     1B5E                     l3267:
  9380                           
  9381                           ;SPI.c: 50:     return(SSPBUF);
  9382     1B5E  1283               	bcf	3,5	;RP0=0, select bank0
  9383     1B5F  1303               	bcf	3,6	;RP1=0, select bank0
  9384     1B60  0813               	movf	19,w	;volatile
  9385     1B61                     l165:
  9386     1B61  0008               	return
  9387     1B62                     __end_of_spiRead:
  9388                           
  9389                           	psect	text25
  9390     1B52                     __ptext25:	
  9391 ;; *************** function _spiReceiveWait *****************
  9392 ;; Defined at:
  9393 ;;		line 29 in file "SPI.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;		None
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;		None
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		None
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9407 ;;      Params:         0       0       0       0       0
  9408 ;;      Locals:         0       0       0       0       0
  9409 ;;      Temps:          0       0       0       0       0
  9410 ;;      Totals:         0       0       0       0       0
  9411 ;;Total ram usage:        0 bytes
  9412 ;; Hardware stack levels used: 1
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_spiRead
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420     1B52                     _spiReceiveWait:	
  9421                           ;psect for function _spiReceiveWait
  9422                           
  9423     1B52                     l2833:	
  9424                           ;incstack = 0
  9425                           ; Regs used in _spiReceiveWait: []
  9426                           
  9427     1B52                     l151:	
  9428                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  9429                           
  9430     1B52  1683               	bsf	3,5	;RP0=1, select bank1
  9431     1B53  1303               	bcf	3,6	;RP1=0, select bank1
  9432     1B54  1C14               	btfss	20,0	;volatile
  9433     1B55  2B57               	goto	u4341
  9434     1B56  2B58               	goto	u4340
  9435     1B57                     u4341:
  9436     1B57  2B52               	goto	l151
  9437     1B58                     u4340:
  9438     1B58                     l154:
  9439     1B58  0008               	return
  9440     1B59                     __end_of_spiReceiveWait:
  9441                           
  9442                           	psect	text26
  9443     1E5A                     __ptext26:	
  9444 ;; *************** function _setupINTOSC *****************
  9445 ;; Defined at:
  9446 ;;		line 10 in file "oscilador.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  IRCF            1    wreg     unsigned char 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;  IRCF            1    0[COMMON] unsigned char 
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1    wreg      void 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2, status,0
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9460 ;;      Params:         0       0       0       0       0
  9461 ;;      Locals:         1       0       0       0       0
  9462 ;;      Temps:          0       0       0       0       0
  9463 ;;      Totals:         1       0       0       0       0
  9464 ;;Total ram usage:        1 bytes
  9465 ;; Hardware stack levels used: 1
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_main
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473     1E5A                     _setupINTOSC:	
  9474                           ;psect for function _setupINTOSC
  9475                           
  9476                           
  9477                           ;incstack = 0
  9478                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  9479                           ;setupINTOSC@IRCF stored from wreg
  9480     1E5A  00F0               	movwf	setupINTOSC@IRCF
  9481     1E5B                     l3193:
  9482                           
  9483                           ;oscilador.c: 11:     if (IRCF == 7){
  9484     1E5B  3007               	movlw	7
  9485     1E5C  0670               	xorwf	setupINTOSC@IRCF,w
  9486     1E5D  1D03               	btfss	3,2
  9487     1E5E  2E60               	goto	u5401
  9488     1E5F  2E61               	goto	u5400
  9489     1E60                     u5401:
  9490     1E60  2E65               	goto	l123
  9491     1E61                     u5400:
  9492     1E61                     l3195:
  9493                           
  9494                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  9495     1E61  3070               	movlw	112
  9496     1E62  1683               	bsf	3,5	;RP0=1, select bank1
  9497     1E63  1303               	bcf	3,6	;RP1=0, select bank1
  9498     1E64  048F               	iorwf	15,f	;volatile
  9499     1E65                     l123:	
  9500                           ;oscilador.c: 13:     }
  9501                           
  9502                           
  9503                           ;oscilador.c: 14:     if (IRCF == 6){
  9504     1E65  3006               	movlw	6
  9505     1E66  0670               	xorwf	setupINTOSC@IRCF,w
  9506     1E67  1D03               	btfss	3,2
  9507     1E68  2E6A               	goto	u5411
  9508     1E69  2E6B               	goto	u5410
  9509     1E6A                     u5411:
  9510     1E6A  2E71               	goto	l124
  9511     1E6B                     u5410:
  9512     1E6B                     l3197:
  9513                           
  9514                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  9515     1E6B  1683               	bsf	3,5	;RP0=1, select bank1
  9516     1E6C  1303               	bcf	3,6	;RP1=0, select bank1
  9517     1E6D  080F               	movf	15,w	;volatile
  9518     1E6E  398F               	andlw	-113
  9519     1E6F  3860               	iorlw	96
  9520     1E70  008F               	movwf	15	;volatile
  9521     1E71                     l124:	
  9522                           ;oscilador.c: 16:     }
  9523                           
  9524                           
  9525                           ;oscilador.c: 17:     if (IRCF == 5){
  9526     1E71  3005               	movlw	5
  9527     1E72  0670               	xorwf	setupINTOSC@IRCF,w
  9528     1E73  1D03               	btfss	3,2
  9529     1E74  2E76               	goto	u5421
  9530     1E75  2E77               	goto	u5420
  9531     1E76                     u5421:
  9532     1E76  2E7D               	goto	l125
  9533     1E77                     u5420:
  9534     1E77                     l3199:
  9535                           
  9536                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  9537     1E77  1683               	bsf	3,5	;RP0=1, select bank1
  9538     1E78  1303               	bcf	3,6	;RP1=0, select bank1
  9539     1E79  080F               	movf	15,w	;volatile
  9540     1E7A  398F               	andlw	-113
  9541     1E7B  3850               	iorlw	80
  9542     1E7C  008F               	movwf	15	;volatile
  9543     1E7D                     l125:	
  9544                           ;oscilador.c: 19:     }
  9545                           
  9546                           
  9547                           ;oscilador.c: 20:     if (IRCF == 4){
  9548     1E7D  3004               	movlw	4
  9549     1E7E  0670               	xorwf	setupINTOSC@IRCF,w
  9550     1E7F  1D03               	btfss	3,2
  9551     1E80  2E82               	goto	u5431
  9552     1E81  2E83               	goto	u5430
  9553     1E82                     u5431:
  9554     1E82  2E89               	goto	l126
  9555     1E83                     u5430:
  9556     1E83                     l3201:
  9557                           
  9558                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  9559     1E83  1683               	bsf	3,5	;RP0=1, select bank1
  9560     1E84  1303               	bcf	3,6	;RP1=0, select bank1
  9561     1E85  080F               	movf	15,w	;volatile
  9562     1E86  398F               	andlw	-113
  9563     1E87  3840               	iorlw	64
  9564     1E88  008F               	movwf	15	;volatile
  9565     1E89                     l126:	
  9566                           ;oscilador.c: 22:     }
  9567                           
  9568                           
  9569                           ;oscilador.c: 23:     if (IRCF == 3){
  9570     1E89  3003               	movlw	3
  9571     1E8A  0670               	xorwf	setupINTOSC@IRCF,w
  9572     1E8B  1D03               	btfss	3,2
  9573     1E8C  2E8E               	goto	u5441
  9574     1E8D  2E8F               	goto	u5440
  9575     1E8E                     u5441:
  9576     1E8E  2E95               	goto	l127
  9577     1E8F                     u5440:
  9578     1E8F                     l3203:
  9579                           
  9580                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  9581     1E8F  1683               	bsf	3,5	;RP0=1, select bank1
  9582     1E90  1303               	bcf	3,6	;RP1=0, select bank1
  9583     1E91  080F               	movf	15,w	;volatile
  9584     1E92  398F               	andlw	-113
  9585     1E93  3830               	iorlw	48
  9586     1E94  008F               	movwf	15	;volatile
  9587     1E95                     l127:	
  9588                           ;oscilador.c: 25:     }
  9589                           
  9590                           
  9591                           ;oscilador.c: 26:     if (IRCF == 2){
  9592     1E95  3002               	movlw	2
  9593     1E96  0670               	xorwf	setupINTOSC@IRCF,w
  9594     1E97  1D03               	btfss	3,2
  9595     1E98  2E9A               	goto	u5451
  9596     1E99  2E9B               	goto	u5450
  9597     1E9A                     u5451:
  9598     1E9A  2EA1               	goto	l128
  9599     1E9B                     u5450:
  9600     1E9B                     l3205:
  9601                           
  9602                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  9603     1E9B  1683               	bsf	3,5	;RP0=1, select bank1
  9604     1E9C  1303               	bcf	3,6	;RP1=0, select bank1
  9605     1E9D  080F               	movf	15,w	;volatile
  9606     1E9E  398F               	andlw	-113
  9607     1E9F  3820               	iorlw	32
  9608     1EA0  008F               	movwf	15	;volatile
  9609     1EA1                     l128:	
  9610                           ;oscilador.c: 28:     }
  9611                           
  9612                           
  9613                           ;oscilador.c: 29:     if (IRCF == 1){
  9614     1EA1  0370               	decf	setupINTOSC@IRCF,w
  9615     1EA2  1D03               	btfss	3,2
  9616     1EA3  2EA5               	goto	u5461
  9617     1EA4  2EA6               	goto	u5460
  9618     1EA5                     u5461:
  9619     1EA5  2EAC               	goto	l129
  9620     1EA6                     u5460:
  9621     1EA6                     l3207:
  9622                           
  9623                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  9624     1EA6  1683               	bsf	3,5	;RP0=1, select bank1
  9625     1EA7  1303               	bcf	3,6	;RP1=0, select bank1
  9626     1EA8  080F               	movf	15,w	;volatile
  9627     1EA9  398F               	andlw	-113
  9628     1EAA  3810               	iorlw	16
  9629     1EAB  008F               	movwf	15	;volatile
  9630     1EAC                     l129:	
  9631                           ;oscilador.c: 31:     }
  9632                           
  9633                           
  9634                           ;oscilador.c: 32:     if (IRCF == 0){
  9635     1EAC  0870               	movf	setupINTOSC@IRCF,w
  9636     1EAD  1D03               	btfss	3,2
  9637     1EAE  2EB0               	goto	u5471
  9638     1EAF  2EB1               	goto	u5470
  9639     1EB0                     u5471:
  9640     1EB0  2EB5               	goto	l3211
  9641     1EB1                     u5470:
  9642     1EB1                     l3209:
  9643                           
  9644                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  9645     1EB1  308F               	movlw	-113
  9646     1EB2  1683               	bsf	3,5	;RP0=1, select bank1
  9647     1EB3  1303               	bcf	3,6	;RP1=0, select bank1
  9648     1EB4  058F               	andwf	15,f	;volatile
  9649     1EB5                     l3211:
  9650                           
  9651                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  9652     1EB5  1683               	bsf	3,5	;RP0=1, select bank1
  9653     1EB6  1303               	bcf	3,6	;RP1=0, select bank1
  9654     1EB7  140F               	bsf	15,0	;volatile
  9655     1EB8                     l131:
  9656     1EB8  0008               	return
  9657     1EB9                     __end_of_setupINTOSC:
  9658                           
  9659                           	psect	text27
  9660     1BDE                     __ptext27:	
  9661 ;; *************** function _portsetup *****************
  9662 ;; Defined at:
  9663 ;;		line 104 in file "main.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;		None
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      void 
  9670 ;; Registers used:
  9671 ;;		wreg, status,2, status,0, pclath, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9677 ;;      Params:         0       0       0       0       0
  9678 ;;      Locals:         0       0       0       0       0
  9679 ;;      Temps:          0       0       0       0       0
  9680 ;;      Totals:         0       0       0       0       0
  9681 ;;Total ram usage:        0 bytes
  9682 ;; Hardware stack levels used: 1
  9683 ;; Hardware stack levels required when called: 1
  9684 ;; This function calls:
  9685 ;;		_spiInit
  9686 ;; This function is called by:
  9687 ;;		_main
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691     1BDE                     _portsetup:	
  9692                           ;psect for function _portsetup
  9693                           
  9694     1BDE                     l3213:	
  9695                           ;incstack = 0
  9696                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  9697                           
  9698                           
  9699                           ;main.c: 105:     ANSEL = 0;
  9700     1BDE  1683               	bsf	3,5	;RP0=1, select bank3
  9701     1BDF  1703               	bsf	3,6	;RP1=1, select bank3
  9702     1BE0  0188               	clrf	8	;volatile
  9703                           
  9704                           ;main.c: 106:     ANSELH = 0;
  9705     1BE1  0189               	clrf	9	;volatile
  9706                           
  9707                           ;main.c: 107:     TRISD = 0;
  9708     1BE2  1683               	bsf	3,5	;RP0=1, select bank1
  9709     1BE3  1303               	bcf	3,6	;RP1=0, select bank1
  9710     1BE4  0188               	clrf	8	;volatile
  9711                           
  9712                           ;main.c: 108:     PORTD = 0;
  9713     1BE5  1283               	bcf	3,5	;RP0=0, select bank0
  9714     1BE6  1303               	bcf	3,6	;RP1=0, select bank0
  9715     1BE7  0188               	clrf	8	;volatile
  9716                           
  9717                           ;main.c: 109:     TRISB = 0;
  9718     1BE8  1683               	bsf	3,5	;RP0=1, select bank1
  9719     1BE9  1303               	bcf	3,6	;RP1=0, select bank1
  9720     1BEA  0186               	clrf	6	;volatile
  9721                           
  9722                           ;main.c: 110:     PORTB = 0;
  9723     1BEB  1283               	bcf	3,5	;RP0=0, select bank0
  9724     1BEC  1303               	bcf	3,6	;RP1=0, select bank0
  9725     1BED  0186               	clrf	6	;volatile
  9726                           
  9727                           ;main.c: 112:     TRISC = 0;
  9728     1BEE  1683               	bsf	3,5	;RP0=1, select bank1
  9729     1BEF  1303               	bcf	3,6	;RP1=0, select bank1
  9730     1BF0  0187               	clrf	7	;volatile
  9731     1BF1                     l3215:
  9732                           
  9733                           ;main.c: 113:     TRISCbits.TRISC4 = 1;
  9734     1BF1  1607               	bsf	7,4	;volatile
  9735     1BF2                     l3217:
  9736                           
  9737                           ;main.c: 114:     PORTCbits.RC2 = 1;
  9738     1BF2  1283               	bcf	3,5	;RP0=0, select bank0
  9739     1BF3  1303               	bcf	3,6	;RP1=0, select bank0
  9740     1BF4  1507               	bsf	7,2	;volatile
  9741     1BF5                     l3219:
  9742                           
  9743                           ;main.c: 115:     PORTCbits.RC1 = 1;
  9744     1BF5  1487               	bsf	7,1	;volatile
  9745     1BF6                     l3221:
  9746                           
  9747                           ;main.c: 116:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  9748     1BF6  01F0               	clrf	spiInit@sDataSample
  9749     1BF7  01F1               	clrf	spiInit@sClockIdle
  9750     1BF8  01F2               	clrf	spiInit@sTransmitEdge
  9751     1BF9  3020               	movlw	32
  9752     1BFA  160A  158A  238C  160A  158A  	fcall	_spiInit
  9753     1BFF                     l63:
  9754     1BFF  0008               	return
  9755     1C00                     __end_of_portsetup:
  9756                           
  9757                           	psect	text28
  9758     1B8C                     __ptext28:	
  9759 ;; *************** function _spiInit *****************
  9760 ;; Defined at:
  9761 ;;		line 12 in file "SPI.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;  sType           1    wreg     enum E1292
  9764 ;;  sDataSample     1    0[COMMON] enum E1300
  9765 ;;  sClockIdle      1    1[COMMON] enum E1304
  9766 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;  sType           1    3[COMMON] enum E1292
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		wreg, status,2, status,0
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9778 ;;      Params:         3       0       0       0       0
  9779 ;;      Locals:         1       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0
  9781 ;;      Totals:         4       0       0       0       0
  9782 ;;Total ram usage:        4 bytes
  9783 ;; Hardware stack levels used: 1
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_portsetup
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791     1B8C                     _spiInit:	
  9792                           ;psect for function _spiInit
  9793                           
  9794                           
  9795                           ;incstack = 0
  9796                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9797                           ;spiInit@sType stored from wreg
  9798     1B8C  00F3               	movwf	spiInit@sType
  9799     1B8D                     l2793:
  9800                           
  9801                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  9802     1B8D  1683               	bsf	3,5	;RP0=1, select bank1
  9803     1B8E  1303               	bcf	3,6	;RP1=0, select bank1
  9804     1B8F  1287               	bcf	7,5	;volatile
  9805                           
  9806                           ;SPI.c: 15:     if(sType & 0b00000100)
  9807     1B90  1D73               	btfss	spiInit@sType,2
  9808     1B91  2B93               	goto	u4321
  9809     1B92  2B94               	goto	u4320
  9810     1B93                     u4321:
  9811     1B93  2B98               	goto	l2799
  9812     1B94                     u4320:
  9813     1B94                     l2795:
  9814                           
  9815                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  9816     1B94  0872               	movf	spiInit@sTransmitEdge,w
  9817     1B95  0094               	movwf	20	;volatile
  9818     1B96                     l2797:
  9819                           
  9820                           ;SPI.c: 18:         TRISC3 = 1;
  9821     1B96  1587               	bsf	7,3	;volatile
  9822                           
  9823                           ;SPI.c: 19:     }
  9824     1B97  2B9C               	goto	l147
  9825     1B98                     l2799:
  9826                           
  9827                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  9828     1B98  0870               	movf	spiInit@sDataSample,w
  9829     1B99  0472               	iorwf	spiInit@sTransmitEdge,w
  9830     1B9A  0094               	movwf	20	;volatile
  9831     1B9B                     l2801:
  9832                           
  9833                           ;SPI.c: 23:         TRISC3 = 0;
  9834     1B9B  1187               	bcf	7,3	;volatile
  9835     1B9C                     l147:	
  9836                           ;SPI.c: 24:     }
  9837                           
  9838                           
  9839                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  9840     1B9C  0873               	movf	spiInit@sType,w
  9841     1B9D  0471               	iorwf	spiInit@sClockIdle,w
  9842     1B9E  1283               	bcf	3,5	;RP0=0, select bank0
  9843     1B9F  1303               	bcf	3,6	;RP1=0, select bank0
  9844     1BA0  0094               	movwf	20	;volatile
  9845     1BA1                     l148:
  9846     1BA1  0008               	return
  9847     1BA2                     __end_of_spiInit:
  9848                           
  9849                           	psect	text29
  9850     11CA                     __ptext29:	
  9851 ;; *************** function ___fldiv *****************
  9852 ;; Defined at:
  9853 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  a               4   30[BANK0 ] void 
  9856 ;;  b               4   34[BANK0 ] void 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  grs             4   50[BANK0 ] unsigned long 
  9859 ;;  rem             4   43[BANK0 ] unsigned long 
  9860 ;;  new_exp         2   48[BANK0 ] int 
  9861 ;;  aexp            1   55[BANK0 ] unsigned char 
  9862 ;;  bexp            1   54[BANK0 ] unsigned char 
  9863 ;;  sign            1   47[BANK0 ] unsigned char 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  4   30[BANK0 ] unsigned char 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0, btemp+1
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9873 ;;      Params:         0       8       0       0       0
  9874 ;;      Locals:         0      13       0       0       0
  9875 ;;      Temps:          0       5       0       0       0
  9876 ;;      Totals:         0      26       0       0       0
  9877 ;;Total ram usage:       26 bytes
  9878 ;; Hardware stack levels used: 1
  9879 ;; This function calls:
  9880 ;;		Nothing
  9881 ;; This function is called by:
  9882 ;;		_main
  9883 ;; This function uses a non-reentrant model
  9884 ;;
  9885                           
  9886     11CA                     ___fldiv:	
  9887                           ;psect for function ___fldiv
  9888                           
  9889     11CA                     l3477:	
  9890                           ;incstack = 0
  9891                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9892                           
  9893     11CA  1283               	bcf	3,5	;RP0=0, select bank0
  9894     11CB  1303               	bcf	3,6	;RP1=0, select bank0
  9895     11CC  0845               	movf	___fldiv@b+3,w
  9896     11CD  3980               	andlw	128
  9897     11CE  00CF               	movwf	___fldiv@sign
  9898     11CF                     l3479:
  9899     11CF  0845               	movf	___fldiv@b+3,w
  9900     11D0  00C6               	movwf	??___fldiv
  9901     11D1  0746               	addwf	??___fldiv,w
  9902     11D2  00D6               	movwf	___fldiv@bexp
  9903     11D3                     l3481:
  9904     11D3  1FC4               	btfss	___fldiv@b+2,7
  9905     11D4  29D6               	goto	u5901
  9906     11D5  29D7               	goto	u5900
  9907     11D6                     u5901:
  9908     11D6  29D8               	goto	l3485
  9909     11D7                     u5900:
  9910     11D7                     l3483:
  9911     11D7  1456               	bsf	___fldiv@bexp,0
  9912     11D8                     l3485:
  9913     11D8  0856               	movf	___fldiv@bexp,w
  9914     11D9  1903               	btfsc	3,2
  9915     11DA  29DC               	goto	u5911
  9916     11DB  29DD               	goto	u5910
  9917     11DC                     u5911:
  9918     11DC  29ED               	goto	l3495
  9919     11DD                     u5910:
  9920     11DD                     l3487:
  9921     11DD  0A56               	incf	___fldiv@bexp,w
  9922     11DE  1D03               	btfss	3,2
  9923     11DF  29E1               	goto	u5921
  9924     11E0  29E2               	goto	u5920
  9925     11E1                     u5921:
  9926     11E1  29EA               	goto	l3491
  9927     11E2                     u5920:
  9928     11E2                     l3489:
  9929     11E2  3000               	movlw	0
  9930     11E3  00C5               	movwf	___fldiv@b+3
  9931     11E4  3000               	movlw	0
  9932     11E5  00C4               	movwf	___fldiv@b+2
  9933     11E6  3000               	movlw	0
  9934     11E7  00C3               	movwf	___fldiv@b+1
  9935     11E8  3000               	movlw	0
  9936     11E9  00C2               	movwf	___fldiv@b
  9937     11EA                     l3491:
  9938     11EA  17C4               	bsf	___fldiv@b+2,7
  9939     11EB                     l3493:
  9940     11EB  01C5               	clrf	___fldiv@b+3
  9941     11EC  29F5               	goto	l3497
  9942     11ED                     l3495:
  9943     11ED  3000               	movlw	0
  9944     11EE  00C5               	movwf	___fldiv@b+3
  9945     11EF  3000               	movlw	0
  9946     11F0  00C4               	movwf	___fldiv@b+2
  9947     11F1  3000               	movlw	0
  9948     11F2  00C3               	movwf	___fldiv@b+1
  9949     11F3  3000               	movlw	0
  9950     11F4  00C2               	movwf	___fldiv@b
  9951     11F5                     l3497:
  9952     11F5  0841               	movf	___fldiv@a+3,w
  9953     11F6  3980               	andlw	128
  9954     11F7  00C6               	movwf	??___fldiv
  9955     11F8  0846               	movf	??___fldiv,w
  9956     11F9  06CF               	xorwf	___fldiv@sign,f
  9957     11FA                     l3499:
  9958     11FA  0841               	movf	___fldiv@a+3,w
  9959     11FB  00C6               	movwf	??___fldiv
  9960     11FC  0746               	addwf	??___fldiv,w
  9961     11FD  00D7               	movwf	___fldiv@aexp
  9962     11FE                     l3501:
  9963     11FE  1FC0               	btfss	___fldiv@a+2,7
  9964     11FF  2A01               	goto	u5931
  9965     1200  2A02               	goto	u5930
  9966     1201                     u5931:
  9967     1201  2A03               	goto	l3505
  9968     1202                     u5930:
  9969     1202                     l3503:
  9970     1202  1457               	bsf	___fldiv@aexp,0
  9971     1203                     l3505:
  9972     1203  0857               	movf	___fldiv@aexp,w
  9973     1204  1903               	btfsc	3,2
  9974     1205  2A07               	goto	u5941
  9975     1206  2A08               	goto	u5940
  9976     1207                     u5941:
  9977     1207  2A18               	goto	l3515
  9978     1208                     u5940:
  9979     1208                     l3507:
  9980     1208  0A57               	incf	___fldiv@aexp,w
  9981     1209  1D03               	btfss	3,2
  9982     120A  2A0C               	goto	u5951
  9983     120B  2A0D               	goto	u5950
  9984     120C                     u5951:
  9985     120C  2A15               	goto	l3511
  9986     120D                     u5950:
  9987     120D                     l3509:
  9988     120D  3000               	movlw	0
  9989     120E  00C1               	movwf	___fldiv@a+3
  9990     120F  3000               	movlw	0
  9991     1210  00C0               	movwf	___fldiv@a+2
  9992     1211  3000               	movlw	0
  9993     1212  00BF               	movwf	___fldiv@a+1
  9994     1213  3000               	movlw	0
  9995     1214  00BE               	movwf	___fldiv@a
  9996     1215                     l3511:
  9997     1215  17C0               	bsf	___fldiv@a+2,7
  9998     1216                     l3513:
  9999     1216  01C1               	clrf	___fldiv@a+3
 10000     1217  2A20               	goto	l727
 10001     1218                     l3515:
 10002     1218  3000               	movlw	0
 10003     1219  00C1               	movwf	___fldiv@a+3
 10004     121A  3000               	movlw	0
 10005     121B  00C0               	movwf	___fldiv@a+2
 10006     121C  3000               	movlw	0
 10007     121D  00BF               	movwf	___fldiv@a+1
 10008     121E  3000               	movlw	0
 10009     121F  00BE               	movwf	___fldiv@a
 10010     1220                     l727:
 10011     1220  0841               	movf	___fldiv@a+3,w
 10012     1221  0440               	iorwf	___fldiv@a+2,w
 10013     1222  043F               	iorwf	___fldiv@a+1,w
 10014     1223  043E               	iorwf	___fldiv@a,w
 10015     1224  1D03               	skipz
 10016     1225  2A27               	goto	u5961
 10017     1226  2A28               	goto	u5960
 10018     1227                     u5961:
 10019     1227  2A41               	goto	l3525
 10020     1228                     u5960:
 10021     1228                     l3517:
 10022     1228  3000               	movlw	0
 10023     1229  00C5               	movwf	___fldiv@b+3
 10024     122A  3000               	movlw	0
 10025     122B  00C4               	movwf	___fldiv@b+2
 10026     122C  3000               	movlw	0
 10027     122D  00C3               	movwf	___fldiv@b+1
 10028     122E  3000               	movlw	0
 10029     122F  00C2               	movwf	___fldiv@b
 10030     1230  3080               	movlw	128
 10031     1231  04C4               	iorwf	___fldiv@b+2,f
 10032     1232  307F               	movlw	127
 10033     1233  04C5               	iorwf	___fldiv@b+3,f
 10034     1234                     l3519:
 10035     1234  084F               	movf	___fldiv@sign,w
 10036     1235  00C6               	movwf	??___fldiv
 10037     1236  0846               	movf	??___fldiv,w
 10038     1237  04C5               	iorwf	___fldiv@b+3,f
 10039     1238                     l3521:
 10040     1238  0845               	movf	___fldiv@b+3,w
 10041     1239  00C1               	movwf	?___fldiv+3
 10042     123A  0844               	movf	___fldiv@b+2,w
 10043     123B  00C0               	movwf	?___fldiv+2
 10044     123C  0843               	movf	___fldiv@b+1,w
 10045     123D  00BF               	movwf	?___fldiv+1
 10046     123E  0842               	movf	___fldiv@b,w
 10047     123F  00BE               	movwf	?___fldiv
 10048     1240  2B9C               	goto	l729
 10049     1241                     l3525:
 10050     1241  0856               	movf	___fldiv@bexp,w
 10051     1242  1D03               	btfss	3,2
 10052     1243  2A45               	goto	u5971
 10053     1244  2A46               	goto	u5970
 10054     1245                     u5971:
 10055     1245  2A4F               	goto	l3531
 10056     1246                     u5970:
 10057     1246                     l3527:
 10058     1246  3000               	movlw	0
 10059     1247  00C1               	movwf	?___fldiv+3
 10060     1248  3000               	movlw	0
 10061     1249  00C0               	movwf	?___fldiv+2
 10062     124A  3000               	movlw	0
 10063     124B  00BF               	movwf	?___fldiv+1
 10064     124C  3000               	movlw	0
 10065     124D  00BE               	movwf	?___fldiv
 10066     124E  2B9C               	goto	l729
 10067     124F                     l3531:
 10068     124F  0856               	movf	___fldiv@bexp,w
 10069     1250  00C6               	movwf	??___fldiv
 10070     1251  01C7               	clrf	??___fldiv+1
 10071     1252  0847               	movf	??___fldiv+1,w
 10072     1253  00C9               	movwf	??___fldiv+3
 10073     1254  0857               	movf	___fldiv@aexp,w
 10074     1255  0246               	subwf	??___fldiv,w
 10075     1256  00C8               	movwf	??___fldiv+2
 10076     1257  1C03               	skipc
 10077     1258  03C9               	decf	??___fldiv+3,f
 10078     1259  0848               	movf	??___fldiv+2,w
 10079     125A  3E7F               	addlw	127
 10080     125B  00D0               	movwf	___fldiv@new_exp
 10081     125C  0849               	movf	??___fldiv+3,w
 10082     125D  1803               	skipnc
 10083     125E  3E01               	addlw	1
 10084     125F  3E00               	addlw	0
 10085     1260  00D1               	movwf	___fldiv@new_exp+1
 10086     1261                     l3533:
 10087     1261  0845               	movf	___fldiv@b+3,w
 10088     1262  00CE               	movwf	___fldiv@rem+3
 10089     1263  0844               	movf	___fldiv@b+2,w
 10090     1264  00CD               	movwf	___fldiv@rem+2
 10091     1265  0843               	movf	___fldiv@b+1,w
 10092     1266  00CC               	movwf	___fldiv@rem+1
 10093     1267  0842               	movf	___fldiv@b,w
 10094     1268  00CB               	movwf	___fldiv@rem
 10095     1269                     l3535:
 10096     1269  3000               	movlw	0
 10097     126A  00C5               	movwf	___fldiv@b+3
 10098     126B  3000               	movlw	0
 10099     126C  00C4               	movwf	___fldiv@b+2
 10100     126D  3000               	movlw	0
 10101     126E  00C3               	movwf	___fldiv@b+1
 10102     126F  3000               	movlw	0
 10103     1270  00C2               	movwf	___fldiv@b
 10104     1271                     l3537:
 10105     1271  3000               	movlw	0
 10106     1272  00D5               	movwf	___fldiv@grs+3
 10107     1273  3000               	movlw	0
 10108     1274  00D4               	movwf	___fldiv@grs+2
 10109     1275  3000               	movlw	0
 10110     1276  00D3               	movwf	___fldiv@grs+1
 10111     1277  3000               	movlw	0
 10112     1278  00D2               	movwf	___fldiv@grs
 10113     1279                     l3539:
 10114     1279  01D7               	clrf	___fldiv@aexp
 10115     127A  2AC5               	goto	l3559
 10116     127B                     l3541:
 10117     127B  0857               	movf	___fldiv@aexp,w
 10118     127C  1903               	btfsc	3,2
 10119     127D  2A7F               	goto	u5981
 10120     127E  2A80               	goto	u5980
 10121     127F                     u5981:
 10122     127F  2AA0               	goto	l3551
 10123     1280                     u5980:
 10124     1280                     l3543:
 10125     1280  3001               	movlw	1
 10126     1281  00C6               	movwf	??___fldiv
 10127     1282                     u5995:
 10128     1282  1003               	clrc
 10129     1283  0DCB               	rlf	___fldiv@rem,f
 10130     1284  0DCC               	rlf	___fldiv@rem+1,f
 10131     1285  0DCD               	rlf	___fldiv@rem+2,f
 10132     1286  0DCE               	rlf	___fldiv@rem+3,f
 10133     1287  0BC6               	decfsz	??___fldiv,f
 10134     1288  2A82               	goto	u5995
 10135     1289  3001               	movlw	1
 10136     128A  00C6               	movwf	??___fldiv
 10137     128B                     u6005:
 10138     128B  1003               	clrc
 10139     128C  0DC2               	rlf	___fldiv@b,f
 10140     128D  0DC3               	rlf	___fldiv@b+1,f
 10141     128E  0DC4               	rlf	___fldiv@b+2,f
 10142     128F  0DC5               	rlf	___fldiv@b+3,f
 10143     1290  0BC6               	decfsz	??___fldiv,f
 10144     1291  2A8B               	goto	u6005
 10145     1292                     l3545:
 10146     1292  1FD5               	btfss	___fldiv@grs+3,7
 10147     1293  2A95               	goto	u6011
 10148     1294  2A96               	goto	u6010
 10149     1295                     u6011:
 10150     1295  2A97               	goto	l3549
 10151     1296                     u6010:
 10152     1296                     l3547:
 10153     1296  1442               	bsf	___fldiv@b,0
 10154     1297                     l3549:
 10155     1297  3001               	movlw	1
 10156     1298  00C6               	movwf	??___fldiv
 10157     1299                     u6025:
 10158     1299  1003               	clrc
 10159     129A  0DD2               	rlf	___fldiv@grs,f
 10160     129B  0DD3               	rlf	___fldiv@grs+1,f
 10161     129C  0DD4               	rlf	___fldiv@grs+2,f
 10162     129D  0DD5               	rlf	___fldiv@grs+3,f
 10163     129E  0BC6               	decfsz	??___fldiv,f
 10164     129F  2A99               	goto	u6025
 10165     12A0                     l3551:
 10166     12A0  0841               	movf	___fldiv@a+3,w
 10167     12A1  024E               	subwf	___fldiv@rem+3,w
 10168     12A2  1D03               	skipz
 10169     12A3  2AAE               	goto	u6035
 10170     12A4  0840               	movf	___fldiv@a+2,w
 10171     12A5  024D               	subwf	___fldiv@rem+2,w
 10172     12A6  1D03               	skipz
 10173     12A7  2AAE               	goto	u6035
 10174     12A8  083F               	movf	___fldiv@a+1,w
 10175     12A9  024C               	subwf	___fldiv@rem+1,w
 10176     12AA  1D03               	skipz
 10177     12AB  2AAE               	goto	u6035
 10178     12AC  083E               	movf	___fldiv@a,w
 10179     12AD  024B               	subwf	___fldiv@rem,w
 10180     12AE                     u6035:
 10181     12AE  1C03               	skipc
 10182     12AF  2AB1               	goto	u6031
 10183     12B0  2AB2               	goto	u6030
 10184     12B1                     u6031:
 10185     12B1  2AC1               	goto	l3557
 10186     12B2                     u6030:
 10187     12B2                     l3553:
 10188     12B2  1755               	bsf	___fldiv@grs+3,6
 10189     12B3                     l3555:
 10190     12B3  083E               	movf	___fldiv@a,w
 10191     12B4  02CB               	subwf	___fldiv@rem,f
 10192     12B5  083F               	movf	___fldiv@a+1,w
 10193     12B6  1C03               	skipc
 10194     12B7  0F3F               	incfsz	___fldiv@a+1,w
 10195     12B8  02CC               	subwf	___fldiv@rem+1,f
 10196     12B9  0840               	movf	___fldiv@a+2,w
 10197     12BA  1C03               	skipc
 10198     12BB  0F40               	incfsz	___fldiv@a+2,w
 10199     12BC  02CD               	subwf	___fldiv@rem+2,f
 10200     12BD  0841               	movf	___fldiv@a+3,w
 10201     12BE  1C03               	skipc
 10202     12BF  0F41               	incfsz	___fldiv@a+3,w
 10203     12C0  02CE               	subwf	___fldiv@rem+3,f
 10204     12C1                     l3557:
 10205     12C1  3001               	movlw	1
 10206     12C2  00C6               	movwf	??___fldiv
 10207     12C3  0846               	movf	??___fldiv,w
 10208     12C4  07D7               	addwf	___fldiv@aexp,f
 10209     12C5                     l3559:
 10210     12C5  301A               	movlw	26
 10211     12C6  0257               	subwf	___fldiv@aexp,w
 10212     12C7  1C03               	skipc
 10213     12C8  2ACA               	goto	u6041
 10214     12C9  2ACB               	goto	u6040
 10215     12CA                     u6041:
 10216     12CA  2A7B               	goto	l3541
 10217     12CB                     u6040:
 10218     12CB                     l3561:
 10219     12CB  084E               	movf	___fldiv@rem+3,w
 10220     12CC  044D               	iorwf	___fldiv@rem+2,w
 10221     12CD  044C               	iorwf	___fldiv@rem+1,w
 10222     12CE  044B               	iorwf	___fldiv@rem,w
 10223     12CF  1903               	skipnz
 10224     12D0  2AD2               	goto	u6051
 10225     12D1  2AD3               	goto	u6050
 10226     12D2                     u6051:
 10227     12D2  2AF2               	goto	l3575
 10228     12D3                     u6050:
 10229     12D3                     l3563:
 10230     12D3  1452               	bsf	___fldiv@grs,0
 10231     12D4  2AF2               	goto	l3575
 10232     12D5                     l3565:
 10233     12D5  3001               	movlw	1
 10234     12D6  00C6               	movwf	??___fldiv
 10235     12D7                     u6065:
 10236     12D7  1003               	clrc
 10237     12D8  0DC2               	rlf	___fldiv@b,f
 10238     12D9  0DC3               	rlf	___fldiv@b+1,f
 10239     12DA  0DC4               	rlf	___fldiv@b+2,f
 10240     12DB  0DC5               	rlf	___fldiv@b+3,f
 10241     12DC  0BC6               	decfsz	??___fldiv,f
 10242     12DD  2AD7               	goto	u6065
 10243     12DE                     l3567:
 10244     12DE  1FD5               	btfss	___fldiv@grs+3,7
 10245     12DF  2AE1               	goto	u6071
 10246     12E0  2AE2               	goto	u6070
 10247     12E1                     u6071:
 10248     12E1  2AE3               	goto	l3571
 10249     12E2                     u6070:
 10250     12E2                     l3569:
 10251     12E2  1442               	bsf	___fldiv@b,0
 10252     12E3                     l3571:
 10253     12E3  3001               	movlw	1
 10254     12E4  00C6               	movwf	??___fldiv
 10255     12E5                     u6085:
 10256     12E5  1003               	clrc
 10257     12E6  0DD2               	rlf	___fldiv@grs,f
 10258     12E7  0DD3               	rlf	___fldiv@grs+1,f
 10259     12E8  0DD4               	rlf	___fldiv@grs+2,f
 10260     12E9  0DD5               	rlf	___fldiv@grs+3,f
 10261     12EA  0BC6               	decfsz	??___fldiv,f
 10262     12EB  2AE5               	goto	u6085
 10263     12EC                     l3573:
 10264     12EC  30FF               	movlw	255
 10265     12ED  07D0               	addwf	___fldiv@new_exp,f
 10266     12EE  1803               	skipnc
 10267     12EF  0AD1               	incf	___fldiv@new_exp+1,f
 10268     12F0  30FF               	movlw	255
 10269     12F1  07D1               	addwf	___fldiv@new_exp+1,f
 10270     12F2                     l3575:
 10271     12F2  1FC4               	btfss	___fldiv@b+2,7
 10272     12F3  2AF5               	goto	u6091
 10273     12F4  2AF6               	goto	u6090
 10274     12F5                     u6091:
 10275     12F5  2AD5               	goto	l3565
 10276     12F6                     u6090:
 10277     12F6                     l3577:
 10278     12F6  01D7               	clrf	___fldiv@aexp
 10279     12F7                     l3579:
 10280     12F7  1FD5               	btfss	___fldiv@grs+3,7
 10281     12F8  2AFA               	goto	u6101
 10282     12F9  2AFB               	goto	u6100
 10283     12FA                     u6101:
 10284     12FA  2B17               	goto	l3587
 10285     12FB                     u6100:
 10286     12FB                     l3581:
 10287     12FB  30FF               	movlw	255
 10288     12FC  0552               	andwf	___fldiv@grs,w
 10289     12FD  00C6               	movwf	??___fldiv
 10290     12FE  30FF               	movlw	255
 10291     12FF  0553               	andwf	___fldiv@grs+1,w
 10292     1300  00C7               	movwf	??___fldiv+1
 10293     1301  30FF               	movlw	255
 10294     1302  0554               	andwf	___fldiv@grs+2,w
 10295     1303  00C8               	movwf	??___fldiv+2
 10296     1304  307F               	movlw	127
 10297     1305  0555               	andwf	___fldiv@grs+3,w
 10298     1306  00C9               	movwf	??___fldiv+3
 10299     1307  0849               	movf	??___fldiv+3,w
 10300     1308  0448               	iorwf	??___fldiv+2,w
 10301     1309  0447               	iorwf	??___fldiv+1,w
 10302     130A  0446               	iorwf	??___fldiv,w
 10303     130B  1903               	skipnz
 10304     130C  2B0E               	goto	u6111
 10305     130D  2B0F               	goto	u6110
 10306     130E                     u6111:
 10307     130E  2B12               	goto	l743
 10308     130F                     u6110:
 10309     130F                     l3583:
 10310     130F  01D7               	clrf	___fldiv@aexp
 10311     1310  0AD7               	incf	___fldiv@aexp,f
 10312     1311  2B17               	goto	l3587
 10313     1312                     l743:
 10314     1312  1C42               	btfss	___fldiv@b,0
 10315     1313  2B15               	goto	u6121
 10316     1314  2B16               	goto	u6120
 10317     1315                     u6121:
 10318     1315  2B17               	goto	l3587
 10319     1316                     u6120:
 10320     1316  2B0F               	goto	l3583
 10321     1317                     l3587:
 10322     1317  0857               	movf	___fldiv@aexp,w
 10323     1318  1903               	btfsc	3,2
 10324     1319  2B1B               	goto	u6131
 10325     131A  2B1C               	goto	u6130
 10326     131B                     u6131:
 10327     131B  2B4D               	goto	l3597
 10328     131C                     u6130:
 10329     131C                     l3589:
 10330     131C  3001               	movlw	1
 10331     131D  07C2               	addwf	___fldiv@b,f
 10332     131E  3000               	movlw	0
 10333     131F  1803               	skipnc
 10334     1320  3001               	movlw	1
 10335     1321  07C3               	addwf	___fldiv@b+1,f
 10336     1322  3000               	movlw	0
 10337     1323  1803               	skipnc
 10338     1324  3001               	movlw	1
 10339     1325  07C4               	addwf	___fldiv@b+2,f
 10340     1326  3000               	movlw	0
 10341     1327  1803               	skipnc
 10342     1328  3001               	movlw	1
 10343     1329  07C5               	addwf	___fldiv@b+3,f
 10344     132A                     l3591:
 10345     132A  1C45               	btfss	___fldiv@b+3,0
 10346     132B  2B2D               	goto	u6141
 10347     132C  2B2E               	goto	u6140
 10348     132D                     u6141:
 10349     132D  2B4D               	goto	l3597
 10350     132E                     u6140:
 10351     132E                     l3593:
 10352     132E  0842               	movf	___fldiv@b,w
 10353     132F  00C6               	movwf	??___fldiv
 10354     1330  0843               	movf	___fldiv@b+1,w
 10355     1331  00C7               	movwf	??___fldiv+1
 10356     1332  0844               	movf	___fldiv@b+2,w
 10357     1333  00C8               	movwf	??___fldiv+2
 10358     1334  0845               	movf	___fldiv@b+3,w
 10359     1335  00C9               	movwf	??___fldiv+3
 10360     1336  3001               	movlw	1
 10361     1337  00CA               	movwf	??___fldiv+4
 10362     1338                     u6155:
 10363     1338  0D49               	rlf	??___fldiv+3,w
 10364     1339  0CC9               	rrf	??___fldiv+3,f
 10365     133A  0CC8               	rrf	??___fldiv+2,f
 10366     133B  0CC7               	rrf	??___fldiv+1,f
 10367     133C  0CC6               	rrf	??___fldiv,f
 10368     133D                     u6150:
 10369     133D  0BCA               	decfsz	??___fldiv+4,f
 10370     133E  2B38               	goto	u6155
 10371     133F  0849               	movf	??___fldiv+3,w
 10372     1340  00C5               	movwf	___fldiv@b+3
 10373     1341  0848               	movf	??___fldiv+2,w
 10374     1342  00C4               	movwf	___fldiv@b+2
 10375     1343  0847               	movf	??___fldiv+1,w
 10376     1344  00C3               	movwf	___fldiv@b+1
 10377     1345  0846               	movf	??___fldiv,w
 10378     1346  00C2               	movwf	___fldiv@b
 10379     1347                     l3595:
 10380     1347  3001               	movlw	1
 10381     1348  07D0               	addwf	___fldiv@new_exp,f
 10382     1349  1803               	skipnc
 10383     134A  0AD1               	incf	___fldiv@new_exp+1,f
 10384     134B  3000               	movlw	0
 10385     134C  07D1               	addwf	___fldiv@new_exp+1,f
 10386     134D                     l3597:
 10387     134D  0851               	movf	___fldiv@new_exp+1,w
 10388     134E  3A80               	xorlw	128
 10389     134F  00FF               	movwf	btemp+1
 10390     1350  3080               	movlw	128
 10391     1351  027F               	subwf	btemp+1,w
 10392     1352  1D03               	skipz
 10393     1353  2B56               	goto	u6165
 10394     1354  30FF               	movlw	255
 10395     1355  0250               	subwf	___fldiv@new_exp,w
 10396     1356                     u6165:
 10397     1356  1C03               	skipc
 10398     1357  2B59               	goto	u6161
 10399     1358  2B5A               	goto	u6160
 10400     1359                     u6161:
 10401     1359  2B68               	goto	l3601
 10402     135A                     u6160:
 10403     135A                     l3599:
 10404     135A  30FF               	movlw	255
 10405     135B  1283               	bcf	3,5	;RP0=0, select bank0
 10406     135C  1303               	bcf	3,6	;RP1=0, select bank0
 10407     135D  00D0               	movwf	___fldiv@new_exp
 10408     135E  3000               	movlw	0
 10409     135F  00D1               	movwf	___fldiv@new_exp+1
 10410     1360  3000               	movlw	0
 10411     1361  00C5               	movwf	___fldiv@b+3
 10412     1362  3000               	movlw	0
 10413     1363  00C4               	movwf	___fldiv@b+2
 10414     1364  3000               	movlw	0
 10415     1365  00C3               	movwf	___fldiv@b+1
 10416     1366  3000               	movlw	0
 10417     1367  00C2               	movwf	___fldiv@b
 10418     1368                     l3601:
 10419     1368  1283               	bcf	3,5	;RP0=0, select bank0
 10420     1369  1303               	bcf	3,6	;RP1=0, select bank0
 10421     136A  0851               	movf	___fldiv@new_exp+1,w
 10422     136B  3A80               	xorlw	128
 10423     136C  00FF               	movwf	btemp+1
 10424     136D  3080               	movlw	128
 10425     136E  027F               	subwf	btemp+1,w
 10426     136F  1D03               	skipz
 10427     1370  2B73               	goto	u6175
 10428     1371  3001               	movlw	1
 10429     1372  0250               	subwf	___fldiv@new_exp,w
 10430     1373                     u6175:
 10431     1373  1803               	skipnc
 10432     1374  2B76               	goto	u6171
 10433     1375  2B77               	goto	u6170
 10434     1376                     u6171:
 10435     1376  2B84               	goto	l749
 10436     1377                     u6170:
 10437     1377                     l3603:
 10438     1377  1283               	bcf	3,5	;RP0=0, select bank0
 10439     1378  1303               	bcf	3,6	;RP1=0, select bank0
 10440     1379  01D0               	clrf	___fldiv@new_exp
 10441     137A  01D1               	clrf	___fldiv@new_exp+1
 10442     137B                     l3605:
 10443     137B  3000               	movlw	0
 10444     137C  00C5               	movwf	___fldiv@b+3
 10445     137D  3000               	movlw	0
 10446     137E  00C4               	movwf	___fldiv@b+2
 10447     137F  3000               	movlw	0
 10448     1380  00C3               	movwf	___fldiv@b+1
 10449     1381  3000               	movlw	0
 10450     1382  00C2               	movwf	___fldiv@b
 10451     1383                     l3607:
 10452     1383  01CF               	clrf	___fldiv@sign
 10453     1384                     l749:
 10454     1384  1283               	bcf	3,5	;RP0=0, select bank0
 10455     1385  1303               	bcf	3,6	;RP1=0, select bank0
 10456     1386  0850               	movf	___fldiv@new_exp,w
 10457     1387  00D6               	movwf	___fldiv@bexp
 10458     1388                     l3609:
 10459     1388  1C56               	btfss	___fldiv@bexp,0
 10460     1389  2B8B               	goto	u6181
 10461     138A  2B8C               	goto	u6180
 10462     138B                     u6181:
 10463     138B  2B8E               	goto	l3613
 10464     138C                     u6180:
 10465     138C                     l3611:
 10466     138C  17C4               	bsf	___fldiv@b+2,7
 10467     138D  2B92               	goto	l751
 10468     138E                     l3613:
 10469     138E  307F               	movlw	127
 10470     138F  00C6               	movwf	??___fldiv
 10471     1390  0846               	movf	??___fldiv,w
 10472     1391  05C4               	andwf	___fldiv@b+2,f
 10473     1392                     l751:
 10474     1392  0856               	movf	___fldiv@bexp,w
 10475     1393  00C6               	movwf	??___fldiv
 10476     1394  1003               	clrc
 10477     1395  0C46               	rrf	??___fldiv,w
 10478     1396  00C5               	movwf	___fldiv@b+3
 10479     1397  084F               	movf	___fldiv@sign,w
 10480     1398  00C6               	movwf	??___fldiv
 10481     1399  0846               	movf	??___fldiv,w
 10482     139A  04C5               	iorwf	___fldiv@b+3,f
 10483     139B  2A38               	goto	l3521
 10484     139C                     l729:
 10485     139C  0008               	return
 10486     139D                     __end_of___fldiv:
 10487                           
 10488                           	psect	text30
 10489     1CDD                     __ptext30:	
 10490 ;; *************** function _Lcd_Write_String *****************
 10491 ;; Defined at:
 10492 ;;		line 98 in file "LCD.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;  a               2    5[COMMON] PTR unsigned char 
 10495 ;;		 -> valADC(3), STR_1(16), 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  i               2   10[COMMON] int 
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      void 
 10500 ;; Registers used:
 10501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10507 ;;      Params:         2       0       0       0       0
 10508 ;;      Locals:         2       0       0       0       0
 10509 ;;      Temps:          3       0       0       0       0
 10510 ;;      Totals:         7       0       0       0       0
 10511 ;;Total ram usage:        7 bytes
 10512 ;; Hardware stack levels used: 1
 10513 ;; Hardware stack levels required when called: 2
 10514 ;; This function calls:
 10515 ;;		_Lcd_Write_Char
 10516 ;; This function is called by:
 10517 ;;		_main
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521     1CDD                     _Lcd_Write_String:	
 10522                           ;psect for function _Lcd_Write_String
 10523                           
 10524     1CDD                     l3255:	
 10525                           ;incstack = 0
 10526                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10527                           
 10528                           
 10529                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
 10530     1CDD  01FA               	clrf	Lcd_Write_String@i
 10531     1CDE  01FB               	clrf	Lcd_Write_String@i+1
 10532     1CDF  2D02               	goto	l3261
 10533     1CE0                     l3257:
 10534                           
 10535                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
 10536     1CE0  087A               	movf	Lcd_Write_String@i,w
 10537     1CE1  0775               	addwf	Lcd_Write_String@a,w
 10538     1CE2  00F8               	movwf	??_Lcd_Write_String+1
 10539     1CE3  0876               	movf	Lcd_Write_String@a+1,w
 10540     1CE4  00F7               	movwf	??_Lcd_Write_String
 10541     1CE5  1803               	skipnc
 10542     1CE6  0AF7               	incf	??_Lcd_Write_String,f
 10543     1CE7  1FFA               	btfss	Lcd_Write_String@i,7
 10544     1CE8  2CEA               	goto	u5520
 10545     1CE9  03F7               	decf	??_Lcd_Write_String,f
 10546     1CEA                     u5520:
 10547     1CEA  0877               	movf	??_Lcd_Write_String,w
 10548     1CEB  00F9               	movwf	??_Lcd_Write_String+2
 10549     1CEC  0879               	movf	??_Lcd_Write_String+2,w
 10550     1CED  1283               	bcf	3,5	;RP0=0, select bank0
 10551     1CEE  1303               	bcf	3,6	;RP1=0, select bank0
 10552     1CEF  00FF               	movwf	btemp+1
 10553     1CF0  0878               	movf	??_Lcd_Write_String+1,w
 10554     1CF1  0084               	movwf	4
 10555     1CF2  160A  158A  2000  160A  158A  	fcall	stringtab
 10556     1CF7  160A  158A  2470  160A  158A  	fcall	_Lcd_Write_Char
 10557     1CFC                     l3259:
 10558     1CFC  3001               	movlw	1
 10559     1CFD  07FA               	addwf	Lcd_Write_String@i,f
 10560     1CFE  1803               	skipnc
 10561     1CFF  0AFB               	incf	Lcd_Write_String@i+1,f
 10562     1D00  3000               	movlw	0
 10563     1D01  07FB               	addwf	Lcd_Write_String@i+1,f
 10564     1D02                     l3261:
 10565     1D02  087A               	movf	Lcd_Write_String@i,w
 10566     1D03  0775               	addwf	Lcd_Write_String@a,w
 10567     1D04  00F8               	movwf	??_Lcd_Write_String+1
 10568     1D05  0876               	movf	Lcd_Write_String@a+1,w
 10569     1D06  00F7               	movwf	??_Lcd_Write_String
 10570     1D07  1803               	skipnc
 10571     1D08  0AF7               	incf	??_Lcd_Write_String,f
 10572     1D09  1FFA               	btfss	Lcd_Write_String@i,7
 10573     1D0A  2D0C               	goto	u5530
 10574     1D0B  03F7               	decf	??_Lcd_Write_String,f
 10575     1D0C                     u5530:
 10576     1D0C  0877               	movf	??_Lcd_Write_String,w
 10577     1D0D  00F9               	movwf	??_Lcd_Write_String+2
 10578     1D0E  0879               	movf	??_Lcd_Write_String+2,w
 10579     1D0F  1283               	bcf	3,5	;RP0=0, select bank0
 10580     1D10  1303               	bcf	3,6	;RP1=0, select bank0
 10581     1D11  00FF               	movwf	btemp+1
 10582     1D12  0878               	movf	??_Lcd_Write_String+1,w
 10583     1D13  0084               	movwf	4
 10584     1D14  160A  158A  2000  160A  158A  	fcall	stringtab
 10585     1D19  3A00               	xorlw	0
 10586     1D1A  1D03               	skipz
 10587     1D1B  2D1D               	goto	u5541
 10588     1D1C  2D1E               	goto	u5540
 10589     1D1D                     u5541:
 10590     1D1D  2CE0               	goto	l3257
 10591     1D1E                     u5540:
 10592     1D1E                     l112:
 10593     1D1E  0008               	return
 10594     1D1F                     __end_of_Lcd_Write_String:
 10595                           
 10596                           	psect	text31
 10597     1C70                     __ptext31:	
 10598 ;; *************** function _Lcd_Write_Char *****************
 10599 ;; Defined at:
 10600 ;;		line 83 in file "LCD.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;  a               1    wreg     unsigned char 
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;  a               1    4[COMMON] unsigned char 
 10605 ;;  y               1    3[COMMON] unsigned char 
 10606 ;;  temp            1    2[COMMON] unsigned char 
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      void 
 10609 ;; Registers used:
 10610 ;;		wreg, status,2, status,0, pclath, cstack
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10616 ;;      Params:         0       0       0       0       0
 10617 ;;      Locals:         3       0       0       0       0
 10618 ;;      Temps:          1       0       0       0       0
 10619 ;;      Totals:         4       0       0       0       0
 10620 ;;Total ram usage:        4 bytes
 10621 ;; Hardware stack levels used: 1
 10622 ;; Hardware stack levels required when called: 1
 10623 ;; This function calls:
 10624 ;;		_Lcd_Port
 10625 ;; This function is called by:
 10626 ;;		_Lcd_Write_String
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630     1C70                     _Lcd_Write_Char:	
 10631                           ;psect for function _Lcd_Write_Char
 10632                           
 10633                           
 10634                           ;incstack = 0
 10635                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10636                           ;Lcd_Write_Char@a stored from wreg
 10637     1C70  00F4               	movwf	Lcd_Write_Char@a
 10638     1C71                     l2813:
 10639                           
 10640                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
 10641     1C71  0874               	movf	Lcd_Write_Char@a,w
 10642     1C72  390F               	andlw	15
 10643     1C73  00F2               	movwf	Lcd_Write_Char@temp
 10644                           
 10645                           ;LCD.c: 86:     y = a & 0xF0;
 10646     1C74  0874               	movf	Lcd_Write_Char@a,w
 10647     1C75  39F0               	andlw	240
 10648     1C76  00F3               	movwf	Lcd_Write_Char@y
 10649     1C77                     l2815:
 10650                           
 10651                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
 10652     1C77  1283               	bcf	3,5	;RP0=0, select bank0
 10653     1C78  1303               	bcf	3,6	;RP1=0, select bank0
 10654     1C79  1508               	bsf	8,2	;volatile
 10655     1C7A                     l2817:
 10656                           
 10657                           ;LCD.c: 88:     Lcd_Port(y >> 4);
 10658     1C7A  0873               	movf	Lcd_Write_Char@y,w
 10659     1C7B  00F1               	movwf	??_Lcd_Write_Char
 10660     1C7C  3004               	movlw	4
 10661     1C7D                     u4335:
 10662     1C7D  1003               	clrc
 10663     1C7E  0CF1               	rrf	??_Lcd_Write_Char,f
 10664     1C7F  3EFF               	addlw	-1
 10665     1C80  1D03               	skipz
 10666     1C81  2C7D               	goto	u4335
 10667     1C82  0871               	movf	??_Lcd_Write_Char,w
 10668     1C83  160A  158A  23BC  160A  158A  	fcall	_Lcd_Port
 10669     1C88                     l2819:
 10670                           
 10671                           ;LCD.c: 89:     RD3 = 1;
 10672     1C88  1283               	bcf	3,5	;RP0=0, select bank0
 10673     1C89  1303               	bcf	3,6	;RP1=0, select bank0
 10674     1C8A  1588               	bsf	8,3	;volatile
 10675     1C8B                     l2821:
 10676                           
 10677                           ;LCD.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 10678     1C8B  300D               	movlw	13
 10679     1C8C  00F1               	movwf	??_Lcd_Write_Char
 10680     1C8D                     u6217:
 10681     1C8D  0BF1               	decfsz	??_Lcd_Write_Char,f
 10682     1C8E  2C8D               	goto	u6217
 10683     1C8F                     l2823:
 10684                           
 10685                           ;LCD.c: 91:     RD3 = 0;
 10686     1C8F  1283               	bcf	3,5	;RP0=0, select bank0
 10687     1C90  1303               	bcf	3,6	;RP1=0, select bank0
 10688     1C91  1188               	bcf	8,3	;volatile
 10689     1C92                     l2825:
 10690                           
 10691                           ;LCD.c: 92:     Lcd_Port(temp);
 10692     1C92  0872               	movf	Lcd_Write_Char@temp,w
 10693     1C93  160A  158A  23BC  160A  158A  	fcall	_Lcd_Port
 10694     1C98                     l2827:
 10695                           
 10696                           ;LCD.c: 93:     RD3 = 1;
 10697     1C98  1283               	bcf	3,5	;RP0=0, select bank0
 10698     1C99  1303               	bcf	3,6	;RP1=0, select bank0
 10699     1C9A  1588               	bsf	8,3	;volatile
 10700     1C9B                     l2829:
 10701                           
 10702                           ;LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 10703     1C9B  300D               	movlw	13
 10704     1C9C  00F1               	movwf	??_Lcd_Write_Char
 10705     1C9D                     u6227:
 10706     1C9D  0BF1               	decfsz	??_Lcd_Write_Char,f
 10707     1C9E  2C9D               	goto	u6227
 10708     1C9F                     l2831:
 10709                           
 10710                           ;LCD.c: 95:     RD3 = 0;
 10711     1C9F  1283               	bcf	3,5	;RP0=0, select bank0
 10712     1CA0  1303               	bcf	3,6	;RP1=0, select bank0
 10713     1CA1  1188               	bcf	8,3	;volatile
 10714     1CA2                     l106:
 10715     1CA2  0008               	return
 10716     1CA3                     __end_of_Lcd_Write_Char:
 10717                           
 10718                           	psect	text32
 10719     1D63                     __ptext32:	
 10720 ;; *************** function _Lcd_Set_Cursor *****************
 10721 ;; Defined at:
 10722 ;;		line 48 in file "LCD.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;  a               1    wreg     unsigned char 
 10725 ;;  b               1    4[COMMON] unsigned char 
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;  a               1    6[COMMON] unsigned char 
 10728 ;;  temp            1    9[COMMON] unsigned char 
 10729 ;;  y               1    8[COMMON] unsigned char 
 10730 ;;  z               1    7[COMMON] unsigned char 
 10731 ;; Return value:  Size  Location     Type
 10732 ;;                  1    wreg      void 
 10733 ;; Registers used:
 10734 ;;		wreg, status,2, status,0, pclath, cstack
 10735 ;; Tracked objects:
 10736 ;;		On entry : 0/0
 10737 ;;		On exit  : 0/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10740 ;;      Params:         1       0       0       0       0
 10741 ;;      Locals:         4       0       0       0       0
 10742 ;;      Temps:          1       0       0       0       0
 10743 ;;      Totals:         6       0       0       0       0
 10744 ;;Total ram usage:        6 bytes
 10745 ;; Hardware stack levels used: 1
 10746 ;; Hardware stack levels required when called: 2
 10747 ;; This function calls:
 10748 ;;		_Lcd_Cmd
 10749 ;; This function is called by:
 10750 ;;		_main
 10751 ;; This function uses a non-reentrant model
 10752 ;;
 10753                           
 10754     1D63                     _Lcd_Set_Cursor:	
 10755                           ;psect for function _Lcd_Set_Cursor
 10756                           
 10757                           
 10758                           ;incstack = 0
 10759                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10760                           ;Lcd_Set_Cursor@a stored from wreg
 10761     1D63  00F6               	movwf	Lcd_Set_Cursor@a
 10762     1D64                     l3235:
 10763                           
 10764                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
 10765     1D64  0376               	decf	Lcd_Set_Cursor@a,w
 10766     1D65  1D03               	btfss	3,2
 10767     1D66  2D68               	goto	u5481
 10768     1D67  2D69               	goto	u5480
 10769     1D68                     u5481:
 10770     1D68  2D86               	goto	l3245
 10771     1D69                     u5480:
 10772     1D69                     l3237:
 10773                           
 10774                           ;LCD.c: 51:         temp = 0x80 + b - 1;
 10775     1D69  0874               	movf	Lcd_Set_Cursor@b,w
 10776     1D6A  3E7F               	addlw	127
 10777     1D6B  00F9               	movwf	Lcd_Set_Cursor@temp
 10778                           
 10779                           ;LCD.c: 52:         z = temp >> 4;
 10780     1D6C  0879               	movf	Lcd_Set_Cursor@temp,w
 10781     1D6D  00F5               	movwf	??_Lcd_Set_Cursor
 10782     1D6E  3004               	movlw	4
 10783     1D6F                     u5495:
 10784     1D6F  1003               	clrc
 10785     1D70  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10786     1D71  3EFF               	addlw	-1
 10787     1D72  1D03               	skipz
 10788     1D73  2D6F               	goto	u5495
 10789     1D74  0875               	movf	??_Lcd_Set_Cursor,w
 10790     1D75  00F7               	movwf	Lcd_Set_Cursor@z
 10791     1D76                     l3239:
 10792                           
 10793                           ;LCD.c: 53:         y = temp & 0x0F;
 10794     1D76  0879               	movf	Lcd_Set_Cursor@temp,w
 10795     1D77  390F               	andlw	15
 10796     1D78  00F8               	movwf	Lcd_Set_Cursor@y
 10797     1D79                     l3241:
 10798                           
 10799                           ;LCD.c: 54:         Lcd_Cmd(z);
 10800     1D79  0877               	movf	Lcd_Set_Cursor@z,w
 10801     1D7A  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10802     1D7F                     l3243:
 10803                           
 10804                           ;LCD.c: 55:         Lcd_Cmd(y);
 10805     1D7F  0878               	movf	Lcd_Set_Cursor@y,w
 10806     1D80  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10807                           
 10808                           ;LCD.c: 56:     } else if (a == 2) {
 10809     1D85  2DA8               	goto	l100
 10810     1D86                     l3245:
 10811     1D86  3002               	movlw	2
 10812     1D87  0676               	xorwf	Lcd_Set_Cursor@a,w
 10813     1D88  1D03               	btfss	3,2
 10814     1D89  2D8B               	goto	u5501
 10815     1D8A  2D8C               	goto	u5500
 10816     1D8B                     u5501:
 10817     1D8B  2DA8               	goto	l100
 10818     1D8C                     u5500:
 10819     1D8C                     l3247:
 10820                           
 10821                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
 10822     1D8C  0874               	movf	Lcd_Set_Cursor@b,w
 10823     1D8D  3EBF               	addlw	191
 10824     1D8E  00F9               	movwf	Lcd_Set_Cursor@temp
 10825                           
 10826                           ;LCD.c: 58:         z = temp >> 4;
 10827     1D8F  0879               	movf	Lcd_Set_Cursor@temp,w
 10828     1D90  00F5               	movwf	??_Lcd_Set_Cursor
 10829     1D91  3004               	movlw	4
 10830     1D92                     u5515:
 10831     1D92  1003               	clrc
 10832     1D93  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10833     1D94  3EFF               	addlw	-1
 10834     1D95  1D03               	skipz
 10835     1D96  2D92               	goto	u5515
 10836     1D97  0875               	movf	??_Lcd_Set_Cursor,w
 10837     1D98  00F7               	movwf	Lcd_Set_Cursor@z
 10838     1D99                     l3249:
 10839                           
 10840                           ;LCD.c: 59:         y = temp & 0x0F;
 10841     1D99  0879               	movf	Lcd_Set_Cursor@temp,w
 10842     1D9A  390F               	andlw	15
 10843     1D9B  00F8               	movwf	Lcd_Set_Cursor@y
 10844     1D9C                     l3251:
 10845                           
 10846                           ;LCD.c: 60:         Lcd_Cmd(z);
 10847     1D9C  0877               	movf	Lcd_Set_Cursor@z,w
 10848     1D9D  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10849     1DA2                     l3253:
 10850                           
 10851                           ;LCD.c: 61:         Lcd_Cmd(y);
 10852     1DA2  0878               	movf	Lcd_Set_Cursor@y,w
 10853     1DA3  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10854     1DA8                     l100:
 10855     1DA8  0008               	return
 10856     1DA9                     __end_of_Lcd_Set_Cursor:
 10857                           
 10858                           	psect	text33
 10859     1DFD                     __ptext33:	
 10860 ;; *************** function _Lcd_Init *****************
 10861 ;; Defined at:
 10862 ;;		line 65 in file "LCD.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;		None
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;		None
 10867 ;; Return value:  Size  Location     Type
 10868 ;;                  1    wreg      void 
 10869 ;; Registers used:
 10870 ;;		wreg, status,2, status,0, pclath, cstack
 10871 ;; Tracked objects:
 10872 ;;		On entry : 0/0
 10873 ;;		On exit  : 0/0
 10874 ;;		Unchanged: 0/0
 10875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10876 ;;      Params:         0       0       0       0       0
 10877 ;;      Locals:         0       0       0       0       0
 10878 ;;      Temps:          2       0       0       0       0
 10879 ;;      Totals:         2       0       0       0       0
 10880 ;;Total ram usage:        2 bytes
 10881 ;; Hardware stack levels used: 1
 10882 ;; Hardware stack levels required when called: 2
 10883 ;; This function calls:
 10884 ;;		_Lcd_Cmd
 10885 ;;		_Lcd_Port
 10886 ;; This function is called by:
 10887 ;;		_main
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891     1DFD                     _Lcd_Init:	
 10892                           ;psect for function _Lcd_Init
 10893                           
 10894     1DFD                     l3223:	
 10895                           ;incstack = 0
 10896                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10897                           
 10898                           
 10899                           ;LCD.c: 66:     Lcd_Port(0x00);
 10900     1DFD  3000               	movlw	0
 10901     1DFE  160A  158A  23BC  160A  158A  	fcall	_Lcd_Port
 10902     1E03                     l3225:
 10903                           
 10904                           ;LCD.c: 67:     _delay((unsigned long)((20)*(4000000/4000.0)));
 10905     1E03  301A               	movlw	26
 10906     1E04  00F5               	movwf	??_Lcd_Init+1
 10907     1E05  30F8               	movlw	248
 10908     1E06  00F4               	movwf	??_Lcd_Init
 10909     1E07                     u6237:
 10910     1E07  0BF4               	decfsz	??_Lcd_Init,f
 10911     1E08  2E07               	goto	u6237
 10912     1E09  0BF5               	decfsz	??_Lcd_Init+1,f
 10913     1E0A  2E07               	goto	u6237
 10914     1E0B  0000               	nop
 10915     1E0C                     l3227:
 10916                           
 10917                           ;LCD.c: 68:     Lcd_Cmd(0x03);
 10918     1E0C  3003               	movlw	3
 10919     1E0D  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10920                           
 10921                           ;LCD.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10922     1E12  3007               	movlw	7
 10923     1E13  00F5               	movwf	??_Lcd_Init+1
 10924     1E14  307D               	movlw	125
 10925     1E15  00F4               	movwf	??_Lcd_Init
 10926     1E16                     u6247:
 10927     1E16  0BF4               	decfsz	??_Lcd_Init,f
 10928     1E17  2E16               	goto	u6247
 10929     1E18  0BF5               	decfsz	??_Lcd_Init+1,f
 10930     1E19  2E16               	goto	u6247
 10931     1E1A                     l3229:
 10932                           
 10933                           ;LCD.c: 70:     Lcd_Cmd(0x03);
 10934     1E1A  3003               	movlw	3
 10935     1E1B  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10936     1E20                     l3231:
 10937                           
 10938                           ;LCD.c: 71:     _delay((unsigned long)((11)*(4000000/4000.0)));
 10939     1E20  300F               	movlw	15
 10940     1E21  00F5               	movwf	??_Lcd_Init+1
 10941     1E22  3047               	movlw	71
 10942     1E23  00F4               	movwf	??_Lcd_Init
 10943     1E24                     u6257:
 10944     1E24  0BF4               	decfsz	??_Lcd_Init,f
 10945     1E25  2E24               	goto	u6257
 10946     1E26  0BF5               	decfsz	??_Lcd_Init+1,f
 10947     1E27  2E24               	goto	u6257
 10948     1E28  2E29               	nop2
 10949                           
 10950                           ;LCD.c: 72:     Lcd_Cmd(0x03);
 10951     1E29  3003               	movlw	3
 10952     1E2A  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10953                           
 10954                           ;LCD.c: 74:     Lcd_Cmd(0x02);
 10955     1E2F  3002               	movlw	2
 10956     1E30  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10957                           
 10958                           ;LCD.c: 75:     Lcd_Cmd(0x02);
 10959     1E35  3002               	movlw	2
 10960     1E36  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10961                           
 10962                           ;LCD.c: 76:     Lcd_Cmd(0x08);
 10963     1E3B  3008               	movlw	8
 10964     1E3C  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10965                           
 10966                           ;LCD.c: 77:     Lcd_Cmd(0x00);
 10967     1E41  3000               	movlw	0
 10968     1E42  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10969                           
 10970                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
 10971     1E47  300C               	movlw	12
 10972     1E48  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10973                           
 10974                           ;LCD.c: 79:     Lcd_Cmd(0x00);
 10975     1E4D  3000               	movlw	0
 10976     1E4E  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10977                           
 10978                           ;LCD.c: 80:     Lcd_Cmd(0x06);
 10979     1E53  3006               	movlw	6
 10980     1E54  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 10981     1E59                     l103:
 10982     1E59  0008               	return
 10983     1E5A                     __end_of_Lcd_Init:
 10984                           
 10985                           	psect	text34
 10986     1B6D                     __ptext34:	
 10987 ;; *************** function _Lcd_Clear *****************
 10988 ;; Defined at:
 10989 ;;		line 43 in file "LCD.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;		None
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;		None
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      void 
 10996 ;; Registers used:
 10997 ;;		wreg, status,2, status,0, pclath, cstack
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11003 ;;      Params:         0       0       0       0       0
 11004 ;;      Locals:         0       0       0       0       0
 11005 ;;      Temps:          0       0       0       0       0
 11006 ;;      Totals:         0       0       0       0       0
 11007 ;;Total ram usage:        0 bytes
 11008 ;; Hardware stack levels used: 1
 11009 ;; Hardware stack levels required when called: 2
 11010 ;; This function calls:
 11011 ;;		_Lcd_Cmd
 11012 ;; This function is called by:
 11013 ;;		_main
 11014 ;; This function uses a non-reentrant model
 11015 ;;
 11016                           
 11017     1B6D                     _Lcd_Clear:	
 11018                           ;psect for function _Lcd_Clear
 11019                           
 11020     1B6D                     l3233:	
 11021                           ;incstack = 0
 11022                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 11023                           
 11024                           
 11025                           ;LCD.c: 44:     Lcd_Cmd(0);
 11026     1B6D  3000               	movlw	0
 11027     1B6E  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 11028                           
 11029                           ;LCD.c: 45:     Lcd_Cmd(1);
 11030     1B73  3001               	movlw	1
 11031     1B74  160A  158A  23A2  160A  158A  	fcall	_Lcd_Cmd
 11032     1B79                     l94:
 11033     1B79  0008               	return
 11034     1B7A                     __end_of_Lcd_Clear:
 11035                           
 11036                           	psect	text35
 11037     1BA2                     __ptext35:	
 11038 ;; *************** function _Lcd_Cmd *****************
 11039 ;; Defined at:
 11040 ;;		line 35 in file "LCD.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;  a               1    wreg     unsigned char 
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;  a               1    3[COMMON] unsigned char 
 11045 ;; Return value:  Size  Location     Type
 11046 ;;                  1    wreg      void 
 11047 ;; Registers used:
 11048 ;;		wreg, status,2, status,0, pclath, cstack
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11054 ;;      Params:         0       0       0       0       0
 11055 ;;      Locals:         1       0       0       0       0
 11056 ;;      Temps:          2       0       0       0       0
 11057 ;;      Totals:         3       0       0       0       0
 11058 ;;Total ram usage:        3 bytes
 11059 ;; Hardware stack levels used: 1
 11060 ;; Hardware stack levels required when called: 1
 11061 ;; This function calls:
 11062 ;;		_Lcd_Port
 11063 ;; This function is called by:
 11064 ;;		_Lcd_Clear
 11065 ;;		_Lcd_Set_Cursor
 11066 ;;		_Lcd_Init
 11067 ;;		_Lcd_Shift_Right
 11068 ;;		_Lcd_Shift_Left
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072     1BA2                     _Lcd_Cmd:	
 11073                           ;psect for function _Lcd_Cmd
 11074                           
 11075                           
 11076                           ;incstack = 0
 11077                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11078                           ;Lcd_Cmd@a stored from wreg
 11079     1BA2  00F3               	movwf	Lcd_Cmd@a
 11080     1BA3                     l2803:
 11081                           
 11082                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
 11083     1BA3  1283               	bcf	3,5	;RP0=0, select bank0
 11084     1BA4  1303               	bcf	3,6	;RP1=0, select bank0
 11085     1BA5  1108               	bcf	8,2	;volatile
 11086     1BA6                     l2805:
 11087                           
 11088                           ;LCD.c: 37:     Lcd_Port(a);
 11089     1BA6  0873               	movf	Lcd_Cmd@a,w
 11090     1BA7  160A  158A  23BC  160A  158A  	fcall	_Lcd_Port
 11091     1BAC                     l2807:
 11092                           
 11093                           ;LCD.c: 38:     RD3 = 1;
 11094     1BAC  1283               	bcf	3,5	;RP0=0, select bank0
 11095     1BAD  1303               	bcf	3,6	;RP1=0, select bank0
 11096     1BAE  1588               	bsf	8,3	;volatile
 11097     1BAF                     l2809:
 11098                           
 11099                           ;LCD.c: 39:     _delay((unsigned long)((4)*(4000000/4000.0)));
 11100     1BAF  3006               	movlw	6
 11101     1BB0  00F2               	movwf	??_Lcd_Cmd+1
 11102     1BB1  3030               	movlw	48
 11103     1BB2  00F1               	movwf	??_Lcd_Cmd
 11104     1BB3                     u6267:
 11105     1BB3  0BF1               	decfsz	??_Lcd_Cmd,f
 11106     1BB4  2BB3               	goto	u6267
 11107     1BB5  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11108     1BB6  2BB3               	goto	u6267
 11109     1BB7  0000               	nop
 11110     1BB8                     l2811:
 11111                           
 11112                           ;LCD.c: 40:     RD3 = 0;
 11113     1BB8  1283               	bcf	3,5	;RP0=0, select bank0
 11114     1BB9  1303               	bcf	3,6	;RP1=0, select bank0
 11115     1BBA  1188               	bcf	8,3	;volatile
 11116     1BBB                     l91:
 11117     1BBB  0008               	return
 11118     1BBC                     __end_of_Lcd_Cmd:
 11119                           
 11120                           	psect	text36
 11121     1BBC                     __ptext36:	
 11122 ;; *************** function _Lcd_Port *****************
 11123 ;; Defined at:
 11124 ;;		line 13 in file "LCD.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;  a               1    wreg     unsigned char 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  a               1    0[COMMON] unsigned char 
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  1    wreg      void 
 11131 ;; Registers used:
 11132 ;;		wreg
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11138 ;;      Params:         0       0       0       0       0
 11139 ;;      Locals:         1       0       0       0       0
 11140 ;;      Temps:          0       0       0       0       0
 11141 ;;      Totals:         1       0       0       0       0
 11142 ;;Total ram usage:        1 bytes
 11143 ;; Hardware stack levels used: 1
 11144 ;; This function calls:
 11145 ;;		Nothing
 11146 ;; This function is called by:
 11147 ;;		_Lcd_Cmd
 11148 ;;		_Lcd_Init
 11149 ;;		_Lcd_Write_Char
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153     1BBC                     _Lcd_Port:	
 11154                           ;psect for function _Lcd_Port
 11155                           
 11156                           
 11157                           ;incstack = 0
 11158                           ; Regs used in _Lcd_Port: [wreg]
 11159                           ;Lcd_Port@a stored from wreg
 11160     1BBC  00F0               	movwf	Lcd_Port@a
 11161     1BBD                     l2319:
 11162                           
 11163                           ;LCD.c: 14:     if (a & 1)
 11164     1BBD  1C70               	btfss	Lcd_Port@a,0
 11165     1BBE  2BC0               	goto	u3131
 11166     1BBF  2BC1               	goto	u3130
 11167     1BC0                     u3131:
 11168     1BC0  2BC5               	goto	l80
 11169     1BC1                     u3130:
 11170     1BC1                     l2321:
 11171                           
 11172                           ;LCD.c: 15:         RD4 = 1;
 11173     1BC1  1283               	bcf	3,5	;RP0=0, select bank0
 11174     1BC2  1303               	bcf	3,6	;RP1=0, select bank0
 11175     1BC3  1608               	bsf	8,4	;volatile
 11176     1BC4  2BC8               	goto	l81
 11177     1BC5                     l80:	
 11178                           ;LCD.c: 16:     else
 11179                           
 11180                           
 11181                           ;LCD.c: 17:         RD4 = 0;
 11182     1BC5  1283               	bcf	3,5	;RP0=0, select bank0
 11183     1BC6  1303               	bcf	3,6	;RP1=0, select bank0
 11184     1BC7  1208               	bcf	8,4	;volatile
 11185     1BC8                     l81:
 11186                           
 11187                           ;LCD.c: 19:     if (a & 2)
 11188     1BC8  1CF0               	btfss	Lcd_Port@a,1
 11189     1BC9  2BCB               	goto	u3141
 11190     1BCA  2BCC               	goto	u3140
 11191     1BCB                     u3141:
 11192     1BCB  2BCE               	goto	l82
 11193     1BCC                     u3140:
 11194     1BCC                     l2323:
 11195                           
 11196                           ;LCD.c: 20:         RD5 = 1;
 11197     1BCC  1688               	bsf	8,5	;volatile
 11198     1BCD  2BCF               	goto	l83
 11199     1BCE                     l82:	
 11200                           ;LCD.c: 21:     else
 11201                           
 11202                           
 11203                           ;LCD.c: 22:         RD5 = 0;
 11204     1BCE  1288               	bcf	8,5	;volatile
 11205     1BCF                     l83:
 11206                           
 11207                           ;LCD.c: 24:     if (a & 4)
 11208     1BCF  1D70               	btfss	Lcd_Port@a,2
 11209     1BD0  2BD2               	goto	u3151
 11210     1BD1  2BD3               	goto	u3150
 11211     1BD2                     u3151:
 11212     1BD2  2BD5               	goto	l84
 11213     1BD3                     u3150:
 11214     1BD3                     l2325:
 11215                           
 11216                           ;LCD.c: 25:         RD6 = 1;
 11217     1BD3  1708               	bsf	8,6	;volatile
 11218     1BD4  2BD6               	goto	l85
 11219     1BD5                     l84:	
 11220                           ;LCD.c: 26:     else
 11221                           
 11222                           
 11223                           ;LCD.c: 27:         RD6 = 0;
 11224     1BD5  1308               	bcf	8,6	;volatile
 11225     1BD6                     l85:
 11226                           
 11227                           ;LCD.c: 29:     if (a & 8)
 11228     1BD6  1DF0               	btfss	Lcd_Port@a,3
 11229     1BD7  2BD9               	goto	u3161
 11230     1BD8  2BDA               	goto	u3160
 11231     1BD9                     u3161:
 11232     1BD9  2BDC               	goto	l86
 11233     1BDA                     u3160:
 11234     1BDA                     l2327:
 11235                           
 11236                           ;LCD.c: 30:         RD7 = 1;
 11237     1BDA  1788               	bsf	8,7	;volatile
 11238     1BDB  2BDD               	goto	l88
 11239     1BDC                     l86:	
 11240                           ;LCD.c: 31:     else
 11241                           
 11242                           
 11243                           ;LCD.c: 32:         RD7 = 0;
 11244     1BDC  1388               	bcf	8,7	;volatile
 11245     1BDD                     l88:
 11246     1BDD  0008               	return
 11247     1BDE                     __end_of_Lcd_Port:
 11248     007E                     btemp	set	126	;btemp
 11249     007E                     wtemp0	set	126
 11250                           
 11251                           	psect	idloc
 11252                           
 11253                           ;Config register IDLOC0 @ 0x2000
 11254                           ;	unspecified, using default values
 11255     2000                     	org	8192
 11256     2000  3FFF               	dw	16383
 11257                           
 11258                           ;Config register IDLOC1 @ 0x2001
 11259                           ;	unspecified, using default values
 11260     2001                     	org	8193
 11261     2001  3FFF               	dw	16383
 11262                           
 11263                           ;Config register IDLOC2 @ 0x2002
 11264                           ;	unspecified, using default values
 11265     2002                     	org	8194
 11266     2002  3FFF               	dw	16383
 11267                           
 11268                           ;Config register IDLOC3 @ 0x2003
 11269                           ;	unspecified, using default values
 11270     2003                     	org	8195
 11271     2003  3FFF               	dw	16383
 11272                           
 11273                           	psect	config
 11274                           
 11275                           ;Config register CONFIG1 @ 0x2007
 11276                           ;	Oscillator Selection bits
 11277                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11278                           ;	Watchdog Timer Enable bit
 11279                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11280                           ;	Power-up Timer Enable bit
 11281                           ;	PWRTE = OFF, PWRT disabled
 11282                           ;	RE3/MCLR pin function select bit
 11283                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11284                           ;	Code Protection bit
 11285                           ;	CP = OFF, Program memory code protection is disabled
 11286                           ;	Data Code Protection bit
 11287                           ;	CPD = OFF, Data memory code protection is disabled
 11288                           ;	Brown Out Reset Selection bits
 11289                           ;	BOREN = OFF, BOR disabled
 11290                           ;	Internal External Switchover bit
 11291                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11292                           ;	Fail-Safe Clock Monitor Enabled bit
 11293                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11294                           ;	Low Voltage Programming Enable bit
 11295                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11296                           ;	In-Circuit Debugger Mode bit
 11297                           ;	DEBUG = 0x1, unprogramme 11298     2007                     	org	8199
 11299     2007  20D4               	dw	8404
 11300                           
 11301                           ;Config register CONFIG2 @ 0x2008
 11302                           ;	Brown-out Reset Selection bit
 11303                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11304                           ;	Flash Program Memory Self Write Enable bits
 11305                           ;	WRT = OFF, Write protection off
 11306     2008                     	org	8200
 11307     2008  3FFF               	dw	16383

Data Sizes:
    Strings     21
    Constant    144
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     39      51
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> valADC(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> valADC(BANK1[3]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _portsetup->_spiInit
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40237
                                             35 BANK1      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _portsetup
                        _setupINTOSC
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31595
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     496
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     608
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _portsetup
     _spiInit
   _setupINTOSC
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      90       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      33       7       63.7%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      90      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 02:57:13 2023

            ___fldiv@aexp 0057              ___fldiv@bexp 0056                         pc 0002  
            ___fldiv@sign 004F               _SSPSTATbits 0094                        l63 1BFF  
                      l80 1BC5                        l81 1BC8                        l82 1BCE  
                      l83 1BCF                        l91 1BBB                        l84 1BD5  
                      l85 1BD6                        l86 1BDC                        l94 1B79  
                      l88 1BDD              ___awdiv@sign 0021                        fsr 0004  
     ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076                       l100 1DA8  
                     l103 1E59                       l112 1D1E                       l106 1CA2  
                     l131 1EB8                       l123 1E65                       l124 1E71  
                     l125 1E7D                       l126 1E89                       l127 1E95  
                     l151 1B52                       l128 1EA1                       l129 1EAC  
                     l154 1B58                       l147 1B9C                       l148 1BA1  
                     l340 07EA                       l165 1B61                       l157 1B51  
                     l510 105A                       l334 07A7                       l326 0646  
                     l319 0608                       l600 1DFC                       l344 1C30  
                     l530 001F                       l346 1C48                       l514 095B  
                     l274 0FFF                       l531 003B                       l515 08C2  
                     l267 15A7                       l532 0050                       l380 1F1E  
                     l525 094E                       l293 0218                       l702 1795  
                     l518 091E                       l535 081E                       l543 1B6C  
                     l713 17F5                       l705 17D3                       l561 1111  
                     l538 088A                       l714 17FF                       l554 1FEA  
                     l562 1085                       l650 1D62                       l539 08A3  
                     l547 1FFF                       l811 1134                       l572 1104  
                     l660 1CDC                       l717 1C23                       l557 1FFF  
                     l813 11C9                       l565 10D4                       l751 1392  
                     l743 1312                       l727 1220                       l671 1603  
                     l831 1B8B                       l824 1193                       l729 139C  
                     l825 119F                       l817 1177                       l497 1F87  
                     l675 1686                       l692 174F                       l684 17FF  
                     l749 1384                       l677 165F                       l773 0C10  
                     l767 0CA0                       l696 1773                       l786 1C5D  
                     l779 0C94                       l788 1C6F                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       fsr0 0004                       indf 0000  
            ___awmod@sign 0076              ___flmul@aexp 0036              ___flmul@bexp 0037  
            ___flmul@sign 0031              ___flmul@temp 003C              ___flmul@prod 0038  
            ___fltol@exp1 005A                      l3011 1C26                      l3003 0943  
                    l3101 1FBA                      l3013 1C2A                      l3005 0953  
                    l3103 1FBE                      l3111 1FD8                      l3031 1EDD  
                    l3023 1EB9                      l3015 1C37                      l2311 1C57  
                    l2321 1BC1                      l3201 1E83                      l3121 1FF4  
                    l3041 1F10                      l3033 1EE6                      l3025 1EC9  
                    l3017 1C3E                      l3009 1C24                      l2313 1C66  
                    l2305 1C4A                      l2401 1046                      l2323 1BCC  
                    l3211 1EB5                      l3203 1E8F                      l3051 0033  
                    l3035 1EF8                      l3027 1ECC                      l3043 1F16  
                    l3131 1DC5                      l3123 1DA9                      l3019 1C44  
                    l2315 1C6B                      l2307 1C4C                      l2411 1D1F  
                    l2331 1F22                      l2403 104C                      l2325 1BD3  
                    l3221 1BF6                      l3213 1BDE                      l3205 1E9B  
                    l3053 004D                      l3061 0816                      l2501 15FB  
                    l3117 1FDF                      l3109 1FC6                      l3037 1F06  
                    l3029 1ED9                      l3133 1DD7                      l3125 1DB1  
                    l2309 1C53                      l2421 1D35                      l2413 1D21  
                    l2341 1F36                      l2333 1F26                      l2405 1051  
                    l2327 1BDA                      l2319 1BBD                      l3231 1E20  
                    l3223 1DFD                      l3215 1BF1                      l3207 1EA6  
                    l3055 004F                      l3047 0003                      l3071 0866  
                    l3063 0832                      l2511 1615                      l2503 1609  
                    l3143 1C00                      l3119 1FEF                      l3039 1F07  
                    l3135 1DE5                      l3127 1DB4                      l3151 1118  
                    l2431 1D58                      l2423 1D39                      l2415 1D27  
                    l2351 1F4C                      l2343 1F3A                      l2335 1F2B  
                    l2407 1056                      l3311 024A                      l3303 021A  
                    l3233 1B6D                      l3225 1E03                      l3241 1D79  
                    l3217 1BF2                      l3209 1EB1                      l3049 0017  
                    l3073 08A0                      l3065 083A                      l3081 1B6A  
                    l2601 176E                      l2521 161F                      l2513 1617  
                    l2505 160D                      l3145 1C04                      l3137 1DEE  
                    l3129 1DC1                      l3161 1145                      l3153 111C  
                    l2425 1D4A                      l2417 1D2A                      l2433 1D5E  
                    l2441 1CAC                      l2361 1F6C                      l2353 1F50  
                    l2345 1F3C                      l2337 1F2D                      l2329 1F1F  
                    l3401 05DF                      l3321 0292                      l3313 0258  
                    l3305 0236                      l3227 1E0C                      l3251 1D9C  
                    l3243 1D7F                      l3235 1D64                      l3219 1BF5  
                    l3075 08A2                      l3067 083E                      l3059 0802  
                    l3083 1B6C                      l2611 1781                      l2603 1772  
                    l2531 1629                      l2523 1621                      l2515 1619  
                    l2507 1611                      l3139 1DF4                      l3171 116E  
                    l3163 1148                      l3155 112C                      l2427 1D50  
                    l2419 1D31                      l2451 1CCB                      l2443 1CB3  
                    l2363 1F73                      l2355 1F54                      l2347 1F42  
                    l2339 1F31                      l3411 0621                      l3403 05FE  
                    l3331 02D3                      l3323 0296                      l3315 025C  
                    l3307 0242                      l3229 1E1A                      l3253 1DA2  
                    l3237 1D69                      l3245 1D86                      l3261 1D02  
                    l3501 11FE                      l3069 0862                      l2621 1792  
                    l2605 1777                      l2613 1783                      l2541 1647  
                    l2533 162B                      l2525 1623                      l2517 161B  
                    l2509 1613                      l2461 15AD                      l3093 1F9C  
                    l3181 11A1                      l3173 117E                      l3165 1155  
                    l3157 113C                      l3149 1113                      l2701 09DE  
                    l2429 1D51                      l2453 1CD2                      l2445 1CB7  
                    l2437 1CA3                      l2357 1F65                      l2349 1F45  
                    l2365 1F79                      l2381 100E                      l2373 1002  
                    l3421 0654                      l3413 062E                      l3405 0610  
                    l3341 035A                      l3333 02E6                      l3325 02AF  
                    l3317 0275                      l3309 0246                      l3247 1D8C  
                    l3239 1D76                      l3255 1CDD                      l3511 1215  
                    l3503 1202                      l3263 1B4D                      l3079 1B62  
                    l2631 17B1                      l2607 177A                      l2615 1787  
                    l2551 1671                      l2543 1663                      l2535 162D  
                    l2527 1625                      l2519 161D                      l2471 15C0  
                    l2463 15B1                      l3095 1FAF                      l3087 1F88  
                    l3183 11B7                      l3175 1189                      l3167 115C  
                    l2711 0A77                      l2703 09F9                      l2447 1CBB  
                    l2439 1CA9                      l2455 1CD8                      l2367 1F7E  
                    l2359 1F6B                      l2391 1027                      l2383 1012  
                    l2375 1003                      l3431 0711                      l3423 0659  
                    l3415 063D                      l3407 0617                      l3351 03AE  
                    l3343 0373                      l3335 02EA                      l3327 02BA  
                    l3319 028E                      l3271 01AE                      l3249 1D99  
                    l3257 1CE0                      l3601 1368                      l3521 1238  
                    l3513 1216                      l3505 1203                      l2801 1B9B  
                    l3193 1E5B                      l3265 1B59                      l2641 17EA  
                    l2633 17CF                      l2625 179A                      l2617 1788  
                    l2609 177C                      l2553 167A                      l2545 166A  
                    l2529 1627                      l2537 162F                      l2481 15D6  
                    l2473 15C8                      l2465 15B5                      l3097 1FB0  
                    l3089 1F93                      l3185 11BC                      l3177 118D  
                    l3169 1160                      l2721 0AD6                      l2713 0A80  
                    l2705 0A15                      l2449 1CC5                      l2369 1F83  
                    l2393 102B                      l2385 1017                      l2377 1007  
                    l3441 0782                      l3433 0730                      l3425 065D  
                    l3417 0642                      l3409 061B                      l3361 0455  
                    l3353 03F5                      l3345 037C                      l3337 02F0  
                    l3329 02C0                      l3281 01C3                      l3273 01B1  
                    l2811 1BB8                      l2803 1BA3                      l3259 1CFC  
                    l3611 138C                      l3603 1377                      l3531 124F  
                    l3507 1208                      l3515 1218                      l3195 1E61  
                    l3267 1B5E                      l2651 17FE                      l2643 17EB  
                    l2635 17D8                      l2627 179F                      l2619 178C  
                    l2571 16BE                      l2563 1698                      l2547 166C  
                    l2555 167E                      l2539 1630                      l2491 15E6  
                    l2483 15DC                      l2475 15C9                      l2467 15B6  
                    l2459 15A8                      l3099 1FB8                      l3187 11C0  
                    l3179 1197                      l2731 0B6E                      l2723 0AED  
                    l2715 0A8E                      l2707 0A3F                      l2395 102F  
                    l2387 101D                      l2379 100C                      l3451 07A1  
                    l3443 0786                      l3435 073A                      l3427 067B  
                    l3419 064F                      l3363 0470                      l3355 0404  
                    l3347 0397                      l3339 030F                      l3291 01EC  
                    l3283 01CF                      l3275 01B7                      l2805 1BA6  
                    l2821 1C8B                      l2813 1C71                      l3613 138E  
                    l3605 137B                      l3541 127B                      l3533 1261  
                    l3517 1228                      l3525 1241                      l3509 120D  
                    l3197 1E6B                      l2645 17EF                      l2637 17DD  
                    l2629 17AD                      l2573 16C0                      l2565 16AF  
                    l2557 168A                      l2581 16D3                      l2549 1670  
                    l2493 15EB                      l2485 15DD                      l2469 15BB  
                    l2477 15CB                      l3189 11C1                      l2741 0BDC  
                    l2733 0B94                      l2725 0B0A                      l2717 0AAB  
                    l2709 0A5B                      l2661 096A                      l2653 095C  
                    l2901 1B8A                      l2397 1039                      l2389 1020  
                    l3461 07D0                      l3453 07B2                      l3445 078C  
                    l3429 06D6                      l3437 0775                      l3381 054B  
                    l3373 04BE                      l3365 0479                      l3357 041F  
                    l3349 039F                      l3293 01FF                      l3285 01D0  
                    l3277 01BC                      l3621 006E                      l2807 1BAC  
                    l2831 1C9F                      l2823 1C8F                      l2815 1C77  
                    l3607 1383                      l3543 1280                      l3551 12A0  
                    l3535 1269                      l3527 1246                      l3519 1234  
                    l3199 1E77                      l2647 17F1                      l2639 17E5  
                    l2583 16E9                      l2591 1741                      l2575 16C4  
                    l2567 16B3                      l2559 168F                      l2495 15F0  
                    l2487 15E1                      l2479 15D3                      l2911 1075  
                    l2751 0BF4                      l2743 0BE0                      l2735 0BBC  
                    l2727 0B35                      l2719 0AB9                      l2671 0986  
                    l2663 096F                      l2655 0961                      l2399 103F  
                    l3455 07B3                      l3439 077D                      l3391 0584  
                    l3367 0481                      l3359 0446                      l3375 04C7  
                    l3447 0793                      l3295 0203                      l3287 01D4  
                    l3279 01C1                      l3631 0089                      l3623 0077  
                    l2809 1BAF                      l2825 1C92                      l2817 1C7A  
                    l3609 1388                      l3561 12CB                      l3553 12B2  
                    l3545 1292                      l3537 1271                      l3481 11D3  
                    l2833 1B52                      l2649 17FA                      l2593 1757  
                    l2585 1727                      l2577 16C5                      l2569 16B7  
                    l2497 15F8                      l2489 15E5                      l2921 109B  
                    l2905 105B                      l2761 0C15                      l2753 0BF5  
                    l2745 0BE1                      l2737 0BC5                      l2729 0B43  
                    l2681 0999                      l2673 098B                      l2665 0974  
                    l2657 0965                      l3457 07C2                      l3449 0799  
                    l3393 058E                      l3377 04FC                      l3369 049F  
                    l3289 01D7                      l3297 0214                      l3465 07D6  
                    l3641 00A3                      l3633 0091                      l3625 007A  
                    l2827 1C98                      l2819 1C88                      l3571 12E3  
                    l3563 12D3                      l3555 12B3                      l3547 1296  
                    l3539 1279                      l3491 11EA                      l3483 11D7  
                    l2595 175C                      l2587 172D                      l2579 16CE  
                    l2499 15F9                      l2931 10C5                      l2923 109D  
                    l2907 106C                      l2763 0C1A                      l2771 0C4B  
                    l2755 0BF9                      l2747 0BEA                      l2739 0BD3  
                    l2691 09B5                      l2683 099E                      l2675 098F  
                    l2667 097C                      l2659 0969                      l2843 14B3  
                    l2835 13A0                      l3459 07C2                      l3395 059A  
                    l3387 054D                      l3379 0549                      l3467 07E6  
                    l3299 0216                      l3651 0129                      l3643 00AB  
                    l3635 0094                      l3627 007B                      l3619 0051  
                    l2829 1C9B                      l3581 12FB                      l3573 12EC  
                    l3565 12D5                      l3557 12C1                      l3549 1297  
                    l3493 11EB                      l3485 11D8                      l3477 11CA  
                    l2589 1732                      l2933 10C6                      l2925 10A4  
                    l2917 1086                      l2781 0C7E                      l2773 0C58  
                    l2765 0C28                      l2757 0C0D                      l2749 0BF0  
                    l2693 09BA                      l2685 09A6                      l2677 0993  
                    l2669 097E                      l2845 14B9                      l2837 13A6  
                    l2853 0CA4                      l3397 059F                      l3653 0196  
                    l3645 0108                      l3637 0095                      l3629 0083  
                    l3591 132A                      l3583 130F                      l3567 12DE  
                    l3575 12F2                      l3559 12C5                      l3487 11DD  
                    l3495 11ED                      l3479 11CF                      l2599 1765  
                    l2951 10F9                      l2943 10E0                      l2935 10CE  
                    l2927 10AD                      l2919 108C                      l2783 0C8A  
                    l2775 0C63                      l2767 0C2C                      l2687 09A8  
                    l2679 0994                      l2871 0E28                      l2855 0CA8  
                    l3399 05A4                      l3655 019E                      l3647 0118  
                    l3639 009D                      l3593 132E                      l3577 12F6  
                    l3569 12E2                      l3497 11F5                      l3489 11E2  
                    l2793 1B8D                      l2953 1109                      l2937 10D8  
                    l2945 10F2                      l2929 10BB                      l2785 0C8E  
                    l2777 0C72                      l2769 0C45                      l2697 09C3  
                    l2689 09B0                      l2849 1564                      l2865 0D99  
                    l2857 0CAA                      l3649 0120                      l3595 1347  
                    l3587 1317                      l3579 12F7                      l3499 11FA  
                    l2795 1B94                      l2971 08CB                      l2963 08B8  
                    l2787 0C8F                      l2779 0C7C                      l2699 09D1  
                    l2883 0F44                      l2867 0DA0                      l2859 0CB1  
                    l2875 0E55                      l3691 022E                      l3589 131C  
                    l3597 134D                      l2797 1B96                      l2981 0900  
                    l2973 08DC                      l2957 08A4                      l2789 0C98  
                    l2893 1B7B                      l2885 0F4B                      l2877 0E5C  
                    l3599 135A                      l2799 1B98                      l2983 090E  
                    l2975 08DE                      l2959 08AF                      l2895 1B7C  
                    l2985 090F                      l2977 08E5                      l2969 08C3  
                    l2897 1B82                      l2889 0FD3                      l2995 092A  
                    l2987 0918                      l2979 08EE                      l2899 1B88  
                    l2989 0922                      l2997 093C                      STR_1 18A0  
                    STR_2 18B0                      STR_3 18B0                      u3100 1C57  
                    u3101 1C56                      u3120 1C6B                      u4000 099E  
                    u3121 1C6A                      u4001 099D                      u3130 1BC1  
                    u4010 09B5                      u3210 1F54                      u3131 1BC0  
                    u3115 1C5E                      u4011 09B4                      u3211 1F53  
                    u3140 1BCC                      u4020 09BA                      u3141 1BCB  
                    u4021 09B9                      u3205 1F46                      u3150 1BD3  
                    u3230 1F65                      u3310 102F                      u3151 1BD2  
                    u4111 0AFC                      u4031 0A07                      u3231 1F64  
                    u3311 102E                      u3160 1BDA                      u5000 0033  
                    u4200 0BE0                      u4112 0B03                      u4032 0A0E  
                    u3400 1D4A                      u3320 1039                      u3161 1BD9  
                    u5001 0032                      u4201 0BDF                      u4121 0B27  
                    u4113 0B0A                      u4105 0AD8                      u4041 0A23  
                    u4033 0A15                      u3401 1D49                      u3225 1F55  
                    u3321 1038                      u3305 1021                      u5010 004D  
                    u4122 0B2E                      u4042 0A2A                      u3250 1F79  
                    u3170 1F26                      u5011 004C                      u4131 0B52  
                    u4123 0B35                      u4051 0A4D                      u4043 0A31  
                    u3251 1F78                      u3235 1F61                      u3171 1F25  
                    u5020 0816                      u3500 15BB                      u5100 1F93  
                    u4300 0C72                      u4220 0BF4                      u4140 0B7A  
                    u4132 0B59                      u4052 0A54                      u3420 1D5E  
                    u3260 1F7E                      u3180 1F31                      u3340 104C  
                    u5021 0815                      u3501 15BA                      u5101 1F92  
                    u4301 0C71                      u4221 0BF3                      u4133 0B60  
                    u4061 0A69                      u4053 0A5B                      u3421 1D5D  
                    u3405 1D46                      u3261 1F7D                      u3245 1F6D  
                    u3181 1F30                      u3341 104B                      u3325 1035  
                    u5030 0832                      u3510 15C0                      u5110 1FAA  
                    u4310 0C8E                      u4230 0BF9                      u4062 0A70  
                    u3430 1CA9                      u3190 1F42                      u3350 1051  
                    u3270 1007                      u5015 0049                      u5031 0831  
                    u3511 15BF                      u4311 0C8D                      u4231 0BF8  
                    u4215 0BE3                      u4151 0B86                      u4063 0A77  
                    u3415 1D52                      u3431 1CA8                      u3191 1F41  
                    u3351 1050                      u3335 1040                      u3271 1006  
                    u4320 1B94                      u5040 083E                      u3600 1653  
                    u3520 15DC                      u5120 1FBE                      u5200 1DB1  
                    u4240 0C0D                      u4160 0BA2                      u4152 0B8D  
                    u3360 1D27                      u3280 1012                      u4321 1B93  
                    u5041 083D                      u3521 15DB                      u5121 1FBD  
                    u5201 1DB0                      u4305 0C6E                      u4241 0C0C  
                    u4153 0B94                      u4145 0B75                      u4081 0A9D  
                    u3361 1D26                      u3281 1011                      u6010 1296  
                    u3610 1663                      u3530 15E5                      u5130 1FC5  
                    u4250 0C14                      u4082 0AA4                      u3450 1CBB  
                    u3290 101D                      u6011 1295                      u5051 084D  
                    u3611 1662                      u3531 15E4                      u5131 1FC4  
                    u5115 1FA5                      u4251 0C13                      u4171 0BAE  
                    u4091 0AC8                      u4083 0AAB                      u4075 0A79  
                    u3451 1CBA                      u3291 101C                      u6100 12FB  
                    u4340 1B58                      u5060 0866                      u5052 084E  
                    u3700 16C4                      u3620 1670                      u3540 15EB  
                    u5220 1DC5                      u5300 115B                      u4260 0C1A  
                    u4172 0BB5                      u4092 0ACF                      u3380 1D39  
                    u3460 1CC5                      u6101 12FA                      u6005 128B  
                    u4341 1B57                      u5061 0865                      u5053 0853  
                    u3701 16C3                      u3621 166F                      u3541 15EA  
                    u5221 1DC4                      u5301 115A                      u4261 0C19  
                    u4173 0BBC                      u4165 0B9D                      u4093 0AD6  
                    u3381 1D38                      u3461 1CC4                      u3445 1CAD  
                    u4405 14D6                      u6110 130F                      u6030 12B2  
                    u5054 0854                      u3550 15F0                      u5150 1FD7  
                    u5230 1DD7                      u4270 0C2C                      u4350 13A6  
                    u4430 0CA8                      u4335 1C7D                      u6111 130E  
                    u6031 12B1                      u5071 0875                      u5055 0859  
                    u3551 15EF                      u5151 1FD6                      u5231 1DD6  
                    u5215 1DB6                      u4271 0C2B                      u3375 1D2B  
                    u4415 1523                      u4351 13A5                      u4431 0CA7  
                    u6120 1316                      u6040 12CB                      u5400 1E61  
                    u5080 08A0                      u5072 0876                      u5056 085A  
                    u3800 1777                      u3720 16E9                      u3640 1686  
                    u3560 1609                      u5160 1FDE                      u5320 117D  
                    u4280 0C3B                      u3480 1CD8                      u4600 1B82  
                    u4520 0E5C                      u4440 0CB1                      u6121 1315  
                    u6041 12CA                      u6025 1299                      u5401 1E60  
                    u5081 089F                      u5073 087B                      u3801 1776  
                    u3721 16E8                      u3641 1685                      u3561 1608  
                    u5161 1FDD                      u5145 1FC7                      u5321 117C  
                    u4185 0BBE                      u3481 1CD7                      u3465 1CC1  
                    u4425 156F                      u4601 1B81                      u4521 0E5B  
                    u4505 0DEF                      u4441 0CB0                      u6130 131C  
                    u6050 12D3                      u5410 1E6B                      u5074 087C  
                    u5090 1B6A                      u3810 1781                      u3650 168A  
                    u3570 160D                      u3490 15B5                      u5250 1DF4  
                    u4290 0C58                      u4610 1B88                      u6131 131B  
                    u6051 12D2                      u6035 12AE                      u5411 1E6A  
                    u5075 0881                      u5091 1B69                      u3811 1780  
                    u3731 1700                      u3723 16E5                      u3715 16C7  
                    u3651 1689                      u3635 1673                      u3571 160C  
                    u3491 15B4                      u5251 1DF3                      u5235 1DD3  
                    u5315 116F                      u4291 0C57                      u4195 0BD5  
                    u3395 1D3A                      u3475 1CCC                      u4611 1B87  
                    u4515 0E2B                      u5500 1D8C                      u6140 132E  
                    u5420 1E77                      u5076 0882                      u3900 17D8  
                    u3820 1787                      u3740 1714                      u3732 1701  
                    u3660 168F                      u3580 1647                      u5180 1FEF  
                    u5340 118D                      u5260 1118                      u4620 106C  
                    u5501 1D8B                      u6141 132D                      u5421 1E76  
                    u5085 089C                      u3901 17D7                      u3821 1786  
                    u3741 1715                      u3733 1706                      u3661 168E  
                    u3581 1646                      u5181 1FEE                      u5245 1DE6  
                    u5341 118C                      u5261 1117                      u4621 106B  
                    u4285 0C36                      u4365 13C3                      u6150 133D  
                    u6070 12E2                      u5430 1E83                      u3910 17DD  
                    u3830 178C                      u3750 1732                      u3742 171A  
                    u3734 1707                      u3590 1652                      u5190 1FF4  
                    u5350 1193                      u5270 111C                      u4710 10F1  
                    u4630 1084                      u4390 14B9                      u6071 12E1  
                    u5431 1E82                      u3911 17DC                      u3831 178B  
                    u3751 1731                      u3743 171B                      u3735 170C  
                    u3671 16A1                      u3591 1650                      u5191 1FF3  
                    u5175 1FE1                      u5351 1192                      u5335 1182  
                    u5271 111B                      u4711 10F0                      u4631 1083  
                    u4295 0C54                      u4391 14B8                      u4375 141D  
                    u4535 0E7C                      u4455 0CD1                      u6207 0099  
                    u5520 1CEA                      u6160 135A                      u5440 1E8F  
                    u3920 17EA                      u3840 1792                      u3760 1757  
                    u3736 170D                      u3680 16B3                      u3672 16A8  
                    u5360 1197                      u5280 113C                      u4800 091E  
                    u4720 10F8                      u4560 0F4B                      u4480 0DA0  
                    u5600 0275                      u6217 1C8D                      u6161 1359  
                    u6065 12D7                      u5441 1E8E                      u3921 17E9  
                    u3841 1791                      u3761 1756                      u3681 16B2  
                    u3673 16AF                      u3585 1643                      u5361 1196  
                    u5281 113B                      u4801 091D                      u4721 10F7  
                    u4705 10E1                      u4385 1472                      u4561 0F4A  
                    u4545 0EB8                      u4481 0D9F                      u4465 0D0D  
                    u5601 0274                      u5530 1D0C                      u6170 1377  
                    u6090 12F6                      u5450 1E9B                      u3930 17EF  
                    u3850 1799                      u3770 175C                      u3690 16B7  
                    u5370 11AC                      u4810 0922                      u4650 10BB  
                    u5610 02AF                      u5515 1D92                      u6227 1C9D  
                    u6171 1376                      u6155 1338                      u6091 12F5  
                    u5451 1E9A                      u3931 17EE                      u3851 1798  
                    u3771 175B                      u3691 16B6                      u4811 0921  
                    u4651 10BA                      u4555 0F03                      u4475 0D58  
                    u5611 02AE                      u5540 1D1E                      u6180 138C  
                    u5460 1EA6                      u3940 17FE                      u3860 179F  
                    u5380 11BC                      u4820 0929                      u4740 1109  
                    u5700 0470                      u5620 02EA                      u6237 1E07  
                    u5541 1D1D                      u6181 138B                      u6165 1356  
                    u6085 12E5                      u5461 1EA5                      u3941 17FD  
                    u3861 179E                      u5381 11BB                      u4821 0928  
                    u4741 1108                      u4645 10A6                      u5701 046F  
                    u5621 02E9                      u5470 1EB1                      u3870 17B1  
                    u3790 1772                      u4910 1C44                      u5390 11C0  
                    u4750 08AF                      u4670 10D4                      u3950 0969  
                    u5630 0373                      u5550 01B7                      u6247 1E16  
                    u6175 1373                      u5471 1EB0                      u3871 17B0  
                    u3791 1771                      u4911 1C43                      u5391 11BF  
                    u5375 11A7                      u5295 114D                      u4751 08AE  
                    u4735 10FB                      u4671 10D3                      u4655 10B7  
                    u3951 0968                      u4575 0F5E                      u4495 0DB3  
                    u5631 0372                      u5551 01B6                      u5480 1D69  
                    u3880 17C0                      u4920 1EC9                      u4840 093B  
                    u4760 08C1                      u4680 10D8                      u3960 096F  
                    u5720 0583                      u5640 0397                      u5560 01CF  
                    u6257 1E24                      u5481 1D68                      u3785 1767  
                    u4921 1EC8                      u4905 1C38                      u4841 093A  
                    u4761 08C0                      u4681 10D7                      u4665 10C7  
                    u3961 096E                      u4585 0F9A                      u5721 0582  
                    u5641 0396                      u5561 01CE                      u3890 17CF  
                    u4850 0942                      u4690 10DF                      u3970 0974  
                    u5730 058E                      u5650 03AE                      u5570 0213  
                    u6267 1BB3                      u3891 17CE                      u4851 0941  
                    u4835 092B                      u4691 10DE                      u3971 0973  
                    u4595 0FD6                      u5731 058D                      u5715 0550  
                    u5651 03AD                      u5571 0212                      u5900 11D7  
                    u4940 1EDD                      u4780 0900                      u3980 0993  
                    u5820 077C                      u5740 059A                      u5660 0404  
                    u5580 0242                      u5901 11D6                      u3885 17BB  
                    u4941 1EDC                      u4781 08FF                      u3981 0992  
                    u5821 077B                      u5805 06D9                      u5741 0599  
                    u5725 057F                      u5661 0403                      u5581 0241  
                    u6197 007F                      u5910 11DD                      u4870 0953  
                    u3990 0999                      u5830 0792                      u5670 041F  
                    u5590 0246                      u5495 1D6F                      u5911 11DC  
                    u4935 1ECE                      u4871 0952                      u4775 08E7  
                    u3991 0998                      u5831 0791                      u5815 073D  
                    u5671 041E                      u5655 03AA                      u5591 0245  
                    u5920 11E2                      u4960 1EF8                      u4880 1C2A  
                    u5840 0799                      u5760 060F                      u5680 0446  
                    u5921 11E1                      u4961 1EF7                      u4881 1C29  
                    u4865 0945                      u4785 08FC                      u5841 0798  
                    u5761 060E                      u5681 0445                      u5665 0400  
                    u5930 1202                      u5850 07A1                      u5770 062E  
                    u5690 0455                      u5931 1201                      u4955 1EDF  
                    u4795 0911                      u5851 07A0                      u5771 062D  
                    u5755 05A7                      u5691 0454                      u5940 1208  
                    u4980 1F16                      u5860 07B2                      u5780 063D  
                    u5941 1207                      u4981 1F15                      u4965 1EF4  
                    u5861 07B1                      u5781 063C                      u5950 120D  
                    u4990 0017                      u5870 07C2                      u5790 0654  
                    u5951 120C                      u4991 0016                      u4975 1F08  
                    u4895 1C31                      u5871 07C1                      u5791 0653  
                    u5775 062A                      u5695 0451                      u5960 1228  
                    u5880 07D0                      u5961 1227                      u5881 07CF  
                    u5865 07AE                      u5785 0639                      u5970 1246  
                    u5890 07E6                      u5971 1245                      u5891 07E5  
                    u5875 07BE                      u5980 1280                      u5981 127F  
                    u5995 1282         ?_Lcd_Write_String 0075                      _cont 006E  
                    _main 0051                      btemp 007E                      start 0000  
      ??_Lcd_Write_String 0077           ___fldiv@new_exp 0050              _sprintf$1093 00AA  
         __end_of_Lcd_Cmd 1BBC             ___fltol@sign1 0059           __end_of___fladd 1800  
                   ?_main 0070           __end_of___fldiv 139D           __end_of___awdiv 1F88  
         __end_of___flneg 1B6D           __end_of___awmod 105B           __end_of___flmul 0CA1  
         __end_of___flsub 1C24           __end_of___fltol 2000                     _ANSEL 0188  
         __end_of___lldiv 1F1F           ___awdiv@divisor 0077           __end_of___llmod 1DFD  
         __end_of___lwdiv 1D63           __end_of___lwmod 1CDD           ___awdiv@counter 0020  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088           __end_of_dpowers 18A0  
                   _scale 0CA1           __end_of_isdigit 1B8C                     pclath 000A  
         __end_of_spiInit 1BA2           __end_of_spiRead 1B62                     status 0003  
                   wtemp0 007E           __end_of_sprintf 07EB          __end_of_Lcd_Init 1E5A  
        __end_of_Lcd_Port 1BDE           __initialization 07EB              __end_of_main 01AB  
                  ??_main 00C3          ___llmod@dividend 0074                    ?_scale 003E  
        ___awdiv@dividend 0079                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 11CA          __end_of__powers_ 1844  
                  ___flge 0802                    ___fleq 0003                 ??___fladd 005A  
                  ___wmul 1C24                 ??___fldiv 0046                 ??___awdiv 007B  
                  _lecADC 00CF                 ??___flneg 0074                 ??___awmod 0074  
               ??___flmul 002C                 ??___flsub 007E                 ??___fltol 0055  
               ??___lldiv 0078                 ??___llmod 0078                 ??___lwdiv 007A  
               ??___lwmod 0074                    _conver 00C7                    _valADC 00D0  
                  _fround 139D          ___awdiv@quotient 0022           ___awmod@divisor 0070  
         ___awmod@counter 0075              ?_setupINTOSC 0070                 ??_isdigit 0070  
        __end_of_spiWrite 1B52                 ??_spiInit 0073                 ??_spiRead 0070  
               ??_sprintf 00A5           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077                ___flge@ff1 0070  
              ___flge@ff2 0074              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
 __end_of__initialization 07FC                ___flneg@f1 0070         __end_of_Lcd_Clear 1B7A  
              ___fltol@f1 0051            __pcstackCOMMON 0070             __end_of_scale 1000  
          _Lcd_Set_Cursor 1D63                __div_to_l_ 08A4                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070           __div_to_l_@exp1 0025           __div_to_l_@cntr 0024  
                 ??_scale 0042           __div_to_l_@quot 0020                __pbssBANK0 006E  
              __pbssBANK1 00C7             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
       __end_of__Umul8_16 1C70                __pmaintext 0051                   ?___flge 0070  
                 ?___fleq 0070                   ?___wmul 0070                   ?_fround 003E  
  __end_of_Lcd_Set_Cursor 1DA9                 ?___xxtofl 0070                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 1800  
          _Lcd_Write_Char 1C70                   _Lcd_Cmd 1BA2         __end_of__npowers_ 1878  
              _scale$1092 004C                 ?_spiWrite 0070                   ___fladd 15A8  
                 ___fldiv 11CA                   ___awdiv 1F1F                   ___flneg 1B62  
                 ___awmod 1002                   ___flmul 095C                   ___flsub 1C00  
                 ___fltol 1F88                   ___lldiv 1EB9                   ___llmod 1DA9  
                 ___lwdiv 1D1F                   ___lwmod 1CA3                   _lecADC2 00CE  
         ?_Lcd_Set_Cursor 0074                   __ptext1 01AB                   __ptext2 0CA1  
                 __ptext3 1002                   __ptext4 1F1F                   __ptext5 1B7A  
                 __ptext6 139D                   __ptext7 1CA3                   __ptext8 1D1F  
                 __ptext9 095C               ?__div_to_l_ 0070                   _dpowers 1878  
                 _isdigit 1B7A                ??___xxtofl 0074          ___awmod@dividend 0072  
                 _spiInit 1B8C                   _spiRead 1B59                   _sprintf 01AB  
  __end_of_Lcd_Write_Char 1CA3      end_of_initialization 07FC           ___lldiv@divisor 0070  
         ___lldiv@counter 007D                ??_spiWrite 0070                 Lcd_Port@a 0070  
       __end_of_portsetup 1C00            __tdiv_to_l_@f1 0070            __tdiv_to_l_@f2 0074  
           ??__tdiv_to_l_ 0078                 _PORTCbits 0007                 _PORTDbits 0008  
             ___fladd@grs 0065             ___xxtofl@sign 0078                 _TRISCbits 0087  
             ___fldiv@grs 0052               ___fldiv@rem 004B               spiWrite@dat 0070  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075         Lcd_Write_String@i 007A  
             ___flmul@grs 0032                 _Lcd_Clear 1B6D            _spiReceiveWait 1B52  
          __end_of___flge 08A4            __end_of___fleq 0051            __end_of___wmul 1C49  
        _Lcd_Write_String 1CDD            __end_of_fround 15A8       start_initialization 07EB  
     __end_of__tdiv_to_l_ 1112           ___llmod@divisor 0070           ___llmod@counter 0079  
  __end_of_spiReceiveWait 1B59                ?_Lcd_Clear 0070                  ??___flge 0078  
                ??___fleq 0078                  ??___wmul 0074                 __Umul8_16 1C49  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073                  ??_fround 0042  
           sprintf@tmpval 00B7                 ___fladd@a 0056                 ___fladd@b 0052  
              fround@prec 0051                 ___fldiv@a 003E                 ___fldiv@b 0042  
               ___flmul@a 0028                 ___flmul@b 0024                 ___flsub@a 0066  
               ___flsub@b 006A                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0           setupINTOSC@IRCF 0070                  ?_Lcd_Cmd 0070  
             sprintf@flag 00AF               sprintf@eexp 00B5               sprintf@fval 00BE  
             sprintf@prec 00BC          ___lwdiv@dividend 0078           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___fladd 0052                  ?___fldiv 003E  
                ?___awdiv 0077                  ?___flneg 0070                  ?___awmod 0070  
                ?___flmul 0024                  ?___flsub 0066                  ?___fltol 0051  
                ?___lldiv 0070                  ?___llmod 0070                 __npowers_ 1844  
              ?__Umul8_16 0070                  ?___lwdiv 0076                  ?___lwmod 0070  
               __pstrings 1800               __tdiv_to_l_ 105B              ??__div_to_l_ 0078  
                ?_isdigit 0070                  ?_spiInit 0070                  ?_spiRead 0070  
        ___lwdiv@quotient 007B                  ?_sprintf 00A0      spiInit@sTransmitEdge 0072  
          ___wmul@product 0074        spiInit@sDataSample 0070                  Lcd_Cmd@a 0073  
      __end_of__div_to_l_ 095C               ??_Lcd_Clear 0074               __stringbase 180F  
           ??_setupINTOSC 0070                 _portsetup 1BDE         ___wmul@multiplier 0070  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 1DFD                  _Lcd_Port 1BBC  
__end_of_Lcd_Write_String 1D1F               ??__Umul8_16 0072               _fround$1090 004D  
             _fround$1091 0049        __end_of__stringtab 1810                ?_portsetup 0070  
             _isdigit$907 0070                sprintf@val 00B1                  ___xxtofl 1112  
         ___lwdiv@divisor 0076           ___lwdiv@counter 007D                  __ptext10 1C49  
                __ptext11 105B                  __ptext20 1B62                  __ptext12 08A4  
                __ptext21 0802                  __ptext13 1112                  __ptext30 1CDD  
                __ptext22 0003                  __ptext14 1C24                  __ptext31 1C70  
                __ptext23 1B4C                  __ptext15 1DA9                  __ptext32 1D63  
                __ptext24 1B59                  __ptext16 1EB9                  __ptext33 1DFD  
                __ptext25 1B52                  __ptext17 1F88                  __ptext34 1B6D  
                __ptext26 1E5A                  __ptext18 1C00                  __ptext35 1BA2  
                __ptext27 1BDE                  __ptext19 15A8                  __ptext36 1BBC  
                __ptext28 1B8C                  __ptext29 11CA       __end_of_setupINTOSC 1EB9  
                __powers_ 1810                  _contador 00CB                  _spiWrite 1B4C  
            spiInit@sType 0073         spiInit@sClockIdle 0071                  isdigit@c 0071  
                scale@scl 0050        Lcd_Write_Char@temp 0072                 sprintf@ap 00AE  
        __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024                 sprintf@sp 00BB  
        __tdiv_to_l_@quot 0020          ___lwmod@dividend 0072          ___lldiv@dividend 0074  
        ??_spiReceiveWait 0070                 stringcode 180A                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0079              ?__tdiv_to_l_ 0070               ??_portsetup 0074  
  __Umul8_16@multiplicand 0070               _setupINTOSC 1E5A                  sprintf@c 00C2  
                sprintf@f 00A0          ___lldiv@quotient 0079           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                  stringdir 180A                  stringtab 1800  
           ___fladd@signs 0062              ___fladd@aexp 0063              ___fladd@bexp 0064  
    __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
