

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 13:07:52 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Version 2.40
    55                           ; Generated 17/11/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89     0000                     	;# 
    90     0001                     	;# 
    91     0002                     	;# 
    92     0003                     	;# 
    93     0004                     	;# 
    94     0005                     	;# 
    95     0006                     	;# 
    96     0007                     	;# 
    97     0008                     	;# 
    98     0009                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     000D                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0013                     	;# 
   110     0014                     	;# 
   111     0015                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001B                     	;# 
   119     001B                     	;# 
   120     001C                     	;# 
   121     001D                     	;# 
   122     001E                     	;# 
   123     001F                     	;# 
   124     0081                     	;# 
   125     0085                     	;# 
   126     0086                     	;# 
   127     0087                     	;# 
   128     0088                     	;# 
   129     0089                     	;# 
   130     008C                     	;# 
   131     008D                     	;# 
   132     008E                     	;# 
   133     008F                     	;# 
   134     0090                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0094                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0097                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009A                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     009F                     	;# 
   152     0105                     	;# 
   153     0107                     	;# 
   154     0108                     	;# 
   155     0109                     	;# 
   156     010C                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     0185                     	;# 
   162     0187                     	;# 
   163     0188                     	;# 
   164     0189                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0000                     	;# 
   168     0001                     	;# 
   169     0002                     	;# 
   170     0003                     	;# 
   171     0004                     	;# 
   172     0005                     	;# 
   173     0006                     	;# 
   174     0007                     	;# 
   175     0008                     	;# 
   176     0009                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     0088                     	;# 
   207     0089                     	;# 
   208     008C                     	;# 
   209     008D                     	;# 
   210     008E                     	;# 
   211     008F                     	;# 
   212     0090                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0095                     	;# 
   220     0096                     	;# 
   221     0097                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009A                     	;# 
   225     009B                     	;# 
   226     009C                     	;# 
   227     009D                     	;# 
   228     009E                     	;# 
   229     009F                     	;# 
   230     0105                     	;# 
   231     0107                     	;# 
   232     0108                     	;# 
   233     0109                     	;# 
   234     010C                     	;# 
   235     010C                     	;# 
   236     010D                     	;# 
   237     010E                     	;# 
   238     010F                     	;# 
   239     0185                     	;# 
   240     0187                     	;# 
   241     0188                     	;# 
   242     0189                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     008F                     	;# 
   290     0090                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0094                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009C                     	;# 
   305     009D                     	;# 
   306     009E                     	;# 
   307     009F                     	;# 
   308     0105                     	;# 
   309     0107                     	;# 
   310     0108                     	;# 
   311     0109                     	;# 
   312     010C                     	;# 
   313     010C                     	;# 
   314     010D                     	;# 
   315     010E                     	;# 
   316     010F                     	;# 
   317     0185                     	;# 
   318     0187                     	;# 
   319     0188                     	;# 
   320     0189                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     008F                     	;# 
   368     0090                     	;# 
   369     0091                     	;# 
   370     0092                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0094                     	;# 
   375     0095                     	;# 
   376     0096                     	;# 
   377     0097                     	;# 
   378     0098                     	;# 
   379     0099                     	;# 
   380     009A                     	;# 
   381     009B                     	;# 
   382     009C                     	;# 
   383     009D                     	;# 
   384     009E                     	;# 
   385     009F                     	;# 
   386     0105                     	;# 
   387     0107                     	;# 
   388     0108                     	;# 
   389     0109                     	;# 
   390     010C                     	;# 
   391     010C                     	;# 
   392     010D                     	;# 
   393     010E                     	;# 
   394     010F                     	;# 
   395     0185                     	;# 
   396     0187                     	;# 
   397     0188                     	;# 
   398     0189                     	;# 
   399     018C                     	;# 
   400     018D                     	;# 
   401     0000                     	;# 
   402     0001                     	;# 
   403     0002                     	;# 
   404     0003                     	;# 
   405     0004                     	;# 
   406     0005                     	;# 
   407     0006                     	;# 
   408     0007                     	;# 
   409     0008                     	;# 
   410     0009                     	;# 
   411     000A                     	;# 
   412     000B                     	;# 
   413     000C                     	;# 
   414     000D                     	;# 
   415     000E                     	;# 
   416     000E                     	;# 
   417     000F                     	;# 
   418     0010                     	;# 
   419     0011                     	;# 
   420     0012                     	;# 
   421     0013                     	;# 
   422     0014                     	;# 
   423     0015                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0017                     	;# 
   427     0018                     	;# 
   428     0019                     	;# 
   429     001A                     	;# 
   430     001B                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001D                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     0081                     	;# 
   437     0085                     	;# 
   438     0086                     	;# 
   439     0087                     	;# 
   440     0088                     	;# 
   441     0089                     	;# 
   442     008C                     	;# 
   443     008D                     	;# 
   444     008E                     	;# 
   445     008F                     	;# 
   446     0090                     	;# 
   447     0091                     	;# 
   448     0092                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0093                     	;# 
   452     0094                     	;# 
   453     0095                     	;# 
   454     0096                     	;# 
   455     0097                     	;# 
   456     0098                     	;# 
   457     0099                     	;# 
   458     009A                     	;# 
   459     009B                     	;# 
   460     009C                     	;# 
   461     009D                     	;# 
   462     009E                     	;# 
   463     009F                     	;# 
   464     0105                     	;# 
   465     0107                     	;# 
   466     0108                     	;# 
   467     0109                     	;# 
   468     010C                     	;# 
   469     010C                     	;# 
   470     010D                     	;# 
   471     010E                     	;# 
   472     010F                     	;# 
   473     0185                     	;# 
   474     0187                     	;# 
   475     0188                     	;# 
   476     0189                     	;# 
   477     018C                     	;# 
   478     018D                     	;# 
   479     0000                     	;# 
   480     0001                     	;# 
   481     0002                     	;# 
   482     0003                     	;# 
   483     0004                     	;# 
   484     0005                     	;# 
   485     0006                     	;# 
   486     0007                     	;# 
   487     0008                     	;# 
   488     0009                     	;# 
   489     000A                     	;# 
   490     000B                     	;# 
   491     000C                     	;# 
   492     000D                     	;# 
   493     000E                     	;# 
   494     000E                     	;# 
   495     000F                     	;# 
   496     0010                     	;# 
   497     0011                     	;# 
   498     0012                     	;# 
   499     0013                     	;# 
   500     0014                     	;# 
   501     0015                     	;# 
   502     0015                     	;# 
   503     0016                     	;# 
   504     0017                     	;# 
   505     0018                     	;# 
   506     0019                     	;# 
   507     001A                     	;# 
   508     001B                     	;# 
   509     001B                     	;# 
   510     001C                     	;# 
   511     001D                     	;# 
   512     001E                     	;# 
   513     001F                     	;# 
   514     0081                     	;# 
   515     0085                     	;# 
   516     0086                     	;# 
   517     0087                     	;# 
   518     0088                     	;# 
   519     0089                     	;# 
   520     008C                     	;# 
   521     008D                     	;# 
   522     008E                     	;# 
   523     008F                     	;# 
   524     0090                     	;# 
   525     0091                     	;# 
   526     0092                     	;# 
   527     0093                     	;# 
   528     0093                     	;# 
   529     0093                     	;# 
   530     0094                     	;# 
   531     0095                     	;# 
   532     0096                     	;# 
   533     0097                     	;# 
   534     0098                     	;# 
   535     0099                     	;# 
   536     009A                     	;# 
   537     009B                     	;# 
   538     009C                     	;# 
   539     009D                     	;# 
   540     009E                     	;# 
   541     009F                     	;# 
   542     0105                     	;# 
   543     0107                     	;# 
   544     0108                     	;# 
   545     0109                     	;# 
   546     010C                     	;# 
   547     010C                     	;# 
   548     010D                     	;# 
   549     010E                     	;# 
   550     010F                     	;# 
   551     0185                     	;# 
   552     0187                     	;# 
   553     0188                     	;# 
   554     0189                     	;# 
   555     018C                     	;# 
   556     018D                     	;# 
   557                           
   558                           	psect	strings
   559     0003                     __pstrings:
   560     0003                     stringtab:
   561     0003                     __stringtab:
   562                           
   563                           ;	String table - string pointers are 1 byte each
   564     0003  1BFF               	btfsc	btemp+1,7
   565     0004  280D               	ljmp	stringcode
   566     0005  1383               	bcf	3,7
   567     0006  187F               	btfsc	btemp+1,0
   568     0007  1783               	bsf	3,7
   569     0008  0800               	movf	0,w
   570     0009  0A84               	incf	4,f
   571     000A  1903               	skipnz
   572     000B  0AFF               	incf	btemp+1,f
   573     000C  0008               	return
   574     000D                     stringcode:
   575     000D                     stringdir:
   576     000D  3000               	movlw	high stringdir
   577     000E  008A               	movwf	10
   578     000F  0804               	movf	4,w
   579     0010  0A84               	incf	4,f
   580     0011  0782               	addwf	2,f
   581     0012                     __stringbase:
   582     0012  3400               	retlw	0
   583     0013                     __end_of__stringtab:
   584     0013                     __powers_:
   585     0013  3400               	retlw	0
   586     0014  3400               	retlw	0
   587     0015  3480               	retlw	128
   588     0016  343F               	retlw	63
   589     0017  3400               	retlw	0
   590     0018  3400               	retlw	0
   591     0019  3420               	retlw	32
   592     001A  3441               	retlw	65
   593     001B  3400               	retlw	0
   594     001C  3400               	retlw	0
   595     001D  34C8               	retlw	200
   596     001E  3442               	retlw	66
   597     001F  3400               	retlw	0
   598     0020  3400               	retlw	0
   599     0021  347A               	retlw	122
   600     0022  3444               	retlw	68
   601     0023  3400               	retlw	0
   602     0024  3440               	retlw	64
   603     0025  341C               	retlw	28
   604     0026  3446               	retlw	70
   605     0027  3400               	retlw	0
   606     0028  3450               	retlw	80
   607     0029  34C3               	retlw	195
   608     002A  3447               	retlw	71
   609     002B  3400               	retlw	0
   610     002C  3424               	retlw	36
   611     002D  3474               	retlw	116
   612     002E  3449               	retlw	73
   613     002F  3480               	retlw	128
   614     0030  3496               	retlw	150
   615     0031  3418               	retlw	24
   616     0032  344B               	retlw	75
   617     0033  3420               	retlw	32
   618     0034  34BC               	retlw	188
   619     0035  34BE               	retlw	190
   620     0036  344C               	retlw	76
   621     0037  3428               	retlw	40
   622     0038  346B               	retlw	107
   623     0039  346E               	retlw	110
   624     003A  344E               	retlw	78
   625     003B  34F9               	retlw	249
   626     003C  3402               	retlw	2
   627     003D  3415               	retlw	21
   628     003E  3450               	retlw	80
   629     003F  34EC               	retlw	236
   630     0040  3478               	retlw	120
   631     0041  34AD               	retlw	173
   632     0042  3460               	retlw	96
   633     0043  34CA               	retlw	202
   634     0044  34F2               	retlw	242
   635     0045  3449               	retlw	73
   636     0046  3471               	retlw	113
   637     0047                     __end_of__powers_:
   638     0047                     __npowers_:
   639     0047  3400               	retlw	0
   640     0048  3400               	retlw	0
   641     0049  3480               	retlw	128
   642     004A  343F               	retlw	63
   643     004B  34CD               	retlw	205
   644     004C  34CC               	retlw	204
   645     004D  34CC               	retlw	204
   646     004E  343D               	retlw	61
   647     004F  340A               	retlw	10
   648     0050  34D7               	retlw	215
   649     0051  3423               	retlw	35
   650     0052  343C               	retlw	60
   651     0053  346F               	retlw	111
   652     0054  3412               	retlw	18
   653     0055  3483               	retlw	131
   654     0056  343A               	retlw	58
   655     0057  3417               	retlw	23
   656     0058  34B7               	retlw	183
   657     0059  34D1               	retlw	209
   658     005A  3438               	retlw	56
   659     005B  34AC               	retlw	172
   660     005C  34C5               	retlw	197
   661     005D  3427               	retlw	39
   662     005E  3437               	retlw	55
   663     005F  34BD               	retlw	189
   664     0060  3437               	retlw	55
   665     0061  3486               	retlw	134
   666     0062  3435               	retlw	53
   667     0063  3495               	retlw	149
   668     0064  34BF               	retlw	191
   669     0065  34D6               	retlw	214
   670     0066  3433               	retlw	51
   671     0067  3477               	retlw	119
   672     0068  34CC               	retlw	204
   673     0069  342B               	retlw	43
   674     006A  3432               	retlw	50
   675     006B  345F               	retlw	95
   676     006C  3470               	retlw	112
   677     006D  3489               	retlw	137
   678     006E  3430               	retlw	48
   679     006F  34FF               	retlw	255
   680     0070  34E6               	retlw	230
   681     0071  34DB               	retlw	219
   682     0072  342E               	retlw	46
   683     0073  3408               	retlw	8
   684     0074  34E5               	retlw	229
   685     0075  343C               	retlw	60
   686     0076  341E               	retlw	30
   687     0077  3460               	retlw	96
   688     0078  3442               	retlw	66
   689     0079  34A2               	retlw	162
   690     007A  340D               	retlw	13
   691     007B                     __end_of__npowers_:
   692     007B                     _dpowers:
   693     007B  3401               	retlw	1
   694     007C  3400               	retlw	0
   695     007D  3400               	retlw	0
   696     007E  3400               	retlw	0
   697     007F  340A               	retlw	10
   698     0080  3400               	retlw	0
   699     0081  3400               	retlw	0
   700     0082  3400               	retlw	0
   701     0083  3464               	retlw	100
   702     0084  3400               	retlw	0
   703     0085  3400               	retlw	0
   704     0086  3400               	retlw	0
   705     0087  34E8               	retlw	232
   706     0088  3403               	retlw	3
   707     0089  3400               	retlw	0
   708     008A  3400               	retlw	0
   709     008B  3410               	retlw	16
   710     008C  3427               	retlw	39
   711     008D  3400               	retlw	0
   712     008E  3400               	retlw	0
   713     008F  34A0               	retlw	160
   714     0090  3486               	retlw	134
   715     0091  3401               	retlw	1
   716     0092  3400               	retlw	0
   717     0093  3440               	retlw	64
   718     0094  3442               	retlw	66
   719     0095  340F               	retlw	15
   720     0096  3400               	retlw	0
   721     0097  3480               	retlw	128
   722     0098  3496               	retlw	150
   723     0099  3498               	retlw	152
   724     009A  3400               	retlw	0
   725     009B  3400               	retlw	0
   726     009C  34E1               	retlw	225
   727     009D  34F5               	retlw	245
   728     009E  3405               	retlw	5
   729     009F  3400               	retlw	0
   730     00A0  34CA               	retlw	202
   731     00A1  349A               	retlw	154
   732     00A2  343B               	retlw	59
   733     00A3                     __end_of_dpowers:
   734     0014                     _SSPCON	set	20
   735     0008                     _PORTDbits	set	8
   736     0005                     _PORTAbits	set	5
   737     0005                     _PORTA	set	5
   738     0006                     _PORTB	set	6
   739     0008                     _PORTD	set	8
   740     0013                     _SSPBUF	set	19
   741     0043                     _RD3	set	67
   742     0047                     _RD7	set	71
   743     0046                     _RD6	set	70
   744     0045                     _RD5	set	69
   745     0044                     _RD4	set	68
   746     0029                     _RA1	set	41
   747     0028                     _RA0	set	40
   748     0094                     _SSPSTAT	set	148
   749     008F                     _OSCCONbits	set	143
   750     0085                     _TRISA	set	133
   751     0086                     _TRISB	set	134
   752     0088                     _TRISD	set	136
   753     0094                     _SSPSTATbits	set	148
   754     043B                     _TRISC3	set	1083
   755     043D                     _TRISC5	set	1085
   756     0189                     _ANSELH	set	393
   757     0188                     _ANSEL	set	392
   758     00A3                     STR_2:
   759     00A3  3420               	retlw	32	;' '
   760     00A4  3420               	retlw	32	;' '
   761     00A5  3420               	retlw	32	;' '
   762     00A6  3420               	retlw	32	;' '
   763     00A7  3456               	retlw	86	;'V'
   764     00A8  3420               	retlw	32	;' '
   765     00A9  3420               	retlw	32	;' '
   766     00AA  3420               	retlw	32	;' '
   767     00AB  3420               	retlw	32	;' '
   768     00AC  3420               	retlw	32	;' '
   769     00AD  3420               	retlw	32	;' '
   770     00AE  3420               	retlw	32	;' '
   771     00AF  3420               	retlw	32	;' '
   772     00B0  3420               	retlw	32	;' '
   773     00B1  3420               	retlw	32	;' '
   774     00B2  3456               	retlw	86	;'V'
   775     00B3  3400               	retlw	0
   776     00B4                     STR_1:
   777     00B4  3453               	retlw	83	;'S'
   778     00B5  3431               	retlw	49	;'1'
   779     00B6  343A               	retlw	58	;':'
   780     00B7  3420               	retlw	32	;' '
   781     00B8  3420               	retlw	32	;' '
   782     00B9  3453               	retlw	83	;'S'
   783     00BA  3432               	retlw	50	;'2'
   784     00BB  343A               	retlw	58	;':'
   785     00BC  3420               	retlw	32	;' '
   786     00BD  3420               	retlw	32	;' '
   787     00BE  3453               	retlw	83	;'S'
   788     00BF  3433               	retlw	51	;'3'
   789     00C0  343A               	retlw	58	;':'
   790     00C1  3400               	retlw	0
   791     00C2                     STR_3:
   792     00C2  3425               	retlw	37	;'%'
   793     00C3  342E               	retlw	46	;'.'
   794     00C4  3432               	retlw	50	;'2'
   795     00C5  3466               	retlw	102	;'f'
   796     00C6  3400               	retlw	0
   797     00C2                     
   798                           	psect	cinit
   799     07F3                     start_initialization:	
   800                           ; #config settings
   801                           
   802     07F3                     __initialization:
   803                           
   804                           ; Clear objects allocated to BANK1
   805     07F3  1383               	bcf	3,7	;select IRP bank0
   806     07F4  30C7               	movlw	low __pbssBANK1
   807     07F5  0084               	movwf	4
   808     07F6  30DC               	movlw	low (__pbssBANK1+21)
   809     07F7  160A  158A  20E3  120A  118A  	fcall	clear_ram0
   810     07FC                     end_of_initialization:	
   811                           ;End of C runtime variable initialization code
   812                           
   813     07FC                     __end_of__initialization:
   814     07FC  0183               	clrf	3
   815     07FD  160A  118A  2DA6   	ljmp	_main	;jump to C main() function
   816                           
   817                           	psect	bssBANK1
   818     00C7                     __pbssBANK1:
   819     00C7                     _conver1:
   820     00C7                     	ds	4
   821     00CB                     _conver:
   822     00CB                     	ds	4
   823     00CF                     _cont:
   824     00CF                     	ds	2
   825     00D1                     _cent:
   826     00D1                     	ds	1
   827     00D2                     _dec:
   828     00D2                     	ds	1
   829     00D3                     _uni:
   830     00D3                     	ds	1
   831     00D4                     _lecADC2:
   832     00D4                     	ds	1
   833     00D5                     _lecADC:
   834     00D5                     	ds	1
   835     00D6                     _valADC2:
   836     00D6                     	ds	3
   837     00D9                     _valADC:
   838     00D9                     	ds	3
   839                           
   840                           	psect	clrtext
   841     18E3                     clear_ram0:	
   842                           ;	Called with FSR containing the base address, and
   843                           ;	W with the last address+1
   844                           
   845     18E3  0064               	clrwdt	;clear the watchdog before getting into this loop
   846     18E4                     clrloop0:
   847     18E4  0180               	clrf	0	;clear RAM location pointed to by FSR
   848     18E5  0A84               	incf	4,f	;increment pointer
   849     18E6  0604               	xorwf	4,w	;XOR with final address
   850     18E7  1903               	btfsc	3,2	;have we reached the end yet?
   851     18E8  3400               	retlw	0	;all done for this memory range, return
   852     18E9  0604               	xorwf	4,w	;XOR again to restore value
   853     18EA  28E4               	goto	clrloop0	;do the next byte
   854                           
   855                           	psect	cstackBANK1
   856     00A0                     __pcstackBANK1:
   857     00A0                     ?_sprintf:
   858     00A0                     sprintf@f:	
   859                           ; 2 bytes @ 0x0
   860                           
   861                           
   862                           ; 1 bytes @ 0x0
   863     00A0                     	ds	5
   864     00A5                     ??_sprintf:
   865                           
   866                           ; 1 bytes @ 0x5
   867     00A5                     	ds	5
   868     00AA                     _sprintf$1168:
   869                           
   870                           ; 4 bytes @ 0xA
   871     00AA                     	ds	4
   872     00AE                     sprintf@ap:
   873                           
   874                           ; 1 bytes @ 0xE
   875     00AE                     	ds	1
   876     00AF                     sprintf@flag:
   877                           
   878                           ; 2 bytes @ 0xF
   879     00AF                     	ds	2
   880     00B1                     sprintf@val:
   881                           
   882                           ; 4 bytes @ 0x11
   883     00B1                     	ds	4
   884     00B5                     sprintf@eexp:
   885                           
   886                           ; 2 bytes @ 0x15
   887     00B5                     	ds	2
   888     00B7                     sprintf@tmpval:
   889                           
   890                           ; 4 bytes @ 0x17
   891     00B7                     	ds	4
   892     00BB                     sprintf@sp:
   893                           
   894                           ; 1 bytes @ 0x1B
   895     00BB                     	ds	1
   896     00BC                     sprintf@prec:
   897                           
   898                           ; 2 bytes @ 0x1C
   899     00BC                     	ds	2
   900     00BE                     sprintf@fval:
   901                           
   902                           ; 4 bytes @ 0x1E
   903     00BE                     	ds	4
   904     00C2                     sprintf@c:
   905                           
   906                           ; 1 bytes @ 0x22
   907     00C2                     	ds	1
   908     00C3                     ??_main:
   909                           
   910                           ; 1 bytes @ 0x23
   911     00C3                     	ds	4
   912                           
   913                           	psect	cstackCOMMON
   914     0070                     __pcstackCOMMON:
   915     0070                     ?_isdigit:
   916     0070                     ?___fleq:	
   917                           ; 1 bit 
   918                           
   919     0070                     ?___flge:	
   920                           ; 1 bit 
   921                           
   922     0070                     ?_setupINTOSC:	
   923                           ; 1 bit 
   924                           
   925     0070                     ??_setupINTOSC:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ?_portsetup:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?_Lcd_Init:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0070                     ?_Lcd_Clear:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ?_spiWrite:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ??_spiWrite:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0070                     ?_inttochar:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0070                     ??_inttochar:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     ?_Lcd_Write_Char:	
   950                           ; 1 bytes @ 0x0
   951                           
   952     0070                     ?_spiRead:	
   953                           ; 1 bytes @ 0x0
   954                           
   955     0070                     ??_spiRead:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0070                     ?_spiInit:	
   959                           ; 1 bytes @ 0x0
   960                           
   961     0070                     ??_isdigit:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0070                     ?_main:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0070                     ?_Lcd_Port:	
   968                           ; 1 bytes @ 0x0
   969                           
   970     0070                     ??_Lcd_Port:	
   971                           ; 1 bytes @ 0x0
   972                           
   973     0070                     ?_Lcd_Cmd:	
   974                           ; 1 bytes @ 0x0
   975                           
   976     0070                     ?_spiReceiveWait:	
   977                           ; 1 bytes @ 0x0
   978                           
   979     0070                     ??_spiReceiveWait:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0070                     ?__Umul8_16:	
   983                           ; 1 bytes @ 0x0
   984                           
   985     0070                     ?___wmul:	
   986                           ; 2 bytes @ 0x0
   987                           
   988     0070                     ?___awmod:	
   989                           ; 2 bytes @ 0x0
   990                           
   991     0070                     ?___lwmod:	
   992                           ; 2 bytes @ 0x0
   993                           
   994     0070                     ?__tdiv_to_l_:	
   995                           ; 2 bytes @ 0x0
   996                           
   997     0070                     ?__div_to_l_:	
   998                           ; 4 bytes @ 0x0
   999                           
  1000     0070                     ?___lldiv:	
  1001                           ; 4 bytes @ 0x0
  1002                           
  1003     0070                     ?___flneg:	
  1004                           ; 4 bytes @ 0x0
  1005                           
  1006     0070                     ?___llmod:	
  1007                           ; 4 bytes @ 0x0
  1008                           
  1009     0070                     ?___xxtofl:	
  1010                           ; 4 bytes @ 0x0
  1011                           
  1012     0070                     Lcd_Port@a:	
  1013                           ; 4 bytes @ 0x0
  1014                           
  1015     0070                     setupINTOSC@IRCF:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018     0070                     spiInit@sDataSample:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021     0070                     spiWrite@dat:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024     0070                     inttochar@num:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     0070                     __Umul8_16@multiplicand:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0070                     _isdigit$976:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     0070                     ___wmul@multiplier:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036     0070                     ___awmod@divisor:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039     0070                     ___lwmod@divisor:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042     0070                     ___lldiv@divisor:	
  1043                           ; 2 bytes @ 0x0
  1044                           
  1045     0070                     __div_to_l_@f1:	
  1046                           ; 4 bytes @ 0x0
  1047                           
  1048     0070                     ___fleq@ff1:	
  1049                           ; 4 bytes @ 0x0
  1050                           
  1051     0070                     ___flge@ff1:	
  1052                           ; 4 bytes @ 0x0
  1053                           
  1054     0070                     ___flneg@f1:	
  1055                           ; 4 bytes @ 0x0
  1056                           
  1057     0070                     __tdiv_to_l_@f1:	
  1058                           ; 4 bytes @ 0x0
  1059                           
  1060     0070                     ___llmod@divisor:	
  1061                           ; 4 bytes @ 0x0
  1062                           
  1063     0070                     ___xxtofl@val:	
  1064                           ; 4 bytes @ 0x0
  1065                           
  1066                           
  1067                           ; 4 bytes @ 0x0
  1068     0070                     	ds	1
  1069     0071                     ??_Lcd_Write_Char:
  1070     0071                     ??_Lcd_Cmd:	
  1071                           ; 1 bytes @ 0x1
  1072                           
  1073     0071                     spiInit@sClockIdle:	
  1074                           ; 1 bytes @ 0x1
  1075                           
  1076     0071                     isdigit@c:	
  1077                           ; 1 bytes @ 0x1
  1078                           
  1079                           
  1080                           ; 1 bytes @ 0x1
  1081     0071                     	ds	1
  1082     0072                     ??__Umul8_16:
  1083     0072                     Lcd_Write_Char@temp:	
  1084                           ; 1 bytes @ 0x2
  1085                           
  1086     0072                     spiInit@sTransmitEdge:	
  1087                           ; 1 bytes @ 0x2
  1088                           
  1089     0072                     ___wmul@multiplicand:	
  1090                           ; 1 bytes @ 0x2
  1091                           
  1092     0072                     ___awmod@dividend:	
  1093                           ; 2 bytes @ 0x2
  1094                           
  1095     0072                     ___lwmod@dividend:	
  1096                           ; 2 bytes @ 0x2
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0x2
  1100     0072                     	ds	1
  1101     0073                     ??_spiInit:
  1102     0073                     Lcd_Cmd@a:	
  1103                           ; 1 bytes @ 0x3
  1104                           
  1105     0073                     Lcd_Write_Char@y:	
  1106                           ; 1 bytes @ 0x3
  1107                           
  1108     0073                     spiInit@sType:	
  1109                           ; 1 bytes @ 0x3
  1110                           
  1111                           
  1112                           ; 1 bytes @ 0x3
  1113     0073                     	ds	1
  1114     0074                     ??_portsetup:
  1115     0074                     ??_Lcd_Init:	
  1116                           ; 1 bytes @ 0x4
  1117                           
  1118     0074                     ??_Lcd_Clear:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121     0074                     ?_Lcd_Set_Cursor:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124     0074                     ??___wmul:	
  1125                           ; 1 bytes @ 0x4
  1126                           
  1127     0074                     ??___awmod:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130     0074                     ??___flneg:	
  1131                           ; 1 bytes @ 0x4
  1132                           
  1133     0074                     ??___lwmod:	
  1134                           ; 1 bytes @ 0x4
  1135                           
  1136     0074                     ??___xxtofl:	
  1137                           ; 1 bytes @ 0x4
  1138                           
  1139     0074                     Lcd_Set_Cursor@b:	
  1140                           ; 1 bytes @ 0x4
  1141                           
  1142     0074                     Lcd_Write_Char@a:	
  1143                           ; 1 bytes @ 0x4
  1144                           
  1145     0074                     ___wmul@product:	
  1146                           ; 1 bytes @ 0x4
  1147                           
  1148     0074                     __Umul8_16@product:	
  1149                           ; 2 bytes @ 0x4
  1150                           
  1151     0074                     ___lldiv@dividend:	
  1152                           ; 2 bytes @ 0x4
  1153                           
  1154     0074                     __div_to_l_@f2:	
  1155                           ; 4 bytes @ 0x4
  1156                           
  1157     0074                     ___fleq@ff2:	
  1158                           ; 4 bytes @ 0x4
  1159                           
  1160     0074                     ___flge@ff2:	
  1161                           ; 4 bytes @ 0x4
  1162                           
  1163     0074                     __tdiv_to_l_@f2:	
  1164                           ; 4 bytes @ 0x4
  1165                           
  1166     0074                     ___llmod@dividend:	
  1167                           ; 4 bytes @ 0x4
  1168                           
  1169                           
  1170                           ; 4 bytes @ 0x4
  1171     0074                     	ds	1
  1172     0075                     ??_Lcd_Set_Cursor:
  1173     0075                     ?_Lcd_Write_String:	
  1174                           ; 1 bytes @ 0x5
  1175                           
  1176     0075                     ___awmod@counter:	
  1177                           ; 1 bytes @ 0x5
  1178                           
  1179     0075                     ___lwmod@counter:	
  1180                           ; 1 bytes @ 0x5
  1181                           
  1182     0075                     Lcd_Write_String@a:	
  1183                           ; 1 bytes @ 0x5
  1184                           
  1185                           
  1186                           ; 2 bytes @ 0x5
  1187     0075                     	ds	1
  1188     0076                     ?___lwdiv:
  1189     0076                     Lcd_Set_Cursor@a:	
  1190                           ; 2 bytes @ 0x6
  1191                           
  1192     0076                     ___awmod@sign:	
  1193                           ; 1 bytes @ 0x6
  1194                           
  1195     0076                     ___lwdiv@divisor:	
  1196                           ; 1 bytes @ 0x6
  1197                           
  1198     0076                     __Umul8_16@word_mpld:	
  1199                           ; 2 bytes @ 0x6
  1200                           
  1201                           
  1202                           ; 2 bytes @ 0x6
  1203     0076                     	ds	1
  1204     0077                     ??_Lcd_Write_String:
  1205     0077                     ?___awdiv:	
  1206                           ; 1 bytes @ 0x7
  1207                           
  1208     0077                     Lcd_Set_Cursor@z:	
  1209                           ; 2 bytes @ 0x7
  1210                           
  1211     0077                     ___awdiv@divisor:	
  1212                           ; 1 bytes @ 0x7
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x7
  1216     0077                     	ds	1
  1217     0078                     ??__tdiv_to_l_:
  1218     0078                     ??__div_to_l_:	
  1219                           ; 1 bytes @ 0x8
  1220                           
  1221     0078                     ??___lldiv:	
  1222                           ; 1 bytes @ 0x8
  1223                           
  1224     0078                     ??___fleq:	
  1225                           ; 1 bytes @ 0x8
  1226                           
  1227     0078                     ??___flge:	
  1228                           ; 1 bytes @ 0x8
  1229                           
  1230     0078                     ??___llmod:	
  1231                           ; 1 bytes @ 0x8
  1232                           
  1233     0078                     Lcd_Set_Cursor@y:	
  1234                           ; 1 bytes @ 0x8
  1235                           
  1236     0078                     __Umul8_16@multiplier:	
  1237                           ; 1 bytes @ 0x8
  1238                           
  1239     0078                     ___xxtofl@sign:	
  1240                           ; 1 bytes @ 0x8
  1241                           
  1242     0078                     ___lwdiv@dividend:	
  1243                           ; 1 bytes @ 0x8
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x8
  1247     0078                     	ds	1
  1248     0079                     Lcd_Set_Cursor@temp:
  1249     0079                     ___llmod@counter:	
  1250                           ; 1 bytes @ 0x9
  1251                           
  1252     0079                     ___xxtofl@exp:	
  1253                           ; 1 bytes @ 0x9
  1254                           
  1255     0079                     ___awdiv@dividend:	
  1256                           ; 1 bytes @ 0x9
  1257                           
  1258     0079                     ___lldiv@quotient:	
  1259                           ; 2 bytes @ 0x9
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x9
  1263     0079                     	ds	1
  1264     007A                     ??___lwdiv:
  1265     007A                     Lcd_Write_String@i:	
  1266                           ; 1 bytes @ 0xA
  1267                           
  1268     007A                     ___xxtofl@arg:	
  1269                           ; 2 bytes @ 0xA
  1270                           
  1271                           
  1272                           ; 4 bytes @ 0xA
  1273     007A                     	ds	1
  1274     007B                     ??___awdiv:
  1275     007B                     ___lwdiv@quotient:	
  1276                           ; 1 bytes @ 0xB
  1277                           
  1278                           
  1279                           ; 2 bytes @ 0xB
  1280     007B                     	ds	2
  1281     007D                     ___lldiv@counter:
  1282     007D                     ___lwdiv@counter:	
  1283                           ; 1 bytes @ 0xD
  1284                           
  1285                           
  1286                           ; 1 bytes @ 0xD
  1287     007D                     	ds	1
  1288     007E                     ??___flsub:
  1289                           
  1290                           	psect	cstackBANK0
  1291     0020                     __pcstackBANK0:	
  1292                           ; 1 bytes @ 0xE
  1293                           
  1294     0020                     ___awdiv@counter:
  1295     0020                     __div_to_l_@quot:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298     0020                     __tdiv_to_l_@quot:	
  1299                           ; 4 bytes @ 0x0
  1300                           
  1301                           
  1302                           ; 4 bytes @ 0x0
  1303     0020                     	ds	1
  1304     0021                     ___awdiv@sign:
  1305                           
  1306                           ; 1 bytes @ 0x1
  1307     0021                     	ds	1
  1308     0022                     ___awdiv@quotient:
  1309                           
  1310                           ; 2 bytes @ 0x2
  1311     0022                     	ds	2
  1312     0024                     ?_descomponer:
  1313     0024                     ?___flmul:	
  1314                           ; 1 bytes @ 0x4
  1315                           
  1316     0024                     __div_to_l_@cntr:	
  1317                           ; 4 bytes @ 0x4
  1318                           
  1319     0024                     __tdiv_to_l_@cntr:	
  1320                           ; 1 bytes @ 0x4
  1321                           
  1322     0024                     descomponer@pos:	
  1323                           ; 1 bytes @ 0x4
  1324                           
  1325     0024                     ___flmul@b:	
  1326                           ; 2 bytes @ 0x4
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0x4
  1330     0024                     	ds	1
  1331     0025                     __div_to_l_@exp1:
  1332     0025                     __tdiv_to_l_@exp1:	
  1333                           ; 1 bytes @ 0x5
  1334                           
  1335                           
  1336                           ; 1 bytes @ 0x5
  1337     0025                     	ds	1
  1338     0026                     descomponer@num:
  1339                           
  1340                           ; 2 bytes @ 0x6
  1341     0026                     	ds	2
  1342     0028                     ??_descomponer:
  1343     0028                     ___flmul@a:	
  1344                           ; 1 bytes @ 0x8
  1345                           
  1346                           
  1347                           ; 4 bytes @ 0x8
  1348     0028                     	ds	2
  1349     002A                     descomponer@cent:
  1350                           
  1351                           ; 1 bytes @ 0xA
  1352     002A                     	ds	1
  1353     002B                     descomponer@uni:
  1354                           
  1355                           ; 1 bytes @ 0xB
  1356     002B                     	ds	1
  1357     002C                     ??___flmul:
  1358     002C                     descomponer@dec:	
  1359                           ; 1 bytes @ 0xC
  1360                           
  1361                           
  1362                           ; 1 bytes @ 0xC
  1363     002C                     	ds	5
  1364     0031                     ___flmul@sign:
  1365                           
  1366                           ; 1 bytes @ 0x11
  1367     0031                     	ds	1
  1368     0032                     ___flmul@grs:
  1369                           
  1370                           ; 4 bytes @ 0x12
  1371     0032                     	ds	4
  1372     0036                     ___flmul@aexp:
  1373                           
  1374                           ; 1 bytes @ 0x16
  1375     0036                     	ds	1
  1376     0037                     ___flmul@bexp:
  1377                           
  1378                           ; 1 bytes @ 0x17
  1379     0037                     	ds	1
  1380     0038                     ___flmul@prod:
  1381                           
  1382                           ; 4 bytes @ 0x18
  1383     0038                     	ds	4
  1384     003C                     ___flmul@temp:
  1385                           
  1386                           ; 2 bytes @ 0x1C
  1387     003C                     	ds	2
  1388     003E                     ?_fround:
  1389     003E                     ?_scale:	
  1390                           ; 4 bytes @ 0x1E
  1391                           
  1392     003E                     ?___fldiv:	
  1393                           ; 4 bytes @ 0x1E
  1394                           
  1395     003E                     ___fldiv@a:	
  1396                           ; 4 bytes @ 0x1E
  1397                           
  1398                           
  1399                           ; 4 bytes @ 0x1E
  1400     003E                     	ds	4
  1401     0042                     ??_fround:
  1402     0042                     ??_scale:	
  1403                           ; 1 bytes @ 0x22
  1404                           
  1405     0042                     ___fldiv@b:	
  1406                           ; 1 bytes @ 0x22
  1407                           
  1408                           
  1409                           ; 4 bytes @ 0x22
  1410     0042                     	ds	4
  1411     0046                     ??___fldiv:
  1412                           
  1413                           ; 1 bytes @ 0x26
  1414     0046                     	ds	3
  1415     0049                     _fround$1166:
  1416                           
  1417                           ; 4 bytes @ 0x29
  1418     0049                     	ds	2
  1419     004B                     ___fldiv@rem:
  1420                           
  1421                           ; 4 bytes @ 0x2B
  1422     004B                     	ds	1
  1423     004C                     _scale$1167:
  1424                           
  1425                           ; 4 bytes @ 0x2C
  1426     004C                     	ds	1
  1427     004D                     _fround$1165:
  1428                           
  1429                           ; 4 bytes @ 0x2D
  1430     004D                     	ds	2
  1431     004F                     ___fldiv@sign:
  1432                           
  1433                           ; 1 bytes @ 0x2F
  1434     004F                     	ds	1
  1435     0050                     scale@scl:
  1436     0050                     ___fldiv@new_exp:	
  1437                           ; 1 bytes @ 0x30
  1438                           
  1439                           
  1440                           ; 2 bytes @ 0x30
  1441     0050                     	ds	1
  1442     0051                     ?___fltol:
  1443     0051                     fround@prec:	
  1444                           ; 4 bytes @ 0x31
  1445                           
  1446     0051                     ___fltol@f1:	
  1447                           ; 1 bytes @ 0x31
  1448                           
  1449                           
  1450                           ; 4 bytes @ 0x31
  1451     0051                     	ds	1
  1452     0052                     ?___fladd:
  1453     0052                     ___fladd@b:	
  1454                           ; 4 bytes @ 0x32
  1455                           
  1456     0052                     ___fldiv@grs:	
  1457                           ; 4 bytes @ 0x32
  1458                           
  1459                           
  1460                           ; 4 bytes @ 0x32
  1461     0052                     	ds	3
  1462     0055                     ??___fltol:
  1463                           
  1464                           ; 1 bytes @ 0x35
  1465     0055                     	ds	1
  1466     0056                     ___fldiv@bexp:
  1467     0056                     ___fladd@a:	
  1468                           ; 1 bytes @ 0x36
  1469                           
  1470                           
  1471                           ; 4 bytes @ 0x36
  1472     0056                     	ds	1
  1473     0057                     ___fldiv@aexp:
  1474                           
  1475                           ; 1 bytes @ 0x37
  1476     0057                     	ds	2
  1477     0059                     ___fltol@sign1:
  1478                           
  1479                           ; 1 bytes @ 0x39
  1480     0059                     	ds	1
  1481     005A                     ??___fladd:
  1482     005A                     ___fltol@exp1:	
  1483                           ; 1 bytes @ 0x3A
  1484                           
  1485                           
  1486                           ; 1 bytes @ 0x3A
  1487     005A                     	ds	8
  1488     0062                     ___fladd@signs:
  1489                           
  1490                           ; 1 bytes @ 0x42
  1491     0062                     	ds	1
  1492     0063                     ___fladd@aexp:
  1493                           
  1494                           ; 1 bytes @ 0x43
  1495     0063                     	ds	1
  1496     0064                     ___fladd@bexp:
  1497                           
  1498                           ; 1 bytes @ 0x44
  1499     0064                     	ds	1
  1500     0065                     ___fladd@grs:
  1501                           
  1502                           ; 1 bytes @ 0x45
  1503     0065                     	ds	1
  1504     0066                     ?___flsub:
  1505     0066                     ___flsub@a:	
  1506                           ; 4 bytes @ 0x46
  1507                           
  1508                           
  1509                           ; 4 bytes @ 0x46
  1510     0066                     	ds	4
  1511     006A                     ___flsub@b:
  1512                           
  1513                           ; 4 bytes @ 0x4A
  1514     006A                     	ds	4
  1515                           
  1516                           	psect	maintext
  1517     15A6                     __pmaintext:	
  1518 ;;
  1519 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1520 ;;
  1521 ;; *************** function _main *****************
  1522 ;; Defined at:
  1523 ;;		line 61 in file "main.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : B00/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0
  1539 ;;      Temps:          0       0       4       0       0
  1540 ;;      Totals:         0       0       4       0       0
  1541 ;;Total ram usage:        4 bytes
  1542 ;; Hardware stack levels required when called: 4
  1543 ;; This function calls:
  1544 ;;		_Lcd_Clear
  1545 ;;		_Lcd_Init
  1546 ;;		_Lcd_Set_Cursor
  1547 ;;		_Lcd_Write_Char
  1548 ;;		_Lcd_Write_String
  1549 ;;		___fldiv
  1550 ;;		___flmul
  1551 ;;		___xxtofl
  1552 ;;		_descomponer
  1553 ;;		_inttochar
  1554 ;;		_portsetup
  1555 ;;		_setupINTOSC
  1556 ;;		_spiRead
  1557 ;;		_spiWrite
  1558 ;;		_sprintf
  1559 ;; This function is called by:
  1560 ;;		Startup code after reset
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564     15A6                     _main:	
  1565                           ;psect for function _main
  1566                           
  1567     15A6                     l4034:	
  1568                           ;incstack = 0
  1569                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1570                           
  1571                           
  1572                           ;main.c: 62:     setupINTOSC(5);
  1573     15A6  3005               	movlw	5
  1574     15A7  160A  158A  249E  160A  118A  	fcall	_setupINTOSC
  1575                           
  1576                           ;main.c: 63:     portsetup();
  1577     15AC  160A  158A  215E  160A  118A  	fcall	_portsetup
  1578                           
  1579                           ;main.c: 64:     Lcd_Init();
  1580     15B1  160A  158A  2441  160A  118A  	fcall	_Lcd_Init
  1581                           
  1582                           ;main.c: 65:     Lcd_Clear();
  1583     15B6  160A  158A  20FF  160A  118A  	fcall	_Lcd_Clear
  1584                           
  1585                           ;main.c: 66:     Lcd_Set_Cursor(1,2);
  1586     15BB  3002               	movlw	2
  1587     15BC  00F4               	movwf	Lcd_Set_Cursor@b
  1588     15BD  3001               	movlw	1
  1589     15BE  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1590     15C3                     l4036:
  1591                           
  1592                           ;main.c: 67:     Lcd_Write_String("S1:  S2:  S3:");
  1593     15C3  30A2               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1594     15C4  00F5               	movwf	Lcd_Write_String@a
  1595     15C5  3080               	movlw	128
  1596     15C6  00F6               	movwf	Lcd_Write_String@a+1
  1597     15C7  160A  158A  222A  160A  118A  	fcall	_Lcd_Write_String
  1598     15CC                     l4038:
  1599                           
  1600                           ;main.c: 68:     Lcd_Set_Cursor(2,1);
  1601     15CC  01F4               	clrf	Lcd_Set_Cursor@b
  1602     15CD  0AF4               	incf	Lcd_Set_Cursor@b,f
  1603     15CE  3002               	movlw	2
  1604     15CF  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1605                           
  1606                           ;main.c: 69:     Lcd_Write_String("    V          V");
  1607     15D4  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1608     15D5  00F5               	movwf	Lcd_Write_String@a
  1609     15D6  3080               	movlw	128
  1610     15D7  00F6               	movwf	Lcd_Write_String@a+1
  1611     15D8  160A  158A  222A  160A  118A  	fcall	_Lcd_Write_String
  1612     15DD                     l4040:
  1613                           
  1614                           ;main.c: 70:     SSPBUF = 0;
  1615     15DD  1283               	bcf	3,5	;RP0=0, select bank0
  1616     15DE  1303               	bcf	3,6	;RP1=0, select bank0
  1617     15DF  0193               	clrf	19	;volatile
  1618     15E0                     l4042:
  1619                           
  1620                           ;main.c: 73:         _delay((unsigned long)((20)*(2000000/4000.0)));
  1621     15E0  300D               	movlw	13
  1622     15E1  1683               	bsf	3,5	;RP0=1, select bank1
  1623     15E2  1303               	bcf	3,6	;RP1=0, select bank1
  1624     15E3  00C4               	movwf	(??_main^(0+128)+1)
  1625     15E4  30FB               	movlw	251
  1626     15E5  00C3               	movwf	??_main^(0+128)
  1627     15E6                     u6617:
  1628     15E6  0BC3               	decfsz	??_main^(0+128),f
  1629     15E7  2DE6               	goto	u6617
  1630     15E8  0BC4               	decfsz	(??_main^(0+128)+1),f
  1631     15E9  2DE6               	goto	u6617
  1632     15EA                     l4044:
  1633                           
  1634                           ;main.c: 74:         RA0 = 1;
  1635     15EA  1283               	bcf	3,5	;RP0=0, select bank0
  1636     15EB  1303               	bcf	3,6	;RP1=0, select bank0
  1637     15EC  1405               	bsf	5,0	;volatile
  1638     15ED                     l4046:
  1639                           
  1640                           ;main.c: 76:         _delay((unsigned long)((10)*(2000000/4000.0)));
  1641     15ED  3007               	movlw	7
  1642     15EE  1683               	bsf	3,5	;RP0=1, select bank1
  1643     15EF  1303               	bcf	3,6	;RP1=0, select bank1
  1644     15F0  00C4               	movwf	(??_main^(0+128)+1)
  1645     15F1  307C               	movlw	124
  1646     15F2  00C3               	movwf	??_main^(0+128)
  1647     15F3                     u6627:
  1648     15F3  0BC3               	decfsz	??_main^(0+128),f
  1649     15F4  2DF3               	goto	u6627
  1650     15F5  0BC4               	decfsz	(??_main^(0+128)+1),f
  1651     15F6  2DF3               	goto	u6627
  1652     15F7  0000               	nop
  1653     15F8                     l4048:
  1654                           
  1655                           ;main.c: 78:         RA0 = 0;
  1656     15F8  1283               	bcf	3,5	;RP0=0, select bank0
  1657     15F9  1303               	bcf	3,6	;RP1=0, select bank0
  1658     15FA  1005               	bcf	5,0	;volatile
  1659     15FB                     l4050:
  1660                           
  1661                           ;main.c: 80:         spiWrite(1);
  1662     15FB  3001               	movlw	1
  1663     15FC  160A  158A  20D6  160A  118A  	fcall	_spiWrite
  1664     1601                     l80:	
  1665                           ;main.c: 82:         while(!SSPSTATbits.BF);
  1666                           
  1667     1601  1683               	bsf	3,5	;RP0=1, select bank1
  1668     1602  1303               	bcf	3,6	;RP1=0, select bank1
  1669     1603  1C14               	btfss	20,0	;volatile
  1670     1604  2E06               	goto	u6581
  1671     1605  2E07               	goto	u6580
  1672     1606                     u6581:
  1673     1606  2E01               	goto	l80
  1674     1607                     u6580:
  1675     1607                     l4052:
  1676                           
  1677                           ;main.c: 84:         cont = SSPBUF;
  1678     1607  1283               	bcf	3,5	;RP0=0, select bank0
  1679     1608  1303               	bcf	3,6	;RP1=0, select bank0
  1680     1609  0813               	movf	19,w	;volatile
  1681     160A  1683               	bsf	3,5	;RP0=1, select bank1
  1682     160B  1303               	bcf	3,6	;RP1=0, select bank1
  1683     160C  00C3               	movwf	??_main^(0+128)
  1684     160D  01C4               	clrf	(??_main^(0+128)+1)
  1685     160E  0843               	movf	??_main^(0+128),w
  1686     160F  00CF               	movwf	_cont^(0+128)
  1687     1610  0844               	movf	(??_main+1)^(0+128),w
  1688     1611  00D0               	movwf	(_cont+1)^(0+128)
  1689     1612                     l4054:
  1690                           
  1691                           ;main.c: 85:         RA0 = 1;
  1692     1612  1283               	bcf	3,5	;RP0=0, select bank0
  1693     1613  1303               	bcf	3,6	;RP1=0, select bank0
  1694     1614  1405               	bsf	5,0	;volatile
  1695     1615                     l4056:
  1696                           
  1697                           ;main.c: 87:         cent = inttochar(descomponer(2, cont));
  1698     1615  3002               	movlw	2
  1699     1616  00A4               	movwf	descomponer@pos
  1700     1617  3000               	movlw	0
  1701     1618  00A5               	movwf	descomponer@pos+1
  1702     1619  1683               	bsf	3,5	;RP0=1, select bank1
  1703     161A  1303               	bcf	3,6	;RP1=0, select bank1
  1704     161B  0850               	movf	(_cont+1)^(0+128),w
  1705     161C  1283               	bcf	3,5	;RP0=0, select bank0
  1706     161D  1303               	bcf	3,6	;RP1=0, select bank0
  1707     161E  00A7               	movwf	descomponer@num+1
  1708     161F  1683               	bsf	3,5	;RP0=1, select bank1
  1709     1620  1303               	bcf	3,6	;RP1=0, select bank1
  1710     1621  084F               	movf	_cont^(0+128),w
  1711     1622  1283               	bcf	3,5	;RP0=0, select bank0
  1712     1623  1303               	bcf	3,6	;RP1=0, select bank0
  1713     1624  00A6               	movwf	descomponer@num
  1714     1625  160A  158A  24FD  160A  118A  	fcall	_descomponer
  1715     162A  160A  158A  2344  160A  118A  	fcall	_inttochar
  1716     162F  1683               	bsf	3,5	;RP0=1, select bank1
  1717     1630  1303               	bcf	3,6	;RP1=0, select bank1
  1718     1631  00D1               	movwf	_cent^(0+128)
  1719     1632                     l4058:
  1720                           
  1721                           ;main.c: 88:         Lcd_Set_Cursor(2,7);
  1722     1632  3007               	movlw	7
  1723     1633  00F4               	movwf	Lcd_Set_Cursor@b
  1724     1634  3002               	movlw	2
  1725     1635  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1726     163A                     l4060:
  1727                           
  1728                           ;main.c: 89:         Lcd_Write_Char(cent);
  1729     163A  1683               	bsf	3,5	;RP0=1, select bank1
  1730     163B  1303               	bcf	3,6	;RP1=0, select bank1
  1731     163C  0851               	movf	_cent^(0+128),w
  1732     163D  120A  118A  20C8  160A  118A  	fcall	_Lcd_Write_Char
  1733     1642                     l4062:
  1734                           
  1735                           ;main.c: 90:         dec = inttochar(descomponer(1, cont));
  1736     1642  3001               	movlw	1
  1737     1643  1283               	bcf	3,5	;RP0=0, select bank0
  1738     1644  1303               	bcf	3,6	;RP1=0, select bank0
  1739     1645  00A4               	movwf	descomponer@pos
  1740     1646  3000               	movlw	0
  1741     1647  00A5               	movwf	descomponer@pos+1
  1742     1648  1683               	bsf	3,5	;RP0=1, select bank1
  1743     1649  1303               	bcf	3,6	;RP1=0, select bank1
  1744     164A  0850               	movf	(_cont+1)^(0+128),w
  1745     164B  1283               	bcf	3,5	;RP0=0, select bank0
  1746     164C  1303               	bcf	3,6	;RP1=0, select bank0
  1747     164D  00A7               	movwf	descomponer@num+1
  1748     164E  1683               	bsf	3,5	;RP0=1, select bank1
  1749     164F  1303               	bcf	3,6	;RP1=0, select bank1
  1750     1650  084F               	movf	_cont^(0+128),w
  1751     1651  1283               	bcf	3,5	;RP0=0, select bank0
  1752     1652  1303               	bcf	3,6	;RP1=0, select bank0
  1753     1653  00A6               	movwf	descomponer@num
  1754     1654  160A  158A  24FD  160A  118A  	fcall	_descomponer
  1755     1659  160A  158A  2344  160A  118A  	fcall	_inttochar
  1756     165E  1683               	bsf	3,5	;RP0=1, select bank1
  1757     165F  1303               	bcf	3,6	;RP1=0, select bank1
  1758     1660  00D2               	movwf	_dec^(0+128)
  1759     1661                     l4064:
  1760                           
  1761                           ;main.c: 91:         Lcd_Set_Cursor(2,8);
  1762     1661  3008               	movlw	8
  1763     1662  00F4               	movwf	Lcd_Set_Cursor@b
  1764     1663  3002               	movlw	2
  1765     1664  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1766     1669                     l4066:
  1767                           
  1768                           ;main.c: 92:         Lcd_Write_Char(dec);
  1769     1669  1683               	bsf	3,5	;RP0=1, select bank1
  1770     166A  1303               	bcf	3,6	;RP1=0, select bank1
  1771     166B  0852               	movf	_dec^(0+128),w
  1772     166C  120A  118A  20C8  160A  118A  	fcall	_Lcd_Write_Char
  1773     1671                     l4068:
  1774                           
  1775                           ;main.c: 93:         uni = inttochar(descomponer(0, cont));
  1776     1671  3000               	movlw	0
  1777     1672  1283               	bcf	3,5	;RP0=0, select bank0
  1778     1673  1303               	bcf	3,6	;RP1=0, select bank0
  1779     1674  00A4               	movwf	descomponer@pos
  1780     1675  00A5               	movwf	descomponer@pos+1
  1781     1676  1683               	bsf	3,5	;RP0=1, select bank1
  1782     1677  1303               	bcf	3,6	;RP1=0, select bank1
  1783     1678  0850               	movf	(_cont+1)^(0+128),w
  1784     1679  1283               	bcf	3,5	;RP0=0, select bank0
  1785     167A  1303               	bcf	3,6	;RP1=0, select bank0
  1786     167B  00A7               	movwf	descomponer@num+1
  1787     167C  1683               	bsf	3,5	;RP0=1, select bank1
  1788     167D  1303               	bcf	3,6	;RP1=0, select bank1
  1789     167E  084F               	movf	_cont^(0+128),w
  1790     167F  1283               	bcf	3,5	;RP0=0, select bank0
  1791     1680  1303               	bcf	3,6	;RP1=0, select bank0
  1792     1681  00A6               	movwf	descomponer@num
  1793     1682  160A  158A  24FD  160A  118A  	fcall	_descomponer
  1794     1687  160A  158A  2344  160A  118A  	fcall	_inttochar
  1795     168C  1683               	bsf	3,5	;RP0=1, select bank1
  1796     168D  1303               	bcf	3,6	;RP1=0, select bank1
  1797     168E  00D3               	movwf	_uni^(0+128)
  1798     168F                     l4070:
  1799                           
  1800                           ;main.c: 94:         Lcd_Set_Cursor(2,9);
  1801     168F  3009               	movlw	9
  1802     1690  00F4               	movwf	Lcd_Set_Cursor@b
  1803     1691  3002               	movlw	2
  1804     1692  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1805     1697                     l4072:
  1806                           
  1807                           ;main.c: 95:         Lcd_Write_Char(uni);
  1808     1697  1683               	bsf	3,5	;RP0=1, select bank1
  1809     1698  1303               	bcf	3,6	;RP1=0, select bank1
  1810     1699  0853               	movf	_uni^(0+128),w
  1811     169A  120A  118A  20C8  160A  118A  	fcall	_Lcd_Write_Char
  1812     169F                     l4074:
  1813                           
  1814                           ;main.c: 98:         _delay((unsigned long)((20)*(2000000/4000.0)));
  1815     169F  300D               	movlw	13
  1816     16A0  1683               	bsf	3,5	;RP0=1, select bank1
  1817     16A1  1303               	bcf	3,6	;RP1=0, select bank1
  1818     16A2  00C4               	movwf	(??_main^(0+128)+1)
  1819     16A3  30FB               	movlw	251
  1820     16A4  00C3               	movwf	??_main^(0+128)
  1821     16A5                     u6637:
  1822     16A5  0BC3               	decfsz	??_main^(0+128),f
  1823     16A6  2EA5               	goto	u6637
  1824     16A7  0BC4               	decfsz	(??_main^(0+128)+1),f
  1825     16A8  2EA5               	goto	u6637
  1826     16A9                     l4076:
  1827                           
  1828                           ;main.c: 100:         RA0 = 0;
  1829     16A9  1283               	bcf	3,5	;RP0=0, select bank0
  1830     16AA  1303               	bcf	3,6	;RP1=0, select bank0
  1831     16AB  1005               	bcf	5,0	;volatile
  1832                           
  1833                           ;main.c: 101:         spiWrite(0);
  1834     16AC  3000               	movlw	0
  1835     16AD  160A  158A  20D6  160A  118A  	fcall	_spiWrite
  1836     16B2                     l83:	
  1837                           ;main.c: 103:         while(!SSPSTATbits.BF);
  1838                           
  1839     16B2  1683               	bsf	3,5	;RP0=1, select bank1
  1840     16B3  1303               	bcf	3,6	;RP1=0, select bank1
  1841     16B4  1C14               	btfss	20,0	;volatile
  1842     16B5  2EB7               	goto	u6591
  1843     16B6  2EB8               	goto	u6590
  1844     16B7                     u6591:
  1845     16B7  2EB2               	goto	l83
  1846     16B8                     u6590:
  1847     16B8                     l4078:
  1848                           
  1849                           ;main.c: 106:         lecADC = SSPBUF;
  1850     16B8  1283               	bcf	3,5	;RP0=0, select bank0
  1851     16B9  1303               	bcf	3,6	;RP1=0, select bank0
  1852     16BA  0813               	movf	19,w	;volatile
  1853     16BB  1683               	bsf	3,5	;RP0=1, select bank1
  1854     16BC  1303               	bcf	3,6	;RP1=0, select bank1
  1855     16BD  00D5               	movwf	_lecADC^(0+128)
  1856                           
  1857                           ;main.c: 107:         _delay((unsigned long)((10)*(2000000/4000.0)));
  1858     16BE  3007               	movlw	7
  1859     16BF  1683               	bsf	3,5	;RP0=1, select bank1
  1860     16C0  1303               	bcf	3,6	;RP1=0, select bank1
  1861     16C1  00C4               	movwf	(??_main^(0+128)+1)
  1862     16C2  307C               	movlw	124
  1863     16C3  00C3               	movwf	??_main^(0+128)
  1864     16C4                     u6647:
  1865     16C4  0BC3               	decfsz	??_main^(0+128),f
  1866     16C5  2EC4               	goto	u6647
  1867     16C6  0BC4               	decfsz	(??_main^(0+128)+1),f
  1868     16C7  2EC4               	goto	u6647
  1869     16C8  0000               	nop
  1870     16C9                     l4080:
  1871                           
  1872                           ;main.c: 109:         RA0 = 1;
  1873     16C9  1283               	bcf	3,5	;RP0=0, select bank0
  1874     16CA  1303               	bcf	3,6	;RP1=0, select bank0
  1875     16CB  1405               	bsf	5,0	;volatile
  1876     16CC                     l4082:
  1877                           
  1878                           ;main.c: 112:         conver = (lecADC*5.0)/255;
  1879     16CC  3043               	movlw	67
  1880     16CD  00C1               	movwf	___fldiv@a+3
  1881     16CE  307F               	movlw	127
  1882     16CF  00C0               	movwf	___fldiv@a+2
  1883     16D0  3000               	movlw	0
  1884     16D1  00BF               	movwf	___fldiv@a+1
  1885     16D2  3000               	movlw	0
  1886     16D3  00BE               	movwf	___fldiv@a
  1887     16D4  3040               	movlw	64
  1888     16D5  00A7               	movwf	___flmul@b+3
  1889     16D6  30A0               	movlw	160
  1890     16D7  00A6               	movwf	___flmul@b+2
  1891     16D8  3000               	movlw	0
  1892     16D9  00A5               	movwf	___flmul@b+1
  1893     16DA  3000               	movlw	0
  1894     16DB  00A4               	movwf	___flmul@b
  1895     16DC  1683               	bsf	3,5	;RP0=1, select bank1
  1896     16DD  1303               	bcf	3,6	;RP1=0, select bank1
  1897     16DE  0855               	movf	_lecADC^(0+128),w
  1898     16DF  00C3               	movwf	??_main^(0+128)
  1899     16E0  01C4               	clrf	(??_main^(0+128)+1)
  1900     16E1  01C5               	clrf	(??_main^(0+128)+2)
  1901     16E2  01C6               	clrf	(??_main^(0+128)+3)
  1902     16E3  0846               	movf	(??_main+3)^(0+128),w
  1903     16E4  00F3               	movwf	___xxtofl@val+3
  1904     16E5  0845               	movf	(??_main+2)^(0+128),w
  1905     16E6  00F2               	movwf	___xxtofl@val+2
  1906     16E7  0844               	movf	(??_main+1)^(0+128),w
  1907     16E8  00F1               	movwf	___xxtofl@val+1
  1908     16E9  0843               	movf	??_main^(0+128),w
  1909     16EA  00F0               	movwf	___xxtofl@val
  1910     16EB  3001               	movlw	1
  1911     16EC  120A  158A  20A4  160A  118A  	fcall	___xxtofl
  1912     16F1  0873               	movf	?___xxtofl+3,w
  1913     16F2  1283               	bcf	3,5	;RP0=0, select bank0
  1914     16F3  1303               	bcf	3,6	;RP1=0, select bank0
  1915     16F4  00AB               	movwf	___flmul@a+3
  1916     16F5  0872               	movf	?___xxtofl+2,w
  1917     16F6  00AA               	movwf	___flmul@a+2
  1918     16F7  0871               	movf	?___xxtofl+1,w
  1919     16F8  00A9               	movwf	___flmul@a+1
  1920     16F9  0870               	movf	?___xxtofl,w
  1921     16FA  00A8               	movwf	___flmul@a
  1922     16FB  120A  158A  215C  160A  118A  	fcall	___flmul
  1923     1700  1283               	bcf	3,5	;RP0=0, select bank0
  1924     1701  1303               	bcf	3,6	;RP1=0, select bank0
  1925     1702  0827               	movf	?___flmul+3,w
  1926     1703  00C5               	movwf	___fldiv@b+3
  1927     1704  0826               	movf	?___flmul+2,w
  1928     1705  00C4               	movwf	___fldiv@b+2
  1929     1706  0825               	movf	?___flmul+1,w
  1930     1707  00C3               	movwf	___fldiv@b+1
  1931     1708  0824               	movf	?___flmul,w
  1932     1709  00C2               	movwf	___fldiv@b
  1933     170A  160A  158A  262D  160A  118A  	fcall	___fldiv
  1934     170F  1283               	bcf	3,5	;RP0=0, select bank0
  1935     1710  1303               	bcf	3,6	;RP1=0, select bank0
  1936     1711  0841               	movf	?___fldiv+3,w
  1937     1712  1683               	bsf	3,5	;RP0=1, select bank1
  1938     1713  1303               	bcf	3,6	;RP1=0, select bank1
  1939     1714  00CE               	movwf	(_conver+3)^(0+128)
  1940     1715  1283               	bcf	3,5	;RP0=0, select bank0
  1941     1716  1303               	bcf	3,6	;RP1=0, select bank0
  1942     1717  0840               	movf	?___fldiv+2,w
  1943     1718  1683               	bsf	3,5	;RP0=1, select bank1
  1944     1719  1303               	bcf	3,6	;RP1=0, select bank1
  1945     171A  00CD               	movwf	(_conver+2)^(0+128)
  1946     171B  1283               	bcf	3,5	;RP0=0, select bank0
  1947     171C  1303               	bcf	3,6	;RP1=0, select bank0
  1948     171D  083F               	movf	?___fldiv+1,w
  1949     171E  1683               	bsf	3,5	;RP0=1, select bank1
  1950     171F  1303               	bcf	3,6	;RP1=0, select bank1
  1951     1720  00CC               	movwf	(_conver+1)^(0+128)
  1952     1721  1283               	bcf	3,5	;RP0=0, select bank0
  1953     1722  1303               	bcf	3,6	;RP1=0, select bank0
  1954     1723  083E               	movf	?___fldiv,w
  1955     1724  1683               	bsf	3,5	;RP0=1, select bank1
  1956     1725  1303               	bcf	3,6	;RP1=0, select bank1
  1957     1726  00CB               	movwf	_conver^(0+128)
  1958     1727                     l4084:
  1959                           
  1960                           ;main.c: 113:         sprintf(valADC, "%.2f", conver);
  1961     1727  30B0               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1962     1728  00A0               	movwf	sprintf@f^(0+128)
  1963     1729  084E               	movf	(_conver+3)^(0+128),w
  1964     172A  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1965     172B  084D               	movf	(_conver+2)^(0+128),w
  1966     172C  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1967     172D  084C               	movf	(_conver+1)^(0+128),w
  1968     172E  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1969     172F  084B               	movf	_conver^(0+128),w
  1970     1730  00A1               	movwf	(?_sprintf^(0+128)+1)
  1971     1731  30D9               	movlw	(low (_valADC| 0))& (0+255)
  1972     1732  120A  118A  21B3  160A  118A  	fcall	_sprintf
  1973     1737                     l4086:
  1974                           
  1975                           ;main.c: 114:         Lcd_Set_Cursor(2,1);
  1976     1737  01F4               	clrf	Lcd_Set_Cursor@b
  1977     1738  0AF4               	incf	Lcd_Set_Cursor@b,f
  1978     1739  3002               	movlw	2
  1979     173A  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1980     173F                     l4088:
  1981                           
  1982                           ;main.c: 115:         Lcd_Write_String(valADC);
  1983     173F  30D9               	movlw	(low (_valADC| 0))& (0+255)
  1984     1740  00F5               	movwf	Lcd_Write_String@a
  1985     1741  3000               	movlw	0
  1986     1742  00F6               	movwf	Lcd_Write_String@a+1
  1987     1743  160A  158A  222A  160A  118A  	fcall	_Lcd_Write_String
  1988     1748                     l4090:
  1989                           
  1990                           ;main.c: 118:         _delay((unsigned long)((20)*(2000000/4000.0)));
  1991     1748  300D               	movlw	13
  1992     1749  1683               	bsf	3,5	;RP0=1, select bank1
  1993     174A  1303               	bcf	3,6	;RP1=0, select bank1
  1994     174B  00C4               	movwf	(??_main^(0+128)+1)
  1995     174C  30FB               	movlw	251
  1996     174D  00C3               	movwf	??_main^(0+128)
  1997     174E                     u6657:
  1998     174E  0BC3               	decfsz	??_main^(0+128),f
  1999     174F  2F4E               	goto	u6657
  2000     1750  0BC4               	decfsz	(??_main^(0+128)+1),f
  2001     1751  2F4E               	goto	u6657
  2002     1752                     l4092:
  2003                           
  2004                           ;main.c: 120:         RA1 = 0;
  2005     1752  1283               	bcf	3,5	;RP0=0, select bank0
  2006     1753  1303               	bcf	3,6	;RP1=0, select bank0
  2007     1754  1085               	bcf	5,1	;volatile
  2008     1755                     l4094:
  2009                           
  2010                           ;main.c: 121:         spiWrite(0);
  2011     1755  3000               	movlw	0
  2012     1756  160A  158A  20D6  160A  118A  	fcall	_spiWrite
  2013     175B                     l86:	
  2014                           ;main.c: 122:         while(!SSPSTATbits.BF);
  2015                           
  2016     175B  1683               	bsf	3,5	;RP0=1, select bank1
  2017     175C  1303               	bcf	3,6	;RP1=0, select bank1
  2018     175D  1C14               	btfss	20,0	;volatile
  2019     175E  2F60               	goto	u6601
  2020     175F  2F61               	goto	u6600
  2021     1760                     u6601:
  2022     1760  2F5B               	goto	l86
  2023     1761                     u6600:
  2024     1761                     l4096:
  2025                           
  2026                           ;main.c: 123:         lecADC2 = spiRead();
  2027     1761  160A  158A  20EB  160A  118A  	fcall	_spiRead
  2028     1766  1683               	bsf	3,5	;RP0=1, select bank1
  2029     1767  1303               	bcf	3,6	;RP1=0, select bank1
  2030     1768  00D4               	movwf	_lecADC2^(0+128)
  2031     1769                     l4098:
  2032                           
  2033                           ;main.c: 124:         _delay((unsigned long)((10)*(2000000/4000.0)));
  2034     1769  3007               	movlw	7
  2035     176A  1683               	bsf	3,5	;RP0=1, select bank1
  2036     176B  1303               	bcf	3,6	;RP1=0, select bank1
  2037     176C  00C4               	movwf	(??_main^(0+128)+1)
  2038     176D  307C               	movlw	124
  2039     176E  00C3               	movwf	??_main^(0+128)
  2040     176F                     u6667:
  2041     176F  0BC3               	decfsz	??_main^(0+128),f
  2042     1770  2F6F               	goto	u6667
  2043     1771  0BC4               	decfsz	(??_main^(0+128)+1),f
  2044     1772  2F6F               	goto	u6667
  2045     1773  0000               	nop
  2046     1774                     l4100:
  2047                           
  2048                           ;main.c: 125:         RA1 = 1;
  2049     1774  1283               	bcf	3,5	;RP0=0, select bank0
  2050     1775  1303               	bcf	3,6	;RP1=0, select bank0
  2051     1776  1485               	bsf	5,1	;volatile
  2052     1777                     l4102:
  2053                           
  2054                           ;main.c: 128:         _delay((unsigned long)((1)*(2000000/4000.0)));
  2055     1777  30A5               	movlw	165
  2056     1778  1683               	bsf	3,5	;RP0=1, select bank1
  2057     1779  1303               	bcf	3,6	;RP1=0, select bank1
  2058     177A  00C3               	movwf	??_main^(0+128)
  2059     177B                     u6677:
  2060     177B  0BC3               	decfsz	??_main^(0+128),f
  2061     177C  2F7B               	goto	u6677
  2062     177D  2F7E               	nop2
  2063     177E                     l4104:
  2064                           
  2065                           ;main.c: 131:         conver1 = (lecADC2*5.0)/255;
  2066     177E  3043               	movlw	67
  2067     177F  1283               	bcf	3,5	;RP0=0, select bank0
  2068     1780  1303               	bcf	3,6	;RP1=0, select bank0
  2069     1781  00C1               	movwf	___fldiv@a+3
  2070     1782  307F               	movlw	127
  2071     1783  00C0               	movwf	___fldiv@a+2
  2072     1784  3000               	movlw	0
  2073     1785  00BF               	movwf	___fldiv@a+1
  2074     1786  3000               	movlw	0
  2075     1787  00BE               	movwf	___fldiv@a
  2076     1788  3040               	movlw	64
  2077     1789  00A7               	movwf	___flmul@b+3
  2078     178A  30A0               	movlw	160
  2079     178B  00A6               	movwf	___flmul@b+2
  2080     178C  3000               	movlw	0
  2081     178D  00A5               	movwf	___flmul@b+1
  2082     178E  3000               	movlw	0
  2083     178F  00A4               	movwf	___flmul@b
  2084     1790  1683               	bsf	3,5	;RP0=1, select bank1
  2085     1791  1303               	bcf	3,6	;RP1=0, select bank1
  2086     1792  0854               	movf	_lecADC2^(0+128),w
  2087     1793  00C3               	movwf	??_main^(0+128)
  2088     1794  01C4               	clrf	(??_main^(0+128)+1)
  2089     1795  01C5               	clrf	(??_main^(0+128)+2)
  2090     1796  01C6               	clrf	(??_main^(0+128)+3)
  2091     1797  0846               	movf	(??_main+3)^(0+128),w
  2092     1798  00F3               	movwf	___xxtofl@val+3
  2093     1799  0845               	movf	(??_main+2)^(0+128),w
  2094     179A  00F2               	movwf	___xxtofl@val+2
  2095     179B  0844               	movf	(??_main+1)^(0+128),w
  2096     179C  00F1               	movwf	___xxtofl@val+1
  2097     179D  0843               	movf	??_main^(0+128),w
  2098     179E  00F0               	movwf	___xxtofl@val
  2099     179F  3001               	movlw	1
  2100     17A0  120A  158A  20A4  160A  118A  	fcall	___xxtofl
  2101     17A5  0873               	movf	?___xxtofl+3,w
  2102     17A6  1283               	bcf	3,5	;RP0=0, select bank0
  2103     17A7  1303               	bcf	3,6	;RP1=0, select bank0
  2104     17A8  00AB               	movwf	___flmul@a+3
  2105     17A9  0872               	movf	?___xxtofl+2,w
  2106     17AA  00AA               	movwf	___flmul@a+2
  2107     17AB  0871               	movf	?___xxtofl+1,w
  2108     17AC  00A9               	movwf	___flmul@a+1
  2109     17AD  0870               	movf	?___xxtofl,w
  2110     17AE  00A8               	movwf	___flmul@a
  2111     17AF  120A  158A  215C  160A  118A  	fcall	___flmul
  2112     17B4  1283               	bcf	3,5	;RP0=0, select bank0
  2113     17B5  1303               	bcf	3,6	;RP1=0, select bank0
  2114     17B6  0827               	movf	?___flmul+3,w
  2115     17B7  00C5               	movwf	___fldiv@b+3
  2116     17B8  0826               	movf	?___flmul+2,w
  2117     17B9  00C4               	movwf	___fldiv@b+2
  2118     17BA  0825               	movf	?___flmul+1,w
  2119     17BB  00C3               	movwf	___fldiv@b+1
  2120     17BC  0824               	movf	?___flmul,w
  2121     17BD  00C2               	movwf	___fldiv@b
  2122     17BE  160A  158A  262D  160A  118A  	fcall	___fldiv
  2123     17C3  1283               	bcf	3,5	;RP0=0, select bank0
  2124     17C4  1303               	bcf	3,6	;RP1=0, select bank0
  2125     17C5  0841               	movf	?___fldiv+3,w
  2126     17C6  1683               	bsf	3,5	;RP0=1, select bank1
  2127     17C7  1303               	bcf	3,6	;RP1=0, select bank1
  2128     17C8  00CA               	movwf	(_conver1+3)^(0+128)
  2129     17C9  1283               	bcf	3,5	;RP0=0, select bank0
  2130     17CA  1303               	bcf	3,6	;RP1=0, select bank0
  2131     17CB  0840               	movf	?___fldiv+2,w
  2132     17CC  1683               	bsf	3,5	;RP0=1, select bank1
  2133     17CD  1303               	bcf	3,6	;RP1=0, select bank1
  2134     17CE  00C9               	movwf	(_conver1+2)^(0+128)
  2135     17CF  1283               	bcf	3,5	;RP0=0, select bank0
  2136     17D0  1303               	bcf	3,6	;RP1=0, select bank0
  2137     17D1  083F               	movf	?___fldiv+1,w
  2138     17D2  1683               	bsf	3,5	;RP0=1, select bank1
  2139     17D3  1303               	bcf	3,6	;RP1=0, select bank1
  2140     17D4  00C8               	movwf	(_conver1+1)^(0+128)
  2141     17D5  1283               	bcf	3,5	;RP0=0, select bank0
  2142     17D6  1303               	bcf	3,6	;RP1=0, select bank0
  2143     17D7  083E               	movf	?___fldiv,w
  2144     17D8  1683               	bsf	3,5	;RP0=1, select bank1
  2145     17D9  1303               	bcf	3,6	;RP1=0, select bank1
  2146     17DA  00C7               	movwf	_conver1^(0+128)
  2147     17DB                     l4106:
  2148                           
  2149                           ;main.c: 132:         sprintf(valADC2, "%.2f", conver1);
  2150     17DB  30B0               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2151     17DC  00A0               	movwf	sprintf@f^(0+128)
  2152     17DD  084A               	movf	(_conver1+3)^(0+128),w
  2153     17DE  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2154     17DF  0849               	movf	(_conver1+2)^(0+128),w
  2155     17E0  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2156     17E1  0848               	movf	(_conver1+1)^(0+128),w
  2157     17E2  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2158     17E3  0847               	movf	_conver1^(0+128),w
  2159     17E4  00A1               	movwf	(?_sprintf^(0+128)+1)
  2160     17E5  30D6               	movlw	(low (_valADC2| 0))& (0+255)
  2161     17E6  120A  118A  21B3  160A  118A  	fcall	_sprintf
  2162     17EB                     l4108:
  2163                           
  2164                           ;main.c: 133:         Lcd_Set_Cursor(2,12);
  2165     17EB  300C               	movlw	12
  2166     17EC  00F4               	movwf	Lcd_Set_Cursor@b
  2167     17ED  3002               	movlw	2
  2168     17EE  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  2169     17F3                     l4110:
  2170                           
  2171                           ;main.c: 134:         Lcd_Write_String(valADC2);
  2172     17F3  30D6               	movlw	(low (_valADC2| 0))& (0+255)
  2173     17F4  00F5               	movwf	Lcd_Write_String@a
  2174     17F5  3000               	movlw	0
  2175     17F6  00F6               	movwf	Lcd_Write_String@a+1
  2176     17F7  160A  158A  222A  160A  118A  	fcall	_Lcd_Write_String
  2177     17FC  2DE0               	goto	l4042
  2178     17FD  120A  118A  2800   	ljmp	start
  2179     1800                     __end_of_main:
  2180                           
  2181                           	psect	text1
  2182     01B3                     __ptext1:	
  2183 ;; *************** function _sprintf *****************
  2184 ;; Defined at:
  2185 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  sp              1    wreg     PTR unsigned char 
  2188 ;;		 -> valADC2(3), valADC(3), 
  2189 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2190 ;;		 -> STR_4(5), STR_3(5), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  2193 ;;		 -> valADC2(3), valADC(3), 
  2194 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  2195 ;;  tmpval          4   23[BANK1 ] struct .
  2196 ;;  val             4   17[BANK1 ] unsigned long 
  2197 ;;  prec            2   28[BANK1 ] int 
  2198 ;;  eexp            2   21[BANK1 ] int 
  2199 ;;  flag            2   15[BANK1 ] unsigned short 
  2200 ;;  cp              2    0        PTR const unsigned char 
  2201 ;;  len             2    0        unsigned int 
  2202 ;;  width           2    0        int 
  2203 ;;  c               1   34[BANK1 ] unsigned char 
  2204 ;;  ap              1   14[BANK1 ] PTR void [1]
  2205 ;;		 -> ?_sprintf(2), 
  2206 ;;  d               1    0        unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2    0[BANK1 ] int 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       5       0       0
  2217 ;;      Locals:         0       0      25       0       0
  2218 ;;      Temps:          0       0       5       0       0
  2219 ;;      Totals:         0       0      35       0       0
  2220 ;;Total ram usage:       35 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 3
  2223 ;; This function calls:
  2224 ;;		___awdiv
  2225 ;;		___fladd
  2226 ;;		___fleq
  2227 ;;		___flge
  2228 ;;		___flmul
  2229 ;;		___flneg
  2230 ;;		___flsub
  2231 ;;		___fltol
  2232 ;;		___lldiv
  2233 ;;		___llmod
  2234 ;;		___wmul
  2235 ;;		___xxtofl
  2236 ;;		__div_to_l_
  2237 ;;		__tdiv_to_l_
  2238 ;;		_fround
  2239 ;;		_isdigit
  2240 ;;		_scale
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246     01B3                     _sprintf:	
  2247                           ;psect for function _sprintf
  2248                           
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2252                           ;sprintf@sp stored from wreg
  2253     01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2254     01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2255     01B5  00BB               	movwf	sprintf@sp^(0+128)
  2256     01B6                     l3680:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2259     01B6  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2260     01B7  00AE               	movwf	sprintf@ap^(0+128)
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2263     01B8  2FDE               	goto	l3874
  2264     01B9                     l3682:
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2267     01B9  3025               	movlw	37
  2268     01BA  0642               	xorwf	sprintf@c^(0+128),w
  2269     01BB  1903               	btfsc	3,2
  2270     01BC  29BE               	goto	u5941
  2271     01BD  29BF               	goto	u5940
  2272     01BE                     u5941:
  2273     01BE  29C9               	goto	l3688
  2274     01BF                     u5940:
  2275     01BF                     l3684:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2278     01BF  083B               	movf	sprintf@sp^(0+128),w
  2279     01C0  0084               	movwf	4
  2280     01C1  0842               	movf	sprintf@c^(0+128),w
  2281     01C2  1383               	bcf	3,7	;select IRP bank0
  2282     01C3  0080               	movwf	0
  2283     01C4                     l3686:
  2284     01C4  3001               	movlw	1
  2285     01C5  00A5               	movwf	??_sprintf^(0+128)
  2286     01C6  0825               	movf	??_sprintf^(0+128),w
  2287     01C7  07BB               	addwf	sprintf@sp^(0+128),f
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2290     01C8  2FDE               	goto	l3874
  2291     01C9                     l3688:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2294     01C9  01AF               	clrf	sprintf@flag^(0+128)
  2295     01CA  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2296     01CB                     l3690:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2299     01CB  0820               	movf	sprintf@f^(0+128),w
  2300     01CC  0084               	movwf	4
  2301     01CD  120A  118A  200D  120A  118A  	fcall	stringdir
  2302     01D2  3A2E               	xorlw	46
  2303     01D3  1D03               	skipz
  2304     01D4  29D6               	goto	u5951
  2305     01D5  29D7               	goto	u5950
  2306     01D6                     u5951:
  2307     01D6  2A1C               	goto	l3706
  2308     01D7                     u5950:
  2309     01D7                     l3692:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2312     01D7  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2313     01D8                     l3694:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  2316     01D8  3001               	movlw	1
  2317     01D9  00A5               	movwf	??_sprintf^(0+128)
  2318     01DA  0825               	movf	??_sprintf^(0+128),w
  2319     01DB  07A0               	addwf	sprintf@f^(0+128),f
  2320     01DC                     l3696:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2323     01DC  01BC               	clrf	sprintf@prec^(0+128)
  2324     01DD  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2327     01DE  2A0B               	goto	l3704
  2328     01DF                     l3698:
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2331     01DF  300A               	movlw	10
  2332     01E0  00F0               	movwf	___wmul@multiplier
  2333     01E1  3000               	movlw	0
  2334     01E2  00F1               	movwf	___wmul@multiplier+1
  2335     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  2336     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  2337     01E5  083D               	movf	(sprintf@prec+1)^(0+128),w
  2338     01E6  00F3               	movwf	___wmul@multiplicand+1
  2339     01E7  083C               	movf	sprintf@prec^(0+128),w
  2340     01E8  00F2               	movwf	___wmul@multiplicand
  2341     01E9  160A  158A  21A4  120A  118A  	fcall	___wmul
  2342     01EE  0871               	movf	?___wmul+1,w
  2343     01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2344     01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2345     01F1  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2346     01F2  0870               	movf	?___wmul,w
  2347     01F3  00BC               	movwf	sprintf@prec^(0+128)
  2348     01F4                     l3700:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2351     01F4  0820               	movf	sprintf@f^(0+128),w
  2352     01F5  0084               	movwf	4
  2353     01F6  120A  118A  200D  120A  118A  	fcall	stringdir
  2354     01FB  3ED0               	addlw	208
  2355     01FC  00A5               	movwf	??_sprintf^(0+128)
  2356     01FD  30FF               	movlw	255
  2357     01FE  1803               	skipnc
  2358     01FF  3000               	movlw	0
  2359     0200  00A6               	movwf	(??_sprintf^(0+128)+1)
  2360     0201  0825               	movf	??_sprintf^(0+128),w
  2361     0202  07BC               	addwf	sprintf@prec^(0+128),f
  2362     0203  1803               	skipnc
  2363     0204  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2364     0205  0826               	movf	(??_sprintf+1)^(0+128),w
  2365     0206  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2366     0207                     l3702:
  2367     0207  3001               	movlw	1
  2368     0208  00A5               	movwf	??_sprintf^(0+128)
  2369     0209  0825               	movf	??_sprintf^(0+128),w
  2370     020A  07A0               	addwf	sprintf@f^(0+128),f
  2371     020B                     l3704:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2374     020B  0820               	movf	sprintf@f^(0+128),w
  2375     020C  0084               	movwf	4
  2376     020D  120A  118A  200D  120A  118A  	fcall	stringdir
  2377     0212  160A  118A  2002  120A  118A  	fcall	_isdigit
  2378     0217  1803               	btfsc	3,0
  2379     0218  2A1A               	goto	u5961
  2380     0219  2A1B               	goto	u5960
  2381     021A                     u5961:
  2382     021A  29DF               	goto	l3698
  2383     021B                     u5960:
  2384     021B  2A22               	goto	l3712
  2385     021C                     l3706:
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2388     021C  01BC               	clrf	sprintf@prec^(0+128)
  2389     021D  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2390     021E                     l3708:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2393     021E  1630               	bsf	(sprintf@flag^(0+128)+1),4
  2394     021F  2A22               	goto	l3712
  2395     0220                     l382:	
  2396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2397                           
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2400     0220  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2403     0221  2A3E               	goto	l3714
  2404     0222                     l3712:
  2405     0222  3001               	movlw	1
  2406     0223  1683               	bsf	3,5	;RP0=1, select bank1
  2407     0224  1303               	bcf	3,6	;RP1=0, select bank1
  2408     0225  07A0               	addwf	sprintf@f^(0+128),f
  2409     0226  30FF               	movlw	-1
  2410     0227  0720               	addwf	sprintf@f^(0+128),w
  2411     0228  0084               	movwf	4
  2412     0229  120A  118A  200D  120A  118A  	fcall	stringdir
  2413     022E  00C2               	movwf	sprintf@c^(0+128)
  2414     022F  00A5               	movwf	??_sprintf^(0+128)
  2415     0230  01A6               	clrf	(??_sprintf^(0+128)+1)
  2416                           
  2417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2418                           ; Switch size 1, requested type "simple"
  2419                           ; Number of cases is 1, Range of values is 0 to 0
  2420                           ; switch strategies available:
  2421                           ; Name         Instructions Cycles
  2422                           ; simple_byte            4     3 (average)
  2423                           ; direct_byte           11     8 (fixed)
  2424                           ; jumptable            260     6 (fixed)
  2425                           ;	Chosen strategy is simple_byte
  2426     0231  0826               	movf	(??_sprintf+1)^(0+128),w
  2427     0232  3A00               	xorlw	0	; case 0
  2428     0233  1903               	skipnz
  2429     0234  2A36               	goto	l4150
  2430     0235  2FDE               	goto	l3874
  2431     0236                     l4150:
  2432                           
  2433                           ; Switch size 1, requested type "simple"
  2434                           ; Number of cases is 2, Range of values is 0 to 102
  2435                           ; switch strategies available:
  2436                           ; Name         Instructions Cycles
  2437                           ; simple_byte            7     4 (average)
  2438                           ; jumptable            260     6 (fixed)
  2439                           ;	Chosen strategy is simple_byte
  2440     0236  0825               	movf	??_sprintf^(0+128),w
  2441     0237  3A00               	xorlw	0	; case 0
  2442     0238  1903               	skipnz
  2443     0239  2FEE               	goto	l3876
  2444     023A  3A66               	xorlw	102	; case 102
  2445     023B  1903               	skipnz
  2446     023C  2A20               	goto	l382
  2447     023D  2FDE               	goto	l3874
  2448     023E                     l3714:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2451     023E  3000               	movlw	0
  2452     023F  052F               	andwf	sprintf@flag^(0+128),w
  2453     0240  00A5               	movwf	??_sprintf^(0+128)
  2454     0241  3007               	movlw	7
  2455     0242  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2456     0243  00A6               	movwf	(??_sprintf+1)^(0+128)
  2457     0244  0825               	movf	??_sprintf^(0+128),w
  2458     0245  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2459     0246  1903               	btfsc	3,2
  2460     0247  2A49               	goto	u5971
  2461     0248  2A4A               	goto	u5970
  2462     0249                     u5971:
  2463     0249  2F9B               	goto	l3856
  2464     024A                     u5970:
  2465     024A                     l3716:
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2468     024A  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2469     024B  2A4D               	goto	u5981
  2470     024C  2A4E               	goto	u5980
  2471     024D                     u5981:
  2472     024D  2A52               	goto	l3720
  2473     024E                     u5980:
  2474     024E                     l3718:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2477     024E  3006               	movlw	6
  2478     024F  00BC               	movwf	sprintf@prec^(0+128)
  2479     0250  3000               	movlw	0
  2480     0251  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2481     0252                     l3720:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2484     0252  082E               	movf	sprintf@ap^(0+128),w
  2485     0253  0084               	movwf	4
  2486     0254  1383               	bcf	3,7	;select IRP bank0
  2487     0255  0800               	movf	0,w
  2488     0256  00BE               	movwf	sprintf@fval^(0+128)
  2489     0257  0A84               	incf	4,f
  2490     0258  0800               	movf	0,w
  2491     0259  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2492     025A  0A84               	incf	4,f
  2493     025B  0800               	movf	0,w
  2494     025C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2495     025D  0A84               	incf	4,f
  2496     025E  0800               	movf	0,w
  2497     025F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2498     0260                     l3722:
  2499     0260  3004               	movlw	4
  2500     0261  00A5               	movwf	??_sprintf^(0+128)
  2501     0262  0825               	movf	??_sprintf^(0+128),w
  2502     0263  07AE               	addwf	sprintf@ap^(0+128),f
  2503     0264                     l3724:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2506     0264  0841               	movf	(sprintf@fval+3)^(0+128),w
  2507     0265  00F3               	movwf	___flge@ff1+3
  2508     0266  0840               	movf	(sprintf@fval+2)^(0+128),w
  2509     0267  00F2               	movwf	___flge@ff1+2
  2510     0268  083F               	movf	(sprintf@fval+1)^(0+128),w
  2511     0269  00F1               	movwf	___flge@ff1+1
  2512     026A  083E               	movf	sprintf@fval^(0+128),w
  2513     026B  00F0               	movwf	___flge@ff1
  2514     026C  3000               	movlw	0
  2515     026D  00F7               	movwf	___flge@ff2+3
  2516     026E  3000               	movlw	0
  2517     026F  00F6               	movwf	___flge@ff2+2
  2518     0270  3000               	movlw	0
  2519     0271  00F5               	movwf	___flge@ff2+1
  2520     0272  3000               	movlw	0
  2521     0273  00F4               	movwf	___flge@ff2
  2522     0274  120A  158A  2002  120A  118A  	fcall	___flge
  2523     0279  1803               	btfsc	3,0
  2524     027A  2A7C               	goto	u5991
  2525     027B  2A7D               	goto	u5990
  2526     027C                     u5991:
  2527     027C  2A9A               	goto	l3730
  2528     027D                     u5990:
  2529     027D                     l3726:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2532     027D  1683               	bsf	3,5	;RP0=1, select bank1
  2533     027E  1303               	bcf	3,6	;RP1=0, select bank1
  2534     027F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2535     0280  00F3               	movwf	___flneg@f1+3
  2536     0281  0840               	movf	(sprintf@fval+2)^(0+128),w
  2537     0282  00F2               	movwf	___flneg@f1+2
  2538     0283  083F               	movf	(sprintf@fval+1)^(0+128),w
  2539     0284  00F1               	movwf	___flneg@f1+1
  2540     0285  083E               	movf	sprintf@fval^(0+128),w
  2541     0286  00F0               	movwf	___flneg@f1
  2542     0287  160A  158A  20F4  120A  118A  	fcall	___flneg
  2543     028C  0873               	movf	?___flneg+3,w
  2544     028D  1683               	bsf	3,5	;RP0=1, select bank1
  2545     028E  1303               	bcf	3,6	;RP1=0, select bank1
  2546     028F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2547     0290  0872               	movf	?___flneg+2,w
  2548     0291  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2549     0292  0871               	movf	?___flneg+1,w
  2550     0293  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2551     0294  0870               	movf	?___flneg,w
  2552     0295  00BE               	movwf	sprintf@fval^(0+128)
  2553     0296                     l3728:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2556     0296  3003               	movlw	3
  2557     0297  04AF               	iorwf	sprintf@flag^(0+128),f
  2558     0298  3000               	movlw	0
  2559     0299  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2560     029A                     l3730:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2563     029A  1683               	bsf	3,5	;RP0=1, select bank1
  2564     029B  1303               	bcf	3,6	;RP1=0, select bank1
  2565     029C  01B5               	clrf	sprintf@eexp^(0+128)
  2566     029D  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2567     029E                     l3732:
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2570     029E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2571     029F  00F3               	movwf	___fleq@ff1+3
  2572     02A0  0840               	movf	(sprintf@fval+2)^(0+128),w
  2573     02A1  00F2               	movwf	___fleq@ff1+2
  2574     02A2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2575     02A3  00F1               	movwf	___fleq@ff1+1
  2576     02A4  083E               	movf	sprintf@fval^(0+128),w
  2577     02A5  00F0               	movwf	___fleq@ff1
  2578     02A6  3000               	movlw	0
  2579     02A7  00F7               	movwf	___fleq@ff2+3
  2580     02A8  3000               	movlw	0
  2581     02A9  00F6               	movwf	___fleq@ff2+2
  2582     02AA  3000               	movlw	0
  2583     02AB  00F5               	movwf	___fleq@ff2+1
  2584     02AC  3000               	movlw	0
  2585     02AD  00F4               	movwf	___fleq@ff2
  2586     02AE  160A  158A  22F6  120A  118A  	fcall	___fleq
  2587     02B3  1803               	btfsc	3,0
  2588     02B4  2AB6               	goto	u6001
  2589     02B5  2AB7               	goto	u6000
  2590     02B6                     u6001:
  2591     02B6  2BA7               	goto	l3758
  2592     02B7                     u6000:
  2593     02B7                     l3734:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2596     02B7  1003               	clrc
  2597     02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2598     02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2599     02BA  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2600     02BB  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2601     02BC  3E82               	addlw	130
  2602     02BD  00B5               	movwf	sprintf@eexp^(0+128)
  2603     02BE  30FF               	movlw	255
  2604     02BF  1803               	skipnc
  2605     02C0  3000               	movlw	0
  2606     02C1  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2607     02C2                     l3736:
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2610     02C2  30FF               	movlw	255
  2611     02C3  07B5               	addwf	sprintf@eexp^(0+128),f
  2612     02C4  1803               	skipnc
  2613     02C5  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2614     02C6  30FF               	movlw	255
  2615     02C7  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2616     02C8                     l3738:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2619     02C8  3003               	movlw	3
  2620     02C9  00F0               	movwf	___wmul@multiplier
  2621     02CA  3000               	movlw	0
  2622     02CB  00F1               	movwf	___wmul@multiplier+1
  2623     02CC  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2624     02CD  00F3               	movwf	___wmul@multiplicand+1
  2625     02CE  0835               	movf	sprintf@eexp^(0+128),w
  2626     02CF  00F2               	movwf	___wmul@multiplicand
  2627     02D0  160A  158A  21A4  120A  118A  	fcall	___wmul
  2628     02D5  0871               	movf	?___wmul+1,w
  2629     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2630     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2631     02D8  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2632     02D9  0870               	movf	?___wmul,w
  2633     02DA  00B5               	movwf	sprintf@eexp^(0+128)
  2634     02DB                     l3740:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2637     02DB  300A               	movlw	10
  2638     02DC  00F7               	movwf	___awdiv@divisor
  2639     02DD  3000               	movlw	0
  2640     02DE  00F8               	movwf	___awdiv@divisor+1
  2641     02DF  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2642     02E0  00FA               	movwf	___awdiv@dividend+1
  2643     02E1  0835               	movf	sprintf@eexp^(0+128),w
  2644     02E2  00F9               	movwf	___awdiv@dividend
  2645     02E3  160A  158A  25C4  120A  118A  	fcall	___awdiv
  2646     02E8  0878               	movf	?___awdiv+1,w
  2647     02E9  1683               	bsf	3,5	;RP0=1, select bank1
  2648     02EA  1303               	bcf	3,6	;RP1=0, select bank1
  2649     02EB  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2650     02EC  0877               	movf	?___awdiv,w
  2651     02ED  00B5               	movwf	sprintf@eexp^(0+128)
  2652     02EE                     l3742:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2655     02EE  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2656     02EF  2AF1               	goto	u6011
  2657     02F0  2AF2               	goto	u6010
  2658     02F1                     u6011:
  2659     02F1  2AF8               	goto	l3746
  2660     02F2                     u6010:
  2661     02F2                     l3744:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2664     02F2  30FF               	movlw	255
  2665     02F3  07B5               	addwf	sprintf@eexp^(0+128),f
  2666     02F4  1803               	skipnc
  2667     02F5  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2668     02F6  30FF               	movlw	255
  2669     02F7  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2670     02F8                     l3746:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2673     02F8  0335               	decf	sprintf@eexp^(0+128),w
  2674     02F9  3AFF               	xorlw	255
  2675     02FA  120A  158A  24A1  120A  118A  	fcall	_scale
  2676     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2677     0300  1303               	bcf	3,6	;RP1=0, select bank0
  2678     0301  0841               	movf	?_scale+3,w
  2679     0302  1683               	bsf	3,5	;RP0=1, select bank1
  2680     0303  1303               	bcf	3,6	;RP1=0, select bank1
  2681     0304  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2682     0305  1283               	bcf	3,5	;RP0=0, select bank0
  2683     0306  1303               	bcf	3,6	;RP1=0, select bank0
  2684     0307  0840               	movf	?_scale+2,w
  2685     0308  1683               	bsf	3,5	;RP0=1, select bank1
  2686     0309  1303               	bcf	3,6	;RP1=0, select bank1
  2687     030A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2688     030B  1283               	bcf	3,5	;RP0=0, select bank0
  2689     030C  1303               	bcf	3,6	;RP1=0, select bank0
  2690     030D  083F               	movf	?_scale+1,w
  2691     030E  1683               	bsf	3,5	;RP0=1, select bank1
  2692     030F  1303               	bcf	3,6	;RP1=0, select bank1
  2693     0310  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2694     0311  1283               	bcf	3,5	;RP0=0, select bank0
  2695     0312  1303               	bcf	3,6	;RP1=0, select bank0
  2696     0313  083E               	movf	?_scale,w
  2697     0314  1683               	bsf	3,5	;RP0=1, select bank1
  2698     0315  1303               	bcf	3,6	;RP1=0, select bank1
  2699     0316  00B7               	movwf	sprintf@tmpval^(0+128)
  2700     0317                     l3748:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2703     0317  0841               	movf	(sprintf@fval+3)^(0+128),w
  2704     0318  1283               	bcf	3,5	;RP0=0, select bank0
  2705     0319  1303               	bcf	3,6	;RP1=0, select bank0
  2706     031A  00A7               	movwf	___flmul@b+3
  2707     031B  1683               	bsf	3,5	;RP0=1, select bank1
  2708     031C  1303               	bcf	3,6	;RP1=0, select bank1
  2709     031D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2710     031E  1283               	bcf	3,5	;RP0=0, select bank0
  2711     031F  1303               	bcf	3,6	;RP1=0, select bank0
  2712     0320  00A6               	movwf	___flmul@b+2
  2713     0321  1683               	bsf	3,5	;RP0=1, select bank1
  2714     0322  1303               	bcf	3,6	;RP1=0, select bank1
  2715     0323  083F               	movf	(sprintf@fval+1)^(0+128),w
  2716     0324  1283               	bcf	3,5	;RP0=0, select bank0
  2717     0325  1303               	bcf	3,6	;RP1=0, select bank0
  2718     0326  00A5               	movwf	___flmul@b+1
  2719     0327  1683               	bsf	3,5	;RP0=1, select bank1
  2720     0328  1303               	bcf	3,6	;RP1=0, select bank1
  2721     0329  083E               	movf	sprintf@fval^(0+128),w
  2722     032A  1283               	bcf	3,5	;RP0=0, select bank0
  2723     032B  1303               	bcf	3,6	;RP1=0, select bank0
  2724     032C  00A4               	movwf	___flmul@b
  2725     032D  1683               	bsf	3,5	;RP0=1, select bank1
  2726     032E  1303               	bcf	3,6	;RP1=0, select bank1
  2727     032F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2728     0330  1283               	bcf	3,5	;RP0=0, select bank0
  2729     0331  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0332  00AB               	movwf	___flmul@a+3
  2731     0333  1683               	bsf	3,5	;RP0=1, select bank1
  2732     0334  1303               	bcf	3,6	;RP1=0, select bank1
  2733     0335  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2734     0336  1283               	bcf	3,5	;RP0=0, select bank0
  2735     0337  1303               	bcf	3,6	;RP1=0, select bank0
  2736     0338  00AA               	movwf	___flmul@a+2
  2737     0339  1683               	bsf	3,5	;RP0=1, select bank1
  2738     033A  1303               	bcf	3,6	;RP1=0, select bank1
  2739     033B  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2740     033C  1283               	bcf	3,5	;RP0=0, select bank0
  2741     033D  1303               	bcf	3,6	;RP1=0, select bank0
  2742     033E  00A9               	movwf	___flmul@a+1
  2743     033F  1683               	bsf	3,5	;RP0=1, select bank1
  2744     0340  1303               	bcf	3,6	;RP1=0, select bank1
  2745     0341  0837               	movf	sprintf@tmpval^(0+128),w
  2746     0342  1283               	bcf	3,5	;RP0=0, select bank0
  2747     0343  1303               	bcf	3,6	;RP1=0, select bank0
  2748     0344  00A8               	movwf	___flmul@a
  2749     0345  120A  158A  215C  120A  118A  	fcall	___flmul
  2750     034A  1283               	bcf	3,5	;RP0=0, select bank0
  2751     034B  1303               	bcf	3,6	;RP1=0, select bank0
  2752     034C  0827               	movf	?___flmul+3,w
  2753     034D  1683               	bsf	3,5	;RP0=1, select bank1
  2754     034E  1303               	bcf	3,6	;RP1=0, select bank1
  2755     034F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2756     0350  1283               	bcf	3,5	;RP0=0, select bank0
  2757     0351  1303               	bcf	3,6	;RP1=0, select bank0
  2758     0352  0826               	movf	?___flmul+2,w
  2759     0353  1683               	bsf	3,5	;RP0=1, select bank1
  2760     0354  1303               	bcf	3,6	;RP1=0, select bank1
  2761     0355  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2762     0356  1283               	bcf	3,5	;RP0=0, select bank0
  2763     0357  1303               	bcf	3,6	;RP1=0, select bank0
  2764     0358  0825               	movf	?___flmul+1,w
  2765     0359  1683               	bsf	3,5	;RP0=1, select bank1
  2766     035A  1303               	bcf	3,6	;RP1=0, select bank1
  2767     035B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2768     035C  1283               	bcf	3,5	;RP0=0, select bank0
  2769     035D  1303               	bcf	3,6	;RP1=0, select bank0
  2770     035E  0824               	movf	?___flmul,w
  2771     035F  1683               	bsf	3,5	;RP0=1, select bank1
  2772     0360  1303               	bcf	3,6	;RP1=0, select bank1
  2773     0361  00B7               	movwf	sprintf@tmpval^(0+128)
  2774     0362                     l3750:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2777     0362  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2778     0363  00F3               	movwf	___flge@ff1+3
  2779     0364  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2780     0365  00F2               	movwf	___flge@ff1+2
  2781     0366  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2782     0367  00F1               	movwf	___flge@ff1+1
  2783     0368  0837               	movf	sprintf@tmpval^(0+128),w
  2784     0369  00F0               	movwf	___flge@ff1
  2785     036A  303F               	movlw	63
  2786     036B  00F7               	movwf	___flge@ff2+3
  2787     036C  3080               	movlw	128
  2788     036D  00F6               	movwf	___flge@ff2+2
  2789     036E  3000               	movlw	0
  2790     036F  00F5               	movwf	___flge@ff2+1
  2791     0370  3000               	movlw	0
  2792     0371  00F4               	movwf	___flge@ff2
  2793     0372  120A  158A  2002  120A  118A  	fcall	___flge
  2794     0377  1803               	btfsc	3,0
  2795     0378  2B7A               	goto	u6021
  2796     0379  2B7B               	goto	u6020
  2797     037A                     u6021:
  2798     037A  2B84               	goto	l3754
  2799     037B                     u6020:
  2800     037B                     l3752:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2803     037B  30FF               	movlw	255
  2804     037C  1683               	bsf	3,5	;RP0=1, select bank1
  2805     037D  1303               	bcf	3,6	;RP1=0, select bank1
  2806     037E  07B5               	addwf	sprintf@eexp^(0+128),f
  2807     037F  1803               	skipnc
  2808     0380  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2809     0381  30FF               	movlw	255
  2810     0382  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2811     0383  2BA7               	goto	l3758
  2812     0384                     l3754:
  2813     0384  1683               	bsf	3,5	;RP0=1, select bank1
  2814     0385  1303               	bcf	3,6	;RP1=0, select bank1
  2815     0386  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2816     0387  00F3               	movwf	___flge@ff1+3
  2817     0388  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2818     0389  00F2               	movwf	___flge@ff1+2
  2819     038A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2820     038B  00F1               	movwf	___flge@ff1+1
  2821     038C  0837               	movf	sprintf@tmpval^(0+128),w
  2822     038D  00F0               	movwf	___flge@ff1
  2823     038E  3041               	movlw	65
  2824     038F  00F7               	movwf	___flge@ff2+3
  2825     0390  3020               	movlw	32
  2826     0391  00F6               	movwf	___flge@ff2+2
  2827     0392  3000               	movlw	0
  2828     0393  00F5               	movwf	___flge@ff2+1
  2829     0394  3000               	movlw	0
  2830     0395  00F4               	movwf	___flge@ff2
  2831     0396  120A  158A  2002  120A  118A  	fcall	___flge
  2832     039B  1C03               	btfss	3,0
  2833     039C  2B9E               	goto	u6031
  2834     039D  2B9F               	goto	u6030
  2835     039E                     u6031:
  2836     039E  2BA7               	goto	l3758
  2837     039F                     u6030:
  2838     039F                     l3756:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2841     039F  3001               	movlw	1
  2842     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2843     03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2844     03A2  07B5               	addwf	sprintf@eexp^(0+128),f
  2845     03A3  1803               	skipnc
  2846     03A4  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2847     03A5  3000               	movlw	0
  2848     03A6  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2849     03A7                     l3758:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2852     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2853     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2854     03A9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2855     03AA  3A80               	xorlw	128
  2856     03AB  00FF               	movwf	btemp+1
  2857     03AC  3080               	movlw	128
  2858     03AD  027F               	subwf	btemp+1,w
  2859     03AE  1D03               	skipz
  2860     03AF  2BB2               	goto	u6045
  2861     03B0  300D               	movlw	13
  2862     03B1  023C               	subwf	sprintf@prec^(0+128),w
  2863     03B2                     u6045:
  2864     03B2  1803               	skipnc
  2865     03B3  2BB5               	goto	u6041
  2866     03B4  2BB6               	goto	u6040
  2867     03B5                     u6041:
  2868     03B5  2BFD               	goto	l3762
  2869     03B6                     u6040:
  2870     03B6                     l3760:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2873     03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2874     03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2875     03B8  083C               	movf	sprintf@prec^(0+128),w
  2876     03B9  160A  118A  2143  120A  118A  	fcall	_fround
  2877     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2878     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2879     03C0  0841               	movf	?_fround+3,w
  2880     03C1  00D5               	movwf	___fladd@b+3
  2881     03C2  0840               	movf	?_fround+2,w
  2882     03C3  00D4               	movwf	___fladd@b+2
  2883     03C4  083F               	movf	?_fround+1,w
  2884     03C5  00D3               	movwf	___fladd@b+1
  2885     03C6  083E               	movf	?_fround,w
  2886     03C7  00D2               	movwf	___fladd@b
  2887     03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2888     03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2889     03CA  0841               	movf	(sprintf@fval+3)^(0+128),w
  2890     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2891     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2892     03CD  00D9               	movwf	___fladd@a+3
  2893     03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2894     03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2895     03D0  0840               	movf	(sprintf@fval+2)^(0+128),w
  2896     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2897     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2898     03D3  00D8               	movwf	___fladd@a+2
  2899     03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2900     03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2901     03D6  083F               	movf	(sprintf@fval+1)^(0+128),w
  2902     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2903     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2904     03D9  00D7               	movwf	___fladd@a+1
  2905     03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2906     03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2907     03DC  083E               	movf	sprintf@fval^(0+128),w
  2908     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2909     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2910     03DF  00D6               	movwf	___fladd@a
  2911     03E0  160A  118A  234E  120A  118A  	fcall	___fladd
  2912     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2913     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2914     03E7  0855               	movf	?___fladd+3,w
  2915     03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2916     03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2917     03EA  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2918     03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2919     03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2920     03ED  0854               	movf	?___fladd+2,w
  2921     03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2922     03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2923     03F0  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2924     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2925     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2926     03F3  0853               	movf	?___fladd+1,w
  2927     03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2928     03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2929     03F6  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2930     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2931     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2932     03F9  0852               	movf	?___fladd,w
  2933     03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2934     03FB  1303               	bcf	3,6	;RP1=0, select bank1
  2935     03FC  00BE               	movwf	sprintf@fval^(0+128)
  2936     03FD                     l3762:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2939     03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2940     03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2941     03FF  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2942     0400  3A80               	xorlw	128
  2943     0401  00FF               	movwf	btemp+1
  2944     0402  3080               	movlw	128
  2945     0403  027F               	subwf	btemp+1,w
  2946     0404  1D03               	skipz
  2947     0405  2C08               	goto	u6055
  2948     0406  300A               	movlw	10
  2949     0407  0235               	subwf	sprintf@eexp^(0+128),w
  2950     0408                     u6055:
  2951     0408  1803               	skipnc
  2952     0409  2C0B               	goto	u6051
  2953     040A  2C0C               	goto	u6050
  2954     040B                     u6051:
  2955     040B  2C5D               	goto	l3770
  2956     040C                     u6050:
  2957     040C                     l3764:
  2958     040C  1683               	bsf	3,5	;RP0=1, select bank1
  2959     040D  1303               	bcf	3,6	;RP1=0, select bank1
  2960     040E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2961     040F  00F3               	movwf	___fleq@ff1+3
  2962     0410  0840               	movf	(sprintf@fval+2)^(0+128),w
  2963     0411  00F2               	movwf	___fleq@ff1+2
  2964     0412  083F               	movf	(sprintf@fval+1)^(0+128),w
  2965     0413  00F1               	movwf	___fleq@ff1+1
  2966     0414  083E               	movf	sprintf@fval^(0+128),w
  2967     0415  00F0               	movwf	___fleq@ff1
  2968     0416  3000               	movlw	0
  2969     0417  00F7               	movwf	___fleq@ff2+3
  2970     0418  3000               	movlw	0
  2971     0419  00F6               	movwf	___fleq@ff2+2
  2972     041A  3000               	movlw	0
  2973     041B  00F5               	movwf	___fleq@ff2+1
  2974     041C  3000               	movlw	0
  2975     041D  00F4               	movwf	___fleq@ff2
  2976     041E  160A  158A  22F6  120A  118A  	fcall	___fleq
  2977     0423  1803               	btfsc	3,0
  2978     0424  2C26               	goto	u6061
  2979     0425  2C27               	goto	u6060
  2980     0426                     u6061:
  2981     0426  2CCF               	goto	l3784
  2982     0427                     u6060:
  2983     0427                     l3766:
  2984     0427  1683               	bsf	3,5	;RP0=1, select bank1
  2985     0428  1303               	bcf	3,6	;RP1=0, select bank1
  2986     0429  0841               	movf	(sprintf@fval+3)^(0+128),w
  2987     042A  1283               	bcf	3,5	;RP0=0, select bank0
  2988     042B  1303               	bcf	3,6	;RP1=0, select bank0
  2989     042C  00D4               	movwf	___fltol@f1+3
  2990     042D  1683               	bsf	3,5	;RP0=1, select bank1
  2991     042E  1303               	bcf	3,6	;RP1=0, select bank1
  2992     042F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2993     0430  1283               	bcf	3,5	;RP0=0, select bank0
  2994     0431  1303               	bcf	3,6	;RP1=0, select bank0
  2995     0432  00D3               	movwf	___fltol@f1+2
  2996     0433  1683               	bsf	3,5	;RP0=1, select bank1
  2997     0434  1303               	bcf	3,6	;RP1=0, select bank1
  2998     0435  083F               	movf	(sprintf@fval+1)^(0+128),w
  2999     0436  1283               	bcf	3,5	;RP0=0, select bank0
  3000     0437  1303               	bcf	3,6	;RP1=0, select bank0
  3001     0438  00D2               	movwf	___fltol@f1+1
  3002     0439  1683               	bsf	3,5	;RP0=1, select bank1
  3003     043A  1303               	bcf	3,6	;RP1=0, select bank1
  3004     043B  083E               	movf	sprintf@fval^(0+128),w
  3005     043C  1283               	bcf	3,5	;RP0=0, select bank0
  3006     043D  1303               	bcf	3,6	;RP1=0, select bank0
  3007     043E  00D1               	movwf	___fltol@f1
  3008     043F  160A  118A  2014  120A  118A  	fcall	___fltol
  3009     0444  1283               	bcf	3,5	;RP0=0, select bank0
  3010     0445  1303               	bcf	3,6	;RP1=0, select bank0
  3011     0446  0854               	movf	?___fltol+3,w
  3012     0447  0453               	iorwf	?___fltol+2,w
  3013     0448  0452               	iorwf	?___fltol+1,w
  3014     0449  0451               	iorwf	?___fltol,w
  3015     044A  1D03               	skipz
  3016     044B  2C4D               	goto	u6071
  3017     044C  2C4E               	goto	u6070
  3018     044D                     u6071:
  3019     044D  2CCF               	goto	l3784
  3020     044E                     u6070:
  3021     044E                     l3768:
  3022     044E  1683               	bsf	3,5	;RP0=1, select bank1
  3023     044F  1303               	bcf	3,6	;RP1=0, select bank1
  3024     0450  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3025     0451  3A80               	xorlw	128
  3026     0452  00FF               	movwf	btemp+1
  3027     0453  3080               	movlw	128
  3028     0454  027F               	subwf	btemp+1,w
  3029     0455  1D03               	skipz
  3030     0456  2C59               	goto	u6085
  3031     0457  3002               	movlw	2
  3032     0458  0235               	subwf	sprintf@eexp^(0+128),w
  3033     0459                     u6085:
  3034     0459  1C03               	skipc
  3035     045A  2C5C               	goto	u6081
  3036     045B  2C5D               	goto	u6080
  3037     045C                     u6081:
  3038     045C  2CCF               	goto	l3784
  3039     045D                     u6080:
  3040     045D                     l3770:
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3043     045D  1683               	bsf	3,5	;RP0=1, select bank1
  3044     045E  1303               	bcf	3,6	;RP1=0, select bank1
  3045     045F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3046     0460  00F3               	movwf	___flge@ff1+3
  3047     0461  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3048     0462  00F2               	movwf	___flge@ff1+2
  3049     0463  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3050     0464  00F1               	movwf	___flge@ff1+1
  3051     0465  0837               	movf	sprintf@tmpval^(0+128),w
  3052     0466  00F0               	movwf	___flge@ff1
  3053     0467  3040               	movlw	64
  3054     0468  00F7               	movwf	___flge@ff2+3
  3055     0469  3089               	movlw	137
  3056     046A  00F6               	movwf	___flge@ff2+2
  3057     046B  3070               	movlw	112
  3058     046C  00F5               	movwf	___flge@ff2+1
  3059     046D  305F               	movlw	95
  3060     046E  00F4               	movwf	___flge@ff2
  3061     046F  120A  158A  2002  120A  118A  	fcall	___flge
  3062     0474  1803               	btfsc	3,0
  3063     0475  2C77               	goto	u6091
  3064     0476  2C78               	goto	u6090
  3065     0477                     u6091:
  3066     0477  2C81               	goto	l3774
  3067     0478                     u6090:
  3068     0478                     l3772:
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3071     0478  30F7               	movlw	247
  3072     0479  1683               	bsf	3,5	;RP0=1, select bank1
  3073     047A  1303               	bcf	3,6	;RP1=0, select bank1
  3074     047B  07B5               	addwf	sprintf@eexp^(0+128),f
  3075     047C  1803               	skipnc
  3076     047D  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3077     047E  30FF               	movlw	255
  3078     047F  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3081     0480  2C89               	goto	l3776
  3082     0481                     l3774:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3085     0481  30F8               	movlw	248
  3086     0482  1683               	bsf	3,5	;RP0=1, select bank1
  3087     0483  1303               	bcf	3,6	;RP1=0, select bank1
  3088     0484  07B5               	addwf	sprintf@eexp^(0+128),f
  3089     0485  1803               	skipnc
  3090     0486  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3091     0487  30FF               	movlw	255
  3092     0488  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3093     0489                     l3776:
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3096     0489  0835               	movf	sprintf@eexp^(0+128),w
  3097     048A  120A  158A  24A1  120A  118A  	fcall	_scale
  3098     048F  1283               	bcf	3,5	;RP0=0, select bank0
  3099     0490  1303               	bcf	3,6	;RP1=0, select bank0
  3100     0491  0841               	movf	?_scale+3,w
  3101     0492  1683               	bsf	3,5	;RP0=1, select bank1
  3102     0493  1303               	bcf	3,6	;RP1=0, select bank1
  3103     0494  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3104     0495  1283               	bcf	3,5	;RP0=0, select bank0
  3105     0496  1303               	bcf	3,6	;RP1=0, select bank0
  3106     0497  0840               	movf	?_scale+2,w
  3107     0498  1683               	bsf	3,5	;RP0=1, select bank1
  3108     0499  1303               	bcf	3,6	;RP1=0, select bank1
  3109     049A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3110     049B  1283               	bcf	3,5	;RP0=0, select bank0
  3111     049C  1303               	bcf	3,6	;RP1=0, select bank0
  3112     049D  083F               	movf	?_scale+1,w
  3113     049E  1683               	bsf	3,5	;RP0=1, select bank1
  3114     049F  1303               	bcf	3,6	;RP1=0, select bank1
  3115     04A0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3116     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  3117     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  3118     04A3  083E               	movf	?_scale,w
  3119     04A4  1683               	bsf	3,5	;RP0=1, select bank1
  3120     04A5  1303               	bcf	3,6	;RP1=0, select bank1
  3121     04A6  00B7               	movwf	sprintf@tmpval^(0+128)
  3122     04A7                     l3778:
  3123     04A7  0841               	movf	(sprintf@fval+3)^(0+128),w
  3124     04A8  00F3               	movwf	__div_to_l_@f1+3
  3125     04A9  0840               	movf	(sprintf@fval+2)^(0+128),w
  3126     04AA  00F2               	movwf	__div_to_l_@f1+2
  3127     04AB  083F               	movf	(sprintf@fval+1)^(0+128),w
  3128     04AC  00F1               	movwf	__div_to_l_@f1+1
  3129     04AD  083E               	movf	sprintf@fval^(0+128),w
  3130     04AE  00F0               	movwf	__div_to_l_@f1
  3131     04AF  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3132     04B0  00F7               	movwf	__div_to_l_@f2+3
  3133     04B1  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3134     04B2  00F6               	movwf	__div_to_l_@f2+2
  3135     04B3  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3136     04B4  00F5               	movwf	__div_to_l_@f2+1
  3137     04B5  0837               	movf	sprintf@tmpval^(0+128),w
  3138     04B6  00F4               	movwf	__div_to_l_@f2
  3139     04B7  120A  118A  20FB  120A  118A  	fcall	__div_to_l_
  3140     04BC  0873               	movf	?__div_to_l_+3,w
  3141     04BD  1683               	bsf	3,5	;RP0=1, select bank1
  3142     04BE  1303               	bcf	3,6	;RP1=0, select bank1
  3143     04BF  00B4               	movwf	(sprintf@val+3)^(0+128)
  3144     04C0  0872               	movf	?__div_to_l_+2,w
  3145     04C1  00B3               	movwf	(sprintf@val+2)^(0+128)
  3146     04C2  0871               	movf	?__div_to_l_+1,w
  3147     04C3  00B2               	movwf	(sprintf@val+1)^(0+128)
  3148     04C4  0870               	movf	?__div_to_l_,w
  3149     04C5  00B1               	movwf	sprintf@val^(0+128)
  3150     04C6                     l3782:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3153     04C6  3000               	movlw	0
  3154     04C7  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3155     04C8  3000               	movlw	0
  3156     04C9  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3157     04CA  3000               	movlw	0
  3158     04CB  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3159     04CC  3000               	movlw	0
  3160     04CD  00BE               	movwf	sprintf@fval^(0+128)
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3163     04CE  2D53               	goto	l3790
  3164     04CF                     l3784:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3167     04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3168     04D0  1303               	bcf	3,6	;RP1=0, select bank1
  3169     04D1  0841               	movf	(sprintf@fval+3)^(0+128),w
  3170     04D2  1283               	bcf	3,5	;RP0=0, select bank0
  3171     04D3  1303               	bcf	3,6	;RP1=0, select bank0
  3172     04D4  00D4               	movwf	___fltol@f1+3
  3173     04D5  1683               	bsf	3,5	;RP0=1, select bank1
  3174     04D6  1303               	bcf	3,6	;RP1=0, select bank1
  3175     04D7  0840               	movf	(sprintf@fval+2)^(0+128),w
  3176     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3177     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3178     04DA  00D3               	movwf	___fltol@f1+2
  3179     04DB  1683               	bsf	3,5	;RP0=1, select bank1
  3180     04DC  1303               	bcf	3,6	;RP1=0, select bank1
  3181     04DD  083F               	movf	(sprintf@fval+1)^(0+128),w
  3182     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3183     04DF  1303               	bcf	3,6	;RP1=0, select bank0
  3184     04E0  00D2               	movwf	___fltol@f1+1
  3185     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3186     04E2  1303               	bcf	3,6	;RP1=0, select bank1
  3187     04E3  083E               	movf	sprintf@fval^(0+128),w
  3188     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3189     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3190     04E6  00D1               	movwf	___fltol@f1
  3191     04E7  160A  118A  2014  120A  118A  	fcall	___fltol
  3192     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3193     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3194     04EE  0854               	movf	?___fltol+3,w
  3195     04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3196     04F0  1303               	bcf	3,6	;RP1=0, select bank1
  3197     04F1  00B4               	movwf	(sprintf@val+3)^(0+128)
  3198     04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3199     04F3  1303               	bcf	3,6	;RP1=0, select bank0
  3200     04F4  0853               	movf	?___fltol+2,w
  3201     04F5  1683               	bsf	3,5	;RP0=1, select bank1
  3202     04F6  1303               	bcf	3,6	;RP1=0, select bank1
  3203     04F7  00B3               	movwf	(sprintf@val+2)^(0+128)
  3204     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3205     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3206     04FA  0852               	movf	?___fltol+1,w
  3207     04FB  1683               	bsf	3,5	;RP0=1, select bank1
  3208     04FC  1303               	bcf	3,6	;RP1=0, select bank1
  3209     04FD  00B2               	movwf	(sprintf@val+1)^(0+128)
  3210     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3211     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3212     0500  0851               	movf	?___fltol,w
  3213     0501  1683               	bsf	3,5	;RP0=1, select bank1
  3214     0502  1303               	bcf	3,6	;RP1=0, select bank1
  3215     0503  00B1               	movwf	sprintf@val^(0+128)
  3216     0504                     l3786:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3219     0504  0834               	movf	(sprintf@val+3)^(0+128),w
  3220     0505  00F3               	movwf	___xxtofl@val+3
  3221     0506  0833               	movf	(sprintf@val+2)^(0+128),w
  3222     0507  00F2               	movwf	___xxtofl@val+2
  3223     0508  0832               	movf	(sprintf@val+1)^(0+128),w
  3224     0509  00F1               	movwf	___xxtofl@val+1
  3225     050A  0831               	movf	sprintf@val^(0+128),w
  3226     050B  00F0               	movwf	___xxtofl@val
  3227     050C  3000               	movlw	0
  3228     050D  120A  158A  20A4  120A  118A  	fcall	___xxtofl
  3229     0512  0873               	movf	?___xxtofl+3,w
  3230     0513  1283               	bcf	3,5	;RP0=0, select bank0
  3231     0514  1303               	bcf	3,6	;RP1=0, select bank0
  3232     0515  00E9               	movwf	___flsub@a+3
  3233     0516  0872               	movf	?___xxtofl+2,w
  3234     0517  00E8               	movwf	___flsub@a+2
  3235     0518  0871               	movf	?___xxtofl+1,w
  3236     0519  00E7               	movwf	___flsub@a+1
  3237     051A  0870               	movf	?___xxtofl,w
  3238     051B  00E6               	movwf	___flsub@a
  3239     051C  1683               	bsf	3,5	;RP0=1, select bank1
  3240     051D  1303               	bcf	3,6	;RP1=0, select bank1
  3241     051E  0841               	movf	(sprintf@fval+3)^(0+128),w
  3242     051F  1283               	bcf	3,5	;RP0=0, select bank0
  3243     0520  1303               	bcf	3,6	;RP1=0, select bank0
  3244     0521  00ED               	movwf	___flsub@b+3
  3245     0522  1683               	bsf	3,5	;RP0=1, select bank1
  3246     0523  1303               	bcf	3,6	;RP1=0, select bank1
  3247     0524  0840               	movf	(sprintf@fval+2)^(0+128),w
  3248     0525  1283               	bcf	3,5	;RP0=0, select bank0
  3249     0526  1303               	bcf	3,6	;RP1=0, select bank0
  3250     0527  00EC               	movwf	___flsub@b+2
  3251     0528  1683               	bsf	3,5	;RP0=1, select bank1
  3252     0529  1303               	bcf	3,6	;RP1=0, select bank1
  3253     052A  083F               	movf	(sprintf@fval+1)^(0+128),w
  3254     052B  1283               	bcf	3,5	;RP0=0, select bank0
  3255     052C  1303               	bcf	3,6	;RP1=0, select bank0
  3256     052D  00EB               	movwf	___flsub@b+1
  3257     052E  1683               	bsf	3,5	;RP0=1, select bank1
  3258     052F  1303               	bcf	3,6	;RP1=0, select bank1
  3259     0530  083E               	movf	sprintf@fval^(0+128),w
  3260     0531  1283               	bcf	3,5	;RP0=0, select bank0
  3261     0532  1303               	bcf	3,6	;RP1=0, select bank0
  3262     0533  00EA               	movwf	___flsub@b
  3263     0534  160A  158A  2180  120A  118A  	fcall	___flsub
  3264     0539  1283               	bcf	3,5	;RP0=0, select bank0
  3265     053A  1303               	bcf	3,6	;RP1=0, select bank0
  3266     053B  0869               	movf	?___flsub+3,w
  3267     053C  1683               	bsf	3,5	;RP0=1, select bank1
  3268     053D  1303               	bcf	3,6	;RP1=0, select bank1
  3269     053E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3270     053F  1283               	bcf	3,5	;RP0=0, select bank0
  3271     0540  1303               	bcf	3,6	;RP1=0, select bank0
  3272     0541  0868               	movf	?___flsub+2,w
  3273     0542  1683               	bsf	3,5	;RP0=1, select bank1
  3274     0543  1303               	bcf	3,6	;RP1=0, select bank1
  3275     0544  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3276     0545  1283               	bcf	3,5	;RP0=0, select bank0
  3277     0546  1303               	bcf	3,6	;RP1=0, select bank0
  3278     0547  0867               	movf	?___flsub+1,w
  3279     0548  1683               	bsf	3,5	;RP0=1, select bank1
  3280     0549  1303               	bcf	3,6	;RP1=0, select bank1
  3281     054A  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3282     054B  1283               	bcf	3,5	;RP0=0, select bank0
  3283     054C  1303               	bcf	3,6	;RP1=0, select bank0
  3284     054D  0866               	movf	?___flsub,w
  3285     054E  1683               	bsf	3,5	;RP0=1, select bank1
  3286     054F  1303               	bcf	3,6	;RP1=0, select bank1
  3287     0550  00BE               	movwf	sprintf@fval^(0+128)
  3288     0551                     l3788:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3291     0551  01B5               	clrf	sprintf@eexp^(0+128)
  3292     0552  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3293     0553                     l3790:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3296     0553  01C2               	clrf	sprintf@c^(0+128)
  3297     0554  0AC2               	incf	sprintf@c^(0+128),f
  3298     0555                     l3796:
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3301     0555  0842               	movf	sprintf@c^(0+128),w
  3302     0556  00A5               	movwf	??_sprintf^(0+128)
  3303     0557  3001               	movlw	1
  3304     0558                     u6105:
  3305     0558  1003               	clrc
  3306     0559  0DA5               	rlf	??_sprintf^(0+128),f
  3307     055A  3EFF               	addlw	-1
  3308     055B  1D03               	skipz
  3309     055C  2D58               	goto	u6105
  3310     055D  1003               	clrc
  3311     055E  0D25               	rlf	??_sprintf^(0+128),w
  3312     055F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3313     0560  0084               	movwf	4
  3314     0561  120A  118A  200D  120A  118A  	fcall	stringdir
  3315     0566  00A6               	movwf	(??_sprintf+1)^(0+128)
  3316     0567  120A  118A  200D  120A  118A  	fcall	stringdir
  3317     056C  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3318     056D  120A  118A  200D  120A  118A  	fcall	stringdir
  3319     0572  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3320     0573  120A  118A  200D  120A  118A  	fcall	stringdir
  3321     0578  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3322     0579  0829               	movf	(??_sprintf+4)^(0+128),w
  3323     057A  0234               	subwf	(sprintf@val+3)^(0+128),w
  3324     057B  1D03               	skipz
  3325     057C  2D87               	goto	u6115
  3326     057D  0828               	movf	(??_sprintf+3)^(0+128),w
  3327     057E  0233               	subwf	(sprintf@val+2)^(0+128),w
  3328     057F  1D03               	skipz
  3329     0580  2D87               	goto	u6115
  3330     0581  0827               	movf	(??_sprintf+2)^(0+128),w
  3331     0582  0232               	subwf	(sprintf@val+1)^(0+128),w
  3332     0583  1D03               	skipz
  3333     0584  2D87               	goto	u6115
  3334     0585  0826               	movf	(??_sprintf+1)^(0+128),w
  3335     0586  0231               	subwf	sprintf@val^(0+128),w
  3336     0587                     u6115:
  3337     0587  1803               	skipnc
  3338     0588  2D8A               	goto	u6111
  3339     0589  2D8B               	goto	u6110
  3340     058A                     u6111:
  3341     058A  2D8C               	goto	l3800
  3342     058B                     u6110:
  3343     058B  2D96               	goto	l3802
  3344     058C                     l3800:
  3345     058C  3001               	movlw	1
  3346     058D  00A5               	movwf	??_sprintf^(0+128)
  3347     058E  0825               	movf	??_sprintf^(0+128),w
  3348     058F  07C2               	addwf	sprintf@c^(0+128),f
  3349     0590  300A               	movlw	10
  3350     0591  0642               	xorwf	sprintf@c^(0+128),w
  3351     0592  1D03               	btfss	3,2
  3352     0593  2D95               	goto	u6121
  3353     0594  2D96               	goto	u6120
  3354     0595                     u6121:
  3355     0595  2D55               	goto	l3796
  3356     0596                     u6120:
  3357     0596                     l3802:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3360     0596  3003               	movlw	3
  3361     0597  052F               	andwf	sprintf@flag^(0+128),w
  3362     0598  00A5               	movwf	??_sprintf^(0+128)
  3363     0599  3000               	movlw	0
  3364     059A  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3365     059B  00A6               	movwf	(??_sprintf+1)^(0+128)
  3366     059C  0825               	movf	??_sprintf^(0+128),w
  3367     059D  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3368     059E  1903               	btfsc	3,2
  3369     059F  2DA1               	goto	u6131
  3370     05A0  2DA2               	goto	u6130
  3371     05A1                     u6131:
  3372     05A1  2E10               	goto	l408
  3373     05A2                     u6130:
  3374     05A2                     l3804:
  3375                           
  3376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3377     05A2  083B               	movf	sprintf@sp^(0+128),w
  3378     05A3  0084               	movwf	4
  3379     05A4  302D               	movlw	45
  3380     05A5  1383               	bcf	3,7	;select IRP bank0
  3381     05A6  0080               	movwf	0
  3382     05A7                     l3806:
  3383     05A7  3001               	movlw	1
  3384     05A8  00A5               	movwf	??_sprintf^(0+128)
  3385     05A9  0825               	movf	??_sprintf^(0+128),w
  3386     05AA  07BB               	addwf	sprintf@sp^(0+128),f
  3387     05AB  2E10               	goto	l408
  3388     05AC                     l3808:
  3389                           
  3390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3391     05AC  0842               	movf	sprintf@c^(0+128),w
  3392     05AD  00A5               	movwf	??_sprintf^(0+128)
  3393     05AE  3001               	movlw	1
  3394     05AF                     u6145:
  3395     05AF  1003               	clrc
  3396     05B0  0DA5               	rlf	??_sprintf^(0+128),f
  3397     05B1  3EFF               	addlw	-1
  3398     05B2  1D03               	skipz
  3399     05B3  2DAF               	goto	u6145
  3400     05B4  1003               	clrc
  3401     05B5  0D25               	rlf	??_sprintf^(0+128),w
  3402     05B6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3403     05B7  0084               	movwf	4
  3404     05B8  120A  118A  200D  120A  118A  	fcall	stringdir
  3405     05BD  00F0               	movwf	___lldiv@divisor
  3406     05BE  120A  118A  200D  120A  118A  	fcall	stringdir
  3407     05C3  00F1               	movwf	___lldiv@divisor+1
  3408     05C4  120A  118A  200D  120A  118A  	fcall	stringdir
  3409     05C9  00F2               	movwf	___lldiv@divisor+2
  3410     05CA  120A  118A  200D  120A  118A  	fcall	stringdir
  3411     05CF  00F3               	movwf	___lldiv@divisor+3
  3412     05D0  0834               	movf	(sprintf@val+3)^(0+128),w
  3413     05D1  00F7               	movwf	___lldiv@dividend+3
  3414     05D2  0833               	movf	(sprintf@val+2)^(0+128),w
  3415     05D3  00F6               	movwf	___lldiv@dividend+2
  3416     05D4  0832               	movf	(sprintf@val+1)^(0+128),w
  3417     05D5  00F5               	movwf	___lldiv@dividend+1
  3418     05D6  0831               	movf	sprintf@val^(0+128),w
  3419     05D7  00F4               	movwf	___lldiv@dividend
  3420     05D8  160A  158A  255E  120A  118A  	fcall	___lldiv
  3421     05DD  0873               	movf	?___lldiv+3,w
  3422     05DE  1683               	bsf	3,5	;RP0=1, select bank1
  3423     05DF  1303               	bcf	3,6	;RP1=0, select bank1
  3424     05E0  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3425     05E1  0872               	movf	?___lldiv+2,w
  3426     05E2  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3427     05E3  0871               	movf	?___lldiv+1,w
  3428     05E4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3429     05E5  0870               	movf	?___lldiv,w
  3430     05E6  00B7               	movwf	sprintf@tmpval^(0+128)
  3431     05E7                     l3810:
  3432                           
  3433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3434     05E7  3000               	movlw	0
  3435     05E8  00F3               	movwf	___llmod@divisor+3
  3436     05E9  3000               	movlw	0
  3437     05EA  00F2               	movwf	___llmod@divisor+2
  3438     05EB  3000               	movlw	0
  3439     05EC  00F1               	movwf	___llmod@divisor+1
  3440     05ED  300A               	movlw	10
  3441     05EE  00F0               	movwf	___llmod@divisor
  3442     05EF  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3443     05F0  00F7               	movwf	___llmod@dividend+3
  3444     05F1  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3445     05F2  00F6               	movwf	___llmod@dividend+2
  3446     05F3  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3447     05F4  00F5               	movwf	___llmod@dividend+1
  3448     05F5  0837               	movf	sprintf@tmpval^(0+128),w
  3449     05F6  00F4               	movwf	___llmod@dividend
  3450     05F7  160A  158A  2394  120A  118A  	fcall	___llmod
  3451     05FC  0873               	movf	?___llmod+3,w
  3452     05FD  1683               	bsf	3,5	;RP0=1, select bank1
  3453     05FE  1303               	bcf	3,6	;RP1=0, select bank1
  3454     05FF  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3455     0600  0872               	movf	?___llmod+2,w
  3456     0601  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3457     0602  0871               	movf	?___llmod+1,w
  3458     0603  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3459     0604  0870               	movf	?___llmod,w
  3460     0605  00B7               	movwf	sprintf@tmpval^(0+128)
  3461     0606                     l3812:
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3464     0606  083B               	movf	sprintf@sp^(0+128),w
  3465     0607  0084               	movwf	4
  3466     0608  0837               	movf	sprintf@tmpval^(0+128),w
  3467     0609  3E30               	addlw	48
  3468     060A  1383               	bcf	3,7	;select IRP bank0
  3469     060B  0080               	movwf	0
  3470     060C  3001               	movlw	1
  3471     060D  00A5               	movwf	??_sprintf^(0+128)
  3472     060E  0825               	movf	??_sprintf^(0+128),w
  3473     060F  07BB               	addwf	sprintf@sp^(0+128),f
  3474     0610                     l408:	
  3475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3476                           
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3479     0610  3001               	movlw	1
  3480     0611  02C2               	subwf	sprintf@c^(0+128),f
  3481     0612  0A42               	incf	sprintf@c^(0+128),w
  3482     0613  1D03               	btfss	3,2
  3483     0614  2E16               	goto	u6151
  3484     0615  2E17               	goto	u6150
  3485     0616                     u6151:
  3486     0616  2DAC               	goto	l3808
  3487     0617                     u6150:
  3488     0617  2E29               	goto	l3820
  3489     0618                     l3814:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3492     0618  1683               	bsf	3,5	;RP0=1, select bank1
  3493     0619  1303               	bcf	3,6	;RP1=0, select bank1
  3494     061A  083B               	movf	sprintf@sp^(0+128),w
  3495     061B  0084               	movwf	4
  3496     061C  3030               	movlw	48
  3497     061D  1383               	bcf	3,7	;select IRP bank0
  3498     061E  0080               	movwf	0
  3499     061F                     l3816:
  3500     061F  3001               	movlw	1
  3501     0620  00A5               	movwf	??_sprintf^(0+128)
  3502     0621  0825               	movf	??_sprintf^(0+128),w
  3503     0622  07BB               	addwf	sprintf@sp^(0+128),f
  3504     0623                     l3818:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3507     0623  30FF               	movlw	255
  3508     0624  07B5               	addwf	sprintf@eexp^(0+128),f
  3509     0625  1803               	skipnc
  3510     0626  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3511     0627  30FF               	movlw	255
  3512     0628  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3513     0629                     l3820:
  3514                           
  3515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3516     0629  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3517     062A  3A80               	xorlw	128
  3518     062B  00FF               	movwf	btemp+1
  3519     062C  3080               	movlw	128
  3520     062D  027F               	subwf	btemp+1,w
  3521     062E  1D03               	skipz
  3522     062F  2E32               	goto	u6165
  3523     0630  3001               	movlw	1
  3524     0631  0235               	subwf	sprintf@eexp^(0+128),w
  3525     0632                     u6165:
  3526     0632  1803               	skipnc
  3527     0633  2E35               	goto	u6161
  3528     0634  2E36               	goto	u6160
  3529     0635                     u6161:
  3530     0635  2E18               	goto	l3814
  3531     0636                     u6160:
  3532     0636                     l3822:
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3535     0636  1683               	bsf	3,5	;RP0=1, select bank1
  3536     0637  1303               	bcf	3,6	;RP1=0, select bank1
  3537     0638  083D               	movf	(sprintf@prec+1)^(0+128),w
  3538     0639  3A80               	xorlw	128
  3539     063A  00FF               	movwf	btemp+1
  3540     063B  3080               	movlw	128
  3541     063C  027F               	subwf	btemp+1,w
  3542     063D  1D03               	skipz
  3543     063E  2E41               	goto	u6175
  3544     063F  3009               	movlw	9
  3545     0640  023C               	subwf	sprintf@prec^(0+128),w
  3546     0641                     u6175:
  3547     0641  1C03               	skipc
  3548     0642  2E44               	goto	u6171
  3549     0643  2E45               	goto	u6170
  3550     0644                     u6171:
  3551     0644  2E4A               	goto	l3826
  3552     0645                     u6170:
  3553     0645                     l3824:
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3556     0645  3008               	movlw	8
  3557     0646  1683               	bsf	3,5	;RP0=1, select bank1
  3558     0647  1303               	bcf	3,6	;RP1=0, select bank1
  3559     0648  00C2               	movwf	sprintf@c^(0+128)
  3560     0649  2E4E               	goto	l415
  3561     064A                     l3826:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3564     064A  1683               	bsf	3,5	;RP0=1, select bank1
  3565     064B  1303               	bcf	3,6	;RP1=0, select bank1
  3566     064C  083C               	movf	sprintf@prec^(0+128),w
  3567     064D  00C2               	movwf	sprintf@c^(0+128)
  3568     064E                     l415:
  3569                           
  3570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3571     064E  0842               	movf	sprintf@c^(0+128),w
  3572     064F  00A5               	movwf	??_sprintf^(0+128)
  3573     0650  01A6               	clrf	(??_sprintf^(0+128)+1)
  3574     0651  0825               	movf	??_sprintf^(0+128),w
  3575     0652  02BC               	subwf	sprintf@prec^(0+128),f
  3576     0653  0826               	movf	(??_sprintf+1)^(0+128),w
  3577     0654  1C03               	skipc
  3578     0655  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3579     0656  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3580     0657                     l3828:
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3583     0657  0842               	movf	sprintf@c^(0+128),w
  3584     0658  1903               	btfsc	3,2
  3585     0659  2E5B               	goto	u6181
  3586     065A  2E5C               	goto	u6180
  3587     065B                     u6181:
  3588     065B  2E65               	goto	l3834
  3589     065C                     u6180:
  3590     065C                     l3830:
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3593     065C  083B               	movf	sprintf@sp^(0+128),w
  3594     065D  0084               	movwf	4
  3595     065E  302E               	movlw	46
  3596     065F  1383               	bcf	3,7	;select IRP bank0
  3597     0660  0080               	movwf	0
  3598     0661                     l3832:
  3599     0661  3001               	movlw	1
  3600     0662  00A5               	movwf	??_sprintf^(0+128)
  3601     0663  0825               	movf	??_sprintf^(0+128),w
  3602     0664  07BB               	addwf	sprintf@sp^(0+128),f
  3603     0665                     l3834:
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3606     0665  0842               	movf	sprintf@c^(0+128),w
  3607     0666  120A  158A  24A1  120A  118A  	fcall	_scale
  3608     066B  1283               	bcf	3,5	;RP0=0, select bank0
  3609     066C  1303               	bcf	3,6	;RP1=0, select bank0
  3610     066D  0841               	movf	?_scale+3,w
  3611     066E  1683               	bsf	3,5	;RP0=1, select bank1
  3612     066F  1303               	bcf	3,6	;RP1=0, select bank1
  3613     0670  00AD               	movwf	(_sprintf$1168+3)^(0+128)
  3614     0671  1283               	bcf	3,5	;RP0=0, select bank0
  3615     0672  1303               	bcf	3,6	;RP1=0, select bank0
  3616     0673  0840               	movf	?_scale+2,w
  3617     0674  1683               	bsf	3,5	;RP0=1, select bank1
  3618     0675  1303               	bcf	3,6	;RP1=0, select bank1
  3619     0676  00AC               	movwf	(_sprintf$1168+2)^(0+128)
  3620     0677  1283               	bcf	3,5	;RP0=0, select bank0
  3621     0678  1303               	bcf	3,6	;RP1=0, select bank0
  3622     0679  083F               	movf	?_scale+1,w
  3623     067A  1683               	bsf	3,5	;RP0=1, select bank1
  3624     067B  1303               	bcf	3,6	;RP1=0, select bank1
  3625     067C  00AB               	movwf	(_sprintf$1168+1)^(0+128)
  3626     067D  1283               	bcf	3,5	;RP0=0, select bank0
  3627     067E  1303               	bcf	3,6	;RP1=0, select bank0
  3628     067F  083E               	movf	?_scale,w
  3629     0680  1683               	bsf	3,5	;RP0=1, select bank1
  3630     0681  1303               	bcf	3,6	;RP1=0, select bank1
  3631     0682  00AA               	movwf	_sprintf$1168^(0+128)
  3632     0683                     l3836:
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3635     0683  082D               	movf	(_sprintf$1168+3)^(0+128),w
  3636     0684  1283               	bcf	3,5	;RP0=0, select bank0
  3637     0685  1303               	bcf	3,6	;RP1=0, select bank0
  3638     0686  00AB               	movwf	___flmul@a+3
  3639     0687  1683               	bsf	3,5	;RP0=1, select bank1
  3640     0688  1303               	bcf	3,6	;RP1=0, select bank1
  3641     0689  082C               	movf	(_sprintf$1168+2)^(0+128),w
  3642     068A  1283               	bcf	3,5	;RP0=0, select bank0
  3643     068B  1303               	bcf	3,6	;RP1=0, select bank0
  3644     068C  00AA               	movwf	___flmul@a+2
  3645     068D  1683               	bsf	3,5	;RP0=1, select bank1
  3646     068E  1303               	bcf	3,6	;RP1=0, select bank1
  3647     068F  082B               	movf	(_sprintf$1168+1)^(0+128),w
  3648     0690  1283               	bcf	3,5	;RP0=0, select bank0
  3649     0691  1303               	bcf	3,6	;RP1=0, select bank0
  3650     0692  00A9               	movwf	___flmul@a+1
  3651     0693  1683               	bsf	3,5	;RP0=1, select bank1
  3652     0694  1303               	bcf	3,6	;RP1=0, select bank1
  3653     0695  082A               	movf	_sprintf$1168^(0+128),w
  3654     0696  1283               	bcf	3,5	;RP0=0, select bank0
  3655     0697  1303               	bcf	3,6	;RP1=0, select bank0
  3656     0698  00A8               	movwf	___flmul@a
  3657     0699  1683               	bsf	3,5	;RP0=1, select bank1
  3658     069A  1303               	bcf	3,6	;RP1=0, select bank1
  3659     069B  0841               	movf	(sprintf@fval+3)^(0+128),w
  3660     069C  1283               	bcf	3,5	;RP0=0, select bank0
  3661     069D  1303               	bcf	3,6	;RP1=0, select bank0
  3662     069E  00A7               	movwf	___flmul@b+3
  3663     069F  1683               	bsf	3,5	;RP0=1, select bank1
  3664     06A0  1303               	bcf	3,6	;RP1=0, select bank1
  3665     06A1  0840               	movf	(sprintf@fval+2)^(0+128),w
  3666     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3667     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  3668     06A4  00A6               	movwf	___flmul@b+2
  3669     06A5  1683               	bsf	3,5	;RP0=1, select bank1
  3670     06A6  1303               	bcf	3,6	;RP1=0, select bank1
  3671     06A7  083F               	movf	(sprintf@fval+1)^(0+128),w
  3672     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  3673     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  3674     06AA  00A5               	movwf	___flmul@b+1
  3675     06AB  1683               	bsf	3,5	;RP0=1, select bank1
  3676     06AC  1303               	bcf	3,6	;RP1=0, select bank1
  3677     06AD  083E               	movf	sprintf@fval^(0+128),w
  3678     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3679     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3680     06B0  00A4               	movwf	___flmul@b
  3681     06B1  120A  158A  215C  120A  118A  	fcall	___flmul
  3682     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3683     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3684     06B8  0827               	movf	?___flmul+3,w
  3685     06B9  00D4               	movwf	___fltol@f1+3
  3686     06BA  0826               	movf	?___flmul+2,w
  3687     06BB  00D3               	movwf	___fltol@f1+2
  3688     06BC  0825               	movf	?___flmul+1,w
  3689     06BD  00D2               	movwf	___fltol@f1+1
  3690     06BE  0824               	movf	?___flmul,w
  3691     06BF  00D1               	movwf	___fltol@f1
  3692     06C0  160A  118A  2014  120A  118A  	fcall	___fltol
  3693     06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3694     06C6  1303               	bcf	3,6	;RP1=0, select bank0
  3695     06C7  0854               	movf	?___fltol+3,w
  3696     06C8  1683               	bsf	3,5	;RP0=1, select bank1
  3697     06C9  1303               	bcf	3,6	;RP1=0, select bank1
  3698     06CA  00B4               	movwf	(sprintf@val+3)^(0+128)
  3699     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3700     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3701     06CD  0853               	movf	?___fltol+2,w
  3702     06CE  1683               	bsf	3,5	;RP0=1, select bank1
  3703     06CF  1303               	bcf	3,6	;RP1=0, select bank1
  3704     06D0  00B3               	movwf	(sprintf@val+2)^(0+128)
  3705     06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3706     06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3707     06D3  0852               	movf	?___fltol+1,w
  3708     06D4  1683               	bsf	3,5	;RP0=1, select bank1
  3709     06D5  1303               	bcf	3,6	;RP1=0, select bank1
  3710     06D6  00B2               	movwf	(sprintf@val+1)^(0+128)
  3711     06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3712     06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3713     06D9  0851               	movf	?___fltol,w
  3714     06DA  1683               	bsf	3,5	;RP0=1, select bank1
  3715     06DB  1303               	bcf	3,6	;RP1=0, select bank1
  3716     06DC  00B1               	movwf	sprintf@val^(0+128)
  3717                           
  3718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3719     06DD  2F7D               	goto	l3846
  3720     06DE                     l3838:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3723     06DE  0842               	movf	sprintf@c^(0+128),w
  3724     06DF  00A5               	movwf	??_sprintf^(0+128)
  3725     06E0  3001               	movlw	1
  3726     06E1                     u6195:
  3727     06E1  1003               	clrc
  3728     06E2  0DA5               	rlf	??_sprintf^(0+128),f
  3729     06E3  3EFF               	addlw	-1
  3730     06E4  1D03               	skipz
  3731     06E5  2EE1               	goto	u6195
  3732     06E6  1003               	clrc
  3733     06E7  0D25               	rlf	??_sprintf^(0+128),w
  3734     06E8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3735     06E9  0084               	movwf	4
  3736     06EA  120A  118A  200D  120A  118A  	fcall	stringdir
  3737     06EF  00F0               	movwf	___lldiv@divisor
  3738     06F0  120A  118A  200D  120A  118A  	fcall	stringdir
  3739     06F5  00F1               	movwf	___lldiv@divisor+1
  3740     06F6  120A  118A  200D  120A  118A  	fcall	stringdir
  3741     06FB  00F2               	movwf	___lldiv@divisor+2
  3742     06FC  120A  118A  200D  120A  118A  	fcall	stringdir
  3743     0701  00F3               	movwf	___lldiv@divisor+3
  3744     0702  0834               	movf	(sprintf@val+3)^(0+128),w
  3745     0703  00F7               	movwf	___lldiv@dividend+3
  3746     0704  0833               	movf	(sprintf@val+2)^(0+128),w
  3747     0705  00F6               	movwf	___lldiv@dividend+2
  3748     0706  0832               	movf	(sprintf@val+1)^(0+128),w
  3749     0707  00F5               	movwf	___lldiv@dividend+1
  3750     0708  0831               	movf	sprintf@val^(0+128),w
  3751     0709  00F4               	movwf	___lldiv@dividend
  3752     070A  160A  158A  255E  120A  118A  	fcall	___lldiv
  3753     070F  0873               	movf	?___lldiv+3,w
  3754     0710  1683               	bsf	3,5	;RP0=1, select bank1
  3755     0711  1303               	bcf	3,6	;RP1=0, select bank1
  3756     0712  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3757     0713  0872               	movf	?___lldiv+2,w
  3758     0714  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3759     0715  0871               	movf	?___lldiv+1,w
  3760     0716  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3761     0717  0870               	movf	?___lldiv,w
  3762     0718  00B7               	movwf	sprintf@tmpval^(0+128)
  3763     0719                     l3840:
  3764                           
  3765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3766     0719  3000               	movlw	0
  3767     071A  00F3               	movwf	___llmod@divisor+3
  3768     071B  3000               	movlw	0
  3769     071C  00F2               	movwf	___llmod@divisor+2
  3770     071D  3000               	movlw	0
  3771     071E  00F1               	movwf	___llmod@divisor+1
  3772     071F  300A               	movlw	10
  3773     0720  00F0               	movwf	___llmod@divisor
  3774     0721  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3775     0722  00F7               	movwf	___llmod@dividend+3
  3776     0723  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3777     0724  00F6               	movwf	___llmod@dividend+2
  3778     0725  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3779     0726  00F5               	movwf	___llmod@dividend+1
  3780     0727  0837               	movf	sprintf@tmpval^(0+128),w
  3781     0728  00F4               	movwf	___llmod@dividend
  3782     0729  160A  158A  2394  120A  118A  	fcall	___llmod
  3783     072E  0873               	movf	?___llmod+3,w
  3784     072F  1683               	bsf	3,5	;RP0=1, select bank1
  3785     0730  1303               	bcf	3,6	;RP1=0, select bank1
  3786     0731  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3787     0732  0872               	movf	?___llmod+2,w
  3788     0733  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3789     0734  0871               	movf	?___llmod+1,w
  3790     0735  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3791     0736  0870               	movf	?___llmod,w
  3792     0737  00B7               	movwf	sprintf@tmpval^(0+128)
  3793     0738                     l3842:
  3794                           
  3795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3796     0738  083B               	movf	sprintf@sp^(0+128),w
  3797     0739  0084               	movwf	4
  3798     073A  0837               	movf	sprintf@tmpval^(0+128),w
  3799     073B  3E30               	addlw	48
  3800     073C  1383               	bcf	3,7	;select IRP bank0
  3801     073D  0080               	movwf	0
  3802     073E  3001               	movlw	1
  3803     073F  00A5               	movwf	??_sprintf^(0+128)
  3804     0740  0825               	movf	??_sprintf^(0+128),w
  3805     0741  07BB               	addwf	sprintf@sp^(0+128),f
  3806     0742                     l3844:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3809     0742  0842               	movf	sprintf@c^(0+128),w
  3810     0743  00A5               	movwf	??_sprintf^(0+128)
  3811     0744  3001               	movlw	1
  3812     0745                     u6205:
  3813     0745  1003               	clrc
  3814     0746  0DA5               	rlf	??_sprintf^(0+128),f
  3815     0747  3EFF               	addlw	-1
  3816     0748  1D03               	skipz
  3817     0749  2F45               	goto	u6205
  3818     074A  1003               	clrc
  3819     074B  0D25               	rlf	??_sprintf^(0+128),w
  3820     074C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3821     074D  0084               	movwf	4
  3822     074E  120A  118A  200D  120A  118A  	fcall	stringdir
  3823     0753  00F0               	movwf	___llmod@divisor
  3824     0754  120A  118A  200D  120A  118A  	fcall	stringdir
  3825     0759  00F1               	movwf	___llmod@divisor+1
  3826     075A  120A  118A  200D  120A  118A  	fcall	stringdir
  3827     075F  00F2               	movwf	___llmod@divisor+2
  3828     0760  120A  118A  200D  120A  118A  	fcall	stringdir
  3829     0765  00F3               	movwf	___llmod@divisor+3
  3830     0766  0834               	movf	(sprintf@val+3)^(0+128),w
  3831     0767  00F7               	movwf	___llmod@dividend+3
  3832     0768  0833               	movf	(sprintf@val+2)^(0+128),w
  3833     0769  00F6               	movwf	___llmod@dividend+2
  3834     076A  0832               	movf	(sprintf@val+1)^(0+128),w
  3835     076B  00F5               	movwf	___llmod@dividend+1
  3836     076C  0831               	movf	sprintf@val^(0+128),w
  3837     076D  00F4               	movwf	___llmod@dividend
  3838     076E  160A  158A  2394  120A  118A  	fcall	___llmod
  3839     0773  0873               	movf	?___llmod+3,w
  3840     0774  1683               	bsf	3,5	;RP0=1, select bank1
  3841     0775  1303               	bcf	3,6	;RP1=0, select bank1
  3842     0776  00B4               	movwf	(sprintf@val+3)^(0+128)
  3843     0777  0872               	movf	?___llmod+2,w
  3844     0778  00B3               	movwf	(sprintf@val+2)^(0+128)
  3845     0779  0871               	movf	?___llmod+1,w
  3846     077A  00B2               	movwf	(sprintf@val+1)^(0+128)
  3847     077B  0870               	movf	?___llmod,w
  3848     077C  00B1               	movwf	sprintf@val^(0+128)
  3849     077D                     l3846:
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3852     077D  3001               	movlw	1
  3853     077E  02C2               	subwf	sprintf@c^(0+128),f
  3854     077F  0A42               	incf	sprintf@c^(0+128),w
  3855     0780  1D03               	btfss	3,2
  3856     0781  2F83               	goto	u6211
  3857     0782  2F84               	goto	u6210
  3858     0783                     u6211:
  3859     0783  2EDE               	goto	l3838
  3860     0784                     u6210:
  3861     0784  2F94               	goto	l3854
  3862     0785                     l3848:
  3863                           
  3864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3865     0785  083B               	movf	sprintf@sp^(0+128),w
  3866     0786  0084               	movwf	4
  3867     0787  3030               	movlw	48
  3868     0788  1383               	bcf	3,7	;select IRP bank0
  3869     0789  0080               	movwf	0
  3870     078A                     l3850:
  3871     078A  3001               	movlw	1
  3872     078B  00A5               	movwf	??_sprintf^(0+128)
  3873     078C  0825               	movf	??_sprintf^(0+128),w
  3874     078D  07BB               	addwf	sprintf@sp^(0+128),f
  3875     078E                     l3852:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3878     078E  30FF               	movlw	255
  3879     078F  07BC               	addwf	sprintf@prec^(0+128),f
  3880     0790  1803               	skipnc
  3881     0791  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3882     0792  30FF               	movlw	255
  3883     0793  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3884     0794                     l3854:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3887     0794  083C               	movf	sprintf@prec^(0+128),w
  3888     0795  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3889     0796  1D03               	btfss	3,2
  3890     0797  2F99               	goto	u6221
  3891     0798  2F9A               	goto	u6220
  3892     0799                     u6221:
  3893     0799  2F85               	goto	l3848
  3894     079A                     u6220:
  3895     079A  2FDE               	goto	l3874
  3896     079B                     l3856:
  3897                           
  3898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3899     079B  083C               	movf	sprintf@prec^(0+128),w
  3900     079C  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3901     079D  1D03               	btfss	3,2
  3902     079E  2FA0               	goto	u6231
  3903     079F  2FA1               	goto	u6230
  3904     07A0                     u6231:
  3905     07A0  2FAF               	goto	l423
  3906     07A1                     u6230:
  3907     07A1                     l3858:
  3908     07A1  0834               	movf	(sprintf@val+3)^(0+128),w
  3909     07A2  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3910     07A3  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3911     07A4  0431               	iorwf	sprintf@val^(0+128),w
  3912     07A5  1D03               	skipz
  3913     07A6  2FA8               	goto	u6241
  3914     07A7  2FA9               	goto	u6240
  3915     07A8                     u6241:
  3916     07A8  2FAF               	goto	l423
  3917     07A9                     u6240:
  3918     07A9                     l3860:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3921     07A9  3001               	movlw	1
  3922     07AA  07BC               	addwf	sprintf@prec^(0+128),f
  3923     07AB  1803               	skipnc
  3924     07AC  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3925     07AD  3000               	movlw	0
  3926     07AE  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3927     07AF                     l423:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3930     07AF  083D               	movf	(sprintf@prec+1)^(0+128),w
  3931     07B0  3A80               	xorlw	128
  3932     07B1  3C80               	sublw	128
  3933     07B2  1D03               	skipz
  3934     07B3  2FB6               	goto	u6255
  3935     07B4  083C               	movf	sprintf@prec^(0+128),w
  3936     07B5  0242               	subwf	sprintf@c^(0+128),w
  3937     07B6                     u6255:
  3938     07B6  1803               	skipnc
  3939     07B7  2FB9               	goto	u6251
  3940     07B8  2FBA               	goto	u6250
  3941     07B9                     u6251:
  3942     07B9  2FBB               	goto	l3864
  3943     07BA                     u6250:
  3944     07BA                     l3862:
  3945     07BA  2FCA               	goto	l3868
  3946     07BB                     l3864:
  3947     07BB  1683               	bsf	3,5	;RP0=1, select bank1
  3948     07BC  1303               	bcf	3,6	;RP1=0, select bank1
  3949     07BD  083D               	movf	(sprintf@prec+1)^(0+128),w
  3950     07BE  3A80               	xorlw	128
  3951     07BF  00A5               	movwf	??_sprintf^(0+128)
  3952     07C0  3080               	movlw	128
  3953     07C1  0225               	subwf	??_sprintf^(0+128),w
  3954     07C2  1D03               	skipz
  3955     07C3  2FC6               	goto	u6265
  3956     07C4  0842               	movf	sprintf@c^(0+128),w
  3957     07C5  023C               	subwf	sprintf@prec^(0+128),w
  3958     07C6                     u6265:
  3959     07C6  1803               	skipnc
  3960     07C7  2FC9               	goto	u6261
  3961     07C8  2FCA               	goto	u6260
  3962     07C9                     u6261:
  3963     07C9  2FCA               	goto	l3868
  3964     07CA                     u6260:
  3965     07CA                     l3866:
  3966     07CA                     l3868:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3969     07CA  3003               	movlw	3
  3970     07CB  1683               	bsf	3,5	;RP0=1, select bank1
  3971     07CC  1303               	bcf	3,6	;RP1=0, select bank1
  3972     07CD  052F               	andwf	sprintf@flag^(0+128),w
  3973     07CE  00A5               	movwf	??_sprintf^(0+128)
  3974     07CF  3000               	movlw	0
  3975     07D0  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3976     07D1  00A6               	movwf	(??_sprintf+1)^(0+128)
  3977     07D2  0825               	movf	??_sprintf^(0+128),w
  3978     07D3  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3979     07D4  1903               	btfsc	3,2
  3980     07D5  2FD7               	goto	u6271
  3981     07D6  2FD8               	goto	u6270
  3982     07D7                     u6271:
  3983     07D7  2FDE               	goto	l3874
  3984     07D8                     u6270:
  3985     07D8                     l3870:
  3986                           
  3987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3988     07D8  083B               	movf	sprintf@sp^(0+128),w
  3989     07D9  0084               	movwf	4
  3990     07DA  302D               	movlw	45
  3991     07DB  1383               	bcf	3,7	;select IRP bank0
  3992     07DC  0080               	movwf	0
  3993     07DD  29C4               	goto	l3686
  3994     07DE                     l3874:
  3995                           
  3996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3997     07DE  3001               	movlw	1
  3998     07DF  07A0               	addwf	sprintf@f^(0+128),f
  3999     07E0  30FF               	movlw	-1
  4000     07E1  0720               	addwf	sprintf@f^(0+128),w
  4001     07E2  0084               	movwf	4
  4002     07E3  120A  118A  200D  120A  118A  	fcall	stringdir
  4003     07E8  00C2               	movwf	sprintf@c^(0+128)
  4004     07E9  0842               	movf	sprintf@c^(0+128),w
  4005     07EA  1D03               	btfss	3,2
  4006     07EB  2FED               	goto	u6281
  4007     07EC  2FEE               	goto	u6280
  4008     07ED                     u6281:
  4009     07ED  29B9               	goto	l3682
  4010     07EE                     u6280:
  4011     07EE                     l3876:
  4012                           
  4013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4014     07EE  083B               	movf	sprintf@sp^(0+128),w
  4015     07EF  0084               	movwf	4
  4016     07F0  1383               	bcf	3,7	;select IRP bank0
  4017     07F1  0180               	clrf	0
  4018     07F2                     l429:
  4019     07F2  0008               	return
  4020     07F3                     __end_of_sprintf:
  4021                           
  4022                           	psect	text2
  4023     0CA1                     __ptext2:	
  4024 ;; *************** function _scale *****************
  4025 ;; Defined at:
  4026 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  scl             1    wreg     char 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  scl             1   48[BANK0 ] char 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  4   30[BANK0 ] char 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4040 ;;      Params:         0       4       0       0       0
  4041 ;;      Locals:         0       5       0       0       0
  4042 ;;      Temps:          0      10       0       0       0
  4043 ;;      Totals:         0      19       0       0       0
  4044 ;;Total ram usage:       19 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; Hardware stack levels required when called: 2
  4047 ;; This function calls:
  4048 ;;		___awdiv
  4049 ;;		___awmod
  4050 ;;		___flmul
  4051 ;; This function is called by:
  4052 ;;		_sprintf
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056     0CA1                     _scale:	
  4057                           ;psect for function _scale
  4058                           
  4059                           
  4060                           ;incstack = 0
  4061                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4062                           ;scale@scl stored from wreg
  4063     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  4064     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  4065     0CA3  00D0               	movwf	scale@scl
  4066     0CA4                     l3168:
  4067                           
  4068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4069     0CA4  1FD0               	btfss	scale@scl,7
  4070     0CA5  2CA7               	goto	u4691
  4071     0CA6  2CA8               	goto	u4690
  4072     0CA7                     u4691:
  4073     0CA7  2E55               	goto	l3190
  4074     0CA8                     u4690:
  4075     0CA8                     l3170:
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4078     0CA8  09D0               	comf	scale@scl,f
  4079     0CA9  0AD0               	incf	scale@scl,f
  4080     0CAA                     l3172:
  4081                           
  4082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4083     0CAA  0850               	movf	scale@scl,w
  4084     0CAB  3A80               	xorlw	128
  4085     0CAC  3E12               	addlw	-238
  4086     0CAD  1C03               	skipc
  4087     0CAE  2CB0               	goto	u4701
  4088     0CAF  2CB1               	goto	u4700
  4089     0CB0                     u4701:
  4090     0CB0  2D99               	goto	l3180
  4091     0CB1                     u4700:
  4092     0CB1                     l3174:
  4093                           
  4094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4095     0CB1  300A               	movlw	10
  4096     0CB2  00F7               	movwf	___awdiv@divisor
  4097     0CB3  3000               	movlw	0
  4098     0CB4  00F8               	movwf	___awdiv@divisor+1
  4099     0CB5  0850               	movf	scale@scl,w
  4100     0CB6  00F2               	movwf	___awmod@dividend
  4101     0CB7  01F3               	clrf	___awmod@dividend+1
  4102     0CB8  1BF2               	btfsc	___awmod@dividend,7
  4103     0CB9  03F3               	decf	___awmod@dividend+1,f
  4104     0CBA  3064               	movlw	100
  4105     0CBB  00F0               	movwf	___awmod@divisor
  4106     0CBC  3000               	movlw	0
  4107     0CBD  00F1               	movwf	___awmod@divisor+1
  4108     0CBE  160A  158A  23E8  120A  158A  	fcall	___awmod
  4109     0CC3  0871               	movf	?___awmod+1,w
  4110     0CC4  00FA               	movwf	___awdiv@dividend+1
  4111     0CC5  0870               	movf	?___awmod,w
  4112     0CC6  00F9               	movwf	___awdiv@dividend
  4113     0CC7  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4114     0CCC  0877               	movf	?___awdiv,w
  4115     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4116     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  4117     0CCF  00C2               	movwf	??_scale
  4118     0CD0  3001               	movlw	1
  4119     0CD1                     u4715:
  4120     0CD1  1003               	clrc
  4121     0CD2  0DC2               	rlf	??_scale,f
  4122     0CD3  3EFF               	addlw	-1
  4123     0CD4  1D03               	skipz
  4124     0CD5  2CD1               	goto	u4715
  4125     0CD6  1003               	clrc
  4126     0CD7  0D42               	rlf	??_scale,w
  4127     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4128     0CD9  0084               	movwf	4
  4129     0CDA  120A  118A  200D  120A  158A  	fcall	stringdir
  4130     0CDF  00C3               	movwf	??_scale+1
  4131     0CE0  120A  118A  200D  120A  158A  	fcall	stringdir
  4132     0CE5  00C4               	movwf	??_scale+2
  4133     0CE6  120A  118A  200D  120A  158A  	fcall	stringdir
  4134     0CEB  00C5               	movwf	??_scale+3
  4135     0CEC  120A  118A  200D  120A  158A  	fcall	stringdir
  4136     0CF1  00C6               	movwf	??_scale+4
  4137     0CF2  0846               	movf	??_scale+4,w
  4138     0CF3  00A7               	movwf	___flmul@b+3
  4139     0CF4  0845               	movf	??_scale+3,w
  4140     0CF5  00A6               	movwf	___flmul@b+2
  4141     0CF6  0844               	movf	??_scale+2,w
  4142     0CF7  00A5               	movwf	___flmul@b+1
  4143     0CF8  0843               	movf	??_scale+1,w
  4144     0CF9  00A4               	movwf	___flmul@b
  4145     0CFA  3064               	movlw	100
  4146     0CFB  00F7               	movwf	___awdiv@divisor
  4147     0CFC  3000               	movlw	0
  4148     0CFD  00F8               	movwf	___awdiv@divisor+1
  4149     0CFE  0850               	movf	scale@scl,w
  4150     0CFF  00F9               	movwf	___awdiv@dividend
  4151     0D00  01FA               	clrf	___awdiv@dividend+1
  4152     0D01  1BF9               	btfsc	___awdiv@dividend,7
  4153     0D02  03FA               	decf	___awdiv@dividend+1,f
  4154     0D03  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4155     0D08  0877               	movf	?___awdiv,w
  4156     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4157     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4158     0D0B  00C7               	movwf	??_scale+5
  4159     0D0C  3001               	movlw	1
  4160     0D0D                     u4725:
  4161     0D0D  1003               	clrc
  4162     0D0E  0DC7               	rlf	??_scale+5,f
  4163     0D0F  3EFF               	addlw	-1
  4164     0D10  1D03               	skipz
  4165     0D11  2D0D               	goto	u4725
  4166     0D12  1003               	clrc
  4167     0D13  0D47               	rlf	??_scale+5,w
  4168     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4169     0D15  0084               	movwf	4
  4170     0D16  120A  118A  200D  120A  158A  	fcall	stringdir
  4171     0D1B  00C8               	movwf	??_scale+6
  4172     0D1C  120A  118A  200D  120A  158A  	fcall	stringdir
  4173     0D21  00C9               	movwf	??_scale+7
  4174     0D22  120A  118A  200D  120A  158A  	fcall	stringdir
  4175     0D27  00CA               	movwf	??_scale+8
  4176     0D28  120A  118A  200D  120A  158A  	fcall	stringdir
  4177     0D2D  00CB               	movwf	??_scale+9
  4178     0D2E  084B               	movf	??_scale+9,w
  4179     0D2F  00AB               	movwf	___flmul@a+3
  4180     0D30  084A               	movf	??_scale+8,w
  4181     0D31  00AA               	movwf	___flmul@a+2
  4182     0D32  0849               	movf	??_scale+7,w
  4183     0D33  00A9               	movwf	___flmul@a+1
  4184     0D34  0848               	movf	??_scale+6,w
  4185     0D35  00A8               	movwf	___flmul@a
  4186     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  4187     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4188     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4189     0D3D  0827               	movf	?___flmul+3,w
  4190     0D3E  00CF               	movwf	_scale$1167+3
  4191     0D3F  0826               	movf	?___flmul+2,w
  4192     0D40  00CE               	movwf	_scale$1167+2
  4193     0D41  0825               	movf	?___flmul+1,w
  4194     0D42  00CD               	movwf	_scale$1167+1
  4195     0D43  0824               	movf	?___flmul,w
  4196     0D44  00CC               	movwf	_scale$1167
  4197                           
  4198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4199     0D45  300A               	movlw	10
  4200     0D46  00F0               	movwf	___awmod@divisor
  4201     0D47  3000               	movlw	0
  4202     0D48  00F1               	movwf	___awmod@divisor+1
  4203     0D49  0850               	movf	scale@scl,w
  4204     0D4A  00F2               	movwf	___awmod@dividend
  4205     0D4B  01F3               	clrf	___awmod@dividend+1
  4206     0D4C  1BF2               	btfsc	___awmod@dividend,7
  4207     0D4D  03F3               	decf	___awmod@dividend+1,f
  4208     0D4E  160A  158A  23E8  120A  158A  	fcall	___awmod
  4209     0D53  0870               	movf	?___awmod,w
  4210     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  4211     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  4212     0D56  00C2               	movwf	??_scale
  4213     0D57  3001               	movlw	1
  4214     0D58                     u4735:
  4215     0D58  1003               	clrc
  4216     0D59  0DC2               	rlf	??_scale,f
  4217     0D5A  3EFF               	addlw	-1
  4218     0D5B  1D03               	skipz
  4219     0D5C  2D58               	goto	u4735
  4220     0D5D  1003               	clrc
  4221     0D5E  0D42               	rlf	??_scale,w
  4222     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4223     0D60  0084               	movwf	4
  4224     0D61  120A  118A  200D  120A  158A  	fcall	stringdir
  4225     0D66  00C3               	movwf	??_scale+1
  4226     0D67  120A  118A  200D  120A  158A  	fcall	stringdir
  4227     0D6C  00C4               	movwf	??_scale+2
  4228     0D6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4229     0D72  00C5               	movwf	??_scale+3
  4230     0D73  120A  118A  200D  120A  158A  	fcall	stringdir
  4231     0D78  00C6               	movwf	??_scale+4
  4232     0D79  0846               	movf	??_scale+4,w
  4233     0D7A  00A7               	movwf	___flmul@b+3
  4234     0D7B  0845               	movf	??_scale+3,w
  4235     0D7C  00A6               	movwf	___flmul@b+2
  4236     0D7D  0844               	movf	??_scale+2,w
  4237     0D7E  00A5               	movwf	___flmul@b+1
  4238     0D7F  0843               	movf	??_scale+1,w
  4239     0D80  00A4               	movwf	___flmul@b
  4240     0D81  084F               	movf	_scale$1167+3,w
  4241     0D82  00AB               	movwf	___flmul@a+3
  4242     0D83  084E               	movf	_scale$1167+2,w
  4243     0D84  00AA               	movwf	___flmul@a+2
  4244     0D85  084D               	movf	_scale$1167+1,w
  4245     0D86  00A9               	movwf	___flmul@a+1
  4246     0D87  084C               	movf	_scale$1167,w
  4247     0D88  00A8               	movwf	___flmul@a
  4248     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  4249     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4250     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  4251     0D90  0827               	movf	?___flmul+3,w
  4252     0D91  00C1               	movwf	?_scale+3
  4253     0D92  0826               	movf	?___flmul+2,w
  4254     0D93  00C0               	movwf	?_scale+2
  4255     0D94  0825               	movf	?___flmul+1,w
  4256     0D95  00BF               	movwf	?_scale+1
  4257     0D96  0824               	movf	?___flmul,w
  4258     0D97  00BE               	movwf	?_scale
  4259     0D98  2FFF               	goto	l363
  4260     0D99                     l3180:
  4261     0D99  0850               	movf	scale@scl,w
  4262     0D9A  3A80               	xorlw	128
  4263     0D9B  3E75               	addlw	-139
  4264     0D9C  1C03               	skipc
  4265     0D9D  2D9F               	goto	u4741
  4266     0D9E  2DA0               	goto	u4740
  4267     0D9F                     u4741:
  4268     0D9F  2E28               	goto	l3186
  4269     0DA0                     u4740:
  4270     0DA0                     l3182:
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4273     0DA0  300A               	movlw	10
  4274     0DA1  00F0               	movwf	___awmod@divisor
  4275     0DA2  3000               	movlw	0
  4276     0DA3  00F1               	movwf	___awmod@divisor+1
  4277     0DA4  0850               	movf	scale@scl,w
  4278     0DA5  00F2               	movwf	___awmod@dividend
  4279     0DA6  01F3               	clrf	___awmod@dividend+1
  4280     0DA7  1BF2               	btfsc	___awmod@dividend,7
  4281     0DA8  03F3               	decf	___awmod@dividend+1,f
  4282     0DA9  160A  158A  23E8  120A  158A  	fcall	___awmod
  4283     0DAE  0870               	movf	?___awmod,w
  4284     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4285     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4286     0DB1  00C2               	movwf	??_scale
  4287     0DB2  3001               	movlw	1
  4288     0DB3                     u4755:
  4289     0DB3  1003               	clrc
  4290     0DB4  0DC2               	rlf	??_scale,f
  4291     0DB5  3EFF               	addlw	-1
  4292     0DB6  1D03               	skipz
  4293     0DB7  2DB3               	goto	u4755
  4294     0DB8  1003               	clrc
  4295     0DB9  0D42               	rlf	??_scale,w
  4296     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4297     0DBB  0084               	movwf	4
  4298     0DBC  120A  118A  200D  120A  158A  	fcall	stringdir
  4299     0DC1  00C3               	movwf	??_scale+1
  4300     0DC2  120A  118A  200D  120A  158A  	fcall	stringdir
  4301     0DC7  00C4               	movwf	??_scale+2
  4302     0DC8  120A  118A  200D  120A  158A  	fcall	stringdir
  4303     0DCD  00C5               	movwf	??_scale+3
  4304     0DCE  120A  118A  200D  120A  158A  	fcall	stringdir
  4305     0DD3  00C6               	movwf	??_scale+4
  4306     0DD4  0846               	movf	??_scale+4,w
  4307     0DD5  00A7               	movwf	___flmul@b+3
  4308     0DD6  0845               	movf	??_scale+3,w
  4309     0DD7  00A6               	movwf	___flmul@b+2
  4310     0DD8  0844               	movf	??_scale+2,w
  4311     0DD9  00A5               	movwf	___flmul@b+1
  4312     0DDA  0843               	movf	??_scale+1,w
  4313     0DDB  00A4               	movwf	___flmul@b
  4314     0DDC  300A               	movlw	10
  4315     0DDD  00F7               	movwf	___awdiv@divisor
  4316     0DDE  3000               	movlw	0
  4317     0DDF  00F8               	movwf	___awdiv@divisor+1
  4318     0DE0  0850               	movf	scale@scl,w
  4319     0DE1  00F9               	movwf	___awdiv@dividend
  4320     0DE2  01FA               	clrf	___awdiv@dividend+1
  4321     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  4322     0DE4  03FA               	decf	___awdiv@dividend+1,f
  4323     0DE5  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4324     0DEA  0877               	movf	?___awdiv,w
  4325     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  4326     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  4327     0DED  00C7               	movwf	??_scale+5
  4328     0DEE  3001               	movlw	1
  4329     0DEF                     u4765:
  4330     0DEF  1003               	clrc
  4331     0DF0  0DC7               	rlf	??_scale+5,f
  4332     0DF1  3EFF               	addlw	-1
  4333     0DF2  1D03               	skipz
  4334     0DF3  2DEF               	goto	u4765
  4335     0DF4  1003               	clrc
  4336     0DF5  0D47               	rlf	??_scale+5,w
  4337     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4338     0DF7  0084               	movwf	4
  4339     0DF8  120A  118A  200D  120A  158A  	fcall	stringdir
  4340     0DFD  00C8               	movwf	??_scale+6
  4341     0DFE  120A  118A  200D  120A  158A  	fcall	stringdir
  4342     0E03  00C9               	movwf	??_scale+7
  4343     0E04  120A  118A  200D  120A  158A  	fcall	stringdir
  4344     0E09  00CA               	movwf	??_scale+8
  4345     0E0A  120A  118A  200D  120A  158A  	fcall	stringdir
  4346     0E0F  00CB               	movwf	??_scale+9
  4347     0E10  084B               	movf	??_scale+9,w
  4348     0E11  00AB               	movwf	___flmul@a+3
  4349     0E12  084A               	movf	??_scale+8,w
  4350     0E13  00AA               	movwf	___flmul@a+2
  4351     0E14  0849               	movf	??_scale+7,w
  4352     0E15  00A9               	movwf	___flmul@a+1
  4353     0E16  0848               	movf	??_scale+6,w
  4354     0E17  00A8               	movwf	___flmul@a
  4355     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  4356     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4357     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4358     0E1F  0827               	movf	?___flmul+3,w
  4359     0E20  00C1               	movwf	?_scale+3
  4360     0E21  0826               	movf	?___flmul+2,w
  4361     0E22  00C0               	movwf	?_scale+2
  4362     0E23  0825               	movf	?___flmul+1,w
  4363     0E24  00BF               	movwf	?_scale+1
  4364     0E25  0824               	movf	?___flmul,w
  4365     0E26  00BE               	movwf	?_scale
  4366     0E27  2FFF               	goto	l363
  4367     0E28                     l3186:
  4368                           
  4369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4370     0E28  0850               	movf	scale@scl,w
  4371     0E29  00C2               	movwf	??_scale
  4372     0E2A  3001               	movlw	1
  4373     0E2B                     u4775:
  4374     0E2B  1003               	clrc
  4375     0E2C  0DC2               	rlf	??_scale,f
  4376     0E2D  3EFF               	addlw	-1
  4377     0E2E  1D03               	skipz
  4378     0E2F  2E2B               	goto	u4775
  4379     0E30  1003               	clrc
  4380     0E31  0D42               	rlf	??_scale,w
  4381     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4382     0E33  0084               	movwf	4
  4383     0E34  120A  118A  200D  120A  158A  	fcall	stringdir
  4384     0E39  00C3               	movwf	??_scale+1
  4385     0E3A  120A  118A  200D  120A  158A  	fcall	stringdir
  4386     0E3F  00C4               	movwf	??_scale+2
  4387     0E40  120A  118A  200D  120A  158A  	fcall	stringdir
  4388     0E45  00C5               	movwf	??_scale+3
  4389     0E46  120A  118A  200D  120A  158A  	fcall	stringdir
  4390     0E4B  00C6               	movwf	??_scale+4
  4391     0E4C  0846               	movf	??_scale+4,w
  4392     0E4D  00C1               	movwf	?_scale+3
  4393     0E4E  0845               	movf	??_scale+3,w
  4394     0E4F  00C0               	movwf	?_scale+2
  4395     0E50  0844               	movf	??_scale+2,w
  4396     0E51  00BF               	movwf	?_scale+1
  4397     0E52  0843               	movf	??_scale+1,w
  4398     0E53  00BE               	movwf	?_scale
  4399     0E54  2FFF               	goto	l363
  4400     0E55                     l3190:
  4401                           
  4402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4403     0E55  0850               	movf	scale@scl,w
  4404     0E56  3A80               	xorlw	128
  4405     0E57  3E12               	addlw	-238
  4406     0E58  1C03               	skipc
  4407     0E59  2E5B               	goto	u4781
  4408     0E5A  2E5C               	goto	u4780
  4409     0E5B                     u4781:
  4410     0E5B  2F44               	goto	l3198
  4411     0E5C                     u4780:
  4412     0E5C                     l3192:
  4413                           
  4414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4415     0E5C  300A               	movlw	10
  4416     0E5D  00F7               	movwf	___awdiv@divisor
  4417     0E5E  3000               	movlw	0
  4418     0E5F  00F8               	movwf	___awdiv@divisor+1
  4419     0E60  0850               	movf	scale@scl,w
  4420     0E61  00F2               	movwf	___awmod@dividend
  4421     0E62  01F3               	clrf	___awmod@dividend+1
  4422     0E63  1BF2               	btfsc	___awmod@dividend,7
  4423     0E64  03F3               	decf	___awmod@dividend+1,f
  4424     0E65  3064               	movlw	100
  4425     0E66  00F0               	movwf	___awmod@divisor
  4426     0E67  3000               	movlw	0
  4427     0E68  00F1               	movwf	___awmod@divisor+1
  4428     0E69  160A  158A  23E8  120A  158A  	fcall	___awmod
  4429     0E6E  0871               	movf	?___awmod+1,w
  4430     0E6F  00FA               	movwf	___awdiv@dividend+1
  4431     0E70  0870               	movf	?___awmod,w
  4432     0E71  00F9               	movwf	___awdiv@dividend
  4433     0E72  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4434     0E77  0877               	movf	?___awdiv,w
  4435     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4436     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4437     0E7A  00C2               	movwf	??_scale
  4438     0E7B  3001               	movlw	1
  4439     0E7C                     u4795:
  4440     0E7C  1003               	clrc
  4441     0E7D  0DC2               	rlf	??_scale,f
  4442     0E7E  3EFF               	addlw	-1
  4443     0E7F  1D03               	skipz
  4444     0E80  2E7C               	goto	u4795
  4445     0E81  1003               	clrc
  4446     0E82  0D42               	rlf	??_scale,w
  4447     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4448     0E84  0084               	movwf	4
  4449     0E85  120A  118A  200D  120A  158A  	fcall	stringdir
  4450     0E8A  00C3               	movwf	??_scale+1
  4451     0E8B  120A  118A  200D  120A  158A  	fcall	stringdir
  4452     0E90  00C4               	movwf	??_scale+2
  4453     0E91  120A  118A  200D  120A  158A  	fcall	stringdir
  4454     0E96  00C5               	movwf	??_scale+3
  4455     0E97  120A  118A  200D  120A  158A  	fcall	stringdir
  4456     0E9C  00C6               	movwf	??_scale+4
  4457     0E9D  0846               	movf	??_scale+4,w
  4458     0E9E  00A7               	movwf	___flmul@b+3
  4459     0E9F  0845               	movf	??_scale+3,w
  4460     0EA0  00A6               	movwf	___flmul@b+2
  4461     0EA1  0844               	movf	??_scale+2,w
  4462     0EA2  00A5               	movwf	___flmul@b+1
  4463     0EA3  0843               	movf	??_scale+1,w
  4464     0EA4  00A4               	movwf	___flmul@b
  4465     0EA5  3064               	movlw	100
  4466     0EA6  00F7               	movwf	___awdiv@divisor
  4467     0EA7  3000               	movlw	0
  4468     0EA8  00F8               	movwf	___awdiv@divisor+1
  4469     0EA9  0850               	movf	scale@scl,w
  4470     0EAA  00F9               	movwf	___awdiv@dividend
  4471     0EAB  01FA               	clrf	___awdiv@dividend+1
  4472     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  4473     0EAD  03FA               	decf	___awdiv@dividend+1,f
  4474     0EAE  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4475     0EB3  0877               	movf	?___awdiv,w
  4476     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4477     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4478     0EB6  00C7               	movwf	??_scale+5
  4479     0EB7  3001               	movlw	1
  4480     0EB8                     u4805:
  4481     0EB8  1003               	clrc
  4482     0EB9  0DC7               	rlf	??_scale+5,f
  4483     0EBA  3EFF               	addlw	-1
  4484     0EBB  1D03               	skipz
  4485     0EBC  2EB8               	goto	u4805
  4486     0EBD  1003               	clrc
  4487     0EBE  0D47               	rlf	??_scale+5,w
  4488     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4489     0EC0  0084               	movwf	4
  4490     0EC1  120A  118A  200D  120A  158A  	fcall	stringdir
  4491     0EC6  00C8               	movwf	??_scale+6
  4492     0EC7  120A  118A  200D  120A  158A  	fcall	stringdir
  4493     0ECC  00C9               	movwf	??_scale+7
  4494     0ECD  120A  118A  200D  120A  158A  	fcall	stringdir
  4495     0ED2  00CA               	movwf	??_scale+8
  4496     0ED3  120A  118A  200D  120A  158A  	fcall	stringdir
  4497     0ED8  00CB               	movwf	??_scale+9
  4498     0ED9  084B               	movf	??_scale+9,w
  4499     0EDA  00AB               	movwf	___flmul@a+3
  4500     0EDB  084A               	movf	??_scale+8,w
  4501     0EDC  00AA               	movwf	___flmul@a+2
  4502     0EDD  0849               	movf	??_scale+7,w
  4503     0EDE  00A9               	movwf	___flmul@a+1
  4504     0EDF  0848               	movf	??_scale+6,w
  4505     0EE0  00A8               	movwf	___flmul@a
  4506     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4507     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4508     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4509     0EE8  0827               	movf	?___flmul+3,w
  4510     0EE9  00CF               	movwf	_scale$1167+3
  4511     0EEA  0826               	movf	?___flmul+2,w
  4512     0EEB  00CE               	movwf	_scale$1167+2
  4513     0EEC  0825               	movf	?___flmul+1,w
  4514     0EED  00CD               	movwf	_scale$1167+1
  4515     0EEE  0824               	movf	?___flmul,w
  4516     0EEF  00CC               	movwf	_scale$1167
  4517                           
  4518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4519     0EF0  300A               	movlw	10
  4520     0EF1  00F0               	movwf	___awmod@divisor
  4521     0EF2  3000               	movlw	0
  4522     0EF3  00F1               	movwf	___awmod@divisor+1
  4523     0EF4  0850               	movf	scale@scl,w
  4524     0EF5  00F2               	movwf	___awmod@dividend
  4525     0EF6  01F3               	clrf	___awmod@dividend+1
  4526     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4527     0EF8  03F3               	decf	___awmod@dividend+1,f
  4528     0EF9  160A  158A  23E8  120A  158A  	fcall	___awmod
  4529     0EFE  0870               	movf	?___awmod,w
  4530     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4531     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4532     0F01  00C2               	movwf	??_scale
  4533     0F02  3001               	movlw	1
  4534     0F03                     u4815:
  4535     0F03  1003               	clrc
  4536     0F04  0DC2               	rlf	??_scale,f
  4537     0F05  3EFF               	addlw	-1
  4538     0F06  1D03               	skipz
  4539     0F07  2F03               	goto	u4815
  4540     0F08  1003               	clrc
  4541     0F09  0D42               	rlf	??_scale,w
  4542     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4543     0F0B  0084               	movwf	4
  4544     0F0C  120A  118A  200D  120A  158A  	fcall	stringdir
  4545     0F11  00C3               	movwf	??_scale+1
  4546     0F12  120A  118A  200D  120A  158A  	fcall	stringdir
  4547     0F17  00C4               	movwf	??_scale+2
  4548     0F18  120A  118A  200D  120A  158A  	fcall	stringdir
  4549     0F1D  00C5               	movwf	??_scale+3
  4550     0F1E  120A  118A  200D  120A  158A  	fcall	stringdir
  4551     0F23  00C6               	movwf	??_scale+4
  4552     0F24  0846               	movf	??_scale+4,w
  4553     0F25  00A7               	movwf	___flmul@b+3
  4554     0F26  0845               	movf	??_scale+3,w
  4555     0F27  00A6               	movwf	___flmul@b+2
  4556     0F28  0844               	movf	??_scale+2,w
  4557     0F29  00A5               	movwf	___flmul@b+1
  4558     0F2A  0843               	movf	??_scale+1,w
  4559     0F2B  00A4               	movwf	___flmul@b
  4560     0F2C  084F               	movf	_scale$1167+3,w
  4561     0F2D  00AB               	movwf	___flmul@a+3
  4562     0F2E  084E               	movf	_scale$1167+2,w
  4563     0F2F  00AA               	movwf	___flmul@a+2
  4564     0F30  084D               	movf	_scale$1167+1,w
  4565     0F31  00A9               	movwf	___flmul@a+1
  4566     0F32  084C               	movf	_scale$1167,w
  4567     0F33  00A8               	movwf	___flmul@a
  4568     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4569     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4570     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4571     0F3B  0827               	movf	?___flmul+3,w
  4572     0F3C  00C1               	movwf	?_scale+3
  4573     0F3D  0826               	movf	?___flmul+2,w
  4574     0F3E  00C0               	movwf	?_scale+2
  4575     0F3F  0825               	movf	?___flmul+1,w
  4576     0F40  00BF               	movwf	?_scale+1
  4577     0F41  0824               	movf	?___flmul,w
  4578     0F42  00BE               	movwf	?_scale
  4579     0F43  2FFF               	goto	l363
  4580     0F44                     l3198:
  4581     0F44  0850               	movf	scale@scl,w
  4582     0F45  3A80               	xorlw	128
  4583     0F46  3E75               	addlw	-139
  4584     0F47  1C03               	skipc
  4585     0F48  2F4A               	goto	u4821
  4586     0F49  2F4B               	goto	u4820
  4587     0F4A                     u4821:
  4588     0F4A  2FD3               	goto	l3204
  4589     0F4B                     u4820:
  4590     0F4B                     l3200:
  4591                           
  4592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4593     0F4B  300A               	movlw	10
  4594     0F4C  00F0               	movwf	___awmod@divisor
  4595     0F4D  3000               	movlw	0
  4596     0F4E  00F1               	movwf	___awmod@divisor+1
  4597     0F4F  0850               	movf	scale@scl,w
  4598     0F50  00F2               	movwf	___awmod@dividend
  4599     0F51  01F3               	clrf	___awmod@dividend+1
  4600     0F52  1BF2               	btfsc	___awmod@dividend,7
  4601     0F53  03F3               	decf	___awmod@dividend+1,f
  4602     0F54  160A  158A  23E8  120A  158A  	fcall	___awmod
  4603     0F59  0870               	movf	?___awmod,w
  4604     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4605     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4606     0F5C  00C2               	movwf	??_scale
  4607     0F5D  3001               	movlw	1
  4608     0F5E                     u4835:
  4609     0F5E  1003               	clrc
  4610     0F5F  0DC2               	rlf	??_scale,f
  4611     0F60  3EFF               	addlw	-1
  4612     0F61  1D03               	skipz
  4613     0F62  2F5E               	goto	u4835
  4614     0F63  1003               	clrc
  4615     0F64  0D42               	rlf	??_scale,w
  4616     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4617     0F66  0084               	movwf	4
  4618     0F67  120A  118A  200D  120A  158A  	fcall	stringdir
  4619     0F6C  00C3               	movwf	??_scale+1
  4620     0F6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4621     0F72  00C4               	movwf	??_scale+2
  4622     0F73  120A  118A  200D  120A  158A  	fcall	stringdir
  4623     0F78  00C5               	movwf	??_scale+3
  4624     0F79  120A  118A  200D  120A  158A  	fcall	stringdir
  4625     0F7E  00C6               	movwf	??_scale+4
  4626     0F7F  0846               	movf	??_scale+4,w
  4627     0F80  00A7               	movwf	___flmul@b+3
  4628     0F81  0845               	movf	??_scale+3,w
  4629     0F82  00A6               	movwf	___flmul@b+2
  4630     0F83  0844               	movf	??_scale+2,w
  4631     0F84  00A5               	movwf	___flmul@b+1
  4632     0F85  0843               	movf	??_scale+1,w
  4633     0F86  00A4               	movwf	___flmul@b
  4634     0F87  300A               	movlw	10
  4635     0F88  00F7               	movwf	___awdiv@divisor
  4636     0F89  3000               	movlw	0
  4637     0F8A  00F8               	movwf	___awdiv@divisor+1
  4638     0F8B  0850               	movf	scale@scl,w
  4639     0F8C  00F9               	movwf	___awdiv@dividend
  4640     0F8D  01FA               	clrf	___awdiv@dividend+1
  4641     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4642     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4643     0F90  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4644     0F95  0877               	movf	?___awdiv,w
  4645     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4646     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4647     0F98  00C7               	movwf	??_scale+5
  4648     0F99  3001               	movlw	1
  4649     0F9A                     u4845:
  4650     0F9A  1003               	clrc
  4651     0F9B  0DC7               	rlf	??_scale+5,f
  4652     0F9C  3EFF               	addlw	-1
  4653     0F9D  1D03               	skipz
  4654     0F9E  2F9A               	goto	u4845
  4655     0F9F  1003               	clrc
  4656     0FA0  0D47               	rlf	??_scale+5,w
  4657     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4658     0FA2  0084               	movwf	4
  4659     0FA3  120A  118A  200D  120A  158A  	fcall	stringdir
  4660     0FA8  00C8               	movwf	??_scale+6
  4661     0FA9  120A  118A  200D  120A  158A  	fcall	stringdir
  4662     0FAE  00C9               	movwf	??_scale+7
  4663     0FAF  120A  118A  200D  120A  158A  	fcall	stringdir
  4664     0FB4  00CA               	movwf	??_scale+8
  4665     0FB5  120A  118A  200D  120A  158A  	fcall	stringdir
  4666     0FBA  00CB               	movwf	??_scale+9
  4667     0FBB  084B               	movf	??_scale+9,w
  4668     0FBC  00AB               	movwf	___flmul@a+3
  4669     0FBD  084A               	movf	??_scale+8,w
  4670     0FBE  00AA               	movwf	___flmul@a+2
  4671     0FBF  0849               	movf	??_scale+7,w
  4672     0FC0  00A9               	movwf	___flmul@a+1
  4673     0FC1  0848               	movf	??_scale+6,w
  4674     0FC2  00A8               	movwf	___flmul@a
  4675     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4676     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4677     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4678     0FCA  0827               	movf	?___flmul+3,w
  4679     0FCB  00C1               	movwf	?_scale+3
  4680     0FCC  0826               	movf	?___flmul+2,w
  4681     0FCD  00C0               	movwf	?_scale+2
  4682     0FCE  0825               	movf	?___flmul+1,w
  4683     0FCF  00BF               	movwf	?_scale+1
  4684     0FD0  0824               	movf	?___flmul,w
  4685     0FD1  00BE               	movwf	?_scale
  4686     0FD2  2FFF               	goto	l363
  4687     0FD3                     l3204:
  4688                           
  4689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4690     0FD3  0850               	movf	scale@scl,w
  4691     0FD4  00C2               	movwf	??_scale
  4692     0FD5  3001               	movlw	1
  4693     0FD6                     u4855:
  4694     0FD6  1003               	clrc
  4695     0FD7  0DC2               	rlf	??_scale,f
  4696     0FD8  3EFF               	addlw	-1
  4697     0FD9  1D03               	skipz
  4698     0FDA  2FD6               	goto	u4855
  4699     0FDB  1003               	clrc
  4700     0FDC  0D42               	rlf	??_scale,w
  4701     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4702     0FDE  0084               	movwf	4
  4703     0FDF  120A  118A  200D  120A  158A  	fcall	stringdir
  4704     0FE4  00C3               	movwf	??_scale+1
  4705     0FE5  120A  118A  200D  120A  158A  	fcall	stringdir
  4706     0FEA  00C4               	movwf	??_scale+2
  4707     0FEB  120A  118A  200D  120A  158A  	fcall	stringdir
  4708     0FF0  00C5               	movwf	??_scale+3
  4709     0FF1  120A  118A  200D  120A  158A  	fcall	stringdir
  4710     0FF6  00C6               	movwf	??_scale+4
  4711     0FF7  0846               	movf	??_scale+4,w
  4712     0FF8  00C1               	movwf	?_scale+3
  4713     0FF9  0845               	movf	??_scale+3,w
  4714     0FFA  00C0               	movwf	?_scale+2
  4715     0FFB  0844               	movf	??_scale+2,w
  4716     0FFC  00BF               	movwf	?_scale+1
  4717     0FFD  0843               	movf	??_scale+1,w
  4718     0FFE  00BE               	movwf	?_scale
  4719     0FFF                     l363:
  4720     0FFF  0008               	return
  4721     1000                     __end_of_scale:
  4722                           
  4723                           	psect	text3
  4724     1002                     __ptext3:	
  4725 ;; *************** function _isdigit *****************
  4726 ;; Defined at:
  4727 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  c               1    wreg     unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  c               1    1[COMMON] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;		None               void
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4741 ;;      Params:         0       0       0       0       0
  4742 ;;      Locals:         2       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0
  4744 ;;      Totals:         2       0       0       0       0
  4745 ;;Total ram usage:        2 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_sprintf
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754     1002                     _isdigit:	
  4755                           ;psect for function _isdigit
  4756                           
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4760                           ;isdigit@c stored from wreg
  4761     1002  00F1               	movwf	isdigit@c
  4762     1003                     l3208:
  4763     1003  01F0               	clrf	_isdigit$976
  4764     1004                     l3210:
  4765     1004  303A               	movlw	58
  4766     1005  0271               	subwf	isdigit@c,w
  4767     1006  1803               	skipnc
  4768     1007  2809               	goto	u4861
  4769     1008  280A               	goto	u4860
  4770     1009                     u4861:
  4771     1009  2812               	goto	l3216
  4772     100A                     u4860:
  4773     100A                     l3212:
  4774     100A  3030               	movlw	48
  4775     100B  0271               	subwf	isdigit@c,w
  4776     100C  1C03               	skipc
  4777     100D  280F               	goto	u4871
  4778     100E  2810               	goto	u4870
  4779     100F                     u4871:
  4780     100F  2812               	goto	l3216
  4781     1010                     u4870:
  4782     1010                     l3214:
  4783     1010  01F0               	clrf	_isdigit$976
  4784     1011  0AF0               	incf	_isdigit$976,f
  4785     1012                     l3216:
  4786     1012  0C70               	rrf	_isdigit$976,w
  4787     1013                     l920:
  4788     1013  0008               	return
  4789     1014                     __end_of_isdigit:
  4790                           
  4791                           	psect	text4
  4792     1143                     __ptext4:	
  4793 ;; *************** function _fround *****************
  4794 ;; Defined at:
  4795 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  prec            1    wreg     unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  prec            1   49[BANK0 ] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  4   30[BANK0 ] unsigned char 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4809 ;;      Params:         0       4       0       0       0
  4810 ;;      Locals:         0       9       0       0       0
  4811 ;;      Temps:          0       7       0       0       0
  4812 ;;      Totals:         0      20       0       0       0
  4813 ;;Total ram usage:       20 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; Hardware stack levels required when called: 2
  4816 ;; This function calls:
  4817 ;;		___flmul
  4818 ;;		___lwdiv
  4819 ;;		___lwmod
  4820 ;; This function is called by:
  4821 ;;		_sprintf
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825     1143                     _fround:	
  4826                           ;psect for function _fround
  4827                           
  4828                           
  4829                           ;incstack = 0
  4830                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4831                           ;fround@prec stored from wreg
  4832     1143  1283               	bcf	3,5	;RP0=0, select bank0
  4833     1144  1303               	bcf	3,6	;RP1=0, select bank0
  4834     1145  00D1               	movwf	fround@prec
  4835     1146                     l3150:
  4836                           
  4837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4838     1146  306E               	movlw	110
  4839     1147  0251               	subwf	fround@prec,w
  4840     1148  1C03               	skipc
  4841     1149  294B               	goto	u4611
  4842     114A  294C               	goto	u4610
  4843     114B                     u4611:
  4844     114B  2A59               	goto	l3158
  4845     114C                     u4610:
  4846     114C                     l3152:
  4847                           
  4848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4849     114C  303F               	movlw	63
  4850     114D  00A7               	movwf	___flmul@b+3
  4851     114E  3000               	movlw	0
  4852     114F  00A6               	movwf	___flmul@b+2
  4853     1150  3000               	movlw	0
  4854     1151  00A5               	movwf	___flmul@b+1
  4855     1152  3000               	movlw	0
  4856     1153  00A4               	movwf	___flmul@b
  4857     1154  3064               	movlw	100
  4858     1155  00F6               	movwf	___lwdiv@divisor
  4859     1156  3000               	movlw	0
  4860     1157  00F7               	movwf	___lwdiv@divisor+1
  4861     1158  0851               	movf	fround@prec,w
  4862     1159  00C2               	movwf	??_fround
  4863     115A  01C3               	clrf	??_fround+1
  4864     115B  0842               	movf	??_fround,w
  4865     115C  00F8               	movwf	___lwdiv@dividend
  4866     115D  0843               	movf	??_fround+1,w
  4867     115E  00F9               	movwf	___lwdiv@dividend+1
  4868     115F  160A  158A  226C  160A  118A  	fcall	___lwdiv
  4869     1164  0876               	movf	?___lwdiv,w
  4870     1165  1283               	bcf	3,5	;RP0=0, select bank0
  4871     1166  1303               	bcf	3,6	;RP1=0, select bank0
  4872     1167  00C4               	movwf	??_fround+2
  4873     1168  3001               	movlw	1
  4874     1169                     u4625:
  4875     1169  1003               	clrc
  4876     116A  0DC4               	rlf	??_fround+2,f
  4877     116B  3EFF               	addlw	-1
  4878     116C  1D03               	skipz
  4879     116D  2969               	goto	u4625
  4880     116E  1003               	clrc
  4881     116F  0D44               	rlf	??_fround+2,w
  4882     1170  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4883     1171  0084               	movwf	4
  4884     1172  120A  118A  200D  160A  118A  	fcall	stringdir
  4885     1177  00C5               	movwf	??_fround+3
  4886     1178  120A  118A  200D  160A  118A  	fcall	stringdir
  4887     117D  00C6               	movwf	??_fround+4
  4888     117E  120A  118A  200D  160A  118A  	fcall	stringdir
  4889     1183  00C7               	movwf	??_fround+5
  4890     1184  120A  118A  200D  160A  118A  	fcall	stringdir
  4891     1189  00C8               	movwf	??_fround+6
  4892     118A  0848               	movf	??_fround+6,w
  4893     118B  00AB               	movwf	___flmul@a+3
  4894     118C  0847               	movf	??_fround+5,w
  4895     118D  00AA               	movwf	___flmul@a+2
  4896     118E  0846               	movf	??_fround+4,w
  4897     118F  00A9               	movwf	___flmul@a+1
  4898     1190  0845               	movf	??_fround+3,w
  4899     1191  00A8               	movwf	___flmul@a
  4900     1192  120A  158A  215C  160A  118A  	fcall	___flmul
  4901     1197  1283               	bcf	3,5	;RP0=0, select bank0
  4902     1198  1303               	bcf	3,6	;RP1=0, select bank0
  4903     1199  0827               	movf	?___flmul+3,w
  4904     119A  00D0               	movwf	_fround$1165+3
  4905     119B  0826               	movf	?___flmul+2,w
  4906     119C  00CF               	movwf	_fround$1165+2
  4907     119D  0825               	movf	?___flmul+1,w
  4908     119E  00CE               	movwf	_fround$1165+1
  4909     119F  0824               	movf	?___flmul,w
  4910     11A0  00CD               	movwf	_fround$1165
  4911                           
  4912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4913     11A1  300A               	movlw	10
  4914     11A2  00F6               	movwf	___lwdiv@divisor
  4915     11A3  3000               	movlw	0
  4916     11A4  00F7               	movwf	___lwdiv@divisor+1
  4917     11A5  0851               	movf	fround@prec,w
  4918     11A6  00C2               	movwf	??_fround
  4919     11A7  01C3               	clrf	??_fround+1
  4920     11A8  0842               	movf	??_fround,w
  4921     11A9  00F2               	movwf	___lwmod@dividend
  4922     11AA  0843               	movf	??_fround+1,w
  4923     11AB  00F3               	movwf	___lwmod@dividend+1
  4924     11AC  3064               	movlw	100
  4925     11AD  00F0               	movwf	___lwmod@divisor
  4926     11AE  3000               	movlw	0
  4927     11AF  00F1               	movwf	___lwmod@divisor+1
  4928     11B0  160A  158A  21F0  160A  118A  	fcall	___lwmod
  4929     11B5  0871               	movf	?___lwmod+1,w
  4930     11B6  00F9               	movwf	___lwdiv@dividend+1
  4931     11B7  0870               	movf	?___lwmod,w
  4932     11B8  00F8               	movwf	___lwdiv@dividend
  4933     11B9  160A  158A  226C  160A  118A  	fcall	___lwdiv
  4934     11BE  0876               	movf	?___lwdiv,w
  4935     11BF  1283               	bcf	3,5	;RP0=0, select bank0
  4936     11C0  1303               	bcf	3,6	;RP1=0, select bank0
  4937     11C1  00C4               	movwf	??_fround+2
  4938     11C2  3001               	movlw	1
  4939     11C3                     u4635:
  4940     11C3  1003               	clrc
  4941     11C4  0DC4               	rlf	??_fround+2,f
  4942     11C5  3EFF               	addlw	-1
  4943     11C6  1D03               	skipz
  4944     11C7  29C3               	goto	u4635
  4945     11C8  1003               	clrc
  4946     11C9  0D44               	rlf	??_fround+2,w
  4947     11CA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4948     11CB  0084               	movwf	4
  4949     11CC  120A  118A  200D  160A  118A  	fcall	stringdir
  4950     11D1  00C5               	movwf	??_fround+3
  4951     11D2  120A  118A  200D  160A  118A  	fcall	stringdir
  4952     11D7  00C6               	movwf	??_fround+4
  4953     11D8  120A  118A  200D  160A  118A  	fcall	stringdir
  4954     11DD  00C7               	movwf	??_fround+5
  4955     11DE  120A  118A  200D  160A  118A  	fcall	stringdir
  4956     11E3  00C8               	movwf	??_fround+6
  4957     11E4  0848               	movf	??_fround+6,w
  4958     11E5  00A7               	movwf	___flmul@b+3
  4959     11E6  0847               	movf	??_fround+5,w
  4960     11E7  00A6               	movwf	___flmul@b+2
  4961     11E8  0846               	movf	??_fround+4,w
  4962     11E9  00A5               	movwf	___flmul@b+1
  4963     11EA  0845               	movf	??_fround+3,w
  4964     11EB  00A4               	movwf	___flmul@b
  4965     11EC  0850               	movf	_fround$1165+3,w
  4966     11ED  00AB               	movwf	___flmul@a+3
  4967     11EE  084F               	movf	_fround$1165+2,w
  4968     11EF  00AA               	movwf	___flmul@a+2
  4969     11F0  084E               	movf	_fround$1165+1,w
  4970     11F1  00A9               	movwf	___flmul@a+1
  4971     11F2  084D               	movf	_fround$1165,w
  4972     11F3  00A8               	movwf	___flmul@a
  4973     11F4  120A  158A  215C  160A  118A  	fcall	___flmul
  4974     11F9  1283               	bcf	3,5	;RP0=0, select bank0
  4975     11FA  1303               	bcf	3,6	;RP1=0, select bank0
  4976     11FB  0827               	movf	?___flmul+3,w
  4977     11FC  00CC               	movwf	_fround$1166+3
  4978     11FD  0826               	movf	?___flmul+2,w
  4979     11FE  00CB               	movwf	_fround$1166+2
  4980     11FF  0825               	movf	?___flmul+1,w
  4981     1200  00CA               	movwf	_fround$1166+1
  4982     1201  0824               	movf	?___flmul,w
  4983     1202  00C9               	movwf	_fround$1166
  4984                           
  4985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4986     1203  300A               	movlw	10
  4987     1204  00F0               	movwf	___lwmod@divisor
  4988     1205  3000               	movlw	0
  4989     1206  00F1               	movwf	___lwmod@divisor+1
  4990     1207  0851               	movf	fround@prec,w
  4991     1208  00C2               	movwf	??_fround
  4992     1209  01C3               	clrf	??_fround+1
  4993     120A  0842               	movf	??_fround,w
  4994     120B  00F2               	movwf	___lwmod@dividend
  4995     120C  0843               	movf	??_fround+1,w
  4996     120D  00F3               	movwf	___lwmod@dividend+1
  4997     120E  160A  158A  21F0  160A  118A  	fcall	___lwmod
  4998     1213  0870               	movf	?___lwmod,w
  4999     1214  1283               	bcf	3,5	;RP0=0, select bank0
  5000     1215  1303               	bcf	3,6	;RP1=0, select bank0
  5001     1216  00C4               	movwf	??_fround+2
  5002     1217  3001               	movlw	1
  5003     1218                     u4645:
  5004     1218  1003               	clrc
  5005     1219  0DC4               	rlf	??_fround+2,f
  5006     121A  3EFF               	addlw	-1
  5007     121B  1D03               	skipz
  5008     121C  2A18               	goto	u4645
  5009     121D  1003               	clrc
  5010     121E  0D44               	rlf	??_fround+2,w
  5011     121F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5012     1220  0084               	movwf	4
  5013     1221  120A  118A  200D  160A  118A  	fcall	stringdir
  5014     1226  00C5               	movwf	??_fround+3
  5015     1227  120A  118A  200D  160A  118A  	fcall	stringdir
  5016     122C  00C6               	movwf	??_fround+4
  5017     122D  120A  118A  200D  160A  118A  	fcall	stringdir
  5018     1232  00C7               	movwf	??_fround+5
  5019     1233  120A  118A  200D  160A  118A  	fcall	stringdir
  5020     1238  00C8               	movwf	??_fround+6
  5021     1239  0848               	movf	??_fround+6,w
  5022     123A  00A7               	movwf	___flmul@b+3
  5023     123B  0847               	movf	??_fround+5,w
  5024     123C  00A6               	movwf	___flmul@b+2
  5025     123D  0846               	movf	??_fround+4,w
  5026     123E  00A5               	movwf	___flmul@b+1
  5027     123F  0845               	movf	??_fround+3,w
  5028     1240  00A4               	movwf	___flmul@b
  5029     1241  084C               	movf	_fround$1166+3,w
  5030     1242  00AB               	movwf	___flmul@a+3
  5031     1243  084B               	movf	_fround$1166+2,w
  5032     1244  00AA               	movwf	___flmul@a+2
  5033     1245  084A               	movf	_fround$1166+1,w
  5034     1246  00A9               	movwf	___flmul@a+1
  5035     1247  0849               	movf	_fround$1166,w
  5036     1248  00A8               	movwf	___flmul@a
  5037     1249  120A  158A  215C  160A  118A  	fcall	___flmul
  5038     124E  1283               	bcf	3,5	;RP0=0, select bank0
  5039     124F  1303               	bcf	3,6	;RP1=0, select bank0
  5040     1250  0827               	movf	?___flmul+3,w
  5041     1251  00C1               	movwf	?_fround+3
  5042     1252  0826               	movf	?___flmul+2,w
  5043     1253  00C0               	movwf	?_fround+2
  5044     1254  0825               	movf	?___flmul+1,w
  5045     1255  00BF               	movwf	?_fround+1
  5046     1256  0824               	movf	?___flmul,w
  5047     1257  00BE               	movwf	?_fround
  5048     1258  2B4D               	goto	l356
  5049     1259                     l3158:
  5050     1259  300B               	movlw	11
  5051     125A  0251               	subwf	fround@prec,w
  5052     125B  1C03               	skipc
  5053     125C  2A5E               	goto	u4651
  5054     125D  2A5F               	goto	u4650
  5055     125E                     u4651:
  5056     125E  2B0A               	goto	l3164
  5057     125F                     u4650:
  5058     125F                     l3160:
  5059                           
  5060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5061     125F  303F               	movlw	63
  5062     1260  00A7               	movwf	___flmul@b+3
  5063     1261  3000               	movlw	0
  5064     1262  00A6               	movwf	___flmul@b+2
  5065     1263  3000               	movlw	0
  5066     1264  00A5               	movwf	___flmul@b+1
  5067     1265  3000               	movlw	0
  5068     1266  00A4               	movwf	___flmul@b
  5069     1267  300A               	movlw	10
  5070     1268  00F6               	movwf	___lwdiv@divisor
  5071     1269  3000               	movlw	0
  5072     126A  00F7               	movwf	___lwdiv@divisor+1
  5073     126B  0851               	movf	fround@prec,w
  5074     126C  00C2               	movwf	??_fround
  5075     126D  01C3               	clrf	??_fround+1
  5076     126E  0842               	movf	??_fround,w
  5077     126F  00F8               	movwf	___lwdiv@dividend
  5078     1270  0843               	movf	??_fround+1,w
  5079     1271  00F9               	movwf	___lwdiv@dividend+1
  5080     1272  160A  158A  226C  160A  118A  	fcall	___lwdiv
  5081     1277  0876               	movf	?___lwdiv,w
  5082     1278  1283               	bcf	3,5	;RP0=0, select bank0
  5083     1279  1303               	bcf	3,6	;RP1=0, select bank0
  5084     127A  00C4               	movwf	??_fround+2
  5085     127B  3001               	movlw	1
  5086     127C                     u4665:
  5087     127C  1003               	clrc
  5088     127D  0DC4               	rlf	??_fround+2,f
  5089     127E  3EFF               	addlw	-1
  5090     127F  1D03               	skipz
  5091     1280  2A7C               	goto	u4665
  5092     1281  1003               	clrc
  5093     1282  0D44               	rlf	??_fround+2,w
  5094     1283  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5095     1284  0084               	movwf	4
  5096     1285  120A  118A  200D  160A  118A  	fcall	stringdir
  5097     128A  00C5               	movwf	??_fround+3
  5098     128B  120A  118A  200D  160A  118A  	fcall	stringdir
  5099     1290  00C6               	movwf	??_fround+4
  5100     1291  120A  118A  200D  160A  118A  	fcall	stringdir
  5101     1296  00C7               	movwf	??_fround+5
  5102     1297  120A  118A  200D  160A  118A  	fcall	stringdir
  5103     129C  00C8               	movwf	??_fround+6
  5104     129D  0848               	movf	??_fround+6,w
  5105     129E  00AB               	movwf	___flmul@a+3
  5106     129F  0847               	movf	??_fround+5,w
  5107     12A0  00AA               	movwf	___flmul@a+2
  5108     12A1  0846               	movf	??_fround+4,w
  5109     12A2  00A9               	movwf	___flmul@a+1
  5110     12A3  0845               	movf	??_fround+3,w
  5111     12A4  00A8               	movwf	___flmul@a
  5112     12A5  120A  158A  215C  160A  118A  	fcall	___flmul
  5113     12AA  1283               	bcf	3,5	;RP0=0, select bank0
  5114     12AB  1303               	bcf	3,6	;RP1=0, select bank0
  5115     12AC  0827               	movf	?___flmul+3,w
  5116     12AD  00D0               	movwf	_fround$1165+3
  5117     12AE  0826               	movf	?___flmul+2,w
  5118     12AF  00CF               	movwf	_fround$1165+2
  5119     12B0  0825               	movf	?___flmul+1,w
  5120     12B1  00CE               	movwf	_fround$1165+1
  5121     12B2  0824               	movf	?___flmul,w
  5122     12B3  00CD               	movwf	_fround$1165
  5123                           
  5124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5125     12B4  300A               	movlw	10
  5126     12B5  00F0               	movwf	___lwmod@divisor
  5127     12B6  3000               	movlw	0
  5128     12B7  00F1               	movwf	___lwmod@divisor+1
  5129     12B8  0851               	movf	fround@prec,w
  5130     12B9  00C2               	movwf	??_fround
  5131     12BA  01C3               	clrf	??_fround+1
  5132     12BB  0842               	movf	??_fround,w
  5133     12BC  00F2               	movwf	___lwmod@dividend
  5134     12BD  0843               	movf	??_fround+1,w
  5135     12BE  00F3               	movwf	___lwmod@dividend+1
  5136     12BF  160A  158A  21F0  160A  118A  	fcall	___lwmod
  5137     12C4  0870               	movf	?___lwmod,w
  5138     12C5  1283               	bcf	3,5	;RP0=0, select bank0
  5139     12C6  1303               	bcf	3,6	;RP1=0, select bank0
  5140     12C7  00C4               	movwf	??_fround+2
  5141     12C8  3001               	movlw	1
  5142     12C9                     u4675:
  5143     12C9  1003               	clrc
  5144     12CA  0DC4               	rlf	??_fround+2,f
  5145     12CB  3EFF               	addlw	-1
  5146     12CC  1D03               	skipz
  5147     12CD  2AC9               	goto	u4675
  5148     12CE  1003               	clrc
  5149     12CF  0D44               	rlf	??_fround+2,w
  5150     12D0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5151     12D1  0084               	movwf	4
  5152     12D2  120A  118A  200D  160A  118A  	fcall	stringdir
  5153     12D7  00C5               	movwf	??_fround+3
  5154     12D8  120A  118A  200D  160A  118A  	fcall	stringdir
  5155     12DD  00C6               	movwf	??_fround+4
  5156     12DE  120A  118A  200D  160A  118A  	fcall	stringdir
  5157     12E3  00C7               	movwf	??_fround+5
  5158     12E4  120A  118A  200D  160A  118A  	fcall	stringdir
  5159     12E9  00C8               	movwf	??_fround+6
  5160     12EA  0848               	movf	??_fround+6,w
  5161     12EB  00A7               	movwf	___flmul@b+3
  5162     12EC  0847               	movf	??_fround+5,w
  5163     12ED  00A6               	movwf	___flmul@b+2
  5164     12EE  0846               	movf	??_fround+4,w
  5165     12EF  00A5               	movwf	___flmul@b+1
  5166     12F0  0845               	movf	??_fround+3,w
  5167     12F1  00A4               	movwf	___flmul@b
  5168     12F2  0850               	movf	_fround$1165+3,w
  5169     12F3  00AB               	movwf	___flmul@a+3
  5170     12F4  084F               	movf	_fround$1165+2,w
  5171     12F5  00AA               	movwf	___flmul@a+2
  5172     12F6  084E               	movf	_fround$1165+1,w
  5173     12F7  00A9               	movwf	___flmul@a+1
  5174     12F8  084D               	movf	_fround$1165,w
  5175     12F9  00A8               	movwf	___flmul@a
  5176     12FA  120A  158A  215C  160A  118A  	fcall	___flmul
  5177     12FF  1283               	bcf	3,5	;RP0=0, select bank0
  5178     1300  1303               	bcf	3,6	;RP1=0, select bank0
  5179     1301  0827               	movf	?___flmul+3,w
  5180     1302  00C1               	movwf	?_fround+3
  5181     1303  0826               	movf	?___flmul+2,w
  5182     1304  00C0               	movwf	?_fround+2
  5183     1305  0825               	movf	?___flmul+1,w
  5184     1306  00BF               	movwf	?_fround+1
  5185     1307  0824               	movf	?___flmul,w
  5186     1308  00BE               	movwf	?_fround
  5187     1309  2B4D               	goto	l356
  5188     130A                     l3164:
  5189                           
  5190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5191     130A  303F               	movlw	63
  5192     130B  00A7               	movwf	___flmul@b+3
  5193     130C  3000               	movlw	0
  5194     130D  00A6               	movwf	___flmul@b+2
  5195     130E  3000               	movlw	0
  5196     130F  00A5               	movwf	___flmul@b+1
  5197     1310  3000               	movlw	0
  5198     1311  00A4               	movwf	___flmul@b
  5199     1312  0851               	movf	fround@prec,w
  5200     1313  00C2               	movwf	??_fround
  5201     1314  3001               	movlw	1
  5202     1315                     u4685:
  5203     1315  1003               	clrc
  5204     1316  0DC2               	rlf	??_fround,f
  5205     1317  3EFF               	addlw	-1
  5206     1318  1D03               	skipz
  5207     1319  2B15               	goto	u4685
  5208     131A  1003               	clrc
  5209     131B  0D42               	rlf	??_fround,w
  5210     131C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5211     131D  0084               	movwf	4
  5212     131E  120A  118A  200D  160A  118A  	fcall	stringdir
  5213     1323  00C3               	movwf	??_fround+1
  5214     1324  120A  118A  200D  160A  118A  	fcall	stringdir
  5215     1329  00C4               	movwf	??_fround+2
  5216     132A  120A  118A  200D  160A  118A  	fcall	stringdir
  5217     132F  00C5               	movwf	??_fround+3
  5218     1330  120A  118A  200D  160A  118A  	fcall	stringdir
  5219     1335  00C6               	movwf	??_fround+4
  5220     1336  0846               	movf	??_fround+4,w
  5221     1337  00AB               	movwf	___flmul@a+3
  5222     1338  0845               	movf	??_fround+3,w
  5223     1339  00AA               	movwf	___flmul@a+2
  5224     133A  0844               	movf	??_fround+2,w
  5225     133B  00A9               	movwf	___flmul@a+1
  5226     133C  0843               	movf	??_fround+1,w
  5227     133D  00A8               	movwf	___flmul@a
  5228     133E  120A  158A  215C  160A  118A  	fcall	___flmul
  5229     1343  1283               	bcf	3,5	;RP0=0, select bank0
  5230     1344  1303               	bcf	3,6	;RP1=0, select bank0
  5231     1345  0827               	movf	?___flmul+3,w
  5232     1346  00C1               	movwf	?_fround+3
  5233     1347  0826               	movf	?___flmul+2,w
  5234     1348  00C0               	movwf	?_fround+2
  5235     1349  0825               	movf	?___flmul+1,w
  5236     134A  00BF               	movwf	?_fround+1
  5237     134B  0824               	movf	?___flmul,w
  5238     134C  00BE               	movwf	?_fround
  5239     134D                     l356:
  5240     134D  0008               	return
  5241     134E                     __end_of_fround:
  5242                           
  5243                           	psect	text5
  5244     095C                     __ptext5:	
  5245 ;; *************** function ___flmul *****************
  5246 ;; Defined at:
  5247 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  b               4    4[BANK0 ] unsigned char 
  5250 ;;  a               4    8[BANK0 ] unsigned char 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  prod            4   24[BANK0 ] struct .
  5253 ;;  grs             4   18[BANK0 ] unsigned long 
  5254 ;;  temp            2   28[BANK0 ] struct .
  5255 ;;  bexp            1   23[BANK0 ] unsigned char 
  5256 ;;  aexp            1   22[BANK0 ] unsigned char 
  5257 ;;  sign            1   17[BANK0 ] unsigned char 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  4    4[BANK0 ] unsigned char 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5267 ;;      Params:         0       8       0       0       0
  5268 ;;      Locals:         0      13       0       0       0
  5269 ;;      Temps:          0       5       0       0       0
  5270 ;;      Totals:         0      26       0       0       0
  5271 ;;Total ram usage:       26 bytes
  5272 ;; Hardware stack levels used: 1
  5273 ;; Hardware stack levels required when called: 1
  5274 ;; This function calls:
  5275 ;;		__Umul8_16
  5276 ;; This function is called by:
  5277 ;;		_main
  5278 ;;		_fround
  5279 ;;		_scale
  5280 ;;		_sprintf
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284     095C                     ___flmul:	
  5285                           ;psect for function ___flmul
  5286                           
  5287     095C                     l2968:	
  5288                           ;incstack = 0
  5289                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5290                           
  5291     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5292     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5293     095E  0827               	movf	___flmul@b+3,w
  5294     095F  3980               	andlw	128
  5295     0960  00B1               	movwf	___flmul@sign
  5296     0961                     l2970:
  5297     0961  0827               	movf	___flmul@b+3,w
  5298     0962  00AC               	movwf	??___flmul
  5299     0963  072C               	addwf	??___flmul,w
  5300     0964  00B7               	movwf	___flmul@bexp
  5301     0965                     l2972:
  5302     0965  1FA6               	btfss	___flmul@b+2,7
  5303     0966  2968               	goto	u4211
  5304     0967  2969               	goto	u4210
  5305     0968                     u4211:
  5306     0968  296A               	goto	l2976
  5307     0969                     u4210:
  5308     0969                     l2974:
  5309     0969  1437               	bsf	___flmul@bexp,0
  5310     096A                     l2976:
  5311     096A  0837               	movf	___flmul@bexp,w
  5312     096B  1903               	btfsc	3,2
  5313     096C  296E               	goto	u4221
  5314     096D  296F               	goto	u4220
  5315     096E                     u4221:
  5316     096E  297E               	goto	l2984
  5317     096F                     u4220:
  5318     096F                     l2978:
  5319     096F  0A37               	incf	___flmul@bexp,w
  5320     0970  1D03               	btfss	3,2
  5321     0971  2973               	goto	u4231
  5322     0972  2974               	goto	u4230
  5323     0973                     u4231:
  5324     0973  297C               	goto	l2982
  5325     0974                     u4230:
  5326     0974                     l2980:
  5327     0974  3000               	movlw	0
  5328     0975  00A7               	movwf	___flmul@b+3
  5329     0976  3000               	movlw	0
  5330     0977  00A6               	movwf	___flmul@b+2
  5331     0978  3000               	movlw	0
  5332     0979  00A5               	movwf	___flmul@b+1
  5333     097A  3000               	movlw	0
  5334     097B  00A4               	movwf	___flmul@b
  5335     097C                     l2982:
  5336     097C  17A6               	bsf	___flmul@b+2,7
  5337     097D  2986               	goto	l2986
  5338     097E                     l2984:
  5339     097E  3000               	movlw	0
  5340     097F  00A7               	movwf	___flmul@b+3
  5341     0980  3000               	movlw	0
  5342     0981  00A6               	movwf	___flmul@b+2
  5343     0982  3000               	movlw	0
  5344     0983  00A5               	movwf	___flmul@b+1
  5345     0984  3000               	movlw	0
  5346     0985  00A4               	movwf	___flmul@b
  5347     0986                     l2986:
  5348     0986  082B               	movf	___flmul@a+3,w
  5349     0987  3980               	andlw	128
  5350     0988  00AC               	movwf	??___flmul
  5351     0989  082C               	movf	??___flmul,w
  5352     098A  06B1               	xorwf	___flmul@sign,f
  5353     098B                     l2988:
  5354     098B  082B               	movf	___flmul@a+3,w
  5355     098C  00AC               	movwf	??___flmul
  5356     098D  072C               	addwf	??___flmul,w
  5357     098E  00B6               	movwf	___flmul@aexp
  5358     098F                     l2990:
  5359     098F  1FAA               	btfss	___flmul@a+2,7
  5360     0990  2992               	goto	u4241
  5361     0991  2993               	goto	u4240
  5362     0992                     u4241:
  5363     0992  2994               	goto	l2994
  5364     0993                     u4240:
  5365     0993                     l2992:
  5366     0993  1436               	bsf	___flmul@aexp,0
  5367     0994                     l2994:
  5368     0994  0836               	movf	___flmul@aexp,w
  5369     0995  1903               	btfsc	3,2
  5370     0996  2998               	goto	u4251
  5371     0997  2999               	goto	u4250
  5372     0998                     u4251:
  5373     0998  29A8               	goto	l3002
  5374     0999                     u4250:
  5375     0999                     l2996:
  5376     0999  0A36               	incf	___flmul@aexp,w
  5377     099A  1D03               	btfss	3,2
  5378     099B  299D               	goto	u4261
  5379     099C  299E               	goto	u4260
  5380     099D                     u4261:
  5381     099D  29A6               	goto	l3000
  5382     099E                     u4260:
  5383     099E                     l2998:
  5384     099E  3000               	movlw	0
  5385     099F  00AB               	movwf	___flmul@a+3
  5386     09A0  3000               	movlw	0
  5387     09A1  00AA               	movwf	___flmul@a+2
  5388     09A2  3000               	movlw	0
  5389     09A3  00A9               	movwf	___flmul@a+1
  5390     09A4  3000               	movlw	0
  5391     09A5  00A8               	movwf	___flmul@a
  5392     09A6                     l3000:
  5393     09A6  17AA               	bsf	___flmul@a+2,7
  5394     09A7  29B0               	goto	l3004
  5395     09A8                     l3002:
  5396     09A8  3000               	movlw	0
  5397     09A9  00AB               	movwf	___flmul@a+3
  5398     09AA  3000               	movlw	0
  5399     09AB  00AA               	movwf	___flmul@a+2
  5400     09AC  3000               	movlw	0
  5401     09AD  00A9               	movwf	___flmul@a+1
  5402     09AE  3000               	movlw	0
  5403     09AF  00A8               	movwf	___flmul@a
  5404     09B0                     l3004:
  5405     09B0  0836               	movf	___flmul@aexp,w
  5406     09B1  1903               	btfsc	3,2
  5407     09B2  29B4               	goto	u4271
  5408     09B3  29B5               	goto	u4270
  5409     09B4                     u4271:
  5410     09B4  29BA               	goto	l3008
  5411     09B5                     u4270:
  5412     09B5                     l3006:
  5413     09B5  0837               	movf	___flmul@bexp,w
  5414     09B6  1D03               	btfss	3,2
  5415     09B7  29B9               	goto	u4281
  5416     09B8  29BA               	goto	u4280
  5417     09B9                     u4281:
  5418     09B9  29C3               	goto	l3012
  5419     09BA                     u4280:
  5420     09BA                     l3008:
  5421     09BA  3000               	movlw	0
  5422     09BB  00A7               	movwf	?___flmul+3
  5423     09BC  3000               	movlw	0
  5424     09BD  00A6               	movwf	?___flmul+2
  5425     09BE  3000               	movlw	0
  5426     09BF  00A5               	movwf	?___flmul+1
  5427     09C0  3000               	movlw	0
  5428     09C1  00A4               	movwf	?___flmul
  5429     09C2  2CA0               	goto	l856
  5430     09C3                     l3012:
  5431     09C3  0824               	movf	___flmul@b,w
  5432     09C4  00F0               	movwf	__Umul8_16@multiplicand
  5433     09C5  082A               	movf	___flmul@a+2,w
  5434     09C6  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5435     09CB  0871               	movf	?__Umul8_16+1,w
  5436     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5437     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5438     09CE  00BD               	movwf	___flmul@temp+1
  5439     09CF  0870               	movf	?__Umul8_16,w
  5440     09D0  00BC               	movwf	___flmul@temp
  5441     09D1                     l3014:
  5442     09D1  083C               	movf	___flmul@temp,w
  5443     09D2  00AC               	movwf	??___flmul
  5444     09D3  01AD               	clrf	??___flmul+1
  5445     09D4  01AE               	clrf	??___flmul+2
  5446     09D5  01AF               	clrf	??___flmul+3
  5447     09D6  082F               	movf	??___flmul+3,w
  5448     09D7  00B5               	movwf	___flmul@grs+3
  5449     09D8  082E               	movf	??___flmul+2,w
  5450     09D9  00B4               	movwf	___flmul@grs+2
  5451     09DA  082D               	movf	??___flmul+1,w
  5452     09DB  00B3               	movwf	___flmul@grs+1
  5453     09DC  082C               	movf	??___flmul,w
  5454     09DD  00B2               	movwf	___flmul@grs
  5455     09DE                     l3016:
  5456     09DE  083D               	movf	___flmul@temp+1,w
  5457     09DF  00AC               	movwf	??___flmul
  5458     09E0  01AD               	clrf	??___flmul+1
  5459     09E1  01AE               	clrf	??___flmul+2
  5460     09E2  01AF               	clrf	??___flmul+3
  5461     09E3  082F               	movf	??___flmul+3,w
  5462     09E4  00BB               	movwf	___flmul@prod+3
  5463     09E5  082E               	movf	??___flmul+2,w
  5464     09E6  00BA               	movwf	___flmul@prod+2
  5465     09E7  082D               	movf	??___flmul+1,w
  5466     09E8  00B9               	movwf	___flmul@prod+1
  5467     09E9  082C               	movf	??___flmul,w
  5468     09EA  00B8               	movwf	___flmul@prod
  5469     09EB  0825               	movf	___flmul@b+1,w
  5470     09EC  00F0               	movwf	__Umul8_16@multiplicand
  5471     09ED  0829               	movf	___flmul@a+1,w
  5472     09EE  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5473     09F3  0871               	movf	?__Umul8_16+1,w
  5474     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5475     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5476     09F6  00BD               	movwf	___flmul@temp+1
  5477     09F7  0870               	movf	?__Umul8_16,w
  5478     09F8  00BC               	movwf	___flmul@temp
  5479     09F9                     l3018:
  5480     09F9  083C               	movf	___flmul@temp,w
  5481     09FA  00AC               	movwf	??___flmul
  5482     09FB  01AD               	clrf	??___flmul+1
  5483     09FC  01AE               	clrf	??___flmul+2
  5484     09FD  01AF               	clrf	??___flmul+3
  5485     09FE  082C               	movf	??___flmul,w
  5486     09FF  07B2               	addwf	___flmul@grs,f
  5487     0A00  082D               	movf	??___flmul+1,w
  5488     0A01  1103               	clrz
  5489     0A02  1803               	skipnc
  5490     0A03  3E01               	addlw	1
  5491     0A04  1903               	skipnz
  5492     0A05  2A07               	goto	u4291
  5493     0A06  07B3               	addwf	___flmul@grs+1,f
  5494     0A07                     u4291:
  5495     0A07  082E               	movf	??___flmul+2,w
  5496     0A08  1103               	clrz
  5497     0A09  1803               	skipnc
  5498     0A0A  3E01               	addlw	1
  5499     0A0B  1903               	skipnz
  5500     0A0C  2A0E               	goto	u4292
  5501     0A0D  07B4               	addwf	___flmul@grs+2,f
  5502     0A0E                     u4292:
  5503     0A0E  082F               	movf	??___flmul+3,w
  5504     0A0F  1103               	clrz
  5505     0A10  1803               	skipnc
  5506     0A11  3E01               	addlw	1
  5507     0A12  1903               	skipnz
  5508     0A13  2A15               	goto	u4293
  5509     0A14  07B5               	addwf	___flmul@grs+3,f
  5510     0A15                     u4293:
  5511     0A15                     l3020:
  5512     0A15  083D               	movf	___flmul@temp+1,w
  5513     0A16  00AC               	movwf	??___flmul
  5514     0A17  01AD               	clrf	??___flmul+1
  5515     0A18  01AE               	clrf	??___flmul+2
  5516     0A19  01AF               	clrf	??___flmul+3
  5517     0A1A  082C               	movf	??___flmul,w
  5518     0A1B  07B8               	addwf	___flmul@prod,f
  5519     0A1C  082D               	movf	??___flmul+1,w
  5520     0A1D  1103               	clrz
  5521     0A1E  1803               	skipnc
  5522     0A1F  3E01               	addlw	1
  5523     0A20  1903               	skipnz
  5524     0A21  2A23               	goto	u4301
  5525     0A22  07B9               	addwf	___flmul@prod+1,f
  5526     0A23                     u4301:
  5527     0A23  082E               	movf	??___flmul+2,w
  5528     0A24  1103               	clrz
  5529     0A25  1803               	skipnc
  5530     0A26  3E01               	addlw	1
  5531     0A27  1903               	skipnz
  5532     0A28  2A2A               	goto	u4302
  5533     0A29  07BA               	addwf	___flmul@prod+2,f
  5534     0A2A                     u4302:
  5535     0A2A  082F               	movf	??___flmul+3,w
  5536     0A2B  1103               	clrz
  5537     0A2C  1803               	skipnc
  5538     0A2D  3E01               	addlw	1
  5539     0A2E  1903               	skipnz
  5540     0A2F  2A31               	goto	u4303
  5541     0A30  07BB               	addwf	___flmul@prod+3,f
  5542     0A31                     u4303:
  5543     0A31  0826               	movf	___flmul@b+2,w
  5544     0A32  00F0               	movwf	__Umul8_16@multiplicand
  5545     0A33  0828               	movf	___flmul@a,w
  5546     0A34  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5547     0A39  0871               	movf	?__Umul8_16+1,w
  5548     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  5549     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  5550     0A3C  00BD               	movwf	___flmul@temp+1
  5551     0A3D  0870               	movf	?__Umul8_16,w
  5552     0A3E  00BC               	movwf	___flmul@temp
  5553     0A3F                     l3022:
  5554     0A3F  083C               	movf	___flmul@temp,w
  5555     0A40  00AC               	movwf	??___flmul
  5556     0A41  01AD               	clrf	??___flmul+1
  5557     0A42  01AE               	clrf	??___flmul+2
  5558     0A43  01AF               	clrf	??___flmul+3
  5559     0A44  082C               	movf	??___flmul,w
  5560     0A45  07B2               	addwf	___flmul@grs,f
  5561     0A46  082D               	movf	??___flmul+1,w
  5562     0A47  1103               	clrz
  5563     0A48  1803               	skipnc
  5564     0A49  3E01               	addlw	1
  5565     0A4A  1903               	skipnz
  5566     0A4B  2A4D               	goto	u4311
  5567     0A4C  07B3               	addwf	___flmul@grs+1,f
  5568     0A4D                     u4311:
  5569     0A4D  082E               	movf	??___flmul+2,w
  5570     0A4E  1103               	clrz
  5571     0A4F  1803               	skipnc
  5572     0A50  3E01               	addlw	1
  5573     0A51  1903               	skipnz
  5574     0A52  2A54               	goto	u4312
  5575     0A53  07B4               	addwf	___flmul@grs+2,f
  5576     0A54                     u4312:
  5577     0A54  082F               	movf	??___flmul+3,w
  5578     0A55  1103               	clrz
  5579     0A56  1803               	skipnc
  5580     0A57  3E01               	addlw	1
  5581     0A58  1903               	skipnz
  5582     0A59  2A5B               	goto	u4313
  5583     0A5A  07B5               	addwf	___flmul@grs+3,f
  5584     0A5B                     u4313:
  5585     0A5B                     l3024:
  5586     0A5B  083D               	movf	___flmul@temp+1,w
  5587     0A5C  00AC               	movwf	??___flmul
  5588     0A5D  01AD               	clrf	??___flmul+1
  5589     0A5E  01AE               	clrf	??___flmul+2
  5590     0A5F  01AF               	clrf	??___flmul+3
  5591     0A60  082C               	movf	??___flmul,w
  5592     0A61  07B8               	addwf	___flmul@prod,f
  5593     0A62  082D               	movf	??___flmul+1,w
  5594     0A63  1103               	clrz
  5595     0A64  1803               	skipnc
  5596     0A65  3E01               	addlw	1
  5597     0A66  1903               	skipnz
  5598     0A67  2A69               	goto	u4321
  5599     0A68  07B9               	addwf	___flmul@prod+1,f
  5600     0A69                     u4321:
  5601     0A69  082E               	movf	??___flmul+2,w
  5602     0A6A  1103               	clrz
  5603     0A6B  1803               	skipnc
  5604     0A6C  3E01               	addlw	1
  5605     0A6D  1903               	skipnz
  5606     0A6E  2A70               	goto	u4322
  5607     0A6F  07BA               	addwf	___flmul@prod+2,f
  5608     0A70                     u4322:
  5609     0A70  082F               	movf	??___flmul+3,w
  5610     0A71  1103               	clrz
  5611     0A72  1803               	skipnc
  5612     0A73  3E01               	addlw	1
  5613     0A74  1903               	skipnz
  5614     0A75  2A77               	goto	u4323
  5615     0A76  07BB               	addwf	___flmul@prod+3,f
  5616     0A77                     u4323:
  5617     0A77                     l3026:
  5618     0A77  3008               	movlw	8
  5619     0A78  00AC               	movwf	??___flmul
  5620     0A79                     u4335:
  5621     0A79  1003               	clrc
  5622     0A7A  0DB2               	rlf	___flmul@grs,f
  5623     0A7B  0DB3               	rlf	___flmul@grs+1,f
  5624     0A7C  0DB4               	rlf	___flmul@grs+2,f
  5625     0A7D  0DB5               	rlf	___flmul@grs+3,f
  5626     0A7E  0BAC               	decfsz	??___flmul,f
  5627     0A7F  2A79               	goto	u4335
  5628     0A80                     l3028:
  5629     0A80  0825               	movf	___flmul@b+1,w
  5630     0A81  00F0               	movwf	__Umul8_16@multiplicand
  5631     0A82  0828               	movf	___flmul@a,w
  5632     0A83  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5633     0A88  0871               	movf	?__Umul8_16+1,w
  5634     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5635     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5636     0A8B  00BD               	movwf	___flmul@temp+1
  5637     0A8C  0870               	movf	?__Umul8_16,w
  5638     0A8D  00BC               	movwf	___flmul@temp
  5639     0A8E                     l3030:
  5640     0A8E  083C               	movf	___flmul@temp,w
  5641     0A8F  00AC               	movwf	??___flmul
  5642     0A90  083D               	movf	___flmul@temp+1,w
  5643     0A91  00AD               	movwf	??___flmul+1
  5644     0A92  01AE               	clrf	??___flmul+2
  5645     0A93  01AF               	clrf	??___flmul+3
  5646     0A94  082C               	movf	??___flmul,w
  5647     0A95  07B2               	addwf	___flmul@grs,f
  5648     0A96  082D               	movf	??___flmul+1,w
  5649     0A97  1103               	clrz
  5650     0A98  1803               	skipnc
  5651     0A99  3E01               	addlw	1
  5652     0A9A  1903               	skipnz
  5653     0A9B  2A9D               	goto	u4341
  5654     0A9C  07B3               	addwf	___flmul@grs+1,f
  5655     0A9D                     u4341:
  5656     0A9D  082E               	movf	??___flmul+2,w
  5657     0A9E  1103               	clrz
  5658     0A9F  1803               	skipnc
  5659     0AA0  3E01               	addlw	1
  5660     0AA1  1903               	skipnz
  5661     0AA2  2AA4               	goto	u4342
  5662     0AA3  07B4               	addwf	___flmul@grs+2,f
  5663     0AA4                     u4342:
  5664     0AA4  082F               	movf	??___flmul+3,w
  5665     0AA5  1103               	clrz
  5666     0AA6  1803               	skipnc
  5667     0AA7  3E01               	addlw	1
  5668     0AA8  1903               	skipnz
  5669     0AA9  2AAB               	goto	u4343
  5670     0AAA  07B5               	addwf	___flmul@grs+3,f
  5671     0AAB                     u4343:
  5672     0AAB                     l3032:
  5673     0AAB  0824               	movf	___flmul@b,w
  5674     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  5675     0AAD  0829               	movf	___flmul@a+1,w
  5676     0AAE  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5677     0AB3  0871               	movf	?__Umul8_16+1,w
  5678     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5679     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  5680     0AB6  00BD               	movwf	___flmul@temp+1
  5681     0AB7  0870               	movf	?__Umul8_16,w
  5682     0AB8  00BC               	movwf	___flmul@temp
  5683     0AB9                     l3034:
  5684     0AB9  083C               	movf	___flmul@temp,w
  5685     0ABA  00AC               	movwf	??___flmul
  5686     0ABB  083D               	movf	___flmul@temp+1,w
  5687     0ABC  00AD               	movwf	??___flmul+1
  5688     0ABD  01AE               	clrf	??___flmul+2
  5689     0ABE  01AF               	clrf	??___flmul+3
  5690     0ABF  082C               	movf	??___flmul,w
  5691     0AC0  07B2               	addwf	___flmul@grs,f
  5692     0AC1  082D               	movf	??___flmul+1,w
  5693     0AC2  1103               	clrz
  5694     0AC3  1803               	skipnc
  5695     0AC4  3E01               	addlw	1
  5696     0AC5  1903               	skipnz
  5697     0AC6  2AC8               	goto	u4351
  5698     0AC7  07B3               	addwf	___flmul@grs+1,f
  5699     0AC8                     u4351:
  5700     0AC8  082E               	movf	??___flmul+2,w
  5701     0AC9  1103               	clrz
  5702     0ACA  1803               	skipnc
  5703     0ACB  3E01               	addlw	1
  5704     0ACC  1903               	skipnz
  5705     0ACD  2ACF               	goto	u4352
  5706     0ACE  07B4               	addwf	___flmul@grs+2,f
  5707     0ACF                     u4352:
  5708     0ACF  082F               	movf	??___flmul+3,w
  5709     0AD0  1103               	clrz
  5710     0AD1  1803               	skipnc
  5711     0AD2  3E01               	addlw	1
  5712     0AD3  1903               	skipnz
  5713     0AD4  2AD6               	goto	u4353
  5714     0AD5  07B5               	addwf	___flmul@grs+3,f
  5715     0AD6                     u4353:
  5716     0AD6                     l3036:
  5717     0AD6  3008               	movlw	8
  5718     0AD7  00AC               	movwf	??___flmul
  5719     0AD8                     u4365:
  5720     0AD8  1003               	clrc
  5721     0AD9  0DB2               	rlf	___flmul@grs,f
  5722     0ADA  0DB3               	rlf	___flmul@grs+1,f
  5723     0ADB  0DB4               	rlf	___flmul@grs+2,f
  5724     0ADC  0DB5               	rlf	___flmul@grs+3,f
  5725     0ADD  0BAC               	decfsz	??___flmul,f
  5726     0ADE  2AD8               	goto	u4365
  5727     0ADF  0824               	movf	___flmul@b,w
  5728     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5729     0AE1  0828               	movf	___flmul@a,w
  5730     0AE2  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5731     0AE7  0871               	movf	?__Umul8_16+1,w
  5732     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5733     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5734     0AEA  00BD               	movwf	___flmul@temp+1
  5735     0AEB  0870               	movf	?__Umul8_16,w
  5736     0AEC  00BC               	movwf	___flmul@temp
  5737     0AED                     l3038:
  5738     0AED  083C               	movf	___flmul@temp,w
  5739     0AEE  00AC               	movwf	??___flmul
  5740     0AEF  083D               	movf	___flmul@temp+1,w
  5741     0AF0  00AD               	movwf	??___flmul+1
  5742     0AF1  01AE               	clrf	??___flmul+2
  5743     0AF2  01AF               	clrf	??___flmul+3
  5744     0AF3  082C               	movf	??___flmul,w
  5745     0AF4  07B2               	addwf	___flmul@grs,f
  5746     0AF5  082D               	movf	??___flmul+1,w
  5747     0AF6  1103               	clrz
  5748     0AF7  1803               	skipnc
  5749     0AF8  3E01               	addlw	1
  5750     0AF9  1903               	skipnz
  5751     0AFA  2AFC               	goto	u4371
  5752     0AFB  07B3               	addwf	___flmul@grs+1,f
  5753     0AFC                     u4371:
  5754     0AFC  082E               	movf	??___flmul+2,w
  5755     0AFD  1103               	clrz
  5756     0AFE  1803               	skipnc
  5757     0AFF  3E01               	addlw	1
  5758     0B00  1903               	skipnz
  5759     0B01  2B03               	goto	u4372
  5760     0B02  07B4               	addwf	___flmul@grs+2,f
  5761     0B03                     u4372:
  5762     0B03  082F               	movf	??___flmul+3,w
  5763     0B04  1103               	clrz
  5764     0B05  1803               	skipnc
  5765     0B06  3E01               	addlw	1
  5766     0B07  1903               	skipnz
  5767     0B08  2B0A               	goto	u4373
  5768     0B09  07B5               	addwf	___flmul@grs+3,f
  5769     0B0A                     u4373:
  5770     0B0A                     l3040:
  5771     0B0A  0825               	movf	___flmul@b+1,w
  5772     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5773     0B0C  082A               	movf	___flmul@a+2,w
  5774     0B0D  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5775     0B12  0871               	movf	?__Umul8_16+1,w
  5776     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5777     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5778     0B15  00BD               	movwf	___flmul@temp+1
  5779     0B16  0870               	movf	?__Umul8_16,w
  5780     0B17  00BC               	movwf	___flmul@temp
  5781     0B18  083C               	movf	___flmul@temp,w
  5782     0B19  00AC               	movwf	??___flmul
  5783     0B1A  083D               	movf	___flmul@temp+1,w
  5784     0B1B  00AD               	movwf	??___flmul+1
  5785     0B1C  01AE               	clrf	??___flmul+2
  5786     0B1D  01AF               	clrf	??___flmul+3
  5787     0B1E  082C               	movf	??___flmul,w
  5788     0B1F  07B8               	addwf	___flmul@prod,f
  5789     0B20  082D               	movf	??___flmul+1,w
  5790     0B21  1103               	clrz
  5791     0B22  1803               	skipnc
  5792     0B23  3E01               	addlw	1
  5793     0B24  1903               	skipnz
  5794     0B25  2B27               	goto	u4381
  5795     0B26  07B9               	addwf	___flmul@prod+1,f
  5796     0B27                     u4381:
  5797     0B27  082E               	movf	??___flmul+2,w
  5798     0B28  1103               	clrz
  5799     0B29  1803               	skipnc
  5800     0B2A  3E01               	addlw	1
  5801     0B2B  1903               	skipnz
  5802     0B2C  2B2E               	goto	u4382
  5803     0B2D  07BA               	addwf	___flmul@prod+2,f
  5804     0B2E                     u4382:
  5805     0B2E  082F               	movf	??___flmul+3,w
  5806     0B2F  1103               	clrz
  5807     0B30  1803               	skipnc
  5808     0B31  3E01               	addlw	1
  5809     0B32  1903               	skipnz
  5810     0B33  2B35               	goto	u4383
  5811     0B34  07BB               	addwf	___flmul@prod+3,f
  5812     0B35                     u4383:
  5813     0B35                     l3042:
  5814     0B35  0826               	movf	___flmul@b+2,w
  5815     0B36  00F0               	movwf	__Umul8_16@multiplicand
  5816     0B37  0829               	movf	___flmul@a+1,w
  5817     0B38  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5818     0B3D  0871               	movf	?__Umul8_16+1,w
  5819     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  5820     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  5821     0B40  00BD               	movwf	___flmul@temp+1
  5822     0B41  0870               	movf	?__Umul8_16,w
  5823     0B42  00BC               	movwf	___flmul@temp
  5824     0B43                     l3044:
  5825     0B43  083C               	movf	___flmul@temp,w
  5826     0B44  00AC               	movwf	??___flmul
  5827     0B45  083D               	movf	___flmul@temp+1,w
  5828     0B46  00AD               	movwf	??___flmul+1
  5829     0B47  01AE               	clrf	??___flmul+2
  5830     0B48  01AF               	clrf	??___flmul+3
  5831     0B49  082C               	movf	??___flmul,w
  5832     0B4A  07B8               	addwf	___flmul@prod,f
  5833     0B4B  082D               	movf	??___flmul+1,w
  5834     0B4C  1103               	clrz
  5835     0B4D  1803               	skipnc
  5836     0B4E  3E01               	addlw	1
  5837     0B4F  1903               	skipnz
  5838     0B50  2B52               	goto	u4391
  5839     0B51  07B9               	addwf	___flmul@prod+1,f
  5840     0B52                     u4391:
  5841     0B52  082E               	movf	??___flmul+2,w
  5842     0B53  1103               	clrz
  5843     0B54  1803               	skipnc
  5844     0B55  3E01               	addlw	1
  5845     0B56  1903               	skipnz
  5846     0B57  2B59               	goto	u4392
  5847     0B58  07BA               	addwf	___flmul@prod+2,f
  5848     0B59                     u4392:
  5849     0B59  082F               	movf	??___flmul+3,w
  5850     0B5A  1103               	clrz
  5851     0B5B  1803               	skipnc
  5852     0B5C  3E01               	addlw	1
  5853     0B5D  1903               	skipnz
  5854     0B5E  2B60               	goto	u4393
  5855     0B5F  07BB               	addwf	___flmul@prod+3,f
  5856     0B60                     u4393:
  5857     0B60  0826               	movf	___flmul@b+2,w
  5858     0B61  00F0               	movwf	__Umul8_16@multiplicand
  5859     0B62  082A               	movf	___flmul@a+2,w
  5860     0B63  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5861     0B68  0871               	movf	?__Umul8_16+1,w
  5862     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  5863     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  5864     0B6B  00BD               	movwf	___flmul@temp+1
  5865     0B6C  0870               	movf	?__Umul8_16,w
  5866     0B6D  00BC               	movwf	___flmul@temp
  5867     0B6E                     l3046:
  5868     0B6E  083C               	movf	___flmul@temp,w
  5869     0B6F  00AC               	movwf	??___flmul
  5870     0B70  083D               	movf	___flmul@temp+1,w
  5871     0B71  00AD               	movwf	??___flmul+1
  5872     0B72  01AE               	clrf	??___flmul+2
  5873     0B73  01AF               	clrf	??___flmul+3
  5874     0B74  3008               	movlw	8
  5875     0B75                     u4405:
  5876     0B75  1003               	clrc
  5877     0B76  0DAC               	rlf	??___flmul,f
  5878     0B77  0DAD               	rlf	??___flmul+1,f
  5879     0B78  0DAE               	rlf	??___flmul+2,f
  5880     0B79  0DAF               	rlf	??___flmul+3,f
  5881     0B7A                     u4400:
  5882     0B7A  3EFF               	addlw	-1
  5883     0B7B  1D03               	skipz
  5884     0B7C  2B75               	goto	u4405
  5885     0B7D  082C               	movf	??___flmul,w
  5886     0B7E  07B8               	addwf	___flmul@prod,f
  5887     0B7F  082D               	movf	??___flmul+1,w
  5888     0B80  1103               	clrz
  5889     0B81  1803               	skipnc
  5890     0B82  3E01               	addlw	1
  5891     0B83  1903               	skipnz
  5892     0B84  2B86               	goto	u4411
  5893     0B85  07B9               	addwf	___flmul@prod+1,f
  5894     0B86                     u4411:
  5895     0B86  082E               	movf	??___flmul+2,w
  5896     0B87  1103               	clrz
  5897     0B88  1803               	skipnc
  5898     0B89  3E01               	addlw	1
  5899     0B8A  1903               	skipnz
  5900     0B8B  2B8D               	goto	u4412
  5901     0B8C  07BA               	addwf	___flmul@prod+2,f
  5902     0B8D                     u4412:
  5903     0B8D  082F               	movf	??___flmul+3,w
  5904     0B8E  1103               	clrz
  5905     0B8F  1803               	skipnc
  5906     0B90  3E01               	addlw	1
  5907     0B91  1903               	skipnz
  5908     0B92  2B94               	goto	u4413
  5909     0B93  07BB               	addwf	___flmul@prod+3,f
  5910     0B94                     u4413:
  5911     0B94                     l3048:
  5912     0B94  0832               	movf	___flmul@grs,w
  5913     0B95  00AC               	movwf	??___flmul
  5914     0B96  0833               	movf	___flmul@grs+1,w
  5915     0B97  00AD               	movwf	??___flmul+1
  5916     0B98  0834               	movf	___flmul@grs+2,w
  5917     0B99  00AE               	movwf	??___flmul+2
  5918     0B9A  0835               	movf	___flmul@grs+3,w
  5919     0B9B  00AF               	movwf	??___flmul+3
  5920     0B9C  3018               	movlw	24
  5921     0B9D                     u4425:
  5922     0B9D  1003               	clrc
  5923     0B9E  0CAF               	rrf	??___flmul+3,f
  5924     0B9F  0CAE               	rrf	??___flmul+2,f
  5925     0BA0  0CAD               	rrf	??___flmul+1,f
  5926     0BA1  0CAC               	rrf	??___flmul,f
  5927     0BA2                     u4420:
  5928     0BA2  3EFF               	addlw	-1
  5929     0BA3  1D03               	skipz
  5930     0BA4  2B9D               	goto	u4425
  5931     0BA5  082C               	movf	??___flmul,w
  5932     0BA6  07B8               	addwf	___flmul@prod,f
  5933     0BA7  082D               	movf	??___flmul+1,w
  5934     0BA8  1103               	clrz
  5935     0BA9  1803               	skipnc
  5936     0BAA  3E01               	addlw	1
  5937     0BAB  1903               	skipnz
  5938     0BAC  2BAE               	goto	u4431
  5939     0BAD  07B9               	addwf	___flmul@prod+1,f
  5940     0BAE                     u4431:
  5941     0BAE  082E               	movf	??___flmul+2,w
  5942     0BAF  1103               	clrz
  5943     0BB0  1803               	skipnc
  5944     0BB1  3E01               	addlw	1
  5945     0BB2  1903               	skipnz
  5946     0BB3  2BB5               	goto	u4432
  5947     0BB4  07BA               	addwf	___flmul@prod+2,f
  5948     0BB5                     u4432:
  5949     0BB5  082F               	movf	??___flmul+3,w
  5950     0BB6  1103               	clrz
  5951     0BB7  1803               	skipnc
  5952     0BB8  3E01               	addlw	1
  5953     0BB9  1903               	skipnz
  5954     0BBA  2BBC               	goto	u4433
  5955     0BBB  07BB               	addwf	___flmul@prod+3,f
  5956     0BBC                     u4433:
  5957     0BBC                     l3050:
  5958     0BBC  3008               	movlw	8
  5959     0BBD  00AC               	movwf	??___flmul
  5960     0BBE                     u4445:
  5961     0BBE  1003               	clrc
  5962     0BBF  0DB2               	rlf	___flmul@grs,f
  5963     0BC0  0DB3               	rlf	___flmul@grs+1,f
  5964     0BC1  0DB4               	rlf	___flmul@grs+2,f
  5965     0BC2  0DB5               	rlf	___flmul@grs+3,f
  5966     0BC3  0BAC               	decfsz	??___flmul,f
  5967     0BC4  2BBE               	goto	u4445
  5968     0BC5                     l3052:
  5969     0BC5  0837               	movf	___flmul@bexp,w
  5970     0BC6  0736               	addwf	___flmul@aexp,w
  5971     0BC7  00AC               	movwf	??___flmul
  5972     0BC8  01AD               	clrf	??___flmul+1
  5973     0BC9  0DAD               	rlf	??___flmul+1,f
  5974     0BCA  082C               	movf	??___flmul,w
  5975     0BCB  3E82               	addlw	130
  5976     0BCC  00BC               	movwf	___flmul@temp
  5977     0BCD  082D               	movf	??___flmul+1,w
  5978     0BCE  1803               	skipnc
  5979     0BCF  3E01               	addlw	1
  5980     0BD0  3EFF               	addlw	255
  5981     0BD1  00BD               	movwf	___flmul@temp+1
  5982     0BD2  2BF0               	goto	l3064
  5983     0BD3                     l3054:
  5984     0BD3  3001               	movlw	1
  5985     0BD4  00AC               	movwf	??___flmul
  5986     0BD5                     u4455:
  5987     0BD5  1003               	clrc
  5988     0BD6  0DB8               	rlf	___flmul@prod,f
  5989     0BD7  0DB9               	rlf	___flmul@prod+1,f
  5990     0BD8  0DBA               	rlf	___flmul@prod+2,f
  5991     0BD9  0DBB               	rlf	___flmul@prod+3,f
  5992     0BDA  0BAC               	decfsz	??___flmul,f
  5993     0BDB  2BD5               	goto	u4455
  5994     0BDC                     l3056:
  5995     0BDC  1FB5               	btfss	___flmul@grs+3,7
  5996     0BDD  2BDF               	goto	u4461
  5997     0BDE  2BE0               	goto	u4460
  5998     0BDF                     u4461:
  5999     0BDF  2BE1               	goto	l3060
  6000     0BE0                     u4460:
  6001     0BE0                     l3058:
  6002     0BE0  1438               	bsf	___flmul@prod,0
  6003     0BE1                     l3060:
  6004     0BE1  3001               	movlw	1
  6005     0BE2  00AC               	movwf	??___flmul
  6006     0BE3                     u4475:
  6007     0BE3  1003               	clrc
  6008     0BE4  0DB2               	rlf	___flmul@grs,f
  6009     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6010     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6011     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6012     0BE8  0BAC               	decfsz	??___flmul,f
  6013     0BE9  2BE3               	goto	u4475
  6014     0BEA                     l3062:
  6015     0BEA  30FF               	movlw	255
  6016     0BEB  07BC               	addwf	___flmul@temp,f
  6017     0BEC  1803               	skipnc
  6018     0BED  0ABD               	incf	___flmul@temp+1,f
  6019     0BEE  30FF               	movlw	255
  6020     0BEF  07BD               	addwf	___flmul@temp+1,f
  6021     0BF0                     l3064:
  6022     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6023     0BF1  2BF3               	goto	u4481
  6024     0BF2  2BF4               	goto	u4480
  6025     0BF3                     u4481:
  6026     0BF3  2BD3               	goto	l3054
  6027     0BF4                     u4480:
  6028     0BF4                     l3066:
  6029     0BF4  01B6               	clrf	___flmul@aexp
  6030     0BF5                     l3068:
  6031     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6032     0BF6  2BF8               	goto	u4491
  6033     0BF7  2BF9               	goto	u4490
  6034     0BF8                     u4491:
  6035     0BF8  2C15               	goto	l3076
  6036     0BF9                     u4490:
  6037     0BF9                     l3070:
  6038     0BF9  30FF               	movlw	255
  6039     0BFA  0532               	andwf	___flmul@grs,w
  6040     0BFB  00AC               	movwf	??___flmul
  6041     0BFC  30FF               	movlw	255
  6042     0BFD  0533               	andwf	___flmul@grs+1,w
  6043     0BFE  00AD               	movwf	??___flmul+1
  6044     0BFF  30FF               	movlw	255
  6045     0C00  0534               	andwf	___flmul@grs+2,w
  6046     0C01  00AE               	movwf	??___flmul+2
  6047     0C02  307F               	movlw	127
  6048     0C03  0535               	andwf	___flmul@grs+3,w
  6049     0C04  00AF               	movwf	??___flmul+3
  6050     0C05  082F               	movf	??___flmul+3,w
  6051     0C06  042E               	iorwf	??___flmul+2,w
  6052     0C07  042D               	iorwf	??___flmul+1,w
  6053     0C08  042C               	iorwf	??___flmul,w
  6054     0C09  1903               	skipnz
  6055     0C0A  2C0C               	goto	u4501
  6056     0C0B  2C0D               	goto	u4500
  6057     0C0C                     u4501:
  6058     0C0C  2C10               	goto	l862
  6059     0C0D                     u4500:
  6060     0C0D                     l3072:
  6061     0C0D  01B6               	clrf	___flmul@aexp
  6062     0C0E  0AB6               	incf	___flmul@aexp,f
  6063     0C0F  2C15               	goto	l3076
  6064     0C10                     l862:
  6065     0C10  1C38               	btfss	___flmul@prod,0
  6066     0C11  2C13               	goto	u4511
  6067     0C12  2C14               	goto	u4510
  6068     0C13                     u4511:
  6069     0C13  2C15               	goto	l3076
  6070     0C14                     u4510:
  6071     0C14  2C0D               	goto	l3072
  6072     0C15                     l3076:
  6073     0C15  0836               	movf	___flmul@aexp,w
  6074     0C16  1903               	btfsc	3,2
  6075     0C17  2C19               	goto	u4521
  6076     0C18  2C1A               	goto	u4520
  6077     0C19                     u4521:
  6078     0C19  2C4B               	goto	l3086
  6079     0C1A                     u4520:
  6080     0C1A                     l3078:
  6081     0C1A  3001               	movlw	1
  6082     0C1B  07B8               	addwf	___flmul@prod,f
  6083     0C1C  3000               	movlw	0
  6084     0C1D  1803               	skipnc
  6085     0C1E  3001               	movlw	1
  6086     0C1F  07B9               	addwf	___flmul@prod+1,f
  6087     0C20  3000               	movlw	0
  6088     0C21  1803               	skipnc
  6089     0C22  3001               	movlw	1
  6090     0C23  07BA               	addwf	___flmul@prod+2,f
  6091     0C24  3000               	movlw	0
  6092     0C25  1803               	skipnc
  6093     0C26  3001               	movlw	1
  6094     0C27  07BB               	addwf	___flmul@prod+3,f
  6095     0C28                     l3080:
  6096     0C28  1C3B               	btfss	___flmul@prod+3,0
  6097     0C29  2C2B               	goto	u4531
  6098     0C2A  2C2C               	goto	u4530
  6099     0C2B                     u4531:
  6100     0C2B  2C4B               	goto	l3086
  6101     0C2C                     u4530:
  6102     0C2C                     l3082:
  6103     0C2C  0838               	movf	___flmul@prod,w
  6104     0C2D  00AC               	movwf	??___flmul
  6105     0C2E  0839               	movf	___flmul@prod+1,w
  6106     0C2F  00AD               	movwf	??___flmul+1
  6107     0C30  083A               	movf	___flmul@prod+2,w
  6108     0C31  00AE               	movwf	??___flmul+2
  6109     0C32  083B               	movf	___flmul@prod+3,w
  6110     0C33  00AF               	movwf	??___flmul+3
  6111     0C34  3001               	movlw	1
  6112     0C35  00B0               	movwf	??___flmul+4
  6113     0C36                     u4545:
  6114     0C36  0D2F               	rlf	??___flmul+3,w
  6115     0C37  0CAF               	rrf	??___flmul+3,f
  6116     0C38  0CAE               	rrf	??___flmul+2,f
  6117     0C39  0CAD               	rrf	??___flmul+1,f
  6118     0C3A  0CAC               	rrf	??___flmul,f
  6119     0C3B                     u4540:
  6120     0C3B  0BB0               	decfsz	??___flmul+4,f
  6121     0C3C  2C36               	goto	u4545
  6122     0C3D  082F               	movf	??___flmul+3,w
  6123     0C3E  00BB               	movwf	___flmul@prod+3
  6124     0C3F  082E               	movf	??___flmul+2,w
  6125     0C40  00BA               	movwf	___flmul@prod+2
  6126     0C41  082D               	movf	??___flmul+1,w
  6127     0C42  00B9               	movwf	___flmul@prod+1
  6128     0C43  082C               	movf	??___flmul,w
  6129     0C44  00B8               	movwf	___flmul@prod
  6130     0C45                     l3084:
  6131     0C45  3001               	movlw	1
  6132     0C46  07BC               	addwf	___flmul@temp,f
  6133     0C47  1803               	skipnc
  6134     0C48  0ABD               	incf	___flmul@temp+1,f
  6135     0C49  3000               	movlw	0
  6136     0C4A  07BD               	addwf	___flmul@temp+1,f
  6137     0C4B                     l3086:
  6138     0C4B  083D               	movf	___flmul@temp+1,w
  6139     0C4C  3A80               	xorlw	128
  6140     0C4D  00FF               	movwf	btemp+1
  6141     0C4E  3080               	movlw	128
  6142     0C4F  027F               	subwf	btemp+1,w
  6143     0C50  1D03               	skipz
  6144     0C51  2C54               	goto	u4555
  6145     0C52  30FF               	movlw	255
  6146     0C53  023C               	subwf	___flmul@temp,w
  6147     0C54                     u4555:
  6148     0C54  1C03               	skipc
  6149     0C55  2C57               	goto	u4551
  6150     0C56  2C58               	goto	u4550
  6151     0C57                     u4551:
  6152     0C57  2C63               	goto	l3090
  6153     0C58                     u4550:
  6154     0C58                     l3088:
  6155     0C58  307F               	movlw	127
  6156     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6157     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6158     0C5B  00BB               	movwf	___flmul@prod+3
  6159     0C5C  3080               	movlw	128
  6160     0C5D  00BA               	movwf	___flmul@prod+2
  6161     0C5E  3000               	movlw	0
  6162     0C5F  00B9               	movwf	___flmul@prod+1
  6163     0C60  3000               	movlw	0
  6164     0C61  00B8               	movwf	___flmul@prod
  6165     0C62  2C94               	goto	l868
  6166     0C63                     l3090:
  6167     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6168     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6169     0C65  083D               	movf	___flmul@temp+1,w
  6170     0C66  3A80               	xorlw	128
  6171     0C67  00FF               	movwf	btemp+1
  6172     0C68  3080               	movlw	128
  6173     0C69  027F               	subwf	btemp+1,w
  6174     0C6A  1D03               	skipz
  6175     0C6B  2C6E               	goto	u4565
  6176     0C6C  3001               	movlw	1
  6177     0C6D  023C               	subwf	___flmul@temp,w
  6178     0C6E                     u4565:
  6179     0C6E  1803               	skipnc
  6180     0C6F  2C71               	goto	u4561
  6181     0C70  2C72               	goto	u4560
  6182     0C71                     u4561:
  6183     0C71  2C7E               	goto	l3096
  6184     0C72                     u4560:
  6185     0C72                     l3092:
  6186     0C72  3000               	movlw	0
  6187     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6188     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6189     0C75  00BB               	movwf	___flmul@prod+3
  6190     0C76  3000               	movlw	0
  6191     0C77  00BA               	movwf	___flmul@prod+2
  6192     0C78  3000               	movlw	0
  6193     0C79  00B9               	movwf	___flmul@prod+1
  6194     0C7A  3000               	movlw	0
  6195     0C7B  00B8               	movwf	___flmul@prod
  6196     0C7C                     l3094:
  6197     0C7C  01B1               	clrf	___flmul@sign
  6198     0C7D  2C94               	goto	l868
  6199     0C7E                     l3096:
  6200     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6201     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6202     0C80  083C               	movf	___flmul@temp,w
  6203     0C81  00B7               	movwf	___flmul@bexp
  6204     0C82  30FF               	movlw	255
  6205     0C83  05B8               	andwf	___flmul@prod,f
  6206     0C84  30FF               	movlw	255
  6207     0C85  05B9               	andwf	___flmul@prod+1,f
  6208     0C86  307F               	movlw	127
  6209     0C87  05BA               	andwf	___flmul@prod+2,f
  6210     0C88  3000               	movlw	0
  6211     0C89  05BB               	andwf	___flmul@prod+3,f
  6212     0C8A                     l3098:
  6213     0C8A  1C37               	btfss	___flmul@bexp,0
  6214     0C8B  2C8D               	goto	u4571
  6215     0C8C  2C8E               	goto	u4570
  6216     0C8D                     u4571:
  6217     0C8D  2C8F               	goto	l3102
  6218     0C8E                     u4570:
  6219     0C8E                     l3100:
  6220     0C8E  17BA               	bsf	___flmul@prod+2,7
  6221     0C8F                     l3102:
  6222     0C8F  0837               	movf	___flmul@bexp,w
  6223     0C90  00AC               	movwf	??___flmul
  6224     0C91  1003               	clrc
  6225     0C92  0C2C               	rrf	??___flmul,w
  6226     0C93  00BB               	movwf	___flmul@prod+3
  6227     0C94                     l868:
  6228     0C94  0831               	movf	___flmul@sign,w
  6229     0C95  00AC               	movwf	??___flmul
  6230     0C96  082C               	movf	??___flmul,w
  6231     0C97  04BB               	iorwf	___flmul@prod+3,f
  6232     0C98                     l3104:
  6233     0C98  083B               	movf	___flmul@prod+3,w
  6234     0C99  00A7               	movwf	?___flmul+3
  6235     0C9A  083A               	movf	___flmul@prod+2,w
  6236     0C9B  00A6               	movwf	?___flmul+2
  6237     0C9C  0839               	movf	___flmul@prod+1,w
  6238     0C9D  00A5               	movwf	?___flmul+1
  6239     0C9E  0838               	movf	___flmul@prod,w
  6240     0C9F  00A4               	movwf	?___flmul
  6241     0CA0                     l856:
  6242     0CA0  0008               	return
  6243     0CA1                     __end_of___flmul:
  6244                           
  6245                           	psect	text6
  6246     19C9                     __ptext6:	
  6247 ;; *************** function __Umul8_16 *****************
  6248 ;; Defined at:
  6249 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  multiplier      1    wreg     unsigned char 
  6252 ;;  multiplicand    1    0[COMMON] unsigned char 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  multiplier      1    8[COMMON] unsigned char 
  6255 ;;  word_mpld       2    6[COMMON] unsigned int 
  6256 ;;  product         2    4[COMMON] unsigned int 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  2    0[COMMON] unsigned int 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6266 ;;      Params:         2       0       0       0       0
  6267 ;;      Locals:         5       0       0       0       0
  6268 ;;      Temps:          2       0       0       0       0
  6269 ;;      Totals:         9       0       0       0       0
  6270 ;;Total ram usage:        9 bytes
  6271 ;; Hardware stack levels used: 1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		___flmul
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279     19C9                     __Umul8_16:	
  6280                           ;psect for function __Umul8_16
  6281                           
  6282                           
  6283                           ;incstack = 0
  6284                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6285                           ;__Umul8_16@multiplier stored from wreg
  6286     19C9  00F8               	movwf	__Umul8_16@multiplier
  6287     19CA                     l2620:
  6288     19CA  01F4               	clrf	__Umul8_16@product
  6289     19CB  01F5               	clrf	__Umul8_16@product+1
  6290     19CC                     l2622:
  6291     19CC  0870               	movf	__Umul8_16@multiplicand,w
  6292     19CD  00F2               	movwf	??__Umul8_16
  6293     19CE  01F3               	clrf	??__Umul8_16+1
  6294     19CF  0872               	movf	??__Umul8_16,w
  6295     19D0  00F6               	movwf	__Umul8_16@word_mpld
  6296     19D1  0873               	movf	??__Umul8_16+1,w
  6297     19D2  00F7               	movwf	__Umul8_16@word_mpld+1
  6298     19D3                     l2624:
  6299     19D3  1C78               	btfss	__Umul8_16@multiplier,0
  6300     19D4  29D6               	goto	u3361
  6301     19D5  29D7               	goto	u3360
  6302     19D6                     u3361:
  6303     19D6  29DD               	goto	l875
  6304     19D7                     u3360:
  6305     19D7                     l2626:
  6306     19D7  0876               	movf	__Umul8_16@word_mpld,w
  6307     19D8  07F4               	addwf	__Umul8_16@product,f
  6308     19D9  1803               	skipnc
  6309     19DA  0AF5               	incf	__Umul8_16@product+1,f
  6310     19DB  0877               	movf	__Umul8_16@word_mpld+1,w
  6311     19DC  07F5               	addwf	__Umul8_16@product+1,f
  6312     19DD                     l875:
  6313     19DD  3001               	movlw	1
  6314     19DE                     u3375:
  6315     19DE  1003               	clrc
  6316     19DF  0DF6               	rlf	__Umul8_16@word_mpld,f
  6317     19E0  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6318     19E1  3EFF               	addlw	-1
  6319     19E2  1D03               	skipz
  6320     19E3  29DE               	goto	u3375
  6321     19E4  1003               	clrc
  6322     19E5  0CF8               	rrf	__Umul8_16@multiplier,f
  6323     19E6                     l2628:
  6324     19E6  0878               	movf	__Umul8_16@multiplier,w
  6325     19E7  1D03               	btfss	3,2
  6326     19E8  29EA               	goto	u3381
  6327     19E9  29EB               	goto	u3380
  6328     19EA                     u3381:
  6329     19EA  29D3               	goto	l2624
  6330     19EB                     u3380:
  6331     19EB                     l2630:
  6332     19EB  0875               	movf	__Umul8_16@product+1,w
  6333     19EC  00F1               	movwf	?__Umul8_16+1
  6334     19ED  0874               	movf	__Umul8_16@product,w
  6335     19EE  00F0               	movwf	?__Umul8_16
  6336     19EF                     l877:
  6337     19EF  0008               	return
  6338     19F0                     __end_of__Umul8_16:
  6339                           
  6340                           	psect	text7
  6341     108C                     __ptext7:	
  6342 ;; *************** function __tdiv_to_l_ *****************
  6343 ;; Defined at:
  6344 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  f1              4    0[COMMON] float 
  6347 ;;  f2              4    4[COMMON] float 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  quot            4    0[BANK0 ] unsigned long 
  6350 ;;  exp1            1    5[BANK0 ] unsigned char 
  6351 ;;  cntr            1    4[BANK0 ] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  4    0[COMMON] unsigned long 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6361 ;;      Params:         8       0       0       0       0
  6362 ;;      Locals:         0       6       0       0       0
  6363 ;;      Temps:          3       0       0       0       0
  6364 ;;      Totals:        11       6       0       0       0
  6365 ;;Total ram usage:       17 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_sprintf
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374     108C                     __tdiv_to_l_:	
  6375                           ;psect for function __tdiv_to_l_
  6376                           
  6377     108C                     l3220:	
  6378                           ;incstack = 0
  6379                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6380                           
  6381     108C  0870               	movf	__tdiv_to_l_@f1,w
  6382     108D  00F8               	movwf	??__tdiv_to_l_
  6383     108E  0871               	movf	__tdiv_to_l_@f1+1,w
  6384     108F  00F9               	movwf	??__tdiv_to_l_+1
  6385     1090  0872               	movf	__tdiv_to_l_@f1+2,w
  6386     1091  00FA               	movwf	??__tdiv_to_l_+2
  6387     1092  1003               	clrc
  6388     1093  0D79               	rlf	??__tdiv_to_l_+1,w
  6389     1094  0D7A               	rlf	??__tdiv_to_l_+2,w
  6390     1095  1283               	bcf	3,5	;RP0=0, select bank0
  6391     1096  1303               	bcf	3,6	;RP1=0, select bank0
  6392     1097  00A5               	movwf	__tdiv_to_l_@exp1
  6393     1098  0825               	movf	__tdiv_to_l_@exp1,w
  6394     1099  1D03               	btfss	3,2
  6395     109A  289C               	goto	u4881
  6396     109B  289D               	goto	u4880
  6397     109C                     u4881:
  6398     109C  28A6               	goto	l3226
  6399     109D                     u4880:
  6400     109D                     l3222:
  6401     109D  3000               	movlw	0
  6402     109E  00F3               	movwf	?__tdiv_to_l_+3
  6403     109F  3000               	movlw	0
  6404     10A0  00F2               	movwf	?__tdiv_to_l_+2
  6405     10A1  3000               	movlw	0
  6406     10A2  00F1               	movwf	?__tdiv_to_l_+1
  6407     10A3  3000               	movlw	0
  6408     10A4  00F0               	movwf	?__tdiv_to_l_
  6409     10A5  2942               	goto	l650
  6410     10A6                     l3226:
  6411     10A6  0874               	movf	__tdiv_to_l_@f2,w
  6412     10A7  00F8               	movwf	??__tdiv_to_l_
  6413     10A8  0875               	movf	__tdiv_to_l_@f2+1,w
  6414     10A9  00F9               	movwf	??__tdiv_to_l_+1
  6415     10AA  0876               	movf	__tdiv_to_l_@f2+2,w
  6416     10AB  00FA               	movwf	??__tdiv_to_l_+2
  6417     10AC  1003               	clrc
  6418     10AD  0D79               	rlf	??__tdiv_to_l_+1,w
  6419     10AE  0D7A               	rlf	??__tdiv_to_l_+2,w
  6420     10AF  00A4               	movwf	__tdiv_to_l_@cntr
  6421     10B0  0824               	movf	__tdiv_to_l_@cntr,w
  6422     10B1  1D03               	btfss	3,2
  6423     10B2  28B4               	goto	u4891
  6424     10B3  28B5               	goto	u4890
  6425     10B4                     u4891:
  6426     10B4  28B6               	goto	l651
  6427     10B5                     u4890:
  6428     10B5  289D               	goto	l3222
  6429     10B6                     l651:
  6430     10B6  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6431     10B7                     l3232:
  6432     10B7  30FF               	movlw	255
  6433     10B8  05F0               	andwf	__tdiv_to_l_@f1,f
  6434     10B9  30FF               	movlw	255
  6435     10BA  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6436     10BB  3000               	movlw	0
  6437     10BC  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6438     10BD                     l3234:
  6439     10BD  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6440     10BE  30FF               	movlw	255
  6441     10BF  05F4               	andwf	__tdiv_to_l_@f2,f
  6442     10C0  30FF               	movlw	255
  6443     10C1  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6444     10C2  3000               	movlw	0
  6445     10C3  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6446     10C4  3000               	movlw	0
  6447     10C5  00A3               	movwf	__tdiv_to_l_@quot+3
  6448     10C6  3000               	movlw	0
  6449     10C7  00A2               	movwf	__tdiv_to_l_@quot+2
  6450     10C8  3000               	movlw	0
  6451     10C9  00A1               	movwf	__tdiv_to_l_@quot+1
  6452     10CA  3000               	movlw	0
  6453     10CB  00A0               	movwf	__tdiv_to_l_@quot
  6454     10CC                     l3236:
  6455     10CC  307F               	movlw	127
  6456     10CD  02A5               	subwf	__tdiv_to_l_@exp1,f
  6457     10CE                     l3238:
  6458     10CE  3098               	movlw	152
  6459     10CF  0724               	addwf	__tdiv_to_l_@cntr,w
  6460     10D0  00F8               	movwf	??__tdiv_to_l_
  6461     10D1  0878               	movf	??__tdiv_to_l_,w
  6462     10D2  02A5               	subwf	__tdiv_to_l_@exp1,f
  6463     10D3  3018               	movlw	24
  6464     10D4  00A4               	movwf	__tdiv_to_l_@cntr
  6465     10D5                     l3240:
  6466     10D5  3001               	movlw	1
  6467     10D6  00F8               	movwf	??__tdiv_to_l_
  6468     10D7                     u4905:
  6469     10D7  1003               	clrc
  6470     10D8  0DA0               	rlf	__tdiv_to_l_@quot,f
  6471     10D9  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6472     10DA  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6473     10DB  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6474     10DC  0BF8               	decfsz	??__tdiv_to_l_,f
  6475     10DD  28D7               	goto	u4905
  6476     10DE                     l3242:
  6477     10DE  0876               	movf	__tdiv_to_l_@f2+2,w
  6478     10DF  0272               	subwf	__tdiv_to_l_@f1+2,w
  6479     10E0  1D03               	skipz
  6480     10E1  28E8               	goto	u4915
  6481     10E2  0875               	movf	__tdiv_to_l_@f2+1,w
  6482     10E3  0271               	subwf	__tdiv_to_l_@f1+1,w
  6483     10E4  1D03               	skipz
  6484     10E5  28E8               	goto	u4915
  6485     10E6  0874               	movf	__tdiv_to_l_@f2,w
  6486     10E7  0270               	subwf	__tdiv_to_l_@f1,w
  6487     10E8                     u4915:
  6488     10E8  1C03               	skipc
  6489     10E9  28EB               	goto	u4911
  6490     10EA  28EC               	goto	u4910
  6491     10EB                     u4911:
  6492     10EB  28F7               	goto	l3248
  6493     10EC                     u4910:
  6494     10EC                     l3244:
  6495     10EC  0874               	movf	__tdiv_to_l_@f2,w
  6496     10ED  02F0               	subwf	__tdiv_to_l_@f1,f
  6497     10EE  0875               	movf	__tdiv_to_l_@f2+1,w
  6498     10EF  1C03               	skipc
  6499     10F0  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6500     10F1  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6501     10F2  0876               	movf	__tdiv_to_l_@f2+2,w
  6502     10F3  1C03               	skipc
  6503     10F4  0A76               	incf	__tdiv_to_l_@f2+2,w
  6504     10F5  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6505     10F6                     l3246:
  6506     10F6  1420               	bsf	__tdiv_to_l_@quot,0
  6507     10F7                     l3248:
  6508     10F7  3001               	movlw	1
  6509     10F8                     u4925:
  6510     10F8  1003               	clrc
  6511     10F9  0DF0               	rlf	__tdiv_to_l_@f1,f
  6512     10FA  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6513     10FB  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6514     10FC  3EFF               	addlw	-1
  6515     10FD  1D03               	skipz
  6516     10FE  28F8               	goto	u4925
  6517     10FF                     l3250:
  6518     10FF  3001               	movlw	1
  6519     1100  02A4               	subwf	__tdiv_to_l_@cntr,f
  6520     1101  1D03               	btfss	3,2
  6521     1102  2904               	goto	u4931
  6522     1103  2905               	goto	u4930
  6523     1104                     u4931:
  6524     1104  28D5               	goto	l3240
  6525     1105                     u4930:
  6526     1105                     l654:
  6527     1105  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6528     1106  2908               	goto	u4941
  6529     1107  2909               	goto	u4940
  6530     1108                     u4941:
  6531     1108  2923               	goto	l3260
  6532     1109                     u4940:
  6533     1109                     l3252:
  6534     1109  0825               	movf	__tdiv_to_l_@exp1,w
  6535     110A  3A80               	xorlw	128
  6536     110B  3E97               	addlw	151
  6537     110C  1803               	skipnc
  6538     110D  290F               	goto	u4951
  6539     110E  2910               	goto	u4950
  6540     110F                     u4951:
  6541     110F  2911               	goto	l3258
  6542     1110                     u4950:
  6543     1110  289D               	goto	l3222
  6544     1111                     l3258:
  6545     1111  3001               	movlw	1
  6546     1112                     u4965:
  6547     1112  1003               	clrc
  6548     1113  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6549     1114  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6550     1115  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6551     1116  0CA0               	rrf	__tdiv_to_l_@quot,f
  6552     1117  3EFF               	addlw	-1
  6553     1118  1D03               	skipz
  6554     1119  2912               	goto	u4965
  6555     111A  3001               	movlw	1
  6556     111B  00F8               	movwf	??__tdiv_to_l_
  6557     111C  0878               	movf	??__tdiv_to_l_,w
  6558     111D  07A5               	addwf	__tdiv_to_l_@exp1,f
  6559     111E  1D03               	btfss	3,2
  6560     111F  2921               	goto	u4971
  6561     1120  2922               	goto	u4970
  6562     1121                     u4971:
  6563     1121  2911               	goto	l3258
  6564     1122                     u4970:
  6565     1122  293A               	goto	l3268
  6566     1123                     l3260:
  6567     1123  3018               	movlw	24
  6568     1124  0225               	subwf	__tdiv_to_l_@exp1,w
  6569     1125  1C03               	skipc
  6570     1126  2928               	goto	u4981
  6571     1127  2929               	goto	u4980
  6572     1128                     u4981:
  6573     1128  2935               	goto	l661
  6574     1129                     u4980:
  6575     1129  289D               	goto	l3222
  6576     112A                     l3266:
  6577     112A  3001               	movlw	1
  6578     112B  00F8               	movwf	??__tdiv_to_l_
  6579     112C                     u4995:
  6580     112C  1003               	clrc
  6581     112D  0DA0               	rlf	__tdiv_to_l_@quot,f
  6582     112E  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6583     112F  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6584     1130  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6585     1131  0BF8               	decfsz	??__tdiv_to_l_,f
  6586     1132  292C               	goto	u4995
  6587     1133  3001               	movlw	1
  6588     1134  02A5               	subwf	__tdiv_to_l_@exp1,f
  6589     1135                     l661:
  6590     1135  0825               	movf	__tdiv_to_l_@exp1,w
  6591     1136  1D03               	btfss	3,2
  6592     1137  2939               	goto	u5001
  6593     1138  293A               	goto	u5000
  6594     1139                     u5001:
  6595     1139  292A               	goto	l3266
  6596     113A                     u5000:
  6597     113A                     l3268:
  6598     113A  0823               	movf	__tdiv_to_l_@quot+3,w
  6599     113B  00F3               	movwf	?__tdiv_to_l_+3
  6600     113C  0822               	movf	__tdiv_to_l_@quot+2,w
  6601     113D  00F2               	movwf	?__tdiv_to_l_+2
  6602     113E  0821               	movf	__tdiv_to_l_@quot+1,w
  6603     113F  00F1               	movwf	?__tdiv_to_l_+1
  6604     1140  0820               	movf	__tdiv_to_l_@quot,w
  6605     1141  00F0               	movwf	?__tdiv_to_l_
  6606     1142                     l650:
  6607     1142  0008               	return
  6608     1143                     __end_of__tdiv_to_l_:
  6609                           
  6610                           	psect	text8
  6611     00FB                     __ptext8:	
  6612 ;; *************** function __div_to_l_ *****************
  6613 ;; Defined at:
  6614 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  f1              4    0[COMMON] unsigned long 
  6617 ;;  f2              4    4[COMMON] unsigned long 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  quot            4    0[BANK0 ] unsigned long 
  6620 ;;  exp1            1    5[BANK0 ] unsigned char 
  6621 ;;  cntr            1    4[BANK0 ] unsigned char 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  4    0[COMMON] unsigned long 
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6631 ;;      Params:         8       0       0       0       0
  6632 ;;      Locals:         0       6       0       0       0
  6633 ;;      Temps:          1       0       0       0       0
  6634 ;;      Totals:         9       6       0       0       0
  6635 ;;Total ram usage:       15 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_sprintf
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644     00FB                     __div_to_l_:	
  6645                           ;psect for function __div_to_l_
  6646                           
  6647     00FB                     l3272:	
  6648                           ;incstack = 0
  6649                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6650                           
  6651     00FB  1003               	clrc
  6652     00FC  0D72               	rlf	__div_to_l_@f1+2,w
  6653     00FD  0D73               	rlf	__div_to_l_@f1+3,w
  6654     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  6655     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  6656     0100  00A5               	movwf	__div_to_l_@exp1
  6657     0101  0825               	movf	__div_to_l_@exp1,w
  6658     0102  1D03               	btfss	3,2
  6659     0103  2905               	goto	u5011
  6660     0104  2906               	goto	u5010
  6661     0105                     u5011:
  6662     0105  290F               	goto	l3278
  6663     0106                     u5010:
  6664     0106                     l3274:
  6665     0106  3000               	movlw	0
  6666     0107  00F3               	movwf	?__div_to_l_+3
  6667     0108  3000               	movlw	0
  6668     0109  00F2               	movwf	?__div_to_l_+2
  6669     010A  3000               	movlw	0
  6670     010B  00F1               	movwf	?__div_to_l_+1
  6671     010C  3000               	movlw	0
  6672     010D  00F0               	movwf	?__div_to_l_
  6673     010E  29B2               	goto	l603
  6674     010F                     l3278:
  6675     010F  1003               	clrc
  6676     0110  0D76               	rlf	__div_to_l_@f2+2,w
  6677     0111  0D77               	rlf	__div_to_l_@f2+3,w
  6678     0112  00A4               	movwf	__div_to_l_@cntr
  6679     0113  0824               	movf	__div_to_l_@cntr,w
  6680     0114  1D03               	btfss	3,2
  6681     0115  2917               	goto	u5021
  6682     0116  2918               	goto	u5020
  6683     0117                     u5021:
  6684     0117  2919               	goto	l604
  6685     0118                     u5020:
  6686     0118  2906               	goto	l3274
  6687     0119                     l604:
  6688     0119  17F2               	bsf	__div_to_l_@f1+2,7
  6689     011A                     l3284:
  6690     011A  30FF               	movlw	255
  6691     011B  05F0               	andwf	__div_to_l_@f1,f
  6692     011C  30FF               	movlw	255
  6693     011D  05F1               	andwf	__div_to_l_@f1+1,f
  6694     011E  30FF               	movlw	255
  6695     011F  05F2               	andwf	__div_to_l_@f1+2,f
  6696     0120  3000               	movlw	0
  6697     0121  05F3               	andwf	__div_to_l_@f1+3,f
  6698     0122                     l3286:
  6699     0122  17F6               	bsf	__div_to_l_@f2+2,7
  6700     0123  30FF               	movlw	255
  6701     0124  05F4               	andwf	__div_to_l_@f2,f
  6702     0125  30FF               	movlw	255
  6703     0126  05F5               	andwf	__div_to_l_@f2+1,f
  6704     0127  30FF               	movlw	255
  6705     0128  05F6               	andwf	__div_to_l_@f2+2,f
  6706     0129  3000               	movlw	0
  6707     012A  05F7               	andwf	__div_to_l_@f2+3,f
  6708     012B  3000               	movlw	0
  6709     012C  00A3               	movwf	__div_to_l_@quot+3
  6710     012D  3000               	movlw	0
  6711     012E  00A2               	movwf	__div_to_l_@quot+2
  6712     012F  3000               	movlw	0
  6713     0130  00A1               	movwf	__div_to_l_@quot+1
  6714     0131  3000               	movlw	0
  6715     0132  00A0               	movwf	__div_to_l_@quot
  6716     0133                     l3288:
  6717     0133  307F               	movlw	127
  6718     0134  02A5               	subwf	__div_to_l_@exp1,f
  6719     0135                     l3290:
  6720     0135  30A0               	movlw	160
  6721     0136  0724               	addwf	__div_to_l_@cntr,w
  6722     0137  00F8               	movwf	??__div_to_l_
  6723     0138  0878               	movf	??__div_to_l_,w
  6724     0139  02A5               	subwf	__div_to_l_@exp1,f
  6725     013A  3020               	movlw	32
  6726     013B  00A4               	movwf	__div_to_l_@cntr
  6727     013C                     l3292:
  6728     013C  3001               	movlw	1
  6729     013D  00F8               	movwf	??__div_to_l_
  6730     013E                     u5035:
  6731     013E  1003               	clrc
  6732     013F  0DA0               	rlf	__div_to_l_@quot,f
  6733     0140  0DA1               	rlf	__div_to_l_@quot+1,f
  6734     0141  0DA2               	rlf	__div_to_l_@quot+2,f
  6735     0142  0DA3               	rlf	__div_to_l_@quot+3,f
  6736     0143  0BF8               	decfsz	??__div_to_l_,f
  6737     0144  293E               	goto	u5035
  6738     0145                     l3294:
  6739     0145  0877               	movf	__div_to_l_@f2+3,w
  6740     0146  0273               	subwf	__div_to_l_@f1+3,w
  6741     0147  1D03               	skipz
  6742     0148  2953               	goto	u5045
  6743     0149  0876               	movf	__div_to_l_@f2+2,w
  6744     014A  0272               	subwf	__div_to_l_@f1+2,w
  6745     014B  1D03               	skipz
  6746     014C  2953               	goto	u5045
  6747     014D  0875               	movf	__div_to_l_@f2+1,w
  6748     014E  0271               	subwf	__div_to_l_@f1+1,w
  6749     014F  1D03               	skipz
  6750     0150  2953               	goto	u5045
  6751     0151  0874               	movf	__div_to_l_@f2,w
  6752     0152  0270               	subwf	__div_to_l_@f1,w
  6753     0153                     u5045:
  6754     0153  1C03               	skipc
  6755     0154  2956               	goto	u5041
  6756     0155  2957               	goto	u5040
  6757     0156                     u5041:
  6758     0156  2966               	goto	l3300
  6759     0157                     u5040:
  6760     0157                     l3296:
  6761     0157  0874               	movf	__div_to_l_@f2,w
  6762     0158  02F0               	subwf	__div_to_l_@f1,f
  6763     0159  0875               	movf	__div_to_l_@f2+1,w
  6764     015A  1C03               	skipc
  6765     015B  0F75               	incfsz	__div_to_l_@f2+1,w
  6766     015C  02F1               	subwf	__div_to_l_@f1+1,f
  6767     015D  0876               	movf	__div_to_l_@f2+2,w
  6768     015E  1C03               	skipc
  6769     015F  0F76               	incfsz	__div_to_l_@f2+2,w
  6770     0160  02F2               	subwf	__div_to_l_@f1+2,f
  6771     0161  0877               	movf	__div_to_l_@f2+3,w
  6772     0162  1C03               	skipc
  6773     0163  0F77               	incfsz	__div_to_l_@f2+3,w
  6774     0164  02F3               	subwf	__div_to_l_@f1+3,f
  6775     0165                     l3298:
  6776     0165  1420               	bsf	__div_to_l_@quot,0
  6777     0166                     l3300:
  6778     0166  3001               	movlw	1
  6779     0167  00F8               	movwf	??__div_to_l_
  6780     0168                     u5055:
  6781     0168  1003               	clrc
  6782     0169  0DF0               	rlf	__div_to_l_@f1,f
  6783     016A  0DF1               	rlf	__div_to_l_@f1+1,f
  6784     016B  0DF2               	rlf	__div_to_l_@f1+2,f
  6785     016C  0DF3               	rlf	__div_to_l_@f1+3,f
  6786     016D  0BF8               	decfsz	??__div_to_l_,f
  6787     016E  2968               	goto	u5055
  6788     016F                     l3302:
  6789     016F  3001               	movlw	1
  6790     0170  02A4               	subwf	__div_to_l_@cntr,f
  6791     0171  1D03               	btfss	3,2
  6792     0172  2974               	goto	u5061
  6793     0173  2975               	goto	u5060
  6794     0174                     u5061:
  6795     0174  293C               	goto	l3292
  6796     0175                     u5060:
  6797     0175                     l607:
  6798     0175  1FA5               	btfss	__div_to_l_@exp1,7
  6799     0176  2978               	goto	u5071
  6800     0177  2979               	goto	u5070
  6801     0178                     u5071:
  6802     0178  2993               	goto	l3312
  6803     0179                     u5070:
  6804     0179                     l3304:
  6805     0179  0825               	movf	__div_to_l_@exp1,w
  6806     017A  3A80               	xorlw	128
  6807     017B  3E9F               	addlw	159
  6808     017C  1803               	skipnc
  6809     017D  297F               	goto	u5081
  6810     017E  2980               	goto	u5080
  6811     017F                     u5081:
  6812     017F  2981               	goto	l3310
  6813     0180                     u5080:
  6814     0180  2906               	goto	l3274
  6815     0181                     l3310:
  6816     0181  3001               	movlw	1
  6817     0182                     u5095:
  6818     0182  1003               	clrc
  6819     0183  0CA3               	rrf	__div_to_l_@quot+3,f
  6820     0184  0CA2               	rrf	__div_to_l_@quot+2,f
  6821     0185  0CA1               	rrf	__div_to_l_@quot+1,f
  6822     0186  0CA0               	rrf	__div_to_l_@quot,f
  6823     0187  3EFF               	addlw	-1
  6824     0188  1D03               	skipz
  6825     0189  2982               	goto	u5095
  6826     018A  3001               	movlw	1
  6827     018B  00F8               	movwf	??__div_to_l_
  6828     018C  0878               	movf	??__div_to_l_,w
  6829     018D  07A5               	addwf	__div_to_l_@exp1,f
  6830     018E  1D03               	btfss	3,2
  6831     018F  2991               	goto	u5101
  6832     0190  2992               	goto	u5100
  6833     0191                     u5101:
  6834     0191  2981               	goto	l3310
  6835     0192                     u5100:
  6836     0192  29AA               	goto	l3320
  6837     0193                     l3312:
  6838     0193  3020               	movlw	32
  6839     0194  0225               	subwf	__div_to_l_@exp1,w
  6840     0195  1C03               	skipc
  6841     0196  2998               	goto	u5111
  6842     0197  2999               	goto	u5110
  6843     0198                     u5111:
  6844     0198  29A5               	goto	l614
  6845     0199                     u5110:
  6846     0199  2906               	goto	l3274
  6847     019A                     l3318:
  6848     019A  3001               	movlw	1
  6849     019B  00F8               	movwf	??__div_to_l_
  6850     019C                     u5125:
  6851     019C  1003               	clrc
  6852     019D  0DA0               	rlf	__div_to_l_@quot,f
  6853     019E  0DA1               	rlf	__div_to_l_@quot+1,f
  6854     019F  0DA2               	rlf	__div_to_l_@quot+2,f
  6855     01A0  0DA3               	rlf	__div_to_l_@quot+3,f
  6856     01A1  0BF8               	decfsz	??__div_to_l_,f
  6857     01A2  299C               	goto	u5125
  6858     01A3  3001               	movlw	1
  6859     01A4  02A5               	subwf	__div_to_l_@exp1,f
  6860     01A5                     l614:
  6861     01A5  0825               	movf	__div_to_l_@exp1,w
  6862     01A6  1D03               	btfss	3,2
  6863     01A7  29A9               	goto	u5131
  6864     01A8  29AA               	goto	u5130
  6865     01A9                     u5131:
  6866     01A9  299A               	goto	l3318
  6867     01AA                     u5130:
  6868     01AA                     l3320:
  6869     01AA  0823               	movf	__div_to_l_@quot+3,w
  6870     01AB  00F3               	movwf	?__div_to_l_+3
  6871     01AC  0822               	movf	__div_to_l_@quot+2,w
  6872     01AD  00F2               	movwf	?__div_to_l_+2
  6873     01AE  0821               	movf	__div_to_l_@quot+1,w
  6874     01AF  00F1               	movwf	?__div_to_l_+1
  6875     01B0  0820               	movf	__div_to_l_@quot,w
  6876     01B1  00F0               	movwf	?__div_to_l_
  6877     01B2                     l603:
  6878     01B2  0008               	return
  6879     01B3                     __end_of__div_to_l_:
  6880                           
  6881                           	psect	text9
  6882     08A4                     __ptext9:	
  6883 ;; *************** function ___xxtofl *****************
  6884 ;; Defined at:
  6885 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  sign            1    wreg     unsigned char 
  6888 ;;  val             4    0[COMMON] long 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  sign            1    8[COMMON] unsigned char 
  6891 ;;  arg             4   10[COMMON] unsigned long 
  6892 ;;  exp             1    9[COMMON] unsigned char 
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  4    0[COMMON] unsigned char 
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6902 ;;      Params:         4       0       0       0       0
  6903 ;;      Locals:         6       0       0       0       0
  6904 ;;      Temps:          4       0       0       0       0
  6905 ;;      Totals:        14       0       0       0       0
  6906 ;;Total ram usage:       14 bytes
  6907 ;; Hardware stack levels used: 1
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		_main
  6912 ;;		_sprintf
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916     08A4                     ___xxtofl:	
  6917                           ;psect for function ___xxtofl
  6918                           
  6919                           
  6920                           ;incstack = 0
  6921                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6922                           ;___xxtofl@sign stored from wreg
  6923     08A4  00F8               	movwf	___xxtofl@sign
  6924     08A5                     l3464:
  6925     08A5  0878               	movf	___xxtofl@sign,w
  6926     08A6  1903               	btfsc	3,2
  6927     08A7  28A9               	goto	u5521
  6928     08A8  28AA               	goto	u5520
  6929     08A9                     u5521:
  6930     08A9  28BE               	goto	l3470
  6931     08AA                     u5520:
  6932     08AA                     l3466:
  6933     08AA  1FF3               	btfss	___xxtofl@val+3,7
  6934     08AB  28AD               	goto	u5531
  6935     08AC  28AE               	goto	u5530
  6936     08AD                     u5531:
  6937     08AD  28BE               	goto	l3470
  6938     08AE                     u5530:
  6939     08AE                     l3468:
  6940     08AE  0970               	comf	___xxtofl@val,w
  6941     08AF  00FA               	movwf	___xxtofl@arg
  6942     08B0  0971               	comf	___xxtofl@val+1,w
  6943     08B1  00FB               	movwf	___xxtofl@arg+1
  6944     08B2  0972               	comf	___xxtofl@val+2,w
  6945     08B3  00FC               	movwf	___xxtofl@arg+2
  6946     08B4  0973               	comf	___xxtofl@val+3,w
  6947     08B5  00FD               	movwf	___xxtofl@arg+3
  6948     08B6  0AFA               	incf	___xxtofl@arg,f
  6949     08B7  1903               	skipnz
  6950     08B8  0AFB               	incf	___xxtofl@arg+1,f
  6951     08B9  1903               	skipnz
  6952     08BA  0AFC               	incf	___xxtofl@arg+2,f
  6953     08BB  1903               	skipnz
  6954     08BC  0AFD               	incf	___xxtofl@arg+3,f
  6955     08BD  28C6               	goto	l900
  6956     08BE                     l3470:
  6957     08BE  0873               	movf	___xxtofl@val+3,w
  6958     08BF  00FD               	movwf	___xxtofl@arg+3
  6959     08C0  0872               	movf	___xxtofl@val+2,w
  6960     08C1  00FC               	movwf	___xxtofl@arg+2
  6961     08C2  0871               	movf	___xxtofl@val+1,w
  6962     08C3  00FB               	movwf	___xxtofl@arg+1
  6963     08C4  0870               	movf	___xxtofl@val,w
  6964     08C5  00FA               	movwf	___xxtofl@arg
  6965     08C6                     l900:
  6966     08C6  0873               	movf	___xxtofl@val+3,w
  6967     08C7  0472               	iorwf	___xxtofl@val+2,w
  6968     08C8  0471               	iorwf	___xxtofl@val+1,w
  6969     08C9  0470               	iorwf	___xxtofl@val,w
  6970     08CA  1D03               	skipz
  6971     08CB  28CD               	goto	u5541
  6972     08CC  28CE               	goto	u5540
  6973     08CD                     u5541:
  6974     08CD  28D7               	goto	l3476
  6975     08CE                     u5540:
  6976     08CE                     l3472:
  6977     08CE  3000               	movlw	0
  6978     08CF  00F3               	movwf	?___xxtofl+3
  6979     08D0  3000               	movlw	0
  6980     08D1  00F2               	movwf	?___xxtofl+2
  6981     08D2  3000               	movlw	0
  6982     08D3  00F1               	movwf	?___xxtofl+1
  6983     08D4  3000               	movlw	0
  6984     08D5  00F0               	movwf	?___xxtofl
  6985     08D6  295B               	goto	l902
  6986     08D7                     l3476:
  6987     08D7  3096               	movlw	150
  6988     08D8  00F9               	movwf	___xxtofl@exp
  6989     08D9  28E7               	goto	l3480
  6990     08DA                     l3478:
  6991     08DA  3001               	movlw	1
  6992     08DB  00F4               	movwf	??___xxtofl
  6993     08DC  0874               	movf	??___xxtofl,w
  6994     08DD  07F9               	addwf	___xxtofl@exp,f
  6995     08DE  3001               	movlw	1
  6996     08DF                     u5555:
  6997     08DF  1003               	clrc
  6998     08E0  0CFD               	rrf	___xxtofl@arg+3,f
  6999     08E1  0CFC               	rrf	___xxtofl@arg+2,f
  7000     08E2  0CFB               	rrf	___xxtofl@arg+1,f
  7001     08E3  0CFA               	rrf	___xxtofl@arg,f
  7002     08E4  3EFF               	addlw	-1
  7003     08E5  1D03               	skipz
  7004     08E6  28DF               	goto	u5555
  7005     08E7                     l3480:
  7006     08E7  30FE               	movlw	254
  7007     08E8  057D               	andwf	___xxtofl@arg+3,w
  7008     08E9  1D03               	btfss	3,2
  7009     08EA  28EC               	goto	u5561
  7010     08EB  28ED               	goto	u5560
  7011     08EC                     u5561:
  7012     08EC  28DA               	goto	l3478
  7013     08ED                     u5560:
  7014     08ED  2909               	goto	l906
  7015     08EE                     l3482:
  7016     08EE  3001               	movlw	1
  7017     08EF  00F4               	movwf	??___xxtofl
  7018     08F0  0874               	movf	??___xxtofl,w
  7019     08F1  07F9               	addwf	___xxtofl@exp,f
  7020     08F2                     l3484:
  7021     08F2  3001               	movlw	1
  7022     08F3  07FA               	addwf	___xxtofl@arg,f
  7023     08F4  3000               	movlw	0
  7024     08F5  1803               	skipnc
  7025     08F6  3001               	movlw	1
  7026     08F7  07FB               	addwf	___xxtofl@arg+1,f
  7027     08F8  3000               	movlw	0
  7028     08F9  1803               	skipnc
  7029     08FA  3001               	movlw	1
  7030     08FB  07FC               	addwf	___xxtofl@arg+2,f
  7031     08FC  3000               	movlw	0
  7032     08FD  1803               	skipnc
  7033     08FE  3001               	movlw	1
  7034     08FF  07FD               	addwf	___xxtofl@arg+3,f
  7035     0900                     l3486:
  7036     0900  3001               	movlw	1
  7037     0901                     u5575:
  7038     0901  1003               	clrc
  7039     0902  0CFD               	rrf	___xxtofl@arg+3,f
  7040     0903  0CFC               	rrf	___xxtofl@arg+2,f
  7041     0904  0CFB               	rrf	___xxtofl@arg+1,f
  7042     0905  0CFA               	rrf	___xxtofl@arg,f
  7043     0906  3EFF               	addlw	-1
  7044     0907  1D03               	skipz
  7045     0908  2901               	goto	u5575
  7046     0909                     l906:
  7047     0909  30FF               	movlw	255
  7048     090A  057D               	andwf	___xxtofl@arg+3,w
  7049     090B  1D03               	btfss	3,2
  7050     090C  290E               	goto	u5581
  7051     090D  290F               	goto	u5580
  7052     090E                     u5581:
  7053     090E  28EE               	goto	l3482
  7054     090F                     u5580:
  7055     090F  291B               	goto	l3490
  7056     0910                     l3488:
  7057     0910  3001               	movlw	1
  7058     0911  02F9               	subwf	___xxtofl@exp,f
  7059     0912  3001               	movlw	1
  7060     0913  00F4               	movwf	??___xxtofl
  7061     0914                     u5595:
  7062     0914  1003               	clrc
  7063     0915  0DFA               	rlf	___xxtofl@arg,f
  7064     0916  0DFB               	rlf	___xxtofl@arg+1,f
  7065     0917  0DFC               	rlf	___xxtofl@arg+2,f
  7066     0918  0DFD               	rlf	___xxtofl@arg+3,f
  7067     0919  0BF4               	decfsz	??___xxtofl,f
  7068     091A  2914               	goto	u5595
  7069     091B                     l3490:
  7070     091B  1BFC               	btfsc	___xxtofl@arg+2,7
  7071     091C  291E               	goto	u5601
  7072     091D  291F               	goto	u5600
  7073     091E                     u5601:
  7074     091E  2925               	goto	l913
  7075     091F                     u5600:
  7076     091F                     l3492:
  7077     091F  3002               	movlw	2
  7078     0920  0279               	subwf	___xxtofl@exp,w
  7079     0921  1803               	skipnc
  7080     0922  2924               	goto	u5611
  7081     0923  2925               	goto	u5610
  7082     0924                     u5611:
  7083     0924  2910               	goto	l3488
  7084     0925                     u5610:
  7085     0925                     l913:
  7086     0925  1879               	btfsc	___xxtofl@exp,0
  7087     0926  2928               	goto	u5621
  7088     0927  2929               	goto	u5620
  7089     0928                     u5621:
  7090     0928  2931               	goto	l914
  7091     0929                     u5620:
  7092     0929                     l3494:
  7093     0929  30FF               	movlw	255
  7094     092A  05FA               	andwf	___xxtofl@arg,f
  7095     092B  30FF               	movlw	255
  7096     092C  05FB               	andwf	___xxtofl@arg+1,f
  7097     092D  307F               	movlw	127
  7098     092E  05FC               	andwf	___xxtofl@arg+2,f
  7099     092F  30FF               	movlw	255
  7100     0930  05FD               	andwf	___xxtofl@arg+3,f
  7101     0931                     l914:
  7102     0931  1003               	clrc
  7103     0932  0CF9               	rrf	___xxtofl@exp,f
  7104     0933                     l3496:
  7105     0933  0879               	movf	___xxtofl@exp,w
  7106     0934  00F4               	movwf	??___xxtofl
  7107     0935  01F5               	clrf	??___xxtofl+1
  7108     0936  01F6               	clrf	??___xxtofl+2
  7109     0937  01F7               	clrf	??___xxtofl+3
  7110     0938  3018               	movlw	24
  7111     0939                     u5635:
  7112     0939  1003               	clrc
  7113     093A  0DF4               	rlf	??___xxtofl,f
  7114     093B  0DF5               	rlf	??___xxtofl+1,f
  7115     093C  0DF6               	rlf	??___xxtofl+2,f
  7116     093D  0DF7               	rlf	??___xxtofl+3,f
  7117     093E                     u5630:
  7118     093E  3EFF               	addlw	-1
  7119     093F  1D03               	skipz
  7120     0940  2939               	goto	u5635
  7121     0941  0874               	movf	??___xxtofl,w
  7122     0942  04FA               	iorwf	___xxtofl@arg,f
  7123     0943  0875               	movf	??___xxtofl+1,w
  7124     0944  04FB               	iorwf	___xxtofl@arg+1,f
  7125     0945  0876               	movf	??___xxtofl+2,w
  7126     0946  04FC               	iorwf	___xxtofl@arg+2,f
  7127     0947  0877               	movf	??___xxtofl+3,w
  7128     0948  04FD               	iorwf	___xxtofl@arg+3,f
  7129     0949                     l3498:
  7130     0949  0878               	movf	___xxtofl@sign,w
  7131     094A  1903               	btfsc	3,2
  7132     094B  294D               	goto	u5641
  7133     094C  294E               	goto	u5640
  7134     094D                     u5641:
  7135     094D  2953               	goto	l3504
  7136     094E                     u5640:
  7137     094E                     l3500:
  7138     094E  1FF3               	btfss	___xxtofl@val+3,7
  7139     094F  2951               	goto	u5651
  7140     0950  2952               	goto	u5650
  7141     0951                     u5651:
  7142     0951  2953               	goto	l3504
  7143     0952                     u5650:
  7144     0952                     l3502:
  7145     0952  17FD               	bsf	___xxtofl@arg+3,7
  7146     0953                     l3504:
  7147     0953  087D               	movf	___xxtofl@arg+3,w
  7148     0954  00F3               	movwf	?___xxtofl+3
  7149     0955  087C               	movf	___xxtofl@arg+2,w
  7150     0956  00F2               	movwf	?___xxtofl+2
  7151     0957  087B               	movf	___xxtofl@arg+1,w
  7152     0958  00F1               	movwf	?___xxtofl+1
  7153     0959  087A               	movf	___xxtofl@arg,w
  7154     095A  00F0               	movwf	?___xxtofl
  7155     095B                     l902:
  7156     095B  0008               	return
  7157     095C                     __end_of___xxtofl:
  7158                           
  7159                           	psect	text10
  7160     19A4                     __ptext10:	
  7161 ;; *************** function ___wmul *****************
  7162 ;; Defined at:
  7163 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  multiplier      2    0[COMMON] unsigned int 
  7166 ;;  multiplicand    2    2[COMMON] unsigned int 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  product         2    4[COMMON] unsigned int 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  2    0[COMMON] unsigned int 
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7178 ;;      Params:         4       0       0       0       0
  7179 ;;      Locals:         2       0       0       0       0
  7180 ;;      Temps:          0       0       0       0       0
  7181 ;;      Totals:         6       0       0       0       0
  7182 ;;Total ram usage:        6 bytes
  7183 ;; Hardware stack levels used: 1
  7184 ;; This function calls:
  7185 ;;		Nothing
  7186 ;; This function is called by:
  7187 ;;		_sprintf
  7188 ;;		_convint
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192     19A4                     ___wmul:	
  7193                           ;psect for function ___wmul
  7194                           
  7195     19A4                     l3324:	
  7196                           ;incstack = 0
  7197                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7198                           
  7199     19A4  01F4               	clrf	___wmul@product
  7200     19A5  01F5               	clrf	___wmul@product+1
  7201     19A6                     l3326:
  7202     19A6  1C70               	btfss	___wmul@multiplier,0
  7203     19A7  29A9               	goto	u5141
  7204     19A8  29AA               	goto	u5140
  7205     19A9                     u5141:
  7206     19A9  29B0               	goto	l433
  7207     19AA                     u5140:
  7208     19AA                     l3328:
  7209     19AA  0872               	movf	___wmul@multiplicand,w
  7210     19AB  07F4               	addwf	___wmul@product,f
  7211     19AC  1803               	skipnc
  7212     19AD  0AF5               	incf	___wmul@product+1,f
  7213     19AE  0873               	movf	___wmul@multiplicand+1,w
  7214     19AF  07F5               	addwf	___wmul@product+1,f
  7215     19B0                     l433:
  7216     19B0  3001               	movlw	1
  7217     19B1                     u5155:
  7218     19B1  1003               	clrc
  7219     19B2  0DF2               	rlf	___wmul@multiplicand,f
  7220     19B3  0DF3               	rlf	___wmul@multiplicand+1,f
  7221     19B4  3EFF               	addlw	-1
  7222     19B5  1D03               	skipz
  7223     19B6  29B1               	goto	u5155
  7224     19B7                     l3330:
  7225     19B7  3001               	movlw	1
  7226     19B8                     u5165:
  7227     19B8  1003               	clrc
  7228     19B9  0CF1               	rrf	___wmul@multiplier+1,f
  7229     19BA  0CF0               	rrf	___wmul@multiplier,f
  7230     19BB  3EFF               	addlw	-1
  7231     19BC  1D03               	skipz
  7232     19BD  29B8               	goto	u5165
  7233     19BE                     l3332:
  7234     19BE  0870               	movf	___wmul@multiplier,w
  7235     19BF  0471               	iorwf	___wmul@multiplier+1,w
  7236     19C0  1D03               	btfss	3,2
  7237     19C1  29C3               	goto	u5171
  7238     19C2  29C4               	goto	u5170
  7239     19C3                     u5171:
  7240     19C3  29A6               	goto	l3326
  7241     19C4                     u5170:
  7242     19C4                     l3334:
  7243     19C4  0875               	movf	___wmul@product+1,w
  7244     19C5  00F1               	movwf	?___wmul+1
  7245     19C6  0874               	movf	___wmul@product,w
  7246     19C7  00F0               	movwf	?___wmul
  7247     19C8                     l435:
  7248     19C8  0008               	return
  7249     19C9                     __end_of___wmul:
  7250                           
  7251                           	psect	text11
  7252     1B94                     __ptext11:	
  7253 ;; *************** function ___llmod *****************
  7254 ;; Defined at:
  7255 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  divisor         4    0[COMMON] unsigned long 
  7258 ;;  dividend        4    4[COMMON] unsigned long 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;  counter         1    9[COMMON] unsigned char 
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  4    0[COMMON] unsigned long 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7270 ;;      Params:         8       0       0       0       0
  7271 ;;      Locals:         1       0       0       0       0
  7272 ;;      Temps:          1       0       0       0       0
  7273 ;;      Totals:        10       0       0       0       0
  7274 ;;Total ram usage:       10 bytes
  7275 ;; Hardware stack levels used: 1
  7276 ;; This function calls:
  7277 ;;		Nothing
  7278 ;; This function is called by:
  7279 ;;		_sprintf
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283     1B94                     ___llmod:	
  7284                           ;psect for function ___llmod
  7285                           
  7286     1B94                     l3438:	
  7287                           ;incstack = 0
  7288                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7289                           
  7290     1B94  0873               	movf	___llmod@divisor+3,w
  7291     1B95  0472               	iorwf	___llmod@divisor+2,w
  7292     1B96  0471               	iorwf	___llmod@divisor+1,w
  7293     1B97  0470               	iorwf	___llmod@divisor,w
  7294     1B98  1903               	skipnz
  7295     1B99  2B9B               	goto	u5461
  7296     1B9A  2B9C               	goto	u5460
  7297     1B9B                     u5461:
  7298     1B9B  2BDF               	goto	l3454
  7299     1B9C                     u5460:
  7300     1B9C                     l3440:
  7301     1B9C  01F9               	clrf	___llmod@counter
  7302     1B9D  0AF9               	incf	___llmod@counter,f
  7303     1B9E  2BAC               	goto	l3444
  7304     1B9F                     l3442:
  7305     1B9F  3001               	movlw	1
  7306     1BA0  00F8               	movwf	??___llmod
  7307     1BA1                     u5475:
  7308     1BA1  1003               	clrc
  7309     1BA2  0DF0               	rlf	___llmod@divisor,f
  7310     1BA3  0DF1               	rlf	___llmod@divisor+1,f
  7311     1BA4  0DF2               	rlf	___llmod@divisor+2,f
  7312     1BA5  0DF3               	rlf	___llmod@divisor+3,f
  7313     1BA6  0BF8               	decfsz	??___llmod,f
  7314     1BA7  2BA1               	goto	u5475
  7315     1BA8  3001               	movlw	1
  7316     1BA9  00F8               	movwf	??___llmod
  7317     1BAA  0878               	movf	??___llmod,w
  7318     1BAB  07F9               	addwf	___llmod@counter,f
  7319     1BAC                     l3444:
  7320     1BAC  1FF3               	btfss	___llmod@divisor+3,7
  7321     1BAD  2BAF               	goto	u5481
  7322     1BAE  2BB0               	goto	u5480
  7323     1BAF                     u5481:
  7324     1BAF  2B9F               	goto	l3442
  7325     1BB0                     u5480:
  7326     1BB0                     l3446:
  7327     1BB0  0873               	movf	___llmod@divisor+3,w
  7328     1BB1  0277               	subwf	___llmod@dividend+3,w
  7329     1BB2  1D03               	skipz
  7330     1BB3  2BBE               	goto	u5495
  7331     1BB4  0872               	movf	___llmod@divisor+2,w
  7332     1BB5  0276               	subwf	___llmod@dividend+2,w
  7333     1BB6  1D03               	skipz
  7334     1BB7  2BBE               	goto	u5495
  7335     1BB8  0871               	movf	___llmod@divisor+1,w
  7336     1BB9  0275               	subwf	___llmod@dividend+1,w
  7337     1BBA  1D03               	skipz
  7338     1BBB  2BBE               	goto	u5495
  7339     1BBC  0870               	movf	___llmod@divisor,w
  7340     1BBD  0274               	subwf	___llmod@dividend,w
  7341     1BBE                     u5495:
  7342     1BBE  1C03               	skipc
  7343     1BBF  2BC1               	goto	u5491
  7344     1BC0  2BC2               	goto	u5490
  7345     1BC1                     u5491:
  7346     1BC1  2BD0               	goto	l3450
  7347     1BC2                     u5490:
  7348     1BC2                     l3448:
  7349     1BC2  0870               	movf	___llmod@divisor,w
  7350     1BC3  02F4               	subwf	___llmod@dividend,f
  7351     1BC4  0871               	movf	___llmod@divisor+1,w
  7352     1BC5  1C03               	skipc
  7353     1BC6  0F71               	incfsz	___llmod@divisor+1,w
  7354     1BC7  02F5               	subwf	___llmod@dividend+1,f
  7355     1BC8  0872               	movf	___llmod@divisor+2,w
  7356     1BC9  1C03               	skipc
  7357     1BCA  0F72               	incfsz	___llmod@divisor+2,w
  7358     1BCB  02F6               	subwf	___llmod@dividend+2,f
  7359     1BCC  0873               	movf	___llmod@divisor+3,w
  7360     1BCD  1C03               	skipc
  7361     1BCE  0F73               	incfsz	___llmod@divisor+3,w
  7362     1BCF  02F7               	subwf	___llmod@dividend+3,f
  7363     1BD0                     l3450:
  7364     1BD0  3001               	movlw	1
  7365     1BD1                     u5505:
  7366     1BD1  1003               	clrc
  7367     1BD2  0CF3               	rrf	___llmod@divisor+3,f
  7368     1BD3  0CF2               	rrf	___llmod@divisor+2,f
  7369     1BD4  0CF1               	rrf	___llmod@divisor+1,f
  7370     1BD5  0CF0               	rrf	___llmod@divisor,f
  7371     1BD6  3EFF               	addlw	-1
  7372     1BD7  1D03               	skipz
  7373     1BD8  2BD1               	goto	u5505
  7374     1BD9                     l3452:
  7375     1BD9  3001               	movlw	1
  7376     1BDA  02F9               	subwf	___llmod@counter,f
  7377     1BDB  1D03               	btfss	3,2
  7378     1BDC  2BDE               	goto	u5511
  7379     1BDD  2BDF               	goto	u5510
  7380     1BDE                     u5511:
  7381     1BDE  2BB0               	goto	l3446
  7382     1BDF                     u5510:
  7383     1BDF                     l3454:
  7384     1BDF  0877               	movf	___llmod@dividend+3,w
  7385     1BE0  00F3               	movwf	?___llmod+3
  7386     1BE1  0876               	movf	___llmod@dividend+2,w
  7387     1BE2  00F2               	movwf	?___llmod+2
  7388     1BE3  0875               	movf	___llmod@dividend+1,w
  7389     1BE4  00F1               	movwf	?___llmod+1
  7390     1BE5  0874               	movf	___llmod@dividend,w
  7391     1BE6  00F0               	movwf	?___llmod
  7392     1BE7                     l689:
  7393     1BE7  0008               	return
  7394     1BE8                     __end_of___llmod:
  7395                           
  7396                           	psect	text12
  7397     1D5E                     __ptext12:	
  7398 ;; *************** function ___lldiv *****************
  7399 ;; Defined at:
  7400 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  divisor         4    0[COMMON] unsigned long 
  7403 ;;  dividend        4    4[COMMON] unsigned long 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;  quotient        4    9[COMMON] unsigned long 
  7406 ;;  counter         1   13[COMMON] unsigned char 
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  4    0[COMMON] unsigned long 
  7409 ;; Registers used:
  7410 ;;		wreg, status,2, status,0
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7416 ;;      Params:         8       0       0       0       0
  7417 ;;      Locals:         5       0       0       0       0
  7418 ;;      Temps:          1       0       0       0       0
  7419 ;;      Totals:        14       0       0       0       0
  7420 ;;Total ram usage:       14 bytes
  7421 ;; Hardware stack levels used: 1
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_sprintf
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429     1D5E                     ___lldiv:	
  7430                           ;psect for function ___lldiv
  7431                           
  7432     1D5E                     l3338:	
  7433                           ;incstack = 0
  7434                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7435                           
  7436     1D5E  3000               	movlw	0
  7437     1D5F  00FC               	movwf	___lldiv@quotient+3
  7438     1D60  3000               	movlw	0
  7439     1D61  00FB               	movwf	___lldiv@quotient+2
  7440     1D62  3000               	movlw	0
  7441     1D63  00FA               	movwf	___lldiv@quotient+1
  7442     1D64  3000               	movlw	0
  7443     1D65  00F9               	movwf	___lldiv@quotient
  7444     1D66  0873               	movf	___lldiv@divisor+3,w
  7445     1D67  0472               	iorwf	___lldiv@divisor+2,w
  7446     1D68  0471               	iorwf	___lldiv@divisor+1,w
  7447     1D69  0470               	iorwf	___lldiv@divisor,w
  7448     1D6A  1903               	skipnz
  7449     1D6B  2D6D               	goto	u5181
  7450     1D6C  2D6E               	goto	u5180
  7451     1D6D                     u5181:
  7452     1D6D  2DBB               	goto	l3358
  7453     1D6E                     u5180:
  7454     1D6E                     l3340:
  7455     1D6E  01FD               	clrf	___lldiv@counter
  7456     1D6F  0AFD               	incf	___lldiv@counter,f
  7457     1D70  2D7E               	goto	l3344
  7458     1D71                     l3342:
  7459     1D71  3001               	movlw	1
  7460     1D72  00F8               	movwf	??___lldiv
  7461     1D73                     u5195:
  7462     1D73  1003               	clrc
  7463     1D74  0DF0               	rlf	___lldiv@divisor,f
  7464     1D75  0DF1               	rlf	___lldiv@divisor+1,f
  7465     1D76  0DF2               	rlf	___lldiv@divisor+2,f
  7466     1D77  0DF3               	rlf	___lldiv@divisor+3,f
  7467     1D78  0BF8               	decfsz	??___lldiv,f
  7468     1D79  2D73               	goto	u5195
  7469     1D7A  3001               	movlw	1
  7470     1D7B  00F8               	movwf	??___lldiv
  7471     1D7C  0878               	movf	??___lldiv,w
  7472     1D7D  07FD               	addwf	___lldiv@counter,f
  7473     1D7E                     l3344:
  7474     1D7E  1FF3               	btfss	___lldiv@divisor+3,7
  7475     1D7F  2D81               	goto	u5201
  7476     1D80  2D82               	goto	u5200
  7477     1D81                     u5201:
  7478     1D81  2D71               	goto	l3342
  7479     1D82                     u5200:
  7480     1D82                     l3346:
  7481     1D82  3001               	movlw	1
  7482     1D83  00F8               	movwf	??___lldiv
  7483     1D84                     u5215:
  7484     1D84  1003               	clrc
  7485     1D85  0DF9               	rlf	___lldiv@quotient,f
  7486     1D86  0DFA               	rlf	___lldiv@quotient+1,f
  7487     1D87  0DFB               	rlf	___lldiv@quotient+2,f
  7488     1D88  0DFC               	rlf	___lldiv@quotient+3,f
  7489     1D89  0BF8               	decfsz	??___lldiv,f
  7490     1D8A  2D84               	goto	u5215
  7491     1D8B                     l3348:
  7492     1D8B  0873               	movf	___lldiv@divisor+3,w
  7493     1D8C  0277               	subwf	___lldiv@dividend+3,w
  7494     1D8D  1D03               	skipz
  7495     1D8E  2D99               	goto	u5225
  7496     1D8F  0872               	movf	___lldiv@divisor+2,w
  7497     1D90  0276               	subwf	___lldiv@dividend+2,w
  7498     1D91  1D03               	skipz
  7499     1D92  2D99               	goto	u5225
  7500     1D93  0871               	movf	___lldiv@divisor+1,w
  7501     1D94  0275               	subwf	___lldiv@dividend+1,w
  7502     1D95  1D03               	skipz
  7503     1D96  2D99               	goto	u5225
  7504     1D97  0870               	movf	___lldiv@divisor,w
  7505     1D98  0274               	subwf	___lldiv@dividend,w
  7506     1D99                     u5225:
  7507     1D99  1C03               	skipc
  7508     1D9A  2D9C               	goto	u5221
  7509     1D9B  2D9D               	goto	u5220
  7510     1D9C                     u5221:
  7511     1D9C  2DAC               	goto	l3354
  7512     1D9D                     u5220:
  7513     1D9D                     l3350:
  7514     1D9D  0870               	movf	___lldiv@divisor,w
  7515     1D9E  02F4               	subwf	___lldiv@dividend,f
  7516     1D9F  0871               	movf	___lldiv@divisor+1,w
  7517     1DA0  1C03               	skipc
  7518     1DA1  0F71               	incfsz	___lldiv@divisor+1,w
  7519     1DA2  02F5               	subwf	___lldiv@dividend+1,f
  7520     1DA3  0872               	movf	___lldiv@divisor+2,w
  7521     1DA4  1C03               	skipc
  7522     1DA5  0F72               	incfsz	___lldiv@divisor+2,w
  7523     1DA6  02F6               	subwf	___lldiv@dividend+2,f
  7524     1DA7  0873               	movf	___lldiv@divisor+3,w
  7525     1DA8  1C03               	skipc
  7526     1DA9  0F73               	incfsz	___lldiv@divisor+3,w
  7527     1DAA  02F7               	subwf	___lldiv@dividend+3,f
  7528     1DAB                     l3352:
  7529     1DAB  1479               	bsf	___lldiv@quotient,0
  7530     1DAC                     l3354:
  7531     1DAC  3001               	movlw	1
  7532     1DAD                     u5235:
  7533     1DAD  1003               	clrc
  7534     1DAE  0CF3               	rrf	___lldiv@divisor+3,f
  7535     1DAF  0CF2               	rrf	___lldiv@divisor+2,f
  7536     1DB0  0CF1               	rrf	___lldiv@divisor+1,f
  7537     1DB1  0CF0               	rrf	___lldiv@divisor,f
  7538     1DB2  3EFF               	addlw	-1
  7539     1DB3  1D03               	skipz
  7540     1DB4  2DAD               	goto	u5235
  7541     1DB5                     l3356:
  7542     1DB5  3001               	movlw	1
  7543     1DB6  02FD               	subwf	___lldiv@counter,f
  7544     1DB7  1D03               	btfss	3,2
  7545     1DB8  2DBA               	goto	u5241
  7546     1DB9  2DBB               	goto	u5240
  7547     1DBA                     u5241:
  7548     1DBA  2D82               	goto	l3346
  7549     1DBB                     u5240:
  7550     1DBB                     l3358:
  7551     1DBB  087C               	movf	___lldiv@quotient+3,w
  7552     1DBC  00F3               	movwf	?___lldiv+3
  7553     1DBD  087B               	movf	___lldiv@quotient+2,w
  7554     1DBE  00F2               	movwf	?___lldiv+2
  7555     1DBF  087A               	movf	___lldiv@quotient+1,w
  7556     1DC0  00F1               	movwf	?___lldiv+1
  7557     1DC1  0879               	movf	___lldiv@quotient,w
  7558     1DC2  00F0               	movwf	?___lldiv
  7559     1DC3                     l469:
  7560     1DC3  0008               	return
  7561     1DC4                     __end_of___lldiv:
  7562                           
  7563                           	psect	text13
  7564     1014                     __ptext13:	
  7565 ;; *************** function ___fltol *****************
  7566 ;; Defined at:
  7567 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  f1              4   49[BANK0 ] unsigned long 
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;  exp1            1   58[BANK0 ] unsigned char 
  7572 ;;  sign1           1   57[BANK0 ] unsigned char 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  4   49[BANK0 ] long 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2, status,0
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7582 ;;      Params:         0       4       0       0       0
  7583 ;;      Locals:         0       2       0       0       0
  7584 ;;      Temps:          0       4       0       0       0
  7585 ;;      Totals:         0      10       0       0       0
  7586 ;;Total ram usage:       10 bytes
  7587 ;; Hardware stack levels used: 1
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_sprintf
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595     1014                     ___fltol:	
  7596                           ;psect for function ___fltol
  7597                           
  7598     1014                     l3402:	
  7599                           ;incstack = 0
  7600                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7601                           
  7602     1014  1003               	clrc
  7603     1015  1283               	bcf	3,5	;RP0=0, select bank0
  7604     1016  1303               	bcf	3,6	;RP1=0, select bank0
  7605     1017  0D53               	rlf	___fltol@f1+2,w
  7606     1018  0D54               	rlf	___fltol@f1+3,w
  7607     1019  00DA               	movwf	___fltol@exp1
  7608     101A  085A               	movf	___fltol@exp1,w
  7609     101B  1D03               	btfss	3,2
  7610     101C  281E               	goto	u5361
  7611     101D  281F               	goto	u5360
  7612     101E                     u5361:
  7613     101E  2828               	goto	l3408
  7614     101F                     u5360:
  7615     101F                     l3404:
  7616     101F  3000               	movlw	0
  7617     1020  00D4               	movwf	?___fltol+3
  7618     1021  3000               	movlw	0
  7619     1022  00D3               	movwf	?___fltol+2
  7620     1023  3000               	movlw	0
  7621     1024  00D2               	movwf	?___fltol+1
  7622     1025  3000               	movlw	0
  7623     1026  00D1               	movwf	?___fltol
  7624     1027  288B               	goto	l636
  7625     1028                     l3408:
  7626     1028  0851               	movf	___fltol@f1,w
  7627     1029  00D5               	movwf	??___fltol
  7628     102A  0852               	movf	___fltol@f1+1,w
  7629     102B  00D6               	movwf	??___fltol+1
  7630     102C  0853               	movf	___fltol@f1+2,w
  7631     102D  00D7               	movwf	??___fltol+2
  7632     102E  0854               	movf	___fltol@f1+3,w
  7633     102F  00D8               	movwf	??___fltol+3
  7634     1030  301F               	movlw	31
  7635     1031                     u5375:
  7636     1031  1003               	clrc
  7637     1032  0CD8               	rrf	??___fltol+3,f
  7638     1033  0CD7               	rrf	??___fltol+2,f
  7639     1034  0CD6               	rrf	??___fltol+1,f
  7640     1035  0CD5               	rrf	??___fltol,f
  7641     1036                     u5370:
  7642     1036  3EFF               	addlw	-1
  7643     1037  1D03               	skipz
  7644     1038  2831               	goto	u5375
  7645     1039  0855               	movf	??___fltol,w
  7646     103A  00D9               	movwf	___fltol@sign1
  7647     103B                     l3410:
  7648     103B  17D3               	bsf	___fltol@f1+2,7
  7649     103C                     l3412:
  7650     103C  30FF               	movlw	255
  7651     103D  05D1               	andwf	___fltol@f1,f
  7652     103E  30FF               	movlw	255
  7653     103F  05D2               	andwf	___fltol@f1+1,f
  7654     1040  30FF               	movlw	255
  7655     1041  05D3               	andwf	___fltol@f1+2,f
  7656     1042  3000               	movlw	0
  7657     1043  05D4               	andwf	___fltol@f1+3,f
  7658     1044                     l3414:
  7659     1044  3096               	movlw	150
  7660     1045  02DA               	subwf	___fltol@exp1,f
  7661     1046                     l3416:
  7662     1046  1FDA               	btfss	___fltol@exp1,7
  7663     1047  2849               	goto	u5381
  7664     1048  284A               	goto	u5380
  7665     1049                     u5381:
  7666     1049  2864               	goto	l3426
  7667     104A                     u5380:
  7668     104A                     l3418:
  7669     104A  085A               	movf	___fltol@exp1,w
  7670     104B  3A80               	xorlw	128
  7671     104C  3E97               	addlw	151
  7672     104D  1803               	skipnc
  7673     104E  2850               	goto	u5391
  7674     104F  2851               	goto	u5390
  7675     1050                     u5391:
  7676     1050  2852               	goto	l3424
  7677     1051                     u5390:
  7678     1051  281F               	goto	l3404
  7679     1052                     l3424:
  7680     1052  3001               	movlw	1
  7681     1053                     u5405:
  7682     1053  1003               	clrc
  7683     1054  0CD4               	rrf	___fltol@f1+3,f
  7684     1055  0CD3               	rrf	___fltol@f1+2,f
  7685     1056  0CD2               	rrf	___fltol@f1+1,f
  7686     1057  0CD1               	rrf	___fltol@f1,f
  7687     1058  3EFF               	addlw	-1
  7688     1059  1D03               	skipz
  7689     105A  2853               	goto	u5405
  7690     105B  3001               	movlw	1
  7691     105C  00D5               	movwf	??___fltol
  7692     105D  0855               	movf	??___fltol,w
  7693     105E  07DA               	addwf	___fltol@exp1,f
  7694     105F  1D03               	btfss	3,2
  7695     1060  2862               	goto	u5411
  7696     1061  2863               	goto	u5410
  7697     1062                     u5411:
  7698     1062  2852               	goto	l3424
  7699     1063                     u5410:
  7700     1063  287B               	goto	l3434
  7701     1064                     l3426:
  7702     1064  3020               	movlw	32
  7703     1065  025A               	subwf	___fltol@exp1,w
  7704     1066  1C03               	skipc
  7705     1067  2869               	goto	u5421
  7706     1068  286A               	goto	u5420
  7707     1069                     u5421:
  7708     1069  2876               	goto	l643
  7709     106A                     u5420:
  7710     106A  281F               	goto	l3404
  7711     106B                     l3432:
  7712     106B  3001               	movlw	1
  7713     106C  00D5               	movwf	??___fltol
  7714     106D                     u5435:
  7715     106D  1003               	clrc
  7716     106E  0DD1               	rlf	___fltol@f1,f
  7717     106F  0DD2               	rlf	___fltol@f1+1,f
  7718     1070  0DD3               	rlf	___fltol@f1+2,f
  7719     1071  0DD4               	rlf	___fltol@f1+3,f
  7720     1072  0BD5               	decfsz	??___fltol,f
  7721     1073  286D               	goto	u5435
  7722     1074  3001               	movlw	1
  7723     1075  02DA               	subwf	___fltol@exp1,f
  7724     1076                     l643:
  7725     1076  085A               	movf	___fltol@exp1,w
  7726     1077  1D03               	btfss	3,2
  7727     1078  287A               	goto	u5441
  7728     1079  287B               	goto	u5440
  7729     107A                     u5441:
  7730     107A  286B               	goto	l3432
  7731     107B                     u5440:
  7732     107B                     l3434:
  7733     107B  0859               	movf	___fltol@sign1,w
  7734     107C  1903               	btfsc	3,2
  7735     107D  287F               	goto	u5451
  7736     107E  2880               	goto	u5450
  7737     107F                     u5451:
  7738     107F  288B               	goto	l646
  7739     1080                     u5450:
  7740     1080                     l3436:
  7741     1080  09D1               	comf	___fltol@f1,f
  7742     1081  09D2               	comf	___fltol@f1+1,f
  7743     1082  09D3               	comf	___fltol@f1+2,f
  7744     1083  09D4               	comf	___fltol@f1+3,f
  7745     1084  0AD1               	incf	___fltol@f1,f
  7746     1085  1903               	skipnz
  7747     1086  0AD2               	incf	___fltol@f1+1,f
  7748     1087  1903               	skipnz
  7749     1088  0AD3               	incf	___fltol@f1+2,f
  7750     1089  1903               	skipnz
  7751     108A  0AD4               	incf	___fltol@f1+3,f
  7752     108B                     l646:
  7753     108B                     l636:
  7754     108B  0008               	return
  7755     108C                     __end_of___fltol:
  7756                           
  7757                           	psect	text14
  7758     1980                     __ptext14:	
  7759 ;; *************** function ___flsub *****************
  7760 ;; Defined at:
  7761 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  a               4   70[BANK0 ] long 
  7764 ;;  b               4   74[BANK0 ] long 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  4   70[BANK0 ] long 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7776 ;;      Params:         0       8       0       0       0
  7777 ;;      Locals:         0       0       0       0       0
  7778 ;;      Temps:          0       0       0       0       0
  7779 ;;      Totals:         0       8       0       0       0
  7780 ;;Total ram usage:        8 bytes
  7781 ;; Hardware stack levels used: 1
  7782 ;; Hardware stack levels required when called: 1
  7783 ;; This function calls:
  7784 ;;		___fladd
  7785 ;; This function is called by:
  7786 ;;		_sprintf
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790     1980                     ___flsub:	
  7791                           ;psect for function ___flsub
  7792                           
  7793     1980                     l3458:	
  7794                           ;incstack = 0
  7795                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7796                           
  7797     1980  3080               	movlw	128
  7798     1981  1283               	bcf	3,5	;RP0=0, select bank0
  7799     1982  1303               	bcf	3,6	;RP1=0, select bank0
  7800     1983  06E9               	xorwf	___flsub@a+3,f
  7801     1984                     l3460:
  7802     1984  086D               	movf	___flsub@b+3,w
  7803     1985  00D5               	movwf	___fladd@b+3
  7804     1986  086C               	movf	___flsub@b+2,w
  7805     1987  00D4               	movwf	___fladd@b+2
  7806     1988  086B               	movf	___flsub@b+1,w
  7807     1989  00D3               	movwf	___fladd@b+1
  7808     198A  086A               	movf	___flsub@b,w
  7809     198B  00D2               	movwf	___fladd@b
  7810     198C  0869               	movf	___flsub@a+3,w
  7811     198D  00D9               	movwf	___fladd@a+3
  7812     198E  0868               	movf	___flsub@a+2,w
  7813     198F  00D8               	movwf	___fladd@a+2
  7814     1990  0867               	movf	___flsub@a+1,w
  7815     1991  00D7               	movwf	___fladd@a+1
  7816     1992  0866               	movf	___flsub@a,w
  7817     1993  00D6               	movwf	___fladd@a
  7818     1994  160A  118A  234E  160A  158A  	fcall	___fladd
  7819     1999  1283               	bcf	3,5	;RP0=0, select bank0
  7820     199A  1303               	bcf	3,6	;RP1=0, select bank0
  7821     199B  0855               	movf	?___fladd+3,w
  7822     199C  00E9               	movwf	?___flsub+3
  7823     199D  0854               	movf	?___fladd+2,w
  7824     199E  00E8               	movwf	?___flsub+2
  7825     199F  0853               	movf	?___fladd+1,w
  7826     19A0  00E7               	movwf	?___flsub+1
  7827     19A1  0852               	movf	?___fladd,w
  7828     19A2  00E6               	movwf	?___flsub
  7829     19A3                     l806:
  7830     19A3  0008               	return
  7831     19A4                     __end_of___flsub:
  7832                           
  7833                           	psect	text15
  7834     134E                     __ptext15:	
  7835 ;; *************** function ___fladd *****************
  7836 ;; Defined at:
  7837 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  b               4   50[BANK0 ] long 
  7840 ;;  a               4   54[BANK0 ] long 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  grs             1   69[BANK0 ] unsigned char 
  7843 ;;  bexp            1   68[BANK0 ] unsigned char 
  7844 ;;  aexp            1   67[BANK0 ] unsigned char 
  7845 ;;  signs           1   66[BANK0 ] unsigned char 
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  4   50[BANK0 ] unsigned char 
  7848 ;; Registers used:
  7849 ;;		wreg, status,2, status,0, btemp+1
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7855 ;;      Params:         0       8       0       0       0
  7856 ;;      Locals:         0       4       0       0       0
  7857 ;;      Temps:          0       8       0       0       0
  7858 ;;      Totals:         0      20       0       0       0
  7859 ;;Total ram usage:       20 bytes
  7860 ;; Hardware stack levels used: 1
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_sprintf
  7865 ;;		___flsub
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869     134E                     ___fladd:	
  7870                           ;psect for function ___fladd
  7871                           
  7872     134E                     l2774:	
  7873                           ;incstack = 0
  7874                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7875                           
  7876     134E  1283               	bcf	3,5	;RP0=0, select bank0
  7877     134F  1303               	bcf	3,6	;RP1=0, select bank0
  7878     1350  0855               	movf	___fladd@b+3,w
  7879     1351  3980               	andlw	128
  7880     1352  00E2               	movwf	___fladd@signs
  7881     1353                     l2776:
  7882     1353  0855               	movf	___fladd@b+3,w
  7883     1354  00DA               	movwf	??___fladd
  7884     1355  075A               	addwf	??___fladd,w
  7885     1356  00E4               	movwf	___fladd@bexp
  7886     1357                     l2778:
  7887     1357  1FD4               	btfss	___fladd@b+2,7
  7888     1358  2B5A               	goto	u3751
  7889     1359  2B5B               	goto	u3750
  7890     135A                     u3751:
  7891     135A  2B5C               	goto	l2782
  7892     135B                     u3750:
  7893     135B                     l2780:
  7894     135B  1464               	bsf	___fladd@bexp,0
  7895     135C                     l2782:
  7896     135C  0864               	movf	___fladd@bexp,w
  7897     135D  1903               	btfsc	3,2
  7898     135E  2B60               	goto	u3761
  7899     135F  2B61               	goto	u3760
  7900     1360                     u3761:
  7901     1360  2B71               	goto	l2792
  7902     1361                     u3760:
  7903     1361                     l2784:
  7904     1361  0A64               	incf	___fladd@bexp,w
  7905     1362  1D03               	btfss	3,2
  7906     1363  2B65               	goto	u3771
  7907     1364  2B66               	goto	u3770
  7908     1365                     u3771:
  7909     1365  2B6E               	goto	l2788
  7910     1366                     u3770:
  7911     1366                     l2786:
  7912     1366  3000               	movlw	0
  7913     1367  00D5               	movwf	___fladd@b+3
  7914     1368  3000               	movlw	0
  7915     1369  00D4               	movwf	___fladd@b+2
  7916     136A  3000               	movlw	0
  7917     136B  00D3               	movwf	___fladd@b+1
  7918     136C  3000               	movlw	0
  7919     136D  00D2               	movwf	___fladd@b
  7920     136E                     l2788:
  7921     136E  17D4               	bsf	___fladd@b+2,7
  7922     136F                     l2790:
  7923     136F  01D5               	clrf	___fladd@b+3
  7924     1370  2B79               	goto	l2794
  7925     1371                     l2792:
  7926     1371  3000               	movlw	0
  7927     1372  00D5               	movwf	___fladd@b+3
  7928     1373  3000               	movlw	0
  7929     1374  00D4               	movwf	___fladd@b+2
  7930     1375  3000               	movlw	0
  7931     1376  00D3               	movwf	___fladd@b+1
  7932     1377  3000               	movlw	0
  7933     1378  00D2               	movwf	___fladd@b
  7934     1379                     l2794:
  7935     1379  0859               	movf	___fladd@a+3,w
  7936     137A  3980               	andlw	128
  7937     137B  00E3               	movwf	___fladd@aexp
  7938     137C                     l2796:
  7939     137C  0863               	movf	___fladd@aexp,w
  7940     137D  0662               	xorwf	___fladd@signs,w
  7941     137E  1903               	skipnz
  7942     137F  2B81               	goto	u3781
  7943     1380  2B82               	goto	u3780
  7944     1381                     u3781:
  7945     1381  2B83               	goto	l2800
  7946     1382                     u3780:
  7947     1382                     l2798:
  7948     1382  1762               	bsf	___fladd@signs,6
  7949     1383                     l2800:
  7950     1383  0859               	movf	___fladd@a+3,w
  7951     1384  00DA               	movwf	??___fladd
  7952     1385  075A               	addwf	??___fladd,w
  7953     1386  00E3               	movwf	___fladd@aexp
  7954     1387                     l2802:
  7955     1387  1FD8               	btfss	___fladd@a+2,7
  7956     1388  2B8A               	goto	u3791
  7957     1389  2B8B               	goto	u3790
  7958     138A                     u3791:
  7959     138A  2B8C               	goto	l2806
  7960     138B                     u3790:
  7961     138B                     l2804:
  7962     138B  1463               	bsf	___fladd@aexp,0
  7963     138C                     l2806:
  7964     138C  0863               	movf	___fladd@aexp,w
  7965     138D  1903               	btfsc	3,2
  7966     138E  2B90               	goto	u3801
  7967     138F  2B91               	goto	u3800
  7968     1390                     u3801:
  7969     1390  2BA1               	goto	l2816
  7970     1391                     u3800:
  7971     1391                     l2808:
  7972     1391  0A63               	incf	___fladd@aexp,w
  7973     1392  1D03               	btfss	3,2
  7974     1393  2B95               	goto	u3811
  7975     1394  2B96               	goto	u3810
  7976     1395                     u3811:
  7977     1395  2B9E               	goto	l2812
  7978     1396                     u3810:
  7979     1396                     l2810:
  7980     1396  3000               	movlw	0
  7981     1397  00D9               	movwf	___fladd@a+3
  7982     1398  3000               	movlw	0
  7983     1399  00D8               	movwf	___fladd@a+2
  7984     139A  3000               	movlw	0
  7985     139B  00D7               	movwf	___fladd@a+1
  7986     139C  3000               	movlw	0
  7987     139D  00D6               	movwf	___fladd@a
  7988     139E                     l2812:
  7989     139E  17D8               	bsf	___fladd@a+2,7
  7990     139F                     l2814:
  7991     139F  01D9               	clrf	___fladd@a+3
  7992     13A0  2BA9               	goto	l760
  7993     13A1                     l2816:
  7994     13A1  3000               	movlw	0
  7995     13A2  00D9               	movwf	___fladd@a+3
  7996     13A3  3000               	movlw	0
  7997     13A4  00D8               	movwf	___fladd@a+2
  7998     13A5  3000               	movlw	0
  7999     13A6  00D7               	movwf	___fladd@a+1
  8000     13A7  3000               	movlw	0
  8001     13A8  00D6               	movwf	___fladd@a
  8002     13A9                     l760:
  8003     13A9  0864               	movf	___fladd@bexp,w
  8004     13AA  0263               	subwf	___fladd@aexp,w
  8005     13AB  1803               	skipnc
  8006     13AC  2BAE               	goto	u3821
  8007     13AD  2BAF               	goto	u3820
  8008     13AE                     u3821:
  8009     13AE  2BD5               	goto	l2852
  8010     13AF                     u3820:
  8011     13AF                     l2818:
  8012     13AF  1F62               	btfss	___fladd@signs,6
  8013     13B0  2BB2               	goto	u3831
  8014     13B1  2BB3               	goto	u3830
  8015     13B2                     u3831:
  8016     13B2  2BB7               	goto	l2822
  8017     13B3                     u3830:
  8018     13B3                     l2820:
  8019     13B3  3080               	movlw	128
  8020     13B4  00DA               	movwf	??___fladd
  8021     13B5  085A               	movf	??___fladd,w
  8022     13B6  06E2               	xorwf	___fladd@signs,f
  8023     13B7                     l2822:
  8024     13B7  0864               	movf	___fladd@bexp,w
  8025     13B8  00E5               	movwf	___fladd@grs
  8026     13B9                     l2824:
  8027     13B9  0863               	movf	___fladd@aexp,w
  8028     13BA  00E4               	movwf	___fladd@bexp
  8029     13BB                     l2826:
  8030     13BB  0865               	movf	___fladd@grs,w
  8031     13BC  00E3               	movwf	___fladd@aexp
  8032     13BD                     l2828:
  8033     13BD  0852               	movf	___fladd@b,w
  8034     13BE  00E5               	movwf	___fladd@grs
  8035     13BF                     l2830:
  8036     13BF  0856               	movf	___fladd@a,w
  8037     13C0  00D2               	movwf	___fladd@b
  8038     13C1                     l2832:
  8039     13C1  0865               	movf	___fladd@grs,w
  8040     13C2  00D6               	movwf	___fladd@a
  8041     13C3                     l2834:
  8042     13C3  0853               	movf	___fladd@b+1,w
  8043     13C4  00E5               	movwf	___fladd@grs
  8044     13C5                     l2836:
  8045     13C5  0857               	movf	___fladd@a+1,w
  8046     13C6  00D3               	movwf	___fladd@b+1
  8047     13C7                     l2838:
  8048     13C7  0865               	movf	___fladd@grs,w
  8049     13C8  00D7               	movwf	___fladd@a+1
  8050     13C9                     l2840:
  8051     13C9  0854               	movf	___fladd@b+2,w
  8052     13CA  00E5               	movwf	___fladd@grs
  8053     13CB                     l2842:
  8054     13CB  0858               	movf	___fladd@a+2,w
  8055     13CC  00D4               	movwf	___fladd@b+2
  8056     13CD                     l2844:
  8057     13CD  0865               	movf	___fladd@grs,w
  8058     13CE  00D8               	movwf	___fladd@a+2
  8059     13CF                     l2846:
  8060     13CF  0855               	movf	___fladd@b+3,w
  8061     13D0  00E5               	movwf	___fladd@grs
  8062     13D1                     l2848:
  8063     13D1  0859               	movf	___fladd@a+3,w
  8064     13D2  00D5               	movwf	___fladd@b+3
  8065     13D3                     l2850:
  8066     13D3  0865               	movf	___fladd@grs,w
  8067     13D4  00D9               	movwf	___fladd@a+3
  8068     13D5                     l2852:
  8069     13D5  01E5               	clrf	___fladd@grs
  8070     13D6                     l2854:
  8071     13D6  0863               	movf	___fladd@aexp,w
  8072     13D7  00DA               	movwf	??___fladd
  8073     13D8  01DB               	clrf	??___fladd+1
  8074     13D9  085B               	movf	??___fladd+1,w
  8075     13DA  00DD               	movwf	??___fladd+3
  8076     13DB  0864               	movf	___fladd@bexp,w
  8077     13DC  025A               	subwf	??___fladd,w
  8078     13DD  00DC               	movwf	??___fladd+2
  8079     13DE  1C03               	skipc
  8080     13DF  03DD               	decf	??___fladd+3,f
  8081     13E0  085D               	movf	??___fladd+3,w
  8082     13E1  3A80               	xorlw	128
  8083     13E2  00FF               	movwf	btemp+1
  8084     13E3  3080               	movlw	128
  8085     13E4  027F               	subwf	btemp+1,w
  8086     13E5  1D03               	skipz
  8087     13E6  2BE9               	goto	u3845
  8088     13E7  301A               	movlw	26
  8089     13E8  025C               	subwf	??___fladd+2,w
  8090     13E9                     u3845:
  8091     13E9  1C03               	skipc
  8092     13EA  2BEC               	goto	u3841
  8093     13EB  2BED               	goto	u3840
  8094     13EC                     u3841:
  8095     13EC  2C24               	goto	l2870
  8096     13ED                     u3840:
  8097     13ED                     l2856:
  8098     13ED  1283               	bcf	3,5	;RP0=0, select bank0
  8099     13EE  1303               	bcf	3,6	;RP1=0, select bank0
  8100     13EF  0855               	movf	___fladd@b+3,w
  8101     13F0  0454               	iorwf	___fladd@b+2,w
  8102     13F1  0453               	iorwf	___fladd@b+1,w
  8103     13F2  0452               	iorwf	___fladd@b,w
  8104     13F3  1D03               	skipz
  8105     13F4  2BF6               	goto	u3851
  8106     13F5  2BF8               	goto	u3850
  8107     13F6                     u3851:
  8108     13F6  3001               	movlw	1
  8109     13F7  2BF9               	goto	u3860
  8110     13F8                     u3850:
  8111     13F8  3000               	movlw	0
  8112     13F9                     u3860:
  8113     13F9  00E5               	movwf	___fladd@grs
  8114     13FA  3000               	movlw	0
  8115     13FB  00D5               	movwf	___fladd@b+3
  8116     13FC  3000               	movlw	0
  8117     13FD  00D4               	movwf	___fladd@b+2
  8118     13FE  3000               	movlw	0
  8119     13FF  00D3               	movwf	___fladd@b+1
  8120     1400  3000               	movlw	0
  8121     1401  00D2               	movwf	___fladd@b
  8122     1402  0863               	movf	___fladd@aexp,w
  8123     1403  00E4               	movwf	___fladd@bexp
  8124     1404  2C2C               	goto	l764
  8125     1405                     l766:
  8126     1405  1C65               	btfss	___fladd@grs,0
  8127     1406  2C08               	goto	u3871
  8128     1407  2C09               	goto	u3870
  8129     1408                     u3871:
  8130     1408  2C10               	goto	l2860
  8131     1409                     u3870:
  8132     1409                     l2858:
  8133     1409  0865               	movf	___fladd@grs,w
  8134     140A  00DA               	movwf	??___fladd
  8135     140B  1003               	clrc
  8136     140C  0C5A               	rrf	??___fladd,w
  8137     140D  3801               	iorlw	1
  8138     140E  00E5               	movwf	___fladd@grs
  8139     140F  2C12               	goto	l2862
  8140     1410                     l2860:
  8141     1410  1003               	clrc
  8142     1411  0CE5               	rrf	___fladd@grs,f
  8143     1412                     l2862:
  8144     1412  1C52               	btfss	___fladd@b,0
  8145     1413  2C15               	goto	u3881
  8146     1414  2C16               	goto	u3880
  8147     1415                     u3881:
  8148     1415  2C17               	goto	l2866
  8149     1416                     u3880:
  8150     1416                     l2864:
  8151     1416  17E5               	bsf	___fladd@grs,7
  8152     1417                     l2866:
  8153     1417  3001               	movlw	1
  8154     1418  00DA               	movwf	??___fladd
  8155     1419                     u3895:
  8156     1419  0D55               	rlf	___fladd@b+3,w
  8157     141A  0CD5               	rrf	___fladd@b+3,f
  8158     141B  0CD4               	rrf	___fladd@b+2,f
  8159     141C  0CD3               	rrf	___fladd@b+1,f
  8160     141D  0CD2               	rrf	___fladd@b,f
  8161     141E  0BDA               	decfsz	??___fladd& (0+127),f
  8162     141F  2C19               	goto	u3895
  8163     1420                     l2868:
  8164     1420  3001               	movlw	1
  8165     1421  00DA               	movwf	??___fladd
  8166     1422  085A               	movf	??___fladd,w
  8167     1423  07E4               	addwf	___fladd@bexp,f
  8168     1424                     l2870:
  8169     1424  1283               	bcf	3,5	;RP0=0, select bank0
  8170     1425  1303               	bcf	3,6	;RP1=0, select bank0
  8171     1426  0863               	movf	___fladd@aexp,w
  8172     1427  0264               	subwf	___fladd@bexp,w
  8173     1428  1C03               	skipc
  8174     1429  2C2B               	goto	u3901
  8175     142A  2C2C               	goto	u3900
  8176     142B                     u3901:
  8177     142B  2C05               	goto	l766
  8178     142C                     u3900:
  8179     142C                     l764:
  8180     142C  1B62               	btfsc	___fladd@signs,6
  8181     142D  2C2F               	goto	u3911
  8182     142E  2C30               	goto	u3910
  8183     142F                     u3911:
  8184     142F  2C79               	goto	l2896
  8185     1430                     u3910:
  8186     1430                     l2872:
  8187     1430  0864               	movf	___fladd@bexp,w
  8188     1431  1D03               	btfss	3,2
  8189     1432  2C34               	goto	u3921
  8190     1433  2C35               	goto	u3920
  8191     1434                     u3921:
  8192     1434  2C3E               	goto	l2878
  8193     1435                     u3920:
  8194     1435                     l2874:
  8195     1435  3000               	movlw	0
  8196     1436  00D5               	movwf	?___fladd+3
  8197     1437  3000               	movlw	0
  8198     1438  00D4               	movwf	?___fladd+2
  8199     1439  3000               	movlw	0
  8200     143A  00D3               	movwf	?___fladd+1
  8201     143B  3000               	movlw	0
  8202     143C  00D2               	movwf	?___fladd
  8203     143D  2DA5               	goto	l773
  8204     143E                     l2878:
  8205     143E  0856               	movf	___fladd@a,w
  8206     143F  07D2               	addwf	___fladd@b,f
  8207     1440  0857               	movf	___fladd@a+1,w
  8208     1441  1103               	clrz
  8209     1442  1803               	skipnc
  8210     1443  3E01               	addlw	1
  8211     1444  1903               	skipnz
  8212     1445  2C47               	goto	u3931
  8213     1446  07D3               	addwf	___fladd@b+1,f
  8214     1447                     u3931:
  8215     1447  0858               	movf	___fladd@a+2,w
  8216     1448  1103               	clrz
  8217     1449  1803               	skipnc
  8218     144A  3E01               	addlw	1
  8219     144B  1903               	skipnz
  8220     144C  2C4E               	goto	u3932
  8221     144D  07D4               	addwf	___fladd@b+2,f
  8222     144E                     u3932:
  8223     144E  0859               	movf	___fladd@a+3,w
  8224     144F  1103               	clrz
  8225     1450  1803               	skipnc
  8226     1451  3E01               	addlw	1
  8227     1452  1903               	skipnz
  8228     1453  2C55               	goto	u3933
  8229     1454  07D5               	addwf	___fladd@b+3,f
  8230     1455                     u3933:
  8231     1455                     l2880:
  8232     1455  1C55               	btfss	___fladd@b+3,0
  8233     1456  2C58               	goto	u3941
  8234     1457  2C59               	goto	u3940
  8235     1458                     u3941:
  8236     1458  2D2D               	goto	l2930
  8237     1459                     u3940:
  8238     1459                     l2882:
  8239     1459  1C65               	btfss	___fladd@grs,0
  8240     145A  2C5C               	goto	u3951
  8241     145B  2C5D               	goto	u3950
  8242     145C                     u3951:
  8243     145C  2C64               	goto	l2886
  8244     145D                     u3950:
  8245     145D                     l2884:
  8246     145D  0865               	movf	___fladd@grs,w
  8247     145E  00DA               	movwf	??___fladd
  8248     145F  1003               	clrc
  8249     1460  0C5A               	rrf	??___fladd,w
  8250     1461  3801               	iorlw	1
  8251     1462  00E5               	movwf	___fladd@grs
  8252     1463  2C66               	goto	l2888
  8253     1464                     l2886:
  8254     1464  1003               	clrc
  8255     1465  0CE5               	rrf	___fladd@grs,f
  8256     1466                     l2888:
  8257     1466  1C52               	btfss	___fladd@b,0
  8258     1467  2C69               	goto	u3961
  8259     1468  2C6A               	goto	u3960
  8260     1469                     u3961:
  8261     1469  2C6B               	goto	l2892
  8262     146A                     u3960:
  8263     146A                     l2890:
  8264     146A  17E5               	bsf	___fladd@grs,7
  8265     146B                     l2892:
  8266     146B  3001               	movlw	1
  8267     146C  00DA               	movwf	??___fladd
  8268     146D                     u3975:
  8269     146D  0D55               	rlf	___fladd@b+3,w
  8270     146E  0CD5               	rrf	___fladd@b+3,f
  8271     146F  0CD4               	rrf	___fladd@b+2,f
  8272     1470  0CD3               	rrf	___fladd@b+1,f
  8273     1471  0CD2               	rrf	___fladd@b,f
  8274     1472  0BDA               	decfsz	??___fladd& (0+127),f
  8275     1473  2C6D               	goto	u3975
  8276     1474                     l2894:
  8277     1474  3001               	movlw	1
  8278     1475  00DA               	movwf	??___fladd
  8279     1476  085A               	movf	??___fladd,w
  8280     1477  07E4               	addwf	___fladd@bexp,f
  8281     1478  2D2D               	goto	l2930
  8282     1479                     l2896:
  8283     1479  0855               	movf	___fladd@b+3,w
  8284     147A  3A80               	xorlw	128
  8285     147B  00FF               	movwf	btemp+1
  8286     147C  0859               	movf	___fladd@a+3,w
  8287     147D  3A80               	xorlw	128
  8288     147E  027F               	subwf	btemp+1,w
  8289     147F  1D03               	skipz
  8290     1480  2C8B               	goto	u3983
  8291     1481  0858               	movf	___fladd@a+2,w
  8292     1482  0254               	subwf	___fladd@b+2,w
  8293     1483  1D03               	skipz
  8294     1484  2C8B               	goto	u3983
  8295     1485  0857               	movf	___fladd@a+1,w
  8296     1486  0253               	subwf	___fladd@b+1,w
  8297     1487  1D03               	skipz
  8298     1488  2C8B               	goto	u3983
  8299     1489  0856               	movf	___fladd@a,w
  8300     148A  0252               	subwf	___fladd@b,w
  8301     148B                     u3983:
  8302     148B  1803               	skipnc
  8303     148C  2C8E               	goto	u3981
  8304     148D  2C8F               	goto	u3980
  8305     148E                     u3981:
  8306     148E  2CE7               	goto	l2906
  8307     148F                     u3980:
  8308     148F                     l2898:
  8309     148F  30FF               	movlw	255
  8310     1490  00DA               	movwf	??___fladd
  8311     1491  30FF               	movlw	255
  8312     1492  00DB               	movwf	??___fladd+1
  8313     1493  30FF               	movlw	255
  8314     1494  00DC               	movwf	??___fladd+2
  8315     1495  30FF               	movlw	255
  8316     1496  00DD               	movwf	??___fladd+3
  8317     1497  0856               	movf	___fladd@a,w
  8318     1498  00DE               	movwf	??___fladd+4
  8319     1499  0857               	movf	___fladd@a+1,w
  8320     149A  00DF               	movwf	??___fladd+5
  8321     149B  0858               	movf	___fladd@a+2,w
  8322     149C  00E0               	movwf	??___fladd+6
  8323     149D  0859               	movf	___fladd@a+3,w
  8324     149E  00E1               	movwf	??___fladd+7
  8325     149F  0852               	movf	___fladd@b,w
  8326     14A0  02DE               	subwf	??___fladd+4,f
  8327     14A1  0853               	movf	___fladd@b+1,w
  8328     14A2  1C03               	skipc
  8329     14A3  0F53               	incfsz	___fladd@b+1,w
  8330     14A4  2CA6               	goto	u3991
  8331     14A5  2CA7               	goto	u3992
  8332     14A6                     u3991:
  8333     14A6  02DF               	subwf	??___fladd+5,f
  8334     14A7                     u3992:
  8335     14A7  0854               	movf	___fladd@b+2,w
  8336     14A8  1C03               	skipc
  8337     14A9  0F54               	incfsz	___fladd@b+2,w
  8338     14AA  2CAC               	goto	u3993
  8339     14AB  2CAD               	goto	u3994
  8340     14AC                     u3993:
  8341     14AC  02E0               	subwf	??___fladd+6,f
  8342     14AD                     u3994:
  8343     14AD  0855               	movf	___fladd@b+3,w
  8344     14AE  1C03               	skipc
  8345     14AF  0F55               	incfsz	___fladd@b+3,w
  8346     14B0  2CB2               	goto	u3995
  8347     14B1  2CB3               	goto	u3996
  8348     14B2                     u3995:
  8349     14B2  02E1               	subwf	??___fladd+7,f
  8350     14B3                     u3996:
  8351     14B3  085E               	movf	??___fladd+4,w
  8352     14B4  07DA               	addwf	??___fladd,f
  8353     14B5  085F               	movf	??___fladd+5,w
  8354     14B6  1803               	skipnc
  8355     14B7  0F5F               	incfsz	??___fladd+5,w
  8356     14B8  2CBA               	goto	u4000
  8357     14B9  2CBB               	goto	u4001
  8358     14BA                     u4000:
  8359     14BA  07DB               	addwf	??___fladd+1,f
  8360     14BB                     u4001:
  8361     14BB  0860               	movf	??___fladd+6,w
  8362     14BC  1803               	skipnc
  8363     14BD  0F60               	incfsz	??___fladd+6,w
  8364     14BE  2CC0               	goto	u4002
  8365     14BF  2CC1               	goto	u4003
  8366     14C0                     u4002:
  8367     14C0  07DC               	addwf	??___fladd+2,f
  8368     14C1                     u4003:
  8369     14C1  0861               	movf	??___fladd+7,w
  8370     14C2  1803               	skipnc
  8371     14C3  0A61               	incf	??___fladd+7,w
  8372     14C4  07DD               	addwf	??___fladd+3,f
  8373     14C5  085D               	movf	??___fladd+3,w
  8374     14C6  00D5               	movwf	___fladd@b+3
  8375     14C7  085C               	movf	??___fladd+2,w
  8376     14C8  00D4               	movwf	___fladd@b+2
  8377     14C9  085B               	movf	??___fladd+1,w
  8378     14CA  00D3               	movwf	___fladd@b+1
  8379     14CB  085A               	movf	??___fladd,w
  8380     14CC  00D2               	movwf	___fladd@b
  8381     14CD                     l2900:
  8382     14CD  3080               	movlw	128
  8383     14CE  00DA               	movwf	??___fladd
  8384     14CF  085A               	movf	??___fladd,w
  8385     14D0  06E2               	xorwf	___fladd@signs,f
  8386     14D1  09E5               	comf	___fladd@grs,f
  8387     14D2  0AE5               	incf	___fladd@grs,f
  8388     14D3                     l2902:
  8389     14D3  0865               	movf	___fladd@grs,w
  8390     14D4  1D03               	btfss	3,2
  8391     14D5  2CD7               	goto	u4011
  8392     14D6  2CD8               	goto	u4010
  8393     14D7                     u4011:
  8394     14D7  2CF5               	goto	l781
  8395     14D8                     u4010:
  8396     14D8                     l2904:
  8397     14D8  3001               	movlw	1
  8398     14D9  07D2               	addwf	___fladd@b,f
  8399     14DA  3000               	movlw	0
  8400     14DB  1803               	skipnc
  8401     14DC  3001               	movlw	1
  8402     14DD  07D3               	addwf	___fladd@b+1,f
  8403     14DE  3000               	movlw	0
  8404     14DF  1803               	skipnc
  8405     14E0  3001               	movlw	1
  8406     14E1  07D4               	addwf	___fladd@b+2,f
  8407     14E2  3000               	movlw	0
  8408     14E3  1803               	skipnc
  8409     14E4  3001               	movlw	1
  8410     14E5  07D5               	addwf	___fladd@b+3,f
  8411     14E6  2CF5               	goto	l781
  8412     14E7                     l2906:
  8413     14E7  0856               	movf	___fladd@a,w
  8414     14E8  02D2               	subwf	___fladd@b,f
  8415     14E9  0857               	movf	___fladd@a+1,w
  8416     14EA  1C03               	skipc
  8417     14EB  0F57               	incfsz	___fladd@a+1,w
  8418     14EC  02D3               	subwf	___fladd@b+1,f
  8419     14ED  0858               	movf	___fladd@a+2,w
  8420     14EE  1C03               	skipc
  8421     14EF  0F58               	incfsz	___fladd@a+2,w
  8422     14F0  02D4               	subwf	___fladd@b+2,f
  8423     14F1  0859               	movf	___fladd@a+3,w
  8424     14F2  1C03               	skipc
  8425     14F3  0F59               	incfsz	___fladd@a+3,w
  8426     14F4  02D5               	subwf	___fladd@b+3,f
  8427     14F5                     l781:
  8428     14F5  0855               	movf	___fladd@b+3,w
  8429     14F6  0454               	iorwf	___fladd@b+2,w
  8430     14F7  0453               	iorwf	___fladd@b+1,w
  8431     14F8  0452               	iorwf	___fladd@b,w
  8432     14F9  1D03               	skipz
  8433     14FA  2CFC               	goto	u4021
  8434     14FB  2CFD               	goto	u4020
  8435     14FC                     u4021:
  8436     14FC  2D29               	goto	l2928
  8437     14FD                     u4020:
  8438     14FD                     l2908:
  8439     14FD  0865               	movf	___fladd@grs,w
  8440     14FE  1D03               	btfss	3,2
  8441     14FF  2D01               	goto	u4031
  8442     1500  2D02               	goto	u4030
  8443     1501                     u4031:
  8444     1501  2D29               	goto	l2928
  8445     1502                     u4030:
  8446     1502                     l2910:
  8447     1502  3000               	movlw	0
  8448     1503  00D5               	movwf	?___fladd+3
  8449     1504  3000               	movlw	0
  8450     1505  00D4               	movwf	?___fladd+2
  8451     1506  3000               	movlw	0
  8452     1507  00D3               	movwf	?___fladd+1
  8453     1508  3000               	movlw	0
  8454     1509  00D2               	movwf	?___fladd
  8455     150A  2DA5               	goto	l773
  8456     150B                     l2914:
  8457     150B  3001               	movlw	1
  8458     150C  00DA               	movwf	??___fladd
  8459     150D                     u4045:
  8460     150D  1003               	clrc
  8461     150E  0DD2               	rlf	___fladd@b,f
  8462     150F  0DD3               	rlf	___fladd@b+1,f
  8463     1510  0DD4               	rlf	___fladd@b+2,f
  8464     1511  0DD5               	rlf	___fladd@b+3,f
  8465     1512  0BDA               	decfsz	??___fladd,f
  8466     1513  2D0D               	goto	u4045
  8467     1514                     l2916:
  8468     1514  1FE5               	btfss	___fladd@grs,7
  8469     1515  2D17               	goto	u4051
  8470     1516  2D18               	goto	u4050
  8471     1517                     u4051:
  8472     1517  2D19               	goto	l785
  8473     1518                     u4050:
  8474     1518                     l2918:
  8475     1518  1452               	bsf	___fladd@b,0
  8476     1519                     l785:
  8477     1519  1C65               	btfss	___fladd@grs,0
  8478     151A  2D1C               	goto	u4061
  8479     151B  2D1D               	goto	u4060
  8480     151C                     u4061:
  8481     151C  2D20               	goto	l2922
  8482     151D                     u4060:
  8483     151D                     l2920:
  8484     151D  1403               	setc
  8485     151E  0DE5               	rlf	___fladd@grs,f
  8486     151F  2D22               	goto	l2924
  8487     1520                     l2922:
  8488     1520  1003               	clrc
  8489     1521  0DE5               	rlf	___fladd@grs,f
  8490     1522                     l2924:
  8491     1522  0864               	movf	___fladd@bexp,w
  8492     1523  1903               	btfsc	3,2
  8493     1524  2D26               	goto	u4071
  8494     1525  2D27               	goto	u4070
  8495     1526                     u4071:
  8496     1526  2D29               	goto	l2928
  8497     1527                     u4070:
  8498     1527                     l2926:
  8499     1527  3001               	movlw	1
  8500     1528  02E4               	subwf	___fladd@bexp,f
  8501     1529                     l2928:
  8502     1529  1FD4               	btfss	___fladd@b+2,7
  8503     152A  2D2C               	goto	u4081
  8504     152B  2D2D               	goto	u4080
  8505     152C                     u4081:
  8506     152C  2D0B               	goto	l2914
  8507     152D                     u4080:
  8508     152D                     l2930:
  8509     152D  01E3               	clrf	___fladd@aexp
  8510     152E                     l2932:
  8511     152E  1FE5               	btfss	___fladd@grs,7
  8512     152F  2D31               	goto	u4091
  8513     1530  2D32               	goto	u4090
  8514     1531                     u4091:
  8515     1531  2D40               	goto	l2940
  8516     1532                     u4090:
  8517     1532                     l2934:
  8518     1532  0865               	movf	___fladd@grs,w
  8519     1533  397F               	andlw	127
  8520     1534  1903               	btfsc	3,2
  8521     1535  2D37               	goto	u4101
  8522     1536  2D38               	goto	u4100
  8523     1537                     u4101:
  8524     1537  2D3B               	goto	l791
  8525     1538                     u4100:
  8526     1538                     l2936:
  8527     1538  01E3               	clrf	___fladd@aexp
  8528     1539  0AE3               	incf	___fladd@aexp,f
  8529     153A  2D40               	goto	l2940
  8530     153B                     l791:
  8531     153B  1C52               	btfss	___fladd@b,0
  8532     153C  2D3E               	goto	u4111
  8533     153D  2D3F               	goto	u4110
  8534     153E                     u4111:
  8535     153E  2D40               	goto	l2940
  8536     153F                     u4110:
  8537     153F  2D38               	goto	l2936
  8538     1540                     l2940:
  8539     1540  0863               	movf	___fladd@aexp,w
  8540     1541  1903               	btfsc	3,2
  8541     1542  2D44               	goto	u4121
  8542     1543  2D45               	goto	u4120
  8543     1544                     u4121:
  8544     1544  2D79               	goto	l794
  8545     1545                     u4120:
  8546     1545                     l2942:
  8547     1545  3001               	movlw	1
  8548     1546  07D2               	addwf	___fladd@b,f
  8549     1547  3000               	movlw	0
  8550     1548  1803               	skipnc
  8551     1549  3001               	movlw	1
  8552     154A  07D3               	addwf	___fladd@b+1,f
  8553     154B  3000               	movlw	0
  8554     154C  1803               	skipnc
  8555     154D  3001               	movlw	1
  8556     154E  07D4               	addwf	___fladd@b+2,f
  8557     154F  3000               	movlw	0
  8558     1550  1803               	skipnc
  8559     1551  3001               	movlw	1
  8560     1552  07D5               	addwf	___fladd@b+3,f
  8561     1553                     l2944:
  8562     1553  1C55               	btfss	___fladd@b+3,0
  8563     1554  2D56               	goto	u4131
  8564     1555  2D57               	goto	u4130
  8565     1556                     u4131:
  8566     1556  2D79               	goto	l794
  8567     1557                     u4130:
  8568     1557                     l2946:
  8569     1557  0852               	movf	___fladd@b,w
  8570     1558  00DA               	movwf	??___fladd
  8571     1559  0853               	movf	___fladd@b+1,w
  8572     155A  00DB               	movwf	??___fladd+1
  8573     155B  0854               	movf	___fladd@b+2,w
  8574     155C  00DC               	movwf	??___fladd+2
  8575     155D  0855               	movf	___fladd@b+3,w
  8576     155E  00DD               	movwf	??___fladd+3
  8577     155F  3001               	movlw	1
  8578     1560  00DE               	movwf	??___fladd+4
  8579     1561                     u4145:
  8580     1561  0D5D               	rlf	??___fladd+3,w
  8581     1562  0CDD               	rrf	??___fladd+3,f
  8582     1563  0CDC               	rrf	??___fladd+2,f
  8583     1564  0CDB               	rrf	??___fladd+1,f
  8584     1565  0CDA               	rrf	??___fladd,f
  8585     1566                     u4140:
  8586     1566  0BDE               	decfsz	??___fladd+4,f
  8587     1567  2D61               	goto	u4145
  8588     1568  085D               	movf	??___fladd+3,w
  8589     1569  00D5               	movwf	___fladd@b+3
  8590     156A  085C               	movf	??___fladd+2,w
  8591     156B  00D4               	movwf	___fladd@b+2
  8592     156C  085B               	movf	??___fladd+1,w
  8593     156D  00D3               	movwf	___fladd@b+1
  8594     156E  085A               	movf	??___fladd,w
  8595     156F  00D2               	movwf	___fladd@b
  8596     1570  0A64               	incf	___fladd@bexp,w
  8597     1571  1903               	btfsc	3,2
  8598     1572  2D74               	goto	u4151
  8599     1573  2D75               	goto	u4150
  8600     1574                     u4151:
  8601     1574  2D79               	goto	l794
  8602     1575                     u4150:
  8603     1575                     l2948:
  8604     1575  3001               	movlw	1
  8605     1576  00DA               	movwf	??___fladd
  8606     1577  085A               	movf	??___fladd,w
  8607     1578  07E4               	addwf	___fladd@bexp,f
  8608     1579                     l794:
  8609     1579  0A64               	incf	___fladd@bexp,w
  8610     157A  1903               	btfsc	3,2
  8611     157B  2D7D               	goto	u4161
  8612     157C  2D7E               	goto	u4160
  8613     157D                     u4161:
  8614     157D  2D83               	goto	l2952
  8615     157E                     u4160:
  8616     157E                     l2950:
  8617     157E  0864               	movf	___fladd@bexp,w
  8618     157F  1D03               	btfss	3,2
  8619     1580  2D82               	goto	u4171
  8620     1581  2D83               	goto	u4170
  8621     1582                     u4171:
  8622     1582  2D91               	goto	l2958
  8623     1583                     u4170:
  8624     1583                     l2952:
  8625     1583  3000               	movlw	0
  8626     1584  00D5               	movwf	___fladd@b+3
  8627     1585  3000               	movlw	0
  8628     1586  00D4               	movwf	___fladd@b+2
  8629     1587  3000               	movlw	0
  8630     1588  00D3               	movwf	___fladd@b+1
  8631     1589  3000               	movlw	0
  8632     158A  00D2               	movwf	___fladd@b
  8633     158B                     l2954:
  8634     158B  0864               	movf	___fladd@bexp,w
  8635     158C  1D03               	btfss	3,2
  8636     158D  2D8F               	goto	u4181
  8637     158E  2D90               	goto	u4180
  8638     158F                     u4181:
  8639     158F  2D91               	goto	l2958
  8640     1590                     u4180:
  8641     1590                     l2956:
  8642     1590  01E2               	clrf	___fladd@signs
  8643     1591                     l2958:
  8644     1591  1C64               	btfss	___fladd@bexp,0
  8645     1592  2D94               	goto	u4191
  8646     1593  2D95               	goto	u4190
  8647     1594                     u4191:
  8648     1594  2D97               	goto	l2962
  8649     1595                     u4190:
  8650     1595                     l2960:
  8651     1595  17D4               	bsf	___fladd@b+2,7
  8652     1596  2D9B               	goto	l802
  8653     1597                     l2962:
  8654     1597  307F               	movlw	127
  8655     1598  00DA               	movwf	??___fladd
  8656     1599  085A               	movf	??___fladd,w
  8657     159A  05D4               	andwf	___fladd@b+2,f
  8658     159B                     l802:
  8659     159B  0864               	movf	___fladd@bexp,w
  8660     159C  00DA               	movwf	??___fladd
  8661     159D  1003               	clrc
  8662     159E  0C5A               	rrf	??___fladd,w
  8663     159F  00D5               	movwf	___fladd@b+3
  8664     15A0                     l2964:
  8665     15A0  1FE2               	btfss	___fladd@signs,7
  8666     15A1  2DA3               	goto	u4201
  8667     15A2  2DA4               	goto	u4200
  8668     15A3                     u4201:
  8669     15A3  2DA5               	goto	l803
  8670     15A4                     u4200:
  8671     15A4                     l2966:
  8672     15A4  17D5               	bsf	___fladd@b+3,7
  8673     15A5                     l803:
  8674     15A5                     l773:
  8675     15A5  0008               	return
  8676     15A6                     __end_of___fladd:
  8677                           
  8678                           	psect	text16
  8679     18F4                     __ptext16:	
  8680 ;; *************** function ___flneg *****************
  8681 ;; Defined at:
  8682 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  f1              4    0[COMMON] unsigned char 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  4    0[COMMON] unsigned char 
  8689 ;; Registers used:
  8690 ;;		wreg
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8696 ;;      Params:         4       0       0       0       0
  8697 ;;      Locals:         0       0       0       0       0
  8698 ;;      Temps:          0       0       0       0       0
  8699 ;;      Totals:         4       0       0       0       0
  8700 ;;Total ram usage:        4 bytes
  8701 ;; Hardware stack levels used: 1
  8702 ;; This function calls:
  8703 ;;		Nothing
  8704 ;; This function is called by:
  8705 ;;		_sprintf
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709     18F4                     ___flneg:	
  8710                           ;psect for function ___flneg
  8711                           
  8712     18F4                     l3394:	
  8713                           ;incstack = 0
  8714                           ; Regs used in ___flneg: [wreg]
  8715                           
  8716     18F4  0873               	movf	___flneg@f1+3,w
  8717     18F5  0472               	iorwf	___flneg@f1+2,w
  8718     18F6  0471               	iorwf	___flneg@f1+1,w
  8719     18F7  0470               	iorwf	___flneg@f1,w
  8720     18F8  1903               	skipnz
  8721     18F9  28FB               	goto	u5351
  8722     18FA  28FC               	goto	u5350
  8723     18FB                     u5351:
  8724     18FB  28FE               	goto	l3398
  8725     18FC                     u5350:
  8726     18FC                     l3396:
  8727     18FC  3080               	movlw	128
  8728     18FD  06F3               	xorwf	___flneg@f1+3,f
  8729     18FE                     l3398:
  8730     18FE                     l632:
  8731     18FE  0008               	return
  8732     18FF                     __end_of___flneg:
  8733                           
  8734                           	psect	text17
  8735     0802                     __ptext17:	
  8736 ;; *************** function ___flge *****************
  8737 ;; Defined at:
  8738 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  ff1             4    0[COMMON] unsigned char 
  8741 ;;  ff2             4    4[COMMON] unsigned char 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;		None               void
  8746 ;; Registers used:
  8747 ;;		wreg, status,2, status,0
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8753 ;;      Params:         8       0       0       0       0
  8754 ;;      Locals:         0       0       0       0       0
  8755 ;;      Temps:          4       0       0       0       0
  8756 ;;      Totals:        12       0       0       0       0
  8757 ;;Total ram usage:       12 bytes
  8758 ;; Hardware stack levels used: 1
  8759 ;; This function calls:
  8760 ;;		Nothing
  8761 ;; This function is called by:
  8762 ;;		_sprintf
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766     0802                     ___flge:	
  8767                           ;psect for function ___flge
  8768                           
  8769     0802                     l3374:	
  8770                           ;incstack = 0
  8771                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8772                           
  8773     0802  3000               	movlw	0
  8774     0803  0570               	andwf	___flge@ff1,w
  8775     0804  00F8               	movwf	??___flge
  8776     0805  3000               	movlw	0
  8777     0806  0571               	andwf	___flge@ff1+1,w
  8778     0807  00F9               	movwf	??___flge+1
  8779     0808  3080               	movlw	128
  8780     0809  0572               	andwf	___flge@ff1+2,w
  8781     080A  00FA               	movwf	??___flge+2
  8782     080B  307F               	movlw	127
  8783     080C  0573               	andwf	___flge@ff1+3,w
  8784     080D  00FB               	movwf	??___flge+3
  8785     080E  087B               	movf	??___flge+3,w
  8786     080F  047A               	iorwf	??___flge+2,w
  8787     0810  0479               	iorwf	??___flge+1,w
  8788     0811  0478               	iorwf	??___flge,w
  8789     0812  1D03               	skipz
  8790     0813  2815               	goto	u5281
  8791     0814  2816               	goto	u5280
  8792     0815                     u5281:
  8793     0815  281E               	goto	l624
  8794     0816                     u5280:
  8795     0816                     l3376:
  8796     0816  3000               	movlw	0
  8797     0817  00F3               	movwf	___flge@ff1+3
  8798     0818  3000               	movlw	0
  8799     0819  00F2               	movwf	___flge@ff1+2
  8800     081A  3000               	movlw	0
  8801     081B  00F1               	movwf	___flge@ff1+1
  8802     081C  3000               	movlw	0
  8803     081D  00F0               	movwf	___flge@ff1
  8804     081E                     l624:
  8805     081E  3000               	movlw	0
  8806     081F  0574               	andwf	___flge@ff2,w
  8807     0820  00F8               	movwf	??___flge
  8808     0821  3000               	movlw	0
  8809     0822  0575               	andwf	___flge@ff2+1,w
  8810     0823  00F9               	movwf	??___flge+1
  8811     0824  3080               	movlw	128
  8812     0825  0576               	andwf	___flge@ff2+2,w
  8813     0826  00FA               	movwf	??___flge+2
  8814     0827  307F               	movlw	127
  8815     0828  0577               	andwf	___flge@ff2+3,w
  8816     0829  00FB               	movwf	??___flge+3
  8817     082A  087B               	movf	??___flge+3,w
  8818     082B  047A               	iorwf	??___flge+2,w
  8819     082C  0479               	iorwf	??___flge+1,w
  8820     082D  0478               	iorwf	??___flge,w
  8821     082E  1D03               	skipz
  8822     082F  2831               	goto	u5291
  8823     0830  2832               	goto	u5290
  8824     0831                     u5291:
  8825     0831  283A               	goto	l3380
  8826     0832                     u5290:
  8827     0832                     l3378:
  8828     0832  3000               	movlw	0
  8829     0833  00F7               	movwf	___flge@ff2+3
  8830     0834  3000               	movlw	0
  8831     0835  00F6               	movwf	___flge@ff2+2
  8832     0836  3000               	movlw	0
  8833     0837  00F5               	movwf	___flge@ff2+1
  8834     0838  3000               	movlw	0
  8835     0839  00F4               	movwf	___flge@ff2
  8836     083A                     l3380:
  8837     083A  1FF3               	btfss	___flge@ff1+3,7
  8838     083B  283D               	goto	u5301
  8839     083C  283E               	goto	u5300
  8840     083D                     u5301:
  8841     083D  2862               	goto	l3384
  8842     083E                     u5300:
  8843     083E                     l3382:
  8844     083E  3000               	movlw	0
  8845     083F  00F8               	movwf	??___flge
  8846     0840  3000               	movlw	0
  8847     0841  00F9               	movwf	??___flge+1
  8848     0842  3000               	movlw	0
  8849     0843  00FA               	movwf	??___flge+2
  8850     0844  3080               	movlw	128
  8851     0845  00FB               	movwf	??___flge+3
  8852     0846  0870               	movf	___flge@ff1,w
  8853     0847  02F8               	subwf	??___flge,f
  8854     0848  0871               	movf	___flge@ff1+1,w
  8855     0849  1C03               	skipc
  8856     084A  0F71               	incfsz	___flge@ff1+1,w
  8857     084B  284D               	goto	u5311
  8858     084C  284E               	goto	u5312
  8859     084D                     u5311:
  8860     084D  02F9               	subwf	??___flge+1,f
  8861     084E                     u5312:
  8862     084E  0872               	movf	___flge@ff1+2,w
  8863     084F  1C03               	skipc
  8864     0850  0F72               	incfsz	___flge@ff1+2,w
  8865     0851  2853               	goto	u5313
  8866     0852  2854               	goto	u5314
  8867     0853                     u5313:
  8868     0853  02FA               	subwf	??___flge+2,f
  8869     0854                     u5314:
  8870     0854  0873               	movf	___flge@ff1+3,w
  8871     0855  1C03               	skipc
  8872     0856  0F73               	incfsz	___flge@ff1+3,w
  8873     0857  2859               	goto	u5315
  8874     0858  285A               	goto	u5316
  8875     0859                     u5315:
  8876     0859  02FB               	subwf	??___flge+3,f
  8877     085A                     u5316:
  8878     085A  087B               	movf	??___flge+3,w
  8879     085B  00F3               	movwf	___flge@ff1+3
  8880     085C  087A               	movf	??___flge+2,w
  8881     085D  00F2               	movwf	___flge@ff1+2
  8882     085E  0879               	movf	??___flge+1,w
  8883     085F  00F1               	movwf	___flge@ff1+1
  8884     0860  0878               	movf	??___flge,w
  8885     0861  00F0               	movwf	___flge@ff1
  8886     0862                     l3384:
  8887     0862  1FF7               	btfss	___flge@ff2+3,7
  8888     0863  2865               	goto	u5321
  8889     0864  2866               	goto	u5320
  8890     0865                     u5321:
  8891     0865  288A               	goto	l627
  8892     0866                     u5320:
  8893     0866                     l3386:
  8894     0866  3000               	movlw	0
  8895     0867  00F8               	movwf	??___flge
  8896     0868  3000               	movlw	0
  8897     0869  00F9               	movwf	??___flge+1
  8898     086A  3000               	movlw	0
  8899     086B  00FA               	movwf	??___flge+2
  8900     086C  3080               	movlw	128
  8901     086D  00FB               	movwf	??___flge+3
  8902     086E  0874               	movf	___flge@ff2,w
  8903     086F  02F8               	subwf	??___flge,f
  8904     0870  0875               	movf	___flge@ff2+1,w
  8905     0871  1C03               	skipc
  8906     0872  0F75               	incfsz	___flge@ff2+1,w
  8907     0873  2875               	goto	u5331
  8908     0874  2876               	goto	u5332
  8909     0875                     u5331:
  8910     0875  02F9               	subwf	??___flge+1,f
  8911     0876                     u5332:
  8912     0876  0876               	movf	___flge@ff2+2,w
  8913     0877  1C03               	skipc
  8914     0878  0F76               	incfsz	___flge@ff2+2,w
  8915     0879  287B               	goto	u5333
  8916     087A  287C               	goto	u5334
  8917     087B                     u5333:
  8918     087B  02FA               	subwf	??___flge+2,f
  8919     087C                     u5334:
  8920     087C  0877               	movf	___flge@ff2+3,w
  8921     087D  1C03               	skipc
  8922     087E  0F77               	incfsz	___flge@ff2+3,w
  8923     087F  2881               	goto	u5335
  8924     0880  2882               	goto	u5336
  8925     0881                     u5335:
  8926     0881  02FB               	subwf	??___flge+3,f
  8927     0882                     u5336:
  8928     0882  087B               	movf	??___flge+3,w
  8929     0883  00F7               	movwf	___flge@ff2+3
  8930     0884  087A               	movf	??___flge+2,w
  8931     0885  00F6               	movwf	___flge@ff2+2
  8932     0886  0879               	movf	??___flge+1,w
  8933     0887  00F5               	movwf	___flge@ff2+1
  8934     0888  0878               	movf	??___flge,w
  8935     0889  00F4               	movwf	___flge@ff2
  8936     088A                     l627:
  8937     088A  3080               	movlw	128
  8938     088B  06F3               	xorwf	___flge@ff1+3,f
  8939     088C  3080               	movlw	128
  8940     088D  06F7               	xorwf	___flge@ff2+3,f
  8941     088E  0877               	movf	___flge@ff2+3,w
  8942     088F  0273               	subwf	___flge@ff1+3,w
  8943     0890  1D03               	skipz
  8944     0891  289C               	goto	u5345
  8945     0892  0876               	movf	___flge@ff2+2,w
  8946     0893  0272               	subwf	___flge@ff1+2,w
  8947     0894  1D03               	skipz
  8948     0895  289C               	goto	u5345
  8949     0896  0875               	movf	___flge@ff2+1,w
  8950     0897  0271               	subwf	___flge@ff1+1,w
  8951     0898  1D03               	skipz
  8952     0899  289C               	goto	u5345
  8953     089A  0874               	movf	___flge@ff2,w
  8954     089B  0270               	subwf	___flge@ff1,w
  8955     089C                     u5345:
  8956     089C  1803               	skipnc
  8957     089D  289F               	goto	u5341
  8958     089E  28A0               	goto	u5340
  8959     089F                     u5341:
  8960     089F  28A2               	goto	l3390
  8961     08A0                     u5340:
  8962     08A0                     l3388:
  8963     08A0  1003               	clrc
  8964     08A1  28A3               	goto	l628
  8965     08A2                     l3390:
  8966     08A2  1403               	setc
  8967     08A3                     l628:
  8968     08A3  0008               	return
  8969     08A4                     __end_of___flge:
  8970                           
  8971                           	psect	text18
  8972     1AF6                     __ptext18:	
  8973 ;; *************** function ___fleq *****************
  8974 ;; Defined at:
  8975 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  ff1             4    0[COMMON] unsigned char 
  8978 ;;  ff2             4    4[COMMON] unsigned char 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;		None               void
  8983 ;; Registers used:
  8984 ;;		wreg, status,2, status,0
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8990 ;;      Params:         8       0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0
  8992 ;;      Temps:          4       0       0       0       0
  8993 ;;      Totals:        12       0       0       0       0
  8994 ;;Total ram usage:       12 bytes
  8995 ;; Hardware stack levels used: 1
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_sprintf
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003     1AF6                     ___fleq:	
  9004                           ;psect for function ___fleq
  9005                           
  9006     1AF6                     l3362:	
  9007                           ;incstack = 0
  9008                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9009                           
  9010     1AF6  3000               	movlw	0
  9011     1AF7  0570               	andwf	___fleq@ff1,w
  9012     1AF8  00F8               	movwf	??___fleq
  9013     1AF9  3000               	movlw	0
  9014     1AFA  0571               	andwf	___fleq@ff1+1,w
  9015     1AFB  00F9               	movwf	??___fleq+1
  9016     1AFC  3080               	movlw	128
  9017     1AFD  0572               	andwf	___fleq@ff1+2,w
  9018     1AFE  00FA               	movwf	??___fleq+2
  9019     1AFF  307F               	movlw	127
  9020     1B00  0573               	andwf	___fleq@ff1+3,w
  9021     1B01  00FB               	movwf	??___fleq+3
  9022     1B02  087B               	movf	??___fleq+3,w
  9023     1B03  047A               	iorwf	??___fleq+2,w
  9024     1B04  0479               	iorwf	??___fleq+1,w
  9025     1B05  0478               	iorwf	??___fleq,w
  9026     1B06  1D03               	skipz
  9027     1B07  2B09               	goto	u5251
  9028     1B08  2B0A               	goto	u5250
  9029     1B09                     u5251:
  9030     1B09  2B12               	goto	l619
  9031     1B0A                     u5250:
  9032     1B0A                     l3364:
  9033     1B0A  3000               	movlw	0
  9034     1B0B  00F3               	movwf	___fleq@ff1+3
  9035     1B0C  3000               	movlw	0
  9036     1B0D  00F2               	movwf	___fleq@ff1+2
  9037     1B0E  3000               	movlw	0
  9038     1B0F  00F1               	movwf	___fleq@ff1+1
  9039     1B10  3000               	movlw	0
  9040     1B11  00F0               	movwf	___fleq@ff1
  9041     1B12                     l619:
  9042     1B12  3000               	movlw	0
  9043     1B13  0574               	andwf	___fleq@ff2,w
  9044     1B14  00F8               	movwf	??___fleq
  9045     1B15  3000               	movlw	0
  9046     1B16  0575               	andwf	___fleq@ff2+1,w
  9047     1B17  00F9               	movwf	??___fleq+1
  9048     1B18  3080               	movlw	128
  9049     1B19  0576               	andwf	___fleq@ff2+2,w
  9050     1B1A  00FA               	movwf	??___fleq+2
  9051     1B1B  307F               	movlw	127
  9052     1B1C  0577               	andwf	___fleq@ff2+3,w
  9053     1B1D  00FB               	movwf	??___fleq+3
  9054     1B1E  087B               	movf	??___fleq+3,w
  9055     1B1F  047A               	iorwf	??___fleq+2,w
  9056     1B20  0479               	iorwf	??___fleq+1,w
  9057     1B21  0478               	iorwf	??___fleq,w
  9058     1B22  1D03               	skipz
  9059     1B23  2B25               	goto	u5261
  9060     1B24  2B26               	goto	u5260
  9061     1B25                     u5261:
  9062     1B25  2B2E               	goto	l620
  9063     1B26                     u5260:
  9064     1B26                     l3366:
  9065     1B26  3000               	movlw	0
  9066     1B27  00F7               	movwf	___fleq@ff2+3
  9067     1B28  3000               	movlw	0
  9068     1B29  00F6               	movwf	___fleq@ff2+2
  9069     1B2A  3000               	movlw	0
  9070     1B2B  00F5               	movwf	___fleq@ff2+1
  9071     1B2C  3000               	movlw	0
  9072     1B2D  00F4               	movwf	___fleq@ff2
  9073     1B2E                     l620:
  9074     1B2E  0877               	movf	___fleq@ff2+3,w
  9075     1B2F  0673               	xorwf	___fleq@ff1+3,w
  9076     1B30  1D03               	skipz
  9077     1B31  2B3C               	goto	u5275
  9078     1B32  0876               	movf	___fleq@ff2+2,w
  9079     1B33  0672               	xorwf	___fleq@ff1+2,w
  9080     1B34  1D03               	skipz
  9081     1B35  2B3C               	goto	u5275
  9082     1B36  0875               	movf	___fleq@ff2+1,w
  9083     1B37  0671               	xorwf	___fleq@ff1+1,w
  9084     1B38  1D03               	skipz
  9085     1B39  2B3C               	goto	u5275
  9086     1B3A  0874               	movf	___fleq@ff2,w
  9087     1B3B  0670               	xorwf	___fleq@ff1,w
  9088     1B3C                     u5275:
  9089     1B3C  1903               	skipnz
  9090     1B3D  2B3F               	goto	u5271
  9091     1B3E  2B40               	goto	u5270
  9092     1B3F                     u5271:
  9093     1B3F  2B42               	goto	l3370
  9094     1B40                     u5270:
  9095     1B40                     l3368:
  9096     1B40  1003               	clrc
  9097     1B41  2B43               	goto	l621
  9098     1B42                     l3370:
  9099     1B42  1403               	setc
  9100     1B43                     l621:
  9101     1B43  0008               	return
  9102     1B44                     __end_of___fleq:
  9103                           
  9104                           	psect	text19
  9105     18D6                     __ptext19:	
  9106 ;; *************** function _spiWrite *****************
  9107 ;; Defined at:
  9108 ;;		line 34 in file "SPI.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;  dat             1    wreg     unsigned char 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  dat             1    0[COMMON] unsigned char 
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9122 ;;      Params:         0       0       0       0       0
  9123 ;;      Locals:         1       0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0
  9125 ;;      Totals:         1       0       0       0       0
  9126 ;;Total ram usage:        1 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; This function calls:
  9129 ;;		Nothing
  9130 ;; This function is called by:
  9131 ;;		_main
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135     18D6                     _spiWrite:	
  9136                           ;psect for function _spiWrite
  9137                           
  9138                           
  9139                           ;incstack = 0
  9140                           ; Regs used in _spiWrite: [wreg]
  9141                           ;spiWrite@dat stored from wreg
  9142     18D6  00F0               	movwf	spiWrite@dat
  9143     18D7                     l3576:
  9144                           
  9145                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  9146     18D7  0870               	movf	spiWrite@dat,w
  9147     18D8  1283               	bcf	3,5	;RP0=0, select bank0
  9148     18D9  1303               	bcf	3,6	;RP1=0, select bank0
  9149     18DA  0093               	movwf	19	;volatile
  9150     18DB                     l188:
  9151     18DB  0008               	return
  9152     18DC                     __end_of_spiWrite:
  9153                           
  9154                           	psect	text20
  9155     18EB                     __ptext20:	
  9156 ;; *************** function _spiRead *****************
  9157 ;; Defined at:
  9158 ;;		line 47 in file "SPI.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;		None
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1    wreg      unsigned char 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2, status,0, pclath, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9172 ;;      Params:         0       0       0       0       0
  9173 ;;      Locals:         0       0       0       0       0
  9174 ;;      Temps:          0       0       0       0       0
  9175 ;;      Totals:         0       0       0       0       0
  9176 ;;Total ram usage:        0 bytes
  9177 ;; Hardware stack levels used: 1
  9178 ;; Hardware stack levels required when called: 1
  9179 ;; This function calls:
  9180 ;;		_spiReceiveWait
  9181 ;; This function is called by:
  9182 ;;		_main
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186     18EB                     _spiRead:	
  9187                           ;psect for function _spiRead
  9188                           
  9189     18EB                     l3886:	
  9190                           ;incstack = 0
  9191                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9192                           
  9193                           
  9194                           ;SPI.c: 49:     spiReceiveWait();
  9195     18EB  160A  158A  20DC  160A  158A  	fcall	_spiReceiveWait
  9196     18F0                     l3888:
  9197                           
  9198                           ;SPI.c: 50:     return(SSPBUF);
  9199     18F0  1283               	bcf	3,5	;RP0=0, select bank0
  9200     18F1  1303               	bcf	3,6	;RP1=0, select bank0
  9201     18F2  0813               	movf	19,w	;volatile
  9202     18F3                     l196:
  9203     18F3  0008               	return
  9204     18F4                     __end_of_spiRead:
  9205                           
  9206                           	psect	text21
  9207     18DC                     __ptext21:	
  9208 ;; *************** function _spiReceiveWait *****************
  9209 ;; Defined at:
  9210 ;;		line 29 in file "SPI.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		None
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9224 ;;      Params:         0       0       0       0       0
  9225 ;;      Locals:         0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0
  9227 ;;      Totals:         0       0       0       0       0
  9228 ;;Total ram usage:        0 bytes
  9229 ;; Hardware stack levels used: 1
  9230 ;; This function calls:
  9231 ;;		Nothing
  9232 ;; This function is called by:
  9233 ;;		_spiRead
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237     18DC                     _spiReceiveWait:	
  9238                           ;psect for function _spiReceiveWait
  9239                           
  9240     18DC                     l3148:	
  9241                           ;incstack = 0
  9242                           ; Regs used in _spiReceiveWait: []
  9243                           
  9244     18DC                     l182:	
  9245                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  9246                           
  9247     18DC  1683               	bsf	3,5	;RP0=1, select bank1
  9248     18DD  1303               	bcf	3,6	;RP1=0, select bank1
  9249     18DE  1C14               	btfss	20,0	;volatile
  9250     18DF  28E1               	goto	u4601
  9251     18E0  28E2               	goto	u4600
  9252     18E1                     u4601:
  9253     18E1  28DC               	goto	l182
  9254     18E2                     u4600:
  9255     18E2                     l185:
  9256     18E2  0008               	return
  9257     18E3                     __end_of_spiReceiveWait:
  9258                           
  9259                           	psect	text22
  9260     1C9E                     __ptext22:	
  9261 ;; *************** function _setupINTOSC *****************
  9262 ;; Defined at:
  9263 ;;		line 10 in file "oscilador.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  IRCF            1    wreg     unsigned char 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  IRCF            1    0[COMMON] unsigned char 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      void 
  9270 ;; Registers used:
  9271 ;;		wreg, status,2, status,0
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9277 ;;      Params:         0       0       0       0       0
  9278 ;;      Locals:         1       0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0
  9280 ;;      Totals:         1       0       0       0       0
  9281 ;;Total ram usage:        1 bytes
  9282 ;; Hardware stack levels used: 1
  9283 ;; This function calls:
  9284 ;;		Nothing
  9285 ;; This function is called by:
  9286 ;;		_main
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290     1C9E                     _setupINTOSC:	
  9291                           ;psect for function _setupINTOSC
  9292                           
  9293                           
  9294                           ;incstack = 0
  9295                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  9296                           ;setupINTOSC@IRCF stored from wreg
  9297     1C9E  00F0               	movwf	setupINTOSC@IRCF
  9298     1C9F                     l3508:
  9299                           
  9300                           ;oscilador.c: 11:     if (IRCF == 7){
  9301     1C9F  3007               	movlw	7
  9302     1CA0  0670               	xorwf	setupINTOSC@IRCF,w
  9303     1CA1  1D03               	btfss	3,2
  9304     1CA2  2CA4               	goto	u5661
  9305     1CA3  2CA5               	goto	u5660
  9306     1CA4                     u5661:
  9307     1CA4  2CA9               	goto	l154
  9308     1CA5                     u5660:
  9309     1CA5                     l3510:
  9310                           
  9311                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  9312     1CA5  3070               	movlw	112
  9313     1CA6  1683               	bsf	3,5	;RP0=1, select bank1
  9314     1CA7  1303               	bcf	3,6	;RP1=0, select bank1
  9315     1CA8  048F               	iorwf	15,f	;volatile
  9316     1CA9                     l154:	
  9317                           ;oscilador.c: 13:     }
  9318                           
  9319                           
  9320                           ;oscilador.c: 14:     if (IRCF == 6){
  9321     1CA9  3006               	movlw	6
  9322     1CAA  0670               	xorwf	setupINTOSC@IRCF,w
  9323     1CAB  1D03               	btfss	3,2
  9324     1CAC  2CAE               	goto	u5671
  9325     1CAD  2CAF               	goto	u5670
  9326     1CAE                     u5671:
  9327     1CAE  2CB5               	goto	l155
  9328     1CAF                     u5670:
  9329     1CAF                     l3512:
  9330                           
  9331                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  9332     1CAF  1683               	bsf	3,5	;RP0=1, select bank1
  9333     1CB0  1303               	bcf	3,6	;RP1=0, select bank1
  9334     1CB1  080F               	movf	15,w	;volatile
  9335     1CB2  398F               	andlw	-113
  9336     1CB3  3860               	iorlw	96
  9337     1CB4  008F               	movwf	15	;volatile
  9338     1CB5                     l155:	
  9339                           ;oscilador.c: 16:     }
  9340                           
  9341                           
  9342                           ;oscilador.c: 17:     if (IRCF == 5){
  9343     1CB5  3005               	movlw	5
  9344     1CB6  0670               	xorwf	setupINTOSC@IRCF,w
  9345     1CB7  1D03               	btfss	3,2
  9346     1CB8  2CBA               	goto	u5681
  9347     1CB9  2CBB               	goto	u5680
  9348     1CBA                     u5681:
  9349     1CBA  2CC1               	goto	l156
  9350     1CBB                     u5680:
  9351     1CBB                     l3514:
  9352                           
  9353                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  9354     1CBB  1683               	bsf	3,5	;RP0=1, select bank1
  9355     1CBC  1303               	bcf	3,6	;RP1=0, select bank1
  9356     1CBD  080F               	movf	15,w	;volatile
  9357     1CBE  398F               	andlw	-113
  9358     1CBF  3850               	iorlw	80
  9359     1CC0  008F               	movwf	15	;volatile
  9360     1CC1                     l156:	
  9361                           ;oscilador.c: 19:     }
  9362                           
  9363                           
  9364                           ;oscilador.c: 20:     if (IRCF == 4){
  9365     1CC1  3004               	movlw	4
  9366     1CC2  0670               	xorwf	setupINTOSC@IRCF,w
  9367     1CC3  1D03               	btfss	3,2
  9368     1CC4  2CC6               	goto	u5691
  9369     1CC5  2CC7               	goto	u5690
  9370     1CC6                     u5691:
  9371     1CC6  2CCD               	goto	l157
  9372     1CC7                     u5690:
  9373     1CC7                     l3516:
  9374                           
  9375                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  9376     1CC7  1683               	bsf	3,5	;RP0=1, select bank1
  9377     1CC8  1303               	bcf	3,6	;RP1=0, select bank1
  9378     1CC9  080F               	movf	15,w	;volatile
  9379     1CCA  398F               	andlw	-113
  9380     1CCB  3840               	iorlw	64
  9381     1CCC  008F               	movwf	15	;volatile
  9382     1CCD                     l157:	
  9383                           ;oscilador.c: 22:     }
  9384                           
  9385                           
  9386                           ;oscilador.c: 23:     if (IRCF == 3){
  9387     1CCD  3003               	movlw	3
  9388     1CCE  0670               	xorwf	setupINTOSC@IRCF,w
  9389     1CCF  1D03               	btfss	3,2
  9390     1CD0  2CD2               	goto	u5701
  9391     1CD1  2CD3               	goto	u5700
  9392     1CD2                     u5701:
  9393     1CD2  2CD9               	goto	l158
  9394     1CD3                     u5700:
  9395     1CD3                     l3518:
  9396                           
  9397                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  9398     1CD3  1683               	bsf	3,5	;RP0=1, select bank1
  9399     1CD4  1303               	bcf	3,6	;RP1=0, select bank1
  9400     1CD5  080F               	movf	15,w	;volatile
  9401     1CD6  398F               	andlw	-113
  9402     1CD7  3830               	iorlw	48
  9403     1CD8  008F               	movwf	15	;volatile
  9404     1CD9                     l158:	
  9405                           ;oscilador.c: 25:     }
  9406                           
  9407                           
  9408                           ;oscilador.c: 26:     if (IRCF == 2){
  9409     1CD9  3002               	movlw	2
  9410     1CDA  0670               	xorwf	setupINTOSC@IRCF,w
  9411     1CDB  1D03               	btfss	3,2
  9412     1CDC  2CDE               	goto	u5711
  9413     1CDD  2CDF               	goto	u5710
  9414     1CDE                     u5711:
  9415     1CDE  2CE5               	goto	l159
  9416     1CDF                     u5710:
  9417     1CDF                     l3520:
  9418                           
  9419                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  9420     1CDF  1683               	bsf	3,5	;RP0=1, select bank1
  9421     1CE0  1303               	bcf	3,6	;RP1=0, select bank1
  9422     1CE1  080F               	movf	15,w	;volatile
  9423     1CE2  398F               	andlw	-113
  9424     1CE3  3820               	iorlw	32
  9425     1CE4  008F               	movwf	15	;volatile
  9426     1CE5                     l159:	
  9427                           ;oscilador.c: 28:     }
  9428                           
  9429                           
  9430                           ;oscilador.c: 29:     if (IRCF == 1){
  9431     1CE5  0370               	decf	setupINTOSC@IRCF,w
  9432     1CE6  1D03               	btfss	3,2
  9433     1CE7  2CE9               	goto	u5721
  9434     1CE8  2CEA               	goto	u5720
  9435     1CE9                     u5721:
  9436     1CE9  2CF0               	goto	l160
  9437     1CEA                     u5720:
  9438     1CEA                     l3522:
  9439                           
  9440                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  9441     1CEA  1683               	bsf	3,5	;RP0=1, select bank1
  9442     1CEB  1303               	bcf	3,6	;RP1=0, select bank1
  9443     1CEC  080F               	movf	15,w	;volatile
  9444     1CED  398F               	andlw	-113
  9445     1CEE  3810               	iorlw	16
  9446     1CEF  008F               	movwf	15	;volatile
  9447     1CF0                     l160:	
  9448                           ;oscilador.c: 31:     }
  9449                           
  9450                           
  9451                           ;oscilador.c: 32:     if (IRCF == 0){
  9452     1CF0  0870               	movf	setupINTOSC@IRCF,w
  9453     1CF1  1D03               	btfss	3,2
  9454     1CF2  2CF4               	goto	u5731
  9455     1CF3  2CF5               	goto	u5730
  9456     1CF4                     u5731:
  9457     1CF4  2CF9               	goto	l3526
  9458     1CF5                     u5730:
  9459     1CF5                     l3524:
  9460                           
  9461                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  9462     1CF5  308F               	movlw	-113
  9463     1CF6  1683               	bsf	3,5	;RP0=1, select bank1
  9464     1CF7  1303               	bcf	3,6	;RP1=0, select bank1
  9465     1CF8  058F               	andwf	15,f	;volatile
  9466     1CF9                     l3526:
  9467                           
  9468                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  9469     1CF9  1683               	bsf	3,5	;RP0=1, select bank1
  9470     1CFA  1303               	bcf	3,6	;RP1=0, select bank1
  9471     1CFB  140F               	bsf	15,0	;volatile
  9472     1CFC                     l162:
  9473     1CFC  0008               	return
  9474     1CFD                     __end_of_setupINTOSC:
  9475                           
  9476                           	psect	text23
  9477     195E                     __ptext23:	
  9478 ;; *************** function _portsetup *****************
  9479 ;; Defined at:
  9480 ;;		line 139 in file "main.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;		None
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;		None
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  1    wreg      void 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0, pclath, cstack
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9494 ;;      Params:         0       0       0       0       0
  9495 ;;      Locals:         0       0       0       0       0
  9496 ;;      Temps:          0       0       0       0       0
  9497 ;;      Totals:         0       0       0       0       0
  9498 ;;Total ram usage:        0 bytes
  9499 ;; Hardware stack levels used: 1
  9500 ;; Hardware stack levels required when called: 1
  9501 ;; This function calls:
  9502 ;;		_spiInit
  9503 ;; This function is called by:
  9504 ;;		_main
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508     195E                     _portsetup:	
  9509                           ;psect for function _portsetup
  9510                           
  9511     195E                     l3528:	
  9512                           ;incstack = 0
  9513                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  9514                           
  9515                           
  9516                           ;main.c: 140:     ANSEL = 0;
  9517     195E  1683               	bsf	3,5	;RP0=1, select bank3
  9518     195F  1703               	bsf	3,6	;RP1=1, select bank3
  9519     1960  0188               	clrf	8	;volatile
  9520                           
  9521                           ;main.c: 141:     ANSELH = 0;
  9522     1961  0189               	clrf	9	;volatile
  9523                           
  9524                           ;main.c: 142:     TRISD = 0;
  9525     1962  1683               	bsf	3,5	;RP0=1, select bank1
  9526     1963  1303               	bcf	3,6	;RP1=0, select bank1
  9527     1964  0188               	clrf	8	;volatile
  9528                           
  9529                           ;main.c: 143:     PORTD = 0;
  9530     1965  1283               	bcf	3,5	;RP0=0, select bank0
  9531     1966  1303               	bcf	3,6	;RP1=0, select bank0
  9532     1967  0188               	clrf	8	;volatile
  9533                           
  9534                           ;main.c: 144:     TRISB = 0;
  9535     1968  1683               	bsf	3,5	;RP0=1, select bank1
  9536     1969  1303               	bcf	3,6	;RP1=0, select bank1
  9537     196A  0186               	clrf	6	;volatile
  9538                           
  9539                           ;main.c: 145:     PORTB = 0;
  9540     196B  1283               	bcf	3,5	;RP0=0, select bank0
  9541     196C  1303               	bcf	3,6	;RP1=0, select bank0
  9542     196D  0186               	clrf	6	;volatile
  9543                           
  9544                           ;main.c: 146:     TRISA = 0;
  9545     196E  1683               	bsf	3,5	;RP0=1, select bank1
  9546     196F  1303               	bcf	3,6	;RP1=0, select bank1
  9547     1970  0185               	clrf	5	;volatile
  9548                           
  9549                           ;main.c: 147:     PORTA = 0;
  9550     1971  1283               	bcf	3,5	;RP0=0, select bank0
  9551     1972  1303               	bcf	3,6	;RP1=0, select bank0
  9552     1973  0185               	clrf	5	;volatile
  9553     1974                     l3530:
  9554                           
  9555                           ;main.c: 149:     PORTAbits.RA0 = 1;
  9556     1974  1405               	bsf	5,0	;volatile
  9557     1975                     l3532:
  9558                           
  9559                           ;main.c: 150:     PORTAbits.RA1 = 1;
  9560     1975  1485               	bsf	5,1	;volatile
  9561     1976                     l3534:
  9562                           
  9563                           ;main.c: 151:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  9564     1976  01F0               	clrf	spiInit@sDataSample
  9565     1977  01F1               	clrf	spiInit@sClockIdle
  9566     1978  01F2               	clrf	spiInit@sTransmitEdge
  9567     1979  3020               	movlw	32
  9568     197A  160A  158A  210C  160A  158A  	fcall	_spiInit
  9569     197F                     l94:
  9570     197F  0008               	return
  9571     1980                     __end_of_portsetup:
  9572                           
  9573                           	psect	text24
  9574     190C                     __ptext24:	
  9575 ;; *************** function _spiInit *****************
  9576 ;; Defined at:
  9577 ;;		line 12 in file "SPI.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  sType           1    wreg     enum E1292
  9580 ;;  sDataSample     1    0[COMMON] enum E1300
  9581 ;;  sClockIdle      1    1[COMMON] enum E1304
  9582 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;  sType           1    3[COMMON] enum E1292
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      void 
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9594 ;;      Params:         3       0       0       0       0
  9595 ;;      Locals:         1       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0
  9597 ;;      Totals:         4       0       0       0       0
  9598 ;;Total ram usage:        4 bytes
  9599 ;; Hardware stack levels used: 1
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_portsetup
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607     190C                     _spiInit:	
  9608                           ;psect for function _spiInit
  9609                           
  9610                           
  9611                           ;incstack = 0
  9612                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9613                           ;spiInit@sType stored from wreg
  9614     190C  00F3               	movwf	spiInit@sType
  9615     190D                     l3128:
  9616                           
  9617                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  9618     190D  1683               	bsf	3,5	;RP0=1, select bank1
  9619     190E  1303               	bcf	3,6	;RP1=0, select bank1
  9620     190F  1287               	bcf	7,5	;volatile
  9621                           
  9622                           ;SPI.c: 15:     if(sType & 0b00000100)
  9623     1910  1D73               	btfss	spiInit@sType,2
  9624     1911  2913               	goto	u4591
  9625     1912  2914               	goto	u4590
  9626     1913                     u4591:
  9627     1913  2918               	goto	l3134
  9628     1914                     u4590:
  9629     1914                     l3130:
  9630                           
  9631                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  9632     1914  0872               	movf	spiInit@sTransmitEdge,w
  9633     1915  0094               	movwf	20	;volatile
  9634     1916                     l3132:
  9635                           
  9636                           ;SPI.c: 18:         TRISC3 = 1;
  9637     1916  1587               	bsf	7,3	;volatile
  9638                           
  9639                           ;SPI.c: 19:     }
  9640     1917  291C               	goto	l178
  9641     1918                     l3134:
  9642                           
  9643                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  9644     1918  0870               	movf	spiInit@sDataSample,w
  9645     1919  0472               	iorwf	spiInit@sTransmitEdge,w
  9646     191A  0094               	movwf	20	;volatile
  9647     191B                     l3136:
  9648                           
  9649                           ;SPI.c: 23:         TRISC3 = 0;
  9650     191B  1187               	bcf	7,3	;volatile
  9651     191C                     l178:	
  9652                           ;SPI.c: 24:     }
  9653                           
  9654                           
  9655                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  9656     191C  0873               	movf	spiInit@sType,w
  9657     191D  0471               	iorwf	spiInit@sClockIdle,w
  9658     191E  1283               	bcf	3,5	;RP0=0, select bank0
  9659     191F  1303               	bcf	3,6	;RP1=0, select bank0
  9660     1920  0094               	movwf	20	;volatile
  9661     1921                     l179:
  9662     1921  0008               	return
  9663     1922                     __end_of_spiInit:
  9664                           
  9665                           	psect	text25
  9666     1B44                     __ptext25:	
  9667 ;; *************** function _inttochar *****************
  9668 ;; Defined at:
  9669 ;;		line 12 in file "conversiones.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  num             1    wreg     unsigned char 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  num             1    0[COMMON] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      unsigned char 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9683 ;;      Params:         0       0       0       0       0
  9684 ;;      Locals:         1       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0
  9686 ;;      Totals:         1       0       0       0       0
  9687 ;;Total ram usage:        1 bytes
  9688 ;; Hardware stack levels used: 1
  9689 ;; This function calls:
  9690 ;;		Nothing
  9691 ;; This function is called by:
  9692 ;;		_main
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696     1B44                     _inttochar:	
  9697                           ;psect for function _inttochar
  9698                           
  9699                           
  9700                           ;incstack = 0
  9701                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  9702                           ;inttochar@num stored from wreg
  9703     1B44  00F0               	movwf	inttochar@num
  9704     1B45                     l3602:
  9705                           
  9706                           ;conversiones.c: 13:     if(num == 0){
  9707     1B45  0870               	movf	inttochar@num,w
  9708     1B46  1D03               	btfss	3,2
  9709     1B47  2B49               	goto	u5841
  9710     1B48  2B4A               	goto	u5840
  9711     1B49                     u5841:
  9712     1B49  2B4C               	goto	l3610
  9713     1B4A                     u5840:
  9714     1B4A                     l3604:
  9715                           
  9716                           ;conversiones.c: 14:         return '0';
  9717     1B4A  3030               	movlw	48
  9718     1B4B  2B93               	goto	l200
  9719     1B4C                     l3610:
  9720     1B4C  0370               	decf	inttochar@num,w
  9721     1B4D  1D03               	btfss	3,2
  9722     1B4E  2B50               	goto	u5851
  9723     1B4F  2B51               	goto	u5850
  9724     1B50                     u5851:
  9725     1B50  2B53               	goto	l3618
  9726     1B51                     u5850:
  9727     1B51                     l3612:
  9728                           
  9729                           ;conversiones.c: 17:         return '1';
  9730     1B51  3031               	movlw	49
  9731     1B52  2B93               	goto	l200
  9732     1B53                     l3618:
  9733     1B53  3002               	movlw	2
  9734     1B54  0670               	xorwf	inttochar@num,w
  9735     1B55  1D03               	btfss	3,2
  9736     1B56  2B58               	goto	u5861
  9737     1B57  2B59               	goto	u5860
  9738     1B58                     u5861:
  9739     1B58  2B5B               	goto	l3626
  9740     1B59                     u5860:
  9741     1B59                     l3620:
  9742                           
  9743                           ;conversiones.c: 20:         return '2';
  9744     1B59  3032               	movlw	50
  9745     1B5A  2B93               	goto	l200
  9746     1B5B                     l3626:
  9747     1B5B  3003               	movlw	3
  9748     1B5C  0670               	xorwf	inttochar@num,w
  9749     1B5D  1D03               	btfss	3,2
  9750     1B5E  2B60               	goto	u5871
  9751     1B5F  2B61               	goto	u5870
  9752     1B60                     u5871:
  9753     1B60  2B63               	goto	l3634
  9754     1B61                     u5870:
  9755     1B61                     l3628:
  9756                           
  9757                           ;conversiones.c: 23:         return '3';
  9758     1B61  3033               	movlw	51
  9759     1B62  2B93               	goto	l200
  9760     1B63                     l3634:
  9761     1B63  3004               	movlw	4
  9762     1B64  0670               	xorwf	inttochar@num,w
  9763     1B65  1D03               	btfss	3,2
  9764     1B66  2B68               	goto	u5881
  9765     1B67  2B69               	goto	u5880
  9766     1B68                     u5881:
  9767     1B68  2B6B               	goto	l3642
  9768     1B69                     u5880:
  9769     1B69                     l3636:
  9770                           
  9771                           ;conversiones.c: 26:         return '4';
  9772     1B69  3034               	movlw	52
  9773     1B6A  2B93               	goto	l200
  9774     1B6B                     l3642:
  9775     1B6B  3005               	movlw	5
  9776     1B6C  0670               	xorwf	inttochar@num,w
  9777     1B6D  1D03               	btfss	3,2
  9778     1B6E  2B70               	goto	u5891
  9779     1B6F  2B71               	goto	u5890
  9780     1B70                     u5891:
  9781     1B70  2B73               	goto	l3650
  9782     1B71                     u5890:
  9783     1B71                     l3644:
  9784                           
  9785                           ;conversiones.c: 29:         return '5';
  9786     1B71  3035               	movlw	53
  9787     1B72  2B93               	goto	l200
  9788     1B73                     l3650:
  9789     1B73  3006               	movlw	6
  9790     1B74  0670               	xorwf	inttochar@num,w
  9791     1B75  1D03               	btfss	3,2
  9792     1B76  2B78               	goto	u5901
  9793     1B77  2B79               	goto	u5900
  9794     1B78                     u5901:
  9795     1B78  2B7B               	goto	l3658
  9796     1B79                     u5900:
  9797     1B79                     l3652:
  9798                           
  9799                           ;conversiones.c: 32:         return '6';
  9800     1B79  3036               	movlw	54
  9801     1B7A  2B93               	goto	l200
  9802     1B7B                     l3658:
  9803     1B7B  3007               	movlw	7
  9804     1B7C  0670               	xorwf	inttochar@num,w
  9805     1B7D  1D03               	btfss	3,2
  9806     1B7E  2B80               	goto	u5911
  9807     1B7F  2B81               	goto	u5910
  9808     1B80                     u5911:
  9809     1B80  2B83               	goto	l3666
  9810     1B81                     u5910:
  9811     1B81                     l3660:
  9812                           
  9813                           ;conversiones.c: 35:         return '7';
  9814     1B81  3037               	movlw	55
  9815     1B82  2B93               	goto	l200
  9816     1B83                     l3666:
  9817     1B83  3008               	movlw	8
  9818     1B84  0670               	xorwf	inttochar@num,w
  9819     1B85  1D03               	btfss	3,2
  9820     1B86  2B88               	goto	u5921
  9821     1B87  2B89               	goto	u5920
  9822     1B88                     u5921:
  9823     1B88  2B8B               	goto	l3674
  9824     1B89                     u5920:
  9825     1B89                     l3668:
  9826                           
  9827                           ;conversiones.c: 38:         return '8';
  9828     1B89  3038               	movlw	56
  9829     1B8A  2B93               	goto	l200
  9830     1B8B                     l3674:
  9831     1B8B  3009               	movlw	9
  9832     1B8C  0670               	xorwf	inttochar@num,w
  9833     1B8D  1D03               	btfss	3,2
  9834     1B8E  2B90               	goto	u5931
  9835     1B8F  2B91               	goto	u5930
  9836     1B90                     u5931:
  9837     1B90  2B93               	goto	l213
  9838     1B91                     u5930:
  9839     1B91                     l3676:
  9840                           
  9841                           ;conversiones.c: 41:         return '9';
  9842     1B91  3039               	movlw	57
  9843     1B92  2B93               	goto	l200
  9844     1B93                     l213:
  9845     1B93                     l200:
  9846     1B93  0008               	return
  9847     1B94                     __end_of_inttochar:
  9848                           
  9849                           	psect	text26
  9850     1CFD                     __ptext26:	
  9851 ;; *************** function _descomponer *****************
  9852 ;; Defined at:
  9853 ;;		line 45 in file "conversiones.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  pos             2    4[BANK0 ] int 
  9856 ;;  num             2    6[BANK0 ] unsigned int 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  dec             1   12[BANK0 ] unsigned char 
  9859 ;;  uni             1   11[BANK0 ] unsigned char 
  9860 ;;  cent            1   10[BANK0 ] unsigned char 
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  1    wreg      unsigned char 
  9863 ;; Registers used:
  9864 ;;		wreg, status,2, status,0, pclath, cstack
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9870 ;;      Params:         0       4       0       0       0
  9871 ;;      Locals:         0       3       0       0       0
  9872 ;;      Temps:          0       2       0       0       0
  9873 ;;      Totals:         0       9       0       0       0
  9874 ;;Total ram usage:        9 bytes
  9875 ;; Hardware stack levels used: 1
  9876 ;; Hardware stack levels required when called: 1
  9877 ;; This function calls:
  9878 ;;		___awdiv
  9879 ;;		___awmod
  9880 ;;		___lwdiv
  9881 ;;		___lwmod
  9882 ;; This function is called by:
  9883 ;;		_main
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887     1CFD                     _descomponer:	
  9888                           ;psect for function _descomponer
  9889                           
  9890     1CFD                     l3578:	
  9891                           ;incstack = 0
  9892                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  9893                           
  9894                           
  9895                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  9896     1CFD  3064               	movlw	100
  9897     1CFE  00F6               	movwf	___lwdiv@divisor
  9898     1CFF  3000               	movlw	0
  9899     1D00  00F7               	movwf	___lwdiv@divisor+1
  9900     1D01  1283               	bcf	3,5	;RP0=0, select bank0
  9901     1D02  1303               	bcf	3,6	;RP1=0, select bank0
  9902     1D03  0827               	movf	descomponer@num+1,w
  9903     1D04  00F9               	movwf	___lwdiv@dividend+1
  9904     1D05  0826               	movf	descomponer@num,w
  9905     1D06  00F8               	movwf	___lwdiv@dividend
  9906     1D07  160A  158A  226C  160A  158A  	fcall	___lwdiv
  9907     1D0C  0876               	movf	?___lwdiv,w
  9908     1D0D  1283               	bcf	3,5	;RP0=0, select bank0
  9909     1D0E  1303               	bcf	3,6	;RP1=0, select bank0
  9910     1D0F  00AA               	movwf	descomponer@cent
  9911                           
  9912                           ;conversiones.c: 50:     dec = (num%100);
  9913     1D10  3064               	movlw	100
  9914     1D11  00F0               	movwf	___lwmod@divisor
  9915     1D12  3000               	movlw	0
  9916     1D13  00F1               	movwf	___lwmod@divisor+1
  9917     1D14  0827               	movf	descomponer@num+1,w
  9918     1D15  00F3               	movwf	___lwmod@dividend+1
  9919     1D16  0826               	movf	descomponer@num,w
  9920     1D17  00F2               	movwf	___lwmod@dividend
  9921     1D18  160A  158A  21F0  160A  158A  	fcall	___lwmod
  9922     1D1D  0870               	movf	?___lwmod,w
  9923     1D1E  1283               	bcf	3,5	;RP0=0, select bank0
  9924     1D1F  1303               	bcf	3,6	;RP1=0, select bank0
  9925     1D20  00AC               	movwf	descomponer@dec
  9926                           
  9927                           ;conversiones.c: 51:     uni = (dec%10);
  9928     1D21  300A               	movlw	10
  9929     1D22  00F0               	movwf	___awmod@divisor
  9930     1D23  3000               	movlw	0
  9931     1D24  00F1               	movwf	___awmod@divisor+1
  9932     1D25  082C               	movf	descomponer@dec,w
  9933     1D26  00A8               	movwf	??_descomponer
  9934     1D27  01A9               	clrf	??_descomponer+1
  9935     1D28  0828               	movf	??_descomponer,w
  9936     1D29  00F2               	movwf	___awmod@dividend
  9937     1D2A  0829               	movf	??_descomponer+1,w
  9938     1D2B  00F3               	movwf	___awmod@dividend+1
  9939     1D2C  160A  158A  23E8  160A  158A  	fcall	___awmod
  9940     1D31  0870               	movf	?___awmod,w
  9941     1D32  1283               	bcf	3,5	;RP0=0, select bank0
  9942     1D33  1303               	bcf	3,6	;RP1=0, select bank0
  9943     1D34  00AB               	movwf	descomponer@uni
  9944     1D35                     l3580:
  9945                           
  9946                           ;conversiones.c: 52:     if(pos == 2){
  9947     1D35  3002               	movlw	2
  9948     1D36  0624               	xorwf	descomponer@pos,w
  9949     1D37  0425               	iorwf	descomponer@pos+1,w
  9950     1D38  1D03               	btfss	3,2
  9951     1D39  2D3B               	goto	u5811
  9952     1D3A  2D3C               	goto	u5810
  9953     1D3B                     u5811:
  9954     1D3B  2D3E               	goto	l3588
  9955     1D3C                     u5810:
  9956     1D3C                     l3582:
  9957                           
  9958                           ;conversiones.c: 53:         return cent;
  9959     1D3C  082A               	movf	descomponer@cent,w
  9960     1D3D  2D5D               	goto	l222
  9961     1D3E                     l3588:
  9962     1D3E  0324               	decf	descomponer@pos,w
  9963     1D3F  0425               	iorwf	descomponer@pos+1,w
  9964     1D40  1D03               	btfss	3,2
  9965     1D41  2D43               	goto	u5821
  9966     1D42  2D44               	goto	u5820
  9967     1D43                     u5821:
  9968     1D43  2D56               	goto	l3596
  9969     1D44                     u5820:
  9970     1D44                     l3590:
  9971                           
  9972                           ;conversiones.c: 56:         return (dec/10);
  9973     1D44  300A               	movlw	10
  9974     1D45  00F7               	movwf	___awdiv@divisor
  9975     1D46  3000               	movlw	0
  9976     1D47  00F8               	movwf	___awdiv@divisor+1
  9977     1D48  082C               	movf	descomponer@dec,w
  9978     1D49  00A8               	movwf	??_descomponer
  9979     1D4A  01A9               	clrf	??_descomponer+1
  9980     1D4B  0828               	movf	??_descomponer,w
  9981     1D4C  00F9               	movwf	___awdiv@dividend
  9982     1D4D  0829               	movf	??_descomponer+1,w
  9983     1D4E  00FA               	movwf	___awdiv@dividend+1
  9984     1D4F  160A  158A  25C4  160A  158A  	fcall	___awdiv
  9985     1D54  0877               	movf	?___awdiv,w
  9986     1D55  2D5D               	goto	l222
  9987     1D56                     l3596:
  9988     1D56  0824               	movf	descomponer@pos,w
  9989     1D57  0425               	iorwf	descomponer@pos+1,w
  9990     1D58  1D03               	btfss	3,2
  9991     1D59  2D5B               	goto	u5831
  9992     1D5A  2D5C               	goto	u5830
  9993     1D5B                     u5831:
  9994     1D5B  2D5D               	goto	l222
  9995     1D5C                     u5830:
  9996     1D5C                     l3598:
  9997                           
  9998                           ;conversiones.c: 59:         return uni;
  9999     1D5C  082B               	movf	descomponer@uni,w
 10000     1D5D                     l222:
 10001     1D5D  0008               	return
 10002     1D5E                     __end_of_descomponer:
 10003                           
 10004                           	psect	text27
 10005     19F0                     __ptext27:	
 10006 ;; *************** function ___lwmod *****************
 10007 ;; Defined at:
 10008 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;  divisor         2    0[COMMON] unsigned int 
 10011 ;;  dividend        2    2[COMMON] unsigned int 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;  counter         1    5[COMMON] unsigned char 
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  2    0[COMMON] unsigned int 
 10016 ;; Registers used:
 10017 ;;		wreg, status,2, status,0
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10023 ;;      Params:         4       0       0       0       0
 10024 ;;      Locals:         1       0       0       0       0
 10025 ;;      Temps:          1       0       0       0       0
 10026 ;;      Totals:         6       0       0       0       0
 10027 ;;Total ram usage:        6 bytes
 10028 ;; Hardware stack levels used: 1
 10029 ;; This function calls:
 10030 ;;		Nothing
 10031 ;; This function is called by:
 10032 ;;		_descomponer
 10033 ;;		_fround
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037     19F0                     ___lwmod:	
 10038                           ;psect for function ___lwmod
 10039                           
 10040     19F0                     l2752:	
 10041                           ;incstack = 0
 10042                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10043                           
 10044     19F0  0870               	movf	___lwmod@divisor,w
 10045     19F1  0471               	iorwf	___lwmod@divisor+1,w
 10046     19F2  1903               	btfsc	3,2
 10047     19F3  29F5               	goto	u3691
 10048     19F4  29F6               	goto	u3690
 10049     19F5                     u3691:
 10050     19F5  2A25               	goto	l2770
 10051     19F6                     u3690:
 10052     19F6                     l2754:
 10053     19F6  01F5               	clrf	___lwmod@counter
 10054     19F7  0AF5               	incf	___lwmod@counter,f
 10055     19F8  2A04               	goto	l2760
 10056     19F9                     l2756:
 10057     19F9  3001               	movlw	1
 10058     19FA                     u3705:
 10059     19FA  1003               	clrc
 10060     19FB  0DF0               	rlf	___lwmod@divisor,f
 10061     19FC  0DF1               	rlf	___lwmod@divisor+1,f
 10062     19FD  3EFF               	addlw	-1
 10063     19FE  1D03               	skipz
 10064     19FF  29FA               	goto	u3705
 10065     1A00                     l2758:
 10066     1A00  3001               	movlw	1
 10067     1A01  00F4               	movwf	??___lwmod
 10068     1A02  0874               	movf	??___lwmod,w
 10069     1A03  07F5               	addwf	___lwmod@counter,f
 10070     1A04                     l2760:
 10071     1A04  1FF1               	btfss	___lwmod@divisor+1,7
 10072     1A05  2A07               	goto	u3711
 10073     1A06  2A08               	goto	u3710
 10074     1A07                     u3711:
 10075     1A07  29F9               	goto	l2756
 10076     1A08                     u3710:
 10077     1A08                     l2762:
 10078     1A08  0871               	movf	___lwmod@divisor+1,w
 10079     1A09  0273               	subwf	___lwmod@dividend+1,w
 10080     1A0A  1D03               	skipz
 10081     1A0B  2A0E               	goto	u3725
 10082     1A0C  0870               	movf	___lwmod@divisor,w
 10083     1A0D  0272               	subwf	___lwmod@dividend,w
 10084     1A0E                     u3725:
 10085     1A0E  1C03               	skipc
 10086     1A0F  2A11               	goto	u3721
 10087     1A10  2A12               	goto	u3720
 10088     1A11                     u3721:
 10089     1A11  2A18               	goto	l2766
 10090     1A12                     u3720:
 10091     1A12                     l2764:
 10092     1A12  0870               	movf	___lwmod@divisor,w
 10093     1A13  02F2               	subwf	___lwmod@dividend,f
 10094     1A14  0871               	movf	___lwmod@divisor+1,w
 10095     1A15  1C03               	skipc
 10096     1A16  03F3               	decf	___lwmod@dividend+1,f
 10097     1A17  02F3               	subwf	___lwmod@dividend+1,f
 10098     1A18                     l2766:
 10099     1A18  3001               	movlw	1
 10100     1A19                     u3735:
 10101     1A19  1003               	clrc
 10102     1A1A  0CF1               	rrf	___lwmod@divisor+1,f
 10103     1A1B  0CF0               	rrf	___lwmod@divisor,f
 10104     1A1C  3EFF               	addlw	-1
 10105     1A1D  1D03               	skipz
 10106     1A1E  2A19               	goto	u3735
 10107     1A1F                     l2768:
 10108     1A1F  3001               	movlw	1
 10109     1A20  02F5               	subwf	___lwmod@counter,f
 10110     1A21  1D03               	btfss	3,2
 10111     1A22  2A24               	goto	u3741
 10112     1A23  2A25               	goto	u3740
 10113     1A24                     u3741:
 10114     1A24  2A08               	goto	l2762
 10115     1A25                     u3740:
 10116     1A25                     l2770:
 10117     1A25  0873               	movf	___lwmod@dividend+1,w
 10118     1A26  00F1               	movwf	?___lwmod+1
 10119     1A27  0872               	movf	___lwmod@dividend,w
 10120     1A28  00F0               	movwf	?___lwmod
 10121     1A29                     l749:
 10122     1A29  0008               	return
 10123     1A2A                     __end_of___lwmod:
 10124                           
 10125                           	psect	text28
 10126     1A6C                     __ptext28:	
 10127 ;; *************** function ___lwdiv *****************
 10128 ;; Defined at:
 10129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;  divisor         2    6[COMMON] unsigned int 
 10132 ;;  dividend        2    8[COMMON] unsigned int 
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;  quotient        2   11[COMMON] unsigned int 
 10135 ;;  counter         1   13[COMMON] unsigned char 
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  2    6[COMMON] unsigned int 
 10138 ;; Registers used:
 10139 ;;		wreg, status,2, status,0
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10145 ;;      Params:         4       0       0       0       0
 10146 ;;      Locals:         3       0       0       0       0
 10147 ;;      Temps:          1       0       0       0       0
 10148 ;;      Totals:         8       0       0       0       0
 10149 ;;Total ram usage:        8 bytes
 10150 ;; Hardware stack levels used: 1
 10151 ;; This function calls:
 10152 ;;		Nothing
 10153 ;; This function is called by:
 10154 ;;		_descomponer
 10155 ;;		_fround
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159     1A6C                     ___lwdiv:	
 10160                           ;psect for function ___lwdiv
 10161                           
 10162     1A6C                     l2726:	
 10163                           ;incstack = 0
 10164                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10165                           
 10166     1A6C  01FB               	clrf	___lwdiv@quotient
 10167     1A6D  01FC               	clrf	___lwdiv@quotient+1
 10168     1A6E                     l2728:
 10169     1A6E  0876               	movf	___lwdiv@divisor,w
 10170     1A6F  0477               	iorwf	___lwdiv@divisor+1,w
 10171     1A70  1903               	btfsc	3,2
 10172     1A71  2A73               	goto	u3621
 10173     1A72  2A74               	goto	u3620
 10174     1A73                     u3621:
 10175     1A73  2AAB               	goto	l2748
 10176     1A74                     u3620:
 10177     1A74                     l2730:
 10178     1A74  01FD               	clrf	___lwdiv@counter
 10179     1A75  0AFD               	incf	___lwdiv@counter,f
 10180     1A76  2A82               	goto	l2736
 10181     1A77                     l2732:
 10182     1A77  3001               	movlw	1
 10183     1A78                     u3635:
 10184     1A78  1003               	clrc
 10185     1A79  0DF6               	rlf	___lwdiv@divisor,f
 10186     1A7A  0DF7               	rlf	___lwdiv@divisor+1,f
 10187     1A7B  3EFF               	addlw	-1
 10188     1A7C  1D03               	skipz
 10189     1A7D  2A78               	goto	u3635
 10190     1A7E                     l2734:
 10191     1A7E  3001               	movlw	1
 10192     1A7F  00FA               	movwf	??___lwdiv
 10193     1A80  087A               	movf	??___lwdiv,w
 10194     1A81  07FD               	addwf	___lwdiv@counter,f
 10195     1A82                     l2736:
 10196     1A82  1FF7               	btfss	___lwdiv@divisor+1,7
 10197     1A83  2A85               	goto	u3641
 10198     1A84  2A86               	goto	u3640
 10199     1A85                     u3641:
 10200     1A85  2A77               	goto	l2732
 10201     1A86                     u3640:
 10202     1A86                     l2738:
 10203     1A86  3001               	movlw	1
 10204     1A87                     u3655:
 10205     1A87  1003               	clrc
 10206     1A88  0DFB               	rlf	___lwdiv@quotient,f
 10207     1A89  0DFC               	rlf	___lwdiv@quotient+1,f
 10208     1A8A  3EFF               	addlw	-1
 10209     1A8B  1D03               	skipz
 10210     1A8C  2A87               	goto	u3655
 10211     1A8D  0877               	movf	___lwdiv@divisor+1,w
 10212     1A8E  0279               	subwf	___lwdiv@dividend+1,w
 10213     1A8F  1D03               	skipz
 10214     1A90  2A93               	goto	u3665
 10215     1A91  0876               	movf	___lwdiv@divisor,w
 10216     1A92  0278               	subwf	___lwdiv@dividend,w
 10217     1A93                     u3665:
 10218     1A93  1C03               	skipc
 10219     1A94  2A96               	goto	u3661
 10220     1A95  2A97               	goto	u3660
 10221     1A96                     u3661:
 10222     1A96  2A9E               	goto	l2744
 10223     1A97                     u3660:
 10224     1A97                     l2740:
 10225     1A97  0876               	movf	___lwdiv@divisor,w
 10226     1A98  02F8               	subwf	___lwdiv@dividend,f
 10227     1A99  0877               	movf	___lwdiv@divisor+1,w
 10228     1A9A  1C03               	skipc
 10229     1A9B  03F9               	decf	___lwdiv@dividend+1,f
 10230     1A9C  02F9               	subwf	___lwdiv@dividend+1,f
 10231     1A9D                     l2742:
 10232     1A9D  147B               	bsf	___lwdiv@quotient,0
 10233     1A9E                     l2744:
 10234     1A9E  3001               	movlw	1
 10235     1A9F                     u3675:
 10236     1A9F  1003               	clrc
 10237     1AA0  0CF7               	rrf	___lwdiv@divisor+1,f
 10238     1AA1  0CF6               	rrf	___lwdiv@divisor,f
 10239     1AA2  3EFF               	addlw	-1
 10240     1AA3  1D03               	skipz
 10241     1AA4  2A9F               	goto	u3675
 10242     1AA5                     l2746:
 10243     1AA5  3001               	movlw	1
 10244     1AA6  02FD               	subwf	___lwdiv@counter,f
 10245     1AA7  1D03               	btfss	3,2
 10246     1AA8  2AAA               	goto	u3681
 10247     1AA9  2AAB               	goto	u3680
 10248     1AAA                     u3681:
 10249     1AAA  2A86               	goto	l2738
 10250     1AAB                     u3680:
 10251     1AAB                     l2748:
 10252     1AAB  087C               	movf	___lwdiv@quotient+1,w
 10253     1AAC  00F7               	movwf	?___lwdiv+1
 10254     1AAD  087B               	movf	___lwdiv@quotient,w
 10255     1AAE  00F6               	movwf	?___lwdiv
 10256     1AAF                     l739:
 10257     1AAF  0008               	return
 10258     1AB0                     __end_of___lwdiv:
 10259                           
 10260                           	psect	text29
 10261     1BE8                     __ptext29:	
 10262 ;; *************** function ___awmod *****************
 10263 ;; Defined at:
 10264 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;  divisor         2    0[COMMON] int 
 10267 ;;  dividend        2    2[COMMON] int 
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;  sign            1    6[COMMON] unsigned char 
 10270 ;;  counter         1    5[COMMON] unsigned char 
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  2    0[COMMON] int 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10280 ;;      Params:         4       0       0       0       0
 10281 ;;      Locals:         2       0       0       0       0
 10282 ;;      Temps:          1       0       0       0       0
 10283 ;;      Totals:         7       0       0       0       0
 10284 ;;Total ram usage:        7 bytes
 10285 ;; Hardware stack levels used: 1
 10286 ;; This function calls:
 10287 ;;		Nothing
 10288 ;; This function is called by:
 10289 ;;		_descomponer
 10290 ;;		_scale
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294     1BE8                     ___awmod:	
 10295                           ;psect for function ___awmod
 10296                           
 10297     1BE8                     l2688:	
 10298                           ;incstack = 0
 10299                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10300                           
 10301     1BE8  01F6               	clrf	___awmod@sign
 10302     1BE9                     l2690:
 10303     1BE9  1FF3               	btfss	___awmod@dividend+1,7
 10304     1BEA  2BEC               	goto	u3531
 10305     1BEB  2BED               	goto	u3530
 10306     1BEC                     u3531:
 10307     1BEC  2BF4               	goto	l2696
 10308     1BED                     u3530:
 10309     1BED                     l2692:
 10310     1BED  09F2               	comf	___awmod@dividend,f
 10311     1BEE  09F3               	comf	___awmod@dividend+1,f
 10312     1BEF  0AF2               	incf	___awmod@dividend,f
 10313     1BF0  1903               	skipnz
 10314     1BF1  0AF3               	incf	___awmod@dividend+1,f
 10315     1BF2                     l2694:
 10316     1BF2  01F6               	clrf	___awmod@sign
 10317     1BF3  0AF6               	incf	___awmod@sign,f
 10318     1BF4                     l2696:
 10319     1BF4  1FF1               	btfss	___awmod@divisor+1,7
 10320     1BF5  2BF7               	goto	u3541
 10321     1BF6  2BF8               	goto	u3540
 10322     1BF7                     u3541:
 10323     1BF7  2BFD               	goto	l2700
 10324     1BF8                     u3540:
 10325     1BF8                     l2698:
 10326     1BF8  09F0               	comf	___awmod@divisor,f
 10327     1BF9  09F1               	comf	___awmod@divisor+1,f
 10328     1BFA  0AF0               	incf	___awmod@divisor,f
 10329     1BFB  1903               	skipnz
 10330     1BFC  0AF1               	incf	___awmod@divisor+1,f
 10331     1BFD                     l2700:
 10332     1BFD  0870               	movf	___awmod@divisor,w
 10333     1BFE  0471               	iorwf	___awmod@divisor+1,w
 10334     1BFF  1903               	btfsc	3,2
 10335     1C00  2C02               	goto	u3551
 10336     1C01  2C03               	goto	u3550
 10337     1C02                     u3551:
 10338     1C02  2C32               	goto	l2718
 10339     1C03                     u3550:
 10340     1C03                     l2702:
 10341     1C03  01F5               	clrf	___awmod@counter
 10342     1C04  0AF5               	incf	___awmod@counter,f
 10343     1C05  2C11               	goto	l2708
 10344     1C06                     l2704:
 10345     1C06  3001               	movlw	1
 10346     1C07                     u3565:
 10347     1C07  1003               	clrc
 10348     1C08  0DF0               	rlf	___awmod@divisor,f
 10349     1C09  0DF1               	rlf	___awmod@divisor+1,f
 10350     1C0A  3EFF               	addlw	-1
 10351     1C0B  1D03               	skipz
 10352     1C0C  2C07               	goto	u3565
 10353     1C0D                     l2706:
 10354     1C0D  3001               	movlw	1
 10355     1C0E  00F4               	movwf	??___awmod
 10356     1C0F  0874               	movf	??___awmod,w
 10357     1C10  07F5               	addwf	___awmod@counter,f
 10358     1C11                     l2708:
 10359     1C11  1FF1               	btfss	___awmod@divisor+1,7
 10360     1C12  2C14               	goto	u3571
 10361     1C13  2C15               	goto	u3570
 10362     1C14                     u3571:
 10363     1C14  2C06               	goto	l2704
 10364     1C15                     u3570:
 10365     1C15                     l2710:
 10366     1C15  0871               	movf	___awmod@divisor+1,w
 10367     1C16  0273               	subwf	___awmod@dividend+1,w
 10368     1C17  1D03               	skipz
 10369     1C18  2C1B               	goto	u3585
 10370     1C19  0870               	movf	___awmod@divisor,w
 10371     1C1A  0272               	subwf	___awmod@dividend,w
 10372     1C1B                     u3585:
 10373     1C1B  1C03               	skipc
 10374     1C1C  2C1E               	goto	u3581
 10375     1C1D  2C1F               	goto	u3580
 10376     1C1E                     u3581:
 10377     1C1E  2C25               	goto	l2714
 10378     1C1F                     u3580:
 10379     1C1F                     l2712:
 10380     1C1F  0870               	movf	___awmod@divisor,w
 10381     1C20  02F2               	subwf	___awmod@dividend,f
 10382     1C21  0871               	movf	___awmod@divisor+1,w
 10383     1C22  1C03               	skipc
 10384     1C23  03F3               	decf	___awmod@dividend+1,f
 10385     1C24  02F3               	subwf	___awmod@dividend+1,f
 10386     1C25                     l2714:
 10387     1C25  3001               	movlw	1
 10388     1C26                     u3595:
 10389     1C26  1003               	clrc
 10390     1C27  0CF1               	rrf	___awmod@divisor+1,f
 10391     1C28  0CF0               	rrf	___awmod@divisor,f
 10392     1C29  3EFF               	addlw	-1
 10393     1C2A  1D03               	skipz
 10394     1C2B  2C26               	goto	u3595
 10395     1C2C                     l2716:
 10396     1C2C  3001               	movlw	1
 10397     1C2D  02F5               	subwf	___awmod@counter,f
 10398     1C2E  1D03               	btfss	3,2
 10399     1C2F  2C31               	goto	u3601
 10400     1C30  2C32               	goto	u3600
 10401     1C31                     u3601:
 10402     1C31  2C15               	goto	l2710
 10403     1C32                     u3600:
 10404     1C32                     l2718:
 10405     1C32  0876               	movf	___awmod@sign,w
 10406     1C33  1903               	btfsc	3,2
 10407     1C34  2C36               	goto	u3611
 10408     1C35  2C37               	goto	u3610
 10409     1C36                     u3611:
 10410     1C36  2C3C               	goto	l2722
 10411     1C37                     u3610:
 10412     1C37                     l2720:
 10413     1C37  09F2               	comf	___awmod@dividend,f
 10414     1C38  09F3               	comf	___awmod@dividend+1,f
 10415     1C39  0AF2               	incf	___awmod@dividend,f
 10416     1C3A  1903               	skipnz
 10417     1C3B  0AF3               	incf	___awmod@dividend+1,f
 10418     1C3C                     l2722:
 10419     1C3C  0873               	movf	___awmod@dividend+1,w
 10420     1C3D  00F1               	movwf	?___awmod+1
 10421     1C3E  0872               	movf	___awmod@dividend,w
 10422     1C3F  00F0               	movwf	?___awmod
 10423     1C40                     l599:
 10424     1C40  0008               	return
 10425     1C41                     __end_of___awmod:
 10426                           
 10427                           	psect	text30
 10428     1DC4                     __ptext30:	
 10429 ;; *************** function ___awdiv *****************
 10430 ;; Defined at:
 10431 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;  divisor         2    7[COMMON] int 
 10434 ;;  dividend        2    9[COMMON] int 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;  quotient        2    2[BANK0 ] int 
 10437 ;;  sign            1    1[BANK0 ] unsigned char 
 10438 ;;  counter         1    0[BANK0 ] unsigned char 
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  2    7[COMMON] int 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2, status,0
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10448 ;;      Params:         4       0       0       0       0
 10449 ;;      Locals:         0       4       0       0       0
 10450 ;;      Temps:          1       0       0       0       0
 10451 ;;      Totals:         5       4       0       0       0
 10452 ;;Total ram usage:        9 bytes
 10453 ;; Hardware stack levels used: 1
 10454 ;; This function calls:
 10455 ;;		Nothing
 10456 ;; This function is called by:
 10457 ;;		_descomponer
 10458 ;;		_scale
 10459 ;;		_sprintf
 10460 ;; This function uses a non-reentrant model
 10461 ;;
 10462                           
 10463     1DC4                     ___awdiv:	
 10464                           ;psect for function ___awdiv
 10465                           
 10466     1DC4                     l2644:	
 10467                           ;incstack = 0
 10468                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10469                           
 10470     1DC4  1283               	bcf	3,5	;RP0=0, select bank0
 10471     1DC5  1303               	bcf	3,6	;RP1=0, select bank0
 10472     1DC6  01A1               	clrf	___awdiv@sign
 10473     1DC7                     l2646:
 10474     1DC7  1FF8               	btfss	___awdiv@divisor+1,7
 10475     1DC8  2DCA               	goto	u3431
 10476     1DC9  2DCB               	goto	u3430
 10477     1DCA                     u3431:
 10478     1DCA  2DD2               	goto	l2652
 10479     1DCB                     u3430:
 10480     1DCB                     l2648:
 10481     1DCB  09F7               	comf	___awdiv@divisor,f
 10482     1DCC  09F8               	comf	___awdiv@divisor+1,f
 10483     1DCD  0AF7               	incf	___awdiv@divisor,f
 10484     1DCE  1903               	skipnz
 10485     1DCF  0AF8               	incf	___awdiv@divisor+1,f
 10486     1DD0                     l2650:
 10487     1DD0  01A1               	clrf	___awdiv@sign
 10488     1DD1  0AA1               	incf	___awdiv@sign,f
 10489     1DD2                     l2652:
 10490     1DD2  1FFA               	btfss	___awdiv@dividend+1,7
 10491     1DD3  2DD5               	goto	u3441
 10492     1DD4  2DD6               	goto	u3440
 10493     1DD5                     u3441:
 10494     1DD5  2DDF               	goto	l2658
 10495     1DD6                     u3440:
 10496     1DD6                     l2654:
 10497     1DD6  09F9               	comf	___awdiv@dividend,f
 10498     1DD7  09FA               	comf	___awdiv@dividend+1,f
 10499     1DD8  0AF9               	incf	___awdiv@dividend,f
 10500     1DD9  1903               	skipnz
 10501     1DDA  0AFA               	incf	___awdiv@dividend+1,f
 10502     1DDB                     l2656:
 10503     1DDB  3001               	movlw	1
 10504     1DDC  00FB               	movwf	??___awdiv
 10505     1DDD  087B               	movf	??___awdiv,w
 10506     1DDE  06A1               	xorwf	___awdiv@sign,f
 10507     1DDF                     l2658:
 10508     1DDF  01A2               	clrf	___awdiv@quotient
 10509     1DE0  01A3               	clrf	___awdiv@quotient+1
 10510     1DE1                     l2660:
 10511     1DE1  0877               	movf	___awdiv@divisor,w
 10512     1DE2  0478               	iorwf	___awdiv@divisor+1,w
 10513     1DE3  1903               	btfsc	3,2
 10514     1DE4  2DE6               	goto	u3451
 10515     1DE5  2DE7               	goto	u3450
 10516     1DE6                     u3451:
 10517     1DE6  2E1E               	goto	l2680
 10518     1DE7                     u3450:
 10519     1DE7                     l2662:
 10520     1DE7  01A0               	clrf	___awdiv@counter
 10521     1DE8  0AA0               	incf	___awdiv@counter,f
 10522     1DE9  2DF5               	goto	l2668
 10523     1DEA                     l2664:
 10524     1DEA  3001               	movlw	1
 10525     1DEB                     u3465:
 10526     1DEB  1003               	clrc
 10527     1DEC  0DF7               	rlf	___awdiv@divisor,f
 10528     1DED  0DF8               	rlf	___awdiv@divisor+1,f
 10529     1DEE  3EFF               	addlw	-1
 10530     1DEF  1D03               	skipz
 10531     1DF0  2DEB               	goto	u3465
 10532     1DF1                     l2666:
 10533     1DF1  3001               	movlw	1
 10534     1DF2  00FB               	movwf	??___awdiv
 10535     1DF3  087B               	movf	??___awdiv,w
 10536     1DF4  07A0               	addwf	___awdiv@counter,f
 10537     1DF5                     l2668:
 10538     1DF5  1FF8               	btfss	___awdiv@divisor+1,7
 10539     1DF6  2DF8               	goto	u3471
 10540     1DF7  2DF9               	goto	u3470
 10541     1DF8                     u3471:
 10542     1DF8  2DEA               	goto	l2664
 10543     1DF9                     u3470:
 10544     1DF9                     l2670:
 10545     1DF9  3001               	movlw	1
 10546     1DFA                     u3485:
 10547     1DFA  1003               	clrc
 10548     1DFB  0DA2               	rlf	___awdiv@quotient,f
 10549     1DFC  0DA3               	rlf	___awdiv@quotient+1,f
 10550     1DFD  3EFF               	addlw	-1
 10551     1DFE  1D03               	skipz
 10552     1DFF  2DFA               	goto	u3485
 10553     1E00  0878               	movf	___awdiv@divisor+1,w
 10554     1E01  027A               	subwf	___awdiv@dividend+1,w
 10555     1E02  1D03               	skipz
 10556     1E03  2E06               	goto	u3495
 10557     1E04  0877               	movf	___awdiv@divisor,w
 10558     1E05  0279               	subwf	___awdiv@dividend,w
 10559     1E06                     u3495:
 10560     1E06  1C03               	skipc
 10561     1E07  2E09               	goto	u3491
 10562     1E08  2E0A               	goto	u3490
 10563     1E09                     u3491:
 10564     1E09  2E11               	goto	l2676
 10565     1E0A                     u3490:
 10566     1E0A                     l2672:
 10567     1E0A  0877               	movf	___awdiv@divisor,w
 10568     1E0B  02F9               	subwf	___awdiv@dividend,f
 10569     1E0C  0878               	movf	___awdiv@divisor+1,w
 10570     1E0D  1C03               	skipc
 10571     1E0E  03FA               	decf	___awdiv@dividend+1,f
 10572     1E0F  02FA               	subwf	___awdiv@dividend+1,f
 10573     1E10                     l2674:
 10574     1E10  1422               	bsf	___awdiv@quotient,0
 10575     1E11                     l2676:
 10576     1E11  3001               	movlw	1
 10577     1E12                     u3505:
 10578     1E12  1003               	clrc
 10579     1E13  0CF8               	rrf	___awdiv@divisor+1,f
 10580     1E14  0CF7               	rrf	___awdiv@divisor,f
 10581     1E15  3EFF               	addlw	-1
 10582     1E16  1D03               	skipz
 10583     1E17  2E12               	goto	u3505
 10584     1E18                     l2678:
 10585     1E18  3001               	movlw	1
 10586     1E19  02A0               	subwf	___awdiv@counter,f
 10587     1E1A  1D03               	btfss	3,2
 10588     1E1B  2E1D               	goto	u3511
 10589     1E1C  2E1E               	goto	u3510
 10590     1E1D                     u3511:
 10591     1E1D  2DF9               	goto	l2670
 10592     1E1E                     u3510:
 10593     1E1E                     l2680:
 10594     1E1E  0821               	movf	___awdiv@sign,w
 10595     1E1F  1903               	btfsc	3,2
 10596     1E20  2E22               	goto	u3521
 10597     1E21  2E23               	goto	u3520
 10598     1E22                     u3521:
 10599     1E22  2E28               	goto	l2684
 10600     1E23                     u3520:
 10601     1E23                     l2682:
 10602     1E23  09A2               	comf	___awdiv@quotient,f
 10603     1E24  09A3               	comf	___awdiv@quotient+1,f
 10604     1E25  0AA2               	incf	___awdiv@quotient,f
 10605     1E26  1903               	skipnz
 10606     1E27  0AA3               	incf	___awdiv@quotient+1,f
 10607     1E28                     l2684:
 10608     1E28  0823               	movf	___awdiv@quotient+1,w
 10609     1E29  00F8               	movwf	?___awdiv+1
 10610     1E2A  0822               	movf	___awdiv@quotient,w
 10611     1E2B  00F7               	movwf	?___awdiv
 10612     1E2C                     l586:
 10613     1E2C  0008               	return
 10614     1E2D                     __end_of___awdiv:
 10615                           
 10616                           	psect	text31
 10617     1E2D                     __ptext31:	
 10618 ;; *************** function ___fldiv *****************
 10619 ;; Defined at:
 10620 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
 10621 ;; Parameters:    Size  Location     Type
 10622 ;;  a               4   30[BANK0 ] int 
 10623 ;;  b               4   34[BANK0 ] int 
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;  grs             4   50[BANK0 ] unsigned long 
 10626 ;;  rem             4   43[BANK0 ] unsigned long 
 10627 ;;  new_exp         2   48[BANK0 ] int 
 10628 ;;  aexp            1   55[BANK0 ] unsigned char 
 10629 ;;  bexp            1   54[BANK0 ] unsigned char 
 10630 ;;  sign            1   47[BANK0 ] unsigned char 
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  4   30[BANK0 ] unsigned char 
 10633 ;; Registers used:
 10634 ;;		wreg, status,2, status,0, btemp+1
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10640 ;;      Params:         0       8       0       0       0
 10641 ;;      Locals:         0      13       0       0       0
 10642 ;;      Temps:          0       5       0       0       0
 10643 ;;      Totals:         0      26       0       0       0
 10644 ;;Total ram usage:       26 bytes
 10645 ;; Hardware stack levels used: 1
 10646 ;; This function calls:
 10647 ;;		Nothing
 10648 ;; This function is called by:
 10649 ;;		_main
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653     1E2D                     ___fldiv:	
 10654                           ;psect for function ___fldiv
 10655                           
 10656     1E2D                     l3892:	
 10657                           ;incstack = 0
 10658                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10659                           
 10660     1E2D  1283               	bcf	3,5	;RP0=0, select bank0
 10661     1E2E  1303               	bcf	3,6	;RP1=0, select bank0
 10662     1E2F  0845               	movf	___fldiv@b+3,w
 10663     1E30  3980               	andlw	128
 10664     1E31  00CF               	movwf	___fldiv@sign
 10665     1E32                     l3894:
 10666     1E32  0845               	movf	___fldiv@b+3,w
 10667     1E33  00C6               	movwf	??___fldiv
 10668     1E34  0746               	addwf	??___fldiv,w
 10669     1E35  00D6               	movwf	___fldiv@bexp
 10670     1E36                     l3896:
 10671     1E36  1FC4               	btfss	___fldiv@b+2,7
 10672     1E37  2E39               	goto	u6291
 10673     1E38  2E3A               	goto	u6290
 10674     1E39                     u6291:
 10675     1E39  2E3B               	goto	l3900
 10676     1E3A                     u6290:
 10677     1E3A                     l3898:
 10678     1E3A  1456               	bsf	___fldiv@bexp,0
 10679     1E3B                     l3900:
 10680     1E3B  0856               	movf	___fldiv@bexp,w
 10681     1E3C  1903               	btfsc	3,2
 10682     1E3D  2E3F               	goto	u6301
 10683     1E3E  2E40               	goto	u6300
 10684     1E3F                     u6301:
 10685     1E3F  2E50               	goto	l3910
 10686     1E40                     u6300:
 10687     1E40                     l3902:
 10688     1E40  0A56               	incf	___fldiv@bexp,w
 10689     1E41  1D03               	btfss	3,2
 10690     1E42  2E44               	goto	u6311
 10691     1E43  2E45               	goto	u6310
 10692     1E44                     u6311:
 10693     1E44  2E4D               	goto	l3906
 10694     1E45                     u6310:
 10695     1E45                     l3904:
 10696     1E45  3000               	movlw	0
 10697     1E46  00C5               	movwf	___fldiv@b+3
 10698     1E47  3000               	movlw	0
 10699     1E48  00C4               	movwf	___fldiv@b+2
 10700     1E49  3000               	movlw	0
 10701     1E4A  00C3               	movwf	___fldiv@b+1
 10702     1E4B  3000               	movlw	0
 10703     1E4C  00C2               	movwf	___fldiv@b
 10704     1E4D                     l3906:
 10705     1E4D  17C4               	bsf	___fldiv@b+2,7
 10706     1E4E                     l3908:
 10707     1E4E  01C5               	clrf	___fldiv@b+3
 10708     1E4F  2E58               	goto	l3912
 10709     1E50                     l3910:
 10710     1E50  3000               	movlw	0
 10711     1E51  00C5               	movwf	___fldiv@b+3
 10712     1E52  3000               	movlw	0
 10713     1E53  00C4               	movwf	___fldiv@b+2
 10714     1E54  3000               	movlw	0
 10715     1E55  00C3               	movwf	___fldiv@b+1
 10716     1E56  3000               	movlw	0
 10717     1E57  00C2               	movwf	___fldiv@b
 10718     1E58                     l3912:
 10719     1E58  0841               	movf	___fldiv@a+3,w
 10720     1E59  3980               	andlw	128
 10721     1E5A  00C6               	movwf	??___fldiv
 10722     1E5B  0846               	movf	??___fldiv,w
 10723     1E5C  06CF               	xorwf	___fldiv@sign,f
 10724     1E5D                     l3914:
 10725     1E5D  0841               	movf	___fldiv@a+3,w
 10726     1E5E  00C6               	movwf	??___fldiv
 10727     1E5F  0746               	addwf	??___fldiv,w
 10728     1E60  00D7               	movwf	___fldiv@aexp
 10729     1E61                     l3916:
 10730     1E61  1FC0               	btfss	___fldiv@a+2,7
 10731     1E62  2E64               	goto	u6321
 10732     1E63  2E65               	goto	u6320
 10733     1E64                     u6321:
 10734     1E64  2E66               	goto	l3920
 10735     1E65                     u6320:
 10736     1E65                     l3918:
 10737     1E65  1457               	bsf	___fldiv@aexp,0
 10738     1E66                     l3920:
 10739     1E66  0857               	movf	___fldiv@aexp,w
 10740     1E67  1903               	btfsc	3,2
 10741     1E68  2E6A               	goto	u6331
 10742     1E69  2E6B               	goto	u6330
 10743     1E6A                     u6331:
 10744     1E6A  2E7B               	goto	l3930
 10745     1E6B                     u6330:
 10746     1E6B                     l3922:
 10747     1E6B  0A57               	incf	___fldiv@aexp,w
 10748     1E6C  1D03               	btfss	3,2
 10749     1E6D  2E6F               	goto	u6341
 10750     1E6E  2E70               	goto	u6340
 10751     1E6F                     u6341:
 10752     1E6F  2E78               	goto	l3926
 10753     1E70                     u6340:
 10754     1E70                     l3924:
 10755     1E70  3000               	movlw	0
 10756     1E71  00C1               	movwf	___fldiv@a+3
 10757     1E72  3000               	movlw	0
 10758     1E73  00C0               	movwf	___fldiv@a+2
 10759     1E74  3000               	movlw	0
 10760     1E75  00BF               	movwf	___fldiv@a+1
 10761     1E76  3000               	movlw	0
 10762     1E77  00BE               	movwf	___fldiv@a
 10763     1E78                     l3926:
 10764     1E78  17C0               	bsf	___fldiv@a+2,7
 10765     1E79                     l3928:
 10766     1E79  01C1               	clrf	___fldiv@a+3
 10767     1E7A  2E83               	goto	l816
 10768     1E7B                     l3930:
 10769     1E7B  3000               	movlw	0
 10770     1E7C  00C1               	movwf	___fldiv@a+3
 10771     1E7D  3000               	movlw	0
 10772     1E7E  00C0               	movwf	___fldiv@a+2
 10773     1E7F  3000               	movlw	0
 10774     1E80  00BF               	movwf	___fldiv@a+1
 10775     1E81  3000               	movlw	0
 10776     1E82  00BE               	movwf	___fldiv@a
 10777     1E83                     l816:
 10778     1E83  0841               	movf	___fldiv@a+3,w
 10779     1E84  0440               	iorwf	___fldiv@a+2,w
 10780     1E85  043F               	iorwf	___fldiv@a+1,w
 10781     1E86  043E               	iorwf	___fldiv@a,w
 10782     1E87  1D03               	skipz
 10783     1E88  2E8A               	goto	u6351
 10784     1E89  2E8B               	goto	u6350
 10785     1E8A                     u6351:
 10786     1E8A  2EA4               	goto	l3940
 10787     1E8B                     u6350:
 10788     1E8B                     l3932:
 10789     1E8B  3000               	movlw	0
 10790     1E8C  00C5               	movwf	___fldiv@b+3
 10791     1E8D  3000               	movlw	0
 10792     1E8E  00C4               	movwf	___fldiv@b+2
 10793     1E8F  3000               	movlw	0
 10794     1E90  00C3               	movwf	___fldiv@b+1
 10795     1E91  3000               	movlw	0
 10796     1E92  00C2               	movwf	___fldiv@b
 10797     1E93  3080               	movlw	128
 10798     1E94  04C4               	iorwf	___fldiv@b+2,f
 10799     1E95  307F               	movlw	127
 10800     1E96  04C5               	iorwf	___fldiv@b+3,f
 10801     1E97                     l3934:
 10802     1E97  084F               	movf	___fldiv@sign,w
 10803     1E98  00C6               	movwf	??___fldiv
 10804     1E99  0846               	movf	??___fldiv,w
 10805     1E9A  04C5               	iorwf	___fldiv@b+3,f
 10806     1E9B                     l3936:
 10807     1E9B  0845               	movf	___fldiv@b+3,w
 10808     1E9C  00C1               	movwf	?___fldiv+3
 10809     1E9D  0844               	movf	___fldiv@b+2,w
 10810     1E9E  00C0               	movwf	?___fldiv+2
 10811     1E9F  0843               	movf	___fldiv@b+1,w
 10812     1EA0  00BF               	movwf	?___fldiv+1
 10813     1EA1  0842               	movf	___fldiv@b,w
 10814     1EA2  00BE               	movwf	?___fldiv
 10815     1EA3  2FFF               	goto	l818
 10816     1EA4                     l3940:
 10817     1EA4  0856               	movf	___fldiv@bexp,w
 10818     1EA5  1D03               	btfss	3,2
 10819     1EA6  2EA8               	goto	u6361
 10820     1EA7  2EA9               	goto	u6360
 10821     1EA8                     u6361:
 10822     1EA8  2EB2               	goto	l3946
 10823     1EA9                     u6360:
 10824     1EA9                     l3942:
 10825     1EA9  3000               	movlw	0
 10826     1EAA  00C1               	movwf	?___fldiv+3
 10827     1EAB  3000               	movlw	0
 10828     1EAC  00C0               	movwf	?___fldiv+2
 10829     1EAD  3000               	movlw	0
 10830     1EAE  00BF               	movwf	?___fldiv+1
 10831     1EAF  3000               	movlw	0
 10832     1EB0  00BE               	movwf	?___fldiv
 10833     1EB1  2FFF               	goto	l818
 10834     1EB2                     l3946:
 10835     1EB2  0856               	movf	___fldiv@bexp,w
 10836     1EB3  00C6               	movwf	??___fldiv
 10837     1EB4  01C7               	clrf	??___fldiv+1
 10838     1EB5  0847               	movf	??___fldiv+1,w
 10839     1EB6  00C9               	movwf	??___fldiv+3
 10840     1EB7  0857               	movf	___fldiv@aexp,w
 10841     1EB8  0246               	subwf	??___fldiv,w
 10842     1EB9  00C8               	movwf	??___fldiv+2
 10843     1EBA  1C03               	skipc
 10844     1EBB  03C9               	decf	??___fldiv+3,f
 10845     1EBC  0848               	movf	??___fldiv+2,w
 10846     1EBD  3E7F               	addlw	127
 10847     1EBE  00D0               	movwf	___fldiv@new_exp
 10848     1EBF  0849               	movf	??___fldiv+3,w
 10849     1EC0  1803               	skipnc
 10850     1EC1  3E01               	addlw	1
 10851     1EC2  3E00               	addlw	0
 10852     1EC3  00D1               	movwf	___fldiv@new_exp+1
 10853     1EC4                     l3948:
 10854     1EC4  0845               	movf	___fldiv@b+3,w
 10855     1EC5  00CE               	movwf	___fldiv@rem+3
 10856     1EC6  0844               	movf	___fldiv@b+2,w
 10857     1EC7  00CD               	movwf	___fldiv@rem+2
 10858     1EC8  0843               	movf	___fldiv@b+1,w
 10859     1EC9  00CC               	movwf	___fldiv@rem+1
 10860     1ECA  0842               	movf	___fldiv@b,w
 10861     1ECB  00CB               	movwf	___fldiv@rem
 10862     1ECC                     l3950:
 10863     1ECC  3000               	movlw	0
 10864     1ECD  00C5               	movwf	___fldiv@b+3
 10865     1ECE  3000               	movlw	0
 10866     1ECF  00C4               	movwf	___fldiv@b+2
 10867     1ED0  3000               	movlw	0
 10868     1ED1  00C3               	movwf	___fldiv@b+1
 10869     1ED2  3000               	movlw	0
 10870     1ED3  00C2               	movwf	___fldiv@b
 10871     1ED4                     l3952:
 10872     1ED4  3000               	movlw	0
 10873     1ED5  00D5               	movwf	___fldiv@grs+3
 10874     1ED6  3000               	movlw	0
 10875     1ED7  00D4               	movwf	___fldiv@grs+2
 10876     1ED8  3000               	movlw	0
 10877     1ED9  00D3               	movwf	___fldiv@grs+1
 10878     1EDA  3000               	movlw	0
 10879     1EDB  00D2               	movwf	___fldiv@grs
 10880     1EDC                     l3954:
 10881     1EDC  01D7               	clrf	___fldiv@aexp
 10882     1EDD  2F28               	goto	l3974
 10883     1EDE                     l3956:
 10884     1EDE  0857               	movf	___fldiv@aexp,w
 10885     1EDF  1903               	btfsc	3,2
 10886     1EE0  2EE2               	goto	u6371
 10887     1EE1  2EE3               	goto	u6370
 10888     1EE2                     u6371:
 10889     1EE2  2F03               	goto	l3966
 10890     1EE3                     u6370:
 10891     1EE3                     l3958:
 10892     1EE3  3001               	movlw	1
 10893     1EE4  00C6               	movwf	??___fldiv
 10894     1EE5                     u6385:
 10895     1EE5  1003               	clrc
 10896     1EE6  0DCB               	rlf	___fldiv@rem,f
 10897     1EE7  0DCC               	rlf	___fldiv@rem+1,f
 10898     1EE8  0DCD               	rlf	___fldiv@rem+2,f
 10899     1EE9  0DCE               	rlf	___fldiv@rem+3,f
 10900     1EEA  0BC6               	decfsz	??___fldiv,f
 10901     1EEB  2EE5               	goto	u6385
 10902     1EEC  3001               	movlw	1
 10903     1EED  00C6               	movwf	??___fldiv
 10904     1EEE                     u6395:
 10905     1EEE  1003               	clrc
 10906     1EEF  0DC2               	rlf	___fldiv@b,f
 10907     1EF0  0DC3               	rlf	___fldiv@b+1,f
 10908     1EF1  0DC4               	rlf	___fldiv@b+2,f
 10909     1EF2  0DC5               	rlf	___fldiv@b+3,f
 10910     1EF3  0BC6               	decfsz	??___fldiv,f
 10911     1EF4  2EEE               	goto	u6395
 10912     1EF5                     l3960:
 10913     1EF5  1FD5               	btfss	___fldiv@grs+3,7
 10914     1EF6  2EF8               	goto	u6401
 10915     1EF7  2EF9               	goto	u6400
 10916     1EF8                     u6401:
 10917     1EF8  2EFA               	goto	l3964
 10918     1EF9                     u6400:
 10919     1EF9                     l3962:
 10920     1EF9  1442               	bsf	___fldiv@b,0
 10921     1EFA                     l3964:
 10922     1EFA  3001               	movlw	1
 10923     1EFB  00C6               	movwf	??___fldiv
 10924     1EFC                     u6415:
 10925     1EFC  1003               	clrc
 10926     1EFD  0DD2               	rlf	___fldiv@grs,f
 10927     1EFE  0DD3               	rlf	___fldiv@grs+1,f
 10928     1EFF  0DD4               	rlf	___fldiv@grs+2,f
 10929     1F00  0DD5               	rlf	___fldiv@grs+3,f
 10930     1F01  0BC6               	decfsz	??___fldiv,f
 10931     1F02  2EFC               	goto	u6415
 10932     1F03                     l3966:
 10933     1F03  0841               	movf	___fldiv@a+3,w
 10934     1F04  024E               	subwf	___fldiv@rem+3,w
 10935     1F05  1D03               	skipz
 10936     1F06  2F11               	goto	u6425
 10937     1F07  0840               	movf	___fldiv@a+2,w
 10938     1F08  024D               	subwf	___fldiv@rem+2,w
 10939     1F09  1D03               	skipz
 10940     1F0A  2F11               	goto	u6425
 10941     1F0B  083F               	movf	___fldiv@a+1,w
 10942     1F0C  024C               	subwf	___fldiv@rem+1,w
 10943     1F0D  1D03               	skipz
 10944     1F0E  2F11               	goto	u6425
 10945     1F0F  083E               	movf	___fldiv@a,w
 10946     1F10  024B               	subwf	___fldiv@rem,w
 10947     1F11                     u6425:
 10948     1F11  1C03               	skipc
 10949     1F12  2F14               	goto	u6421
 10950     1F13  2F15               	goto	u6420
 10951     1F14                     u6421:
 10952     1F14  2F24               	goto	l3972
 10953     1F15                     u6420:
 10954     1F15                     l3968:
 10955     1F15  1755               	bsf	___fldiv@grs+3,6
 10956     1F16                     l3970:
 10957     1F16  083E               	movf	___fldiv@a,w
 10958     1F17  02CB               	subwf	___fldiv@rem,f
 10959     1F18  083F               	movf	___fldiv@a+1,w
 10960     1F19  1C03               	skipc
 10961     1F1A  0F3F               	incfsz	___fldiv@a+1,w
 10962     1F1B  02CC               	subwf	___fldiv@rem+1,f
 10963     1F1C  0840               	movf	___fldiv@a+2,w
 10964     1F1D  1C03               	skipc
 10965     1F1E  0F40               	incfsz	___fldiv@a+2,w
 10966     1F1F  02CD               	subwf	___fldiv@rem+2,f
 10967     1F20  0841               	movf	___fldiv@a+3,w
 10968     1F21  1C03               	skipc
 10969     1F22  0F41               	incfsz	___fldiv@a+3,w
 10970     1F23  02CE               	subwf	___fldiv@rem+3,f
 10971     1F24                     l3972:
 10972     1F24  3001               	movlw	1
 10973     1F25  00C6               	movwf	??___fldiv
 10974     1F26  0846               	movf	??___fldiv,w
 10975     1F27  07D7               	addwf	___fldiv@aexp,f
 10976     1F28                     l3974:
 10977     1F28  301A               	movlw	26
 10978     1F29  0257               	subwf	___fldiv@aexp,w
 10979     1F2A  1C03               	skipc
 10980     1F2B  2F2D               	goto	u6431
 10981     1F2C  2F2E               	goto	u6430
 10982     1F2D                     u6431:
 10983     1F2D  2EDE               	goto	l3956
 10984     1F2E                     u6430:
 10985     1F2E                     l3976:
 10986     1F2E  084E               	movf	___fldiv@rem+3,w
 10987     1F2F  044D               	iorwf	___fldiv@rem+2,w
 10988     1F30  044C               	iorwf	___fldiv@rem+1,w
 10989     1F31  044B               	iorwf	___fldiv@rem,w
 10990     1F32  1903               	skipnz
 10991     1F33  2F35               	goto	u6441
 10992     1F34  2F36               	goto	u6440
 10993     1F35                     u6441:
 10994     1F35  2F55               	goto	l3990
 10995     1F36                     u6440:
 10996     1F36                     l3978:
 10997     1F36  1452               	bsf	___fldiv@grs,0
 10998     1F37  2F55               	goto	l3990
 10999     1F38                     l3980:
 11000     1F38  3001               	movlw	1
 11001     1F39  00C6               	movwf	??___fldiv
 11002     1F3A                     u6455:
 11003     1F3A  1003               	clrc
 11004     1F3B  0DC2               	rlf	___fldiv@b,f
 11005     1F3C  0DC3               	rlf	___fldiv@b+1,f
 11006     1F3D  0DC4               	rlf	___fldiv@b+2,f
 11007     1F3E  0DC5               	rlf	___fldiv@b+3,f
 11008     1F3F  0BC6               	decfsz	??___fldiv,f
 11009     1F40  2F3A               	goto	u6455
 11010     1F41                     l3982:
 11011     1F41  1FD5               	btfss	___fldiv@grs+3,7
 11012     1F42  2F44               	goto	u6461
 11013     1F43  2F45               	goto	u6460
 11014     1F44                     u6461:
 11015     1F44  2F46               	goto	l3986
 11016     1F45                     u6460:
 11017     1F45                     l3984:
 11018     1F45  1442               	bsf	___fldiv@b,0
 11019     1F46                     l3986:
 11020     1F46  3001               	movlw	1
 11021     1F47  00C6               	movwf	??___fldiv
 11022     1F48                     u6475:
 11023     1F48  1003               	clrc
 11024     1F49  0DD2               	rlf	___fldiv@grs,f
 11025     1F4A  0DD3               	rlf	___fldiv@grs+1,f
 11026     1F4B  0DD4               	rlf	___fldiv@grs+2,f
 11027     1F4C  0DD5               	rlf	___fldiv@grs+3,f
 11028     1F4D  0BC6               	decfsz	??___fldiv,f
 11029     1F4E  2F48               	goto	u6475
 11030     1F4F                     l3988:
 11031     1F4F  30FF               	movlw	255
 11032     1F50  07D0               	addwf	___fldiv@new_exp,f
 11033     1F51  1803               	skipnc
 11034     1F52  0AD1               	incf	___fldiv@new_exp+1,f
 11035     1F53  30FF               	movlw	255
 11036     1F54  07D1               	addwf	___fldiv@new_exp+1,f
 11037     1F55                     l3990:
 11038     1F55  1FC4               	btfss	___fldiv@b+2,7
 11039     1F56  2F58               	goto	u6481
 11040     1F57  2F59               	goto	u6480
 11041     1F58                     u6481:
 11042     1F58  2F38               	goto	l3980
 11043     1F59                     u6480:
 11044     1F59                     l3992:
 11045     1F59  01D7               	clrf	___fldiv@aexp
 11046     1F5A                     l3994:
 11047     1F5A  1FD5               	btfss	___fldiv@grs+3,7
 11048     1F5B  2F5D               	goto	u6491
 11049     1F5C  2F5E               	goto	u6490
 11050     1F5D                     u6491:
 11051     1F5D  2F7A               	goto	l4002
 11052     1F5E                     u6490:
 11053     1F5E                     l3996:
 11054     1F5E  30FF               	movlw	255
 11055     1F5F  0552               	andwf	___fldiv@grs,w
 11056     1F60  00C6               	movwf	??___fldiv
 11057     1F61  30FF               	movlw	255
 11058     1F62  0553               	andwf	___fldiv@grs+1,w
 11059     1F63  00C7               	movwf	??___fldiv+1
 11060     1F64  30FF               	movlw	255
 11061     1F65  0554               	andwf	___fldiv@grs+2,w
 11062     1F66  00C8               	movwf	??___fldiv+2
 11063     1F67  307F               	movlw	127
 11064     1F68  0555               	andwf	___fldiv@grs+3,w
 11065     1F69  00C9               	movwf	??___fldiv+3
 11066     1F6A  0849               	movf	??___fldiv+3,w
 11067     1F6B  0448               	iorwf	??___fldiv+2,w
 11068     1F6C  0447               	iorwf	??___fldiv+1,w
 11069     1F6D  0446               	iorwf	??___fldiv,w
 11070     1F6E  1903               	skipnz
 11071     1F6F  2F71               	goto	u6501
 11072     1F70  2F72               	goto	u6500
 11073     1F71                     u6501:
 11074     1F71  2F75               	goto	l832
 11075     1F72                     u6500:
 11076     1F72                     l3998:
 11077     1F72  01D7               	clrf	___fldiv@aexp
 11078     1F73  0AD7               	incf	___fldiv@aexp,f
 11079     1F74  2F7A               	goto	l4002
 11080     1F75                     l832:
 11081     1F75  1C42               	btfss	___fldiv@b,0
 11082     1F76  2F78               	goto	u6511
 11083     1F77  2F79               	goto	u6510
 11084     1F78                     u6511:
 11085     1F78  2F7A               	goto	l4002
 11086     1F79                     u6510:
 11087     1F79  2F72               	goto	l3998
 11088     1F7A                     l4002:
 11089     1F7A  0857               	movf	___fldiv@aexp,w
 11090     1F7B  1903               	btfsc	3,2
 11091     1F7C  2F7E               	goto	u6521
 11092     1F7D  2F7F               	goto	u6520
 11093     1F7E                     u6521:
 11094     1F7E  2FB0               	goto	l4012
 11095     1F7F                     u6520:
 11096     1F7F                     l4004:
 11097     1F7F  3001               	movlw	1
 11098     1F80  07C2               	addwf	___fldiv@b,f
 11099     1F81  3000               	movlw	0
 11100     1F82  1803               	skipnc
 11101     1F83  3001               	movlw	1
 11102     1F84  07C3               	addwf	___fldiv@b+1,f
 11103     1F85  3000               	movlw	0
 11104     1F86  1803               	skipnc
 11105     1F87  3001               	movlw	1
 11106     1F88  07C4               	addwf	___fldiv@b+2,f
 11107     1F89  3000               	movlw	0
 11108     1F8A  1803               	skipnc
 11109     1F8B  3001               	movlw	1
 11110     1F8C  07C5               	addwf	___fldiv@b+3,f
 11111     1F8D                     l4006:
 11112     1F8D  1C45               	btfss	___fldiv@b+3,0
 11113     1F8E  2F90               	goto	u6531
 11114     1F8F  2F91               	goto	u6530
 11115     1F90                     u6531:
 11116     1F90  2FB0               	goto	l4012
 11117     1F91                     u6530:
 11118     1F91                     l4008:
 11119     1F91  0842               	movf	___fldiv@b,w
 11120     1F92  00C6               	movwf	??___fldiv
 11121     1F93  0843               	movf	___fldiv@b+1,w
 11122     1F94  00C7               	movwf	??___fldiv+1
 11123     1F95  0844               	movf	___fldiv@b+2,w
 11124     1F96  00C8               	movwf	??___fldiv+2
 11125     1F97  0845               	movf	___fldiv@b+3,w
 11126     1F98  00C9               	movwf	??___fldiv+3
 11127     1F99  3001               	movlw	1
 11128     1F9A  00CA               	movwf	??___fldiv+4
 11129     1F9B                     u6545:
 11130     1F9B  0D49               	rlf	??___fldiv+3,w
 11131     1F9C  0CC9               	rrf	??___fldiv+3,f
 11132     1F9D  0CC8               	rrf	??___fldiv+2,f
 11133     1F9E  0CC7               	rrf	??___fldiv+1,f
 11134     1F9F  0CC6               	rrf	??___fldiv,f
 11135     1FA0                     u6540:
 11136     1FA0  0BCA               	decfsz	??___fldiv+4,f
 11137     1FA1  2F9B               	goto	u6545
 11138     1FA2  0849               	movf	??___fldiv+3,w
 11139     1FA3  00C5               	movwf	___fldiv@b+3
 11140     1FA4  0848               	movf	??___fldiv+2,w
 11141     1FA5  00C4               	movwf	___fldiv@b+2
 11142     1FA6  0847               	movf	??___fldiv+1,w
 11143     1FA7  00C3               	movwf	___fldiv@b+1
 11144     1FA8  0846               	movf	??___fldiv,w
 11145     1FA9  00C2               	movwf	___fldiv@b
 11146     1FAA                     l4010:
 11147     1FAA  3001               	movlw	1
 11148     1FAB  07D0               	addwf	___fldiv@new_exp,f
 11149     1FAC  1803               	skipnc
 11150     1FAD  0AD1               	incf	___fldiv@new_exp+1,f
 11151     1FAE  3000               	movlw	0
 11152     1FAF  07D1               	addwf	___fldiv@new_exp+1,f
 11153     1FB0                     l4012:
 11154     1FB0  0851               	movf	___fldiv@new_exp+1,w
 11155     1FB1  3A80               	xorlw	128
 11156     1FB2  00FF               	movwf	btemp+1
 11157     1FB3  3080               	movlw	128
 11158     1FB4  027F               	subwf	btemp+1,w
 11159     1FB5  1D03               	skipz
 11160     1FB6  2FB9               	goto	u6555
 11161     1FB7  30FF               	movlw	255
 11162     1FB8  0250               	subwf	___fldiv@new_exp,w
 11163     1FB9                     u6555:
 11164     1FB9  1C03               	skipc
 11165     1FBA  2FBC               	goto	u6551
 11166     1FBB  2FBD               	goto	u6550
 11167     1FBC                     u6551:
 11168     1FBC  2FCB               	goto	l4016
 11169     1FBD                     u6550:
 11170     1FBD                     l4014:
 11171     1FBD  30FF               	movlw	255
 11172     1FBE  1283               	bcf	3,5	;RP0=0, select bank0
 11173     1FBF  1303               	bcf	3,6	;RP1=0, select bank0
 11174     1FC0  00D0               	movwf	___fldiv@new_exp
 11175     1FC1  3000               	movlw	0
 11176     1FC2  00D1               	movwf	___fldiv@new_exp+1
 11177     1FC3  3000               	movlw	0
 11178     1FC4  00C5               	movwf	___fldiv@b+3
 11179     1FC5  3000               	movlw	0
 11180     1FC6  00C4               	movwf	___fldiv@b+2
 11181     1FC7  3000               	movlw	0
 11182     1FC8  00C3               	movwf	___fldiv@b+1
 11183     1FC9  3000               	movlw	0
 11184     1FCA  00C2               	movwf	___fldiv@b
 11185     1FCB                     l4016:
 11186     1FCB  1283               	bcf	3,5	;RP0=0, select bank0
 11187     1FCC  1303               	bcf	3,6	;RP1=0, select bank0
 11188     1FCD  0851               	movf	___fldiv@new_exp+1,w
 11189     1FCE  3A80               	xorlw	128
 11190     1FCF  00FF               	movwf	btemp+1
 11191     1FD0  3080               	movlw	128
 11192     1FD1  027F               	subwf	btemp+1,w
 11193     1FD2  1D03               	skipz
 11194     1FD3  2FD6               	goto	u6565
 11195     1FD4  3001               	movlw	1
 11196     1FD5  0250               	subwf	___fldiv@new_exp,w
 11197     1FD6                     u6565:
 11198     1FD6  1803               	skipnc
 11199     1FD7  2FD9               	goto	u6561
 11200     1FD8  2FDA               	goto	u6560
 11201     1FD9                     u6561:
 11202     1FD9  2FE7               	goto	l838
 11203     1FDA                     u6560:
 11204     1FDA                     l4018:
 11205     1FDA  1283               	bcf	3,5	;RP0=0, select bank0
 11206     1FDB  1303               	bcf	3,6	;RP1=0, select bank0
 11207     1FDC  01D0               	clrf	___fldiv@new_exp
 11208     1FDD  01D1               	clrf	___fldiv@new_exp+1
 11209     1FDE                     l4020:
 11210     1FDE  3000               	movlw	0
 11211     1FDF  00C5               	movwf	___fldiv@b+3
 11212     1FE0  3000               	movlw	0
 11213     1FE1  00C4               	movwf	___fldiv@b+2
 11214     1FE2  3000               	movlw	0
 11215     1FE3  00C3               	movwf	___fldiv@b+1
 11216     1FE4  3000               	movlw	0
 11217     1FE5  00C2               	movwf	___fldiv@b
 11218     1FE6                     l4022:
 11219     1FE6  01CF               	clrf	___fldiv@sign
 11220     1FE7                     l838:
 11221     1FE7  1283               	bcf	3,5	;RP0=0, select bank0
 11222     1FE8  1303               	bcf	3,6	;RP1=0, select bank0
 11223     1FE9  0850               	movf	___fldiv@new_exp,w
 11224     1FEA  00D6               	movwf	___fldiv@bexp
 11225     1FEB                     l4024:
 11226     1FEB  1C56               	btfss	___fldiv@bexp,0
 11227     1FEC  2FEE               	goto	u6571
 11228     1FED  2FEF               	goto	u6570
 11229     1FEE                     u6571:
 11230     1FEE  2FF1               	goto	l4028
 11231     1FEF                     u6570:
 11232     1FEF                     l4026:
 11233     1FEF  17C4               	bsf	___fldiv@b+2,7
 11234     1FF0  2FF5               	goto	l840
 11235     1FF1                     l4028:
 11236     1FF1  307F               	movlw	127
 11237     1FF2  00C6               	movwf	??___fldiv
 11238     1FF3  0846               	movf	??___fldiv,w
 11239     1FF4  05C4               	andwf	___fldiv@b+2,f
 11240     1FF5                     l840:
 11241     1FF5  0856               	movf	___fldiv@bexp,w
 11242     1FF6  00C6               	movwf	??___fldiv
 11243     1FF7  1003               	clrc
 11244     1FF8  0C46               	rrf	??___fldiv,w
 11245     1FF9  00C5               	movwf	___fldiv@b+3
 11246     1FFA  084F               	movf	___fldiv@sign,w
 11247     1FFB  00C6               	movwf	??___fldiv
 11248     1FFC  0846               	movf	??___fldiv,w
 11249     1FFD  04C5               	iorwf	___fldiv@b+3,f
 11250     1FFE  2E9B               	goto	l3936
 11251     1FFF                     l818:
 11252     1FFF  0008               	return
 11253     2000                     __end_of___fldiv:
 11254                           
 11255                           	psect	text32
 11256     1A2A                     __ptext32:	
 11257 ;; *************** function _Lcd_Write_String *****************
 11258 ;; Defined at:
 11259 ;;		line 98 in file "LCD.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;  a               2    5[COMMON] PTR unsigned char 
 11262 ;;		 -> valADC2(3), valADC(3), STR_2(17), STR_1(14), 
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;  i               2   10[COMMON] int 
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  1    wreg      void 
 11267 ;; Registers used:
 11268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11274 ;;      Params:         2       0       0       0       0
 11275 ;;      Locals:         2       0       0       0       0
 11276 ;;      Temps:          3       0       0       0       0
 11277 ;;      Totals:         7       0       0       0       0
 11278 ;;Total ram usage:        7 bytes
 11279 ;; Hardware stack levels used: 1
 11280 ;; Hardware stack levels required when called: 2
 11281 ;; This function calls:
 11282 ;;		_Lcd_Write_Char
 11283 ;; This function is called by:
 11284 ;;		_main
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288     1A2A                     _Lcd_Write_String:	
 11289                           ;psect for function _Lcd_Write_String
 11290                           
 11291     1A2A                     l3568:	
 11292                           ;incstack = 0
 11293                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11294                           
 11295                           
 11296                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
 11297     1A2A  01FA               	clrf	Lcd_Write_String@i
 11298     1A2B  01FB               	clrf	Lcd_Write_String@i+1
 11299     1A2C  2A4F               	goto	l3574
 11300     1A2D                     l3570:
 11301                           
 11302                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
 11303     1A2D  087A               	movf	Lcd_Write_String@i,w
 11304     1A2E  0775               	addwf	Lcd_Write_String@a,w
 11305     1A2F  00F8               	movwf	??_Lcd_Write_String+1
 11306     1A30  0876               	movf	Lcd_Write_String@a+1,w
 11307     1A31  00F7               	movwf	??_Lcd_Write_String
 11308     1A32  1803               	skipnc
 11309     1A33  0AF7               	incf	??_Lcd_Write_String,f
 11310     1A34  1FFA               	btfss	Lcd_Write_String@i,7
 11311     1A35  2A37               	goto	u5780
 11312     1A36  03F7               	decf	??_Lcd_Write_String,f
 11313     1A37                     u5780:
 11314     1A37  0877               	movf	??_Lcd_Write_String,w
 11315     1A38  00F9               	movwf	??_Lcd_Write_String+2
 11316     1A39  0879               	movf	??_Lcd_Write_String+2,w
 11317     1A3A  1283               	bcf	3,5	;RP0=0, select bank0
 11318     1A3B  1303               	bcf	3,6	;RP1=0, select bank0
 11319     1A3C  00FF               	movwf	btemp+1
 11320     1A3D  0878               	movf	??_Lcd_Write_String+1,w
 11321     1A3E  0084               	movwf	4
 11322     1A3F  120A  118A  2003  160A  158A  	fcall	stringtab
 11323     1A44  120A  118A  20C8  160A  158A  	fcall	_Lcd_Write_Char
 11324     1A49                     l3572:
 11325     1A49  3001               	movlw	1
 11326     1A4A  07FA               	addwf	Lcd_Write_String@i,f
 11327     1A4B  1803               	skipnc
 11328     1A4C  0AFB               	incf	Lcd_Write_String@i+1,f
 11329     1A4D  3000               	movlw	0
 11330     1A4E  07FB               	addwf	Lcd_Write_String@i+1,f
 11331     1A4F                     l3574:
 11332     1A4F  087A               	movf	Lcd_Write_String@i,w
 11333     1A50  0775               	addwf	Lcd_Write_String@a,w
 11334     1A51  00F8               	movwf	??_Lcd_Write_String+1
 11335     1A52  0876               	movf	Lcd_Write_String@a+1,w
 11336     1A53  00F7               	movwf	??_Lcd_Write_String
 11337     1A54  1803               	skipnc
 11338     1A55  0AF7               	incf	??_Lcd_Write_String,f
 11339     1A56  1FFA               	btfss	Lcd_Write_String@i,7
 11340     1A57  2A59               	goto	u5790
 11341     1A58  03F7               	decf	??_Lcd_Write_String,f
 11342     1A59                     u5790:
 11343     1A59  0877               	movf	??_Lcd_Write_String,w
 11344     1A5A  00F9               	movwf	??_Lcd_Write_String+2
 11345     1A5B  0879               	movf	??_Lcd_Write_String+2,w
 11346     1A5C  1283               	bcf	3,5	;RP0=0, select bank0
 11347     1A5D  1303               	bcf	3,6	;RP1=0, select bank0
 11348     1A5E  00FF               	movwf	btemp+1
 11349     1A5F  0878               	movf	??_Lcd_Write_String+1,w
 11350     1A60  0084               	movwf	4
 11351     1A61  120A  118A  2003  160A  158A  	fcall	stringtab
 11352     1A66  3A00               	xorlw	0
 11353     1A67  1D03               	skipz
 11354     1A68  2A6A               	goto	u5801
 11355     1A69  2A6B               	goto	u5800
 11356     1A6A                     u5801:
 11357     1A6A  2A2D               	goto	l3570
 11358     1A6B                     u5800:
 11359     1A6B                     l143:
 11360     1A6B  0008               	return
 11361     1A6C                     __end_of_Lcd_Write_String:
 11362                           
 11363                           	psect	text33
 11364     00C8                     __ptext33:	
 11365 ;; *************** function _Lcd_Write_Char *****************
 11366 ;; Defined at:
 11367 ;;		line 83 in file "LCD.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;  a               1    wreg     unsigned char 
 11370 ;; Auto vars:     Size  Location     Type
 11371 ;;  a               1    4[COMMON] unsigned char 
 11372 ;;  y               1    3[COMMON] unsigned char 
 11373 ;;  temp            1    2[COMMON] unsigned char 
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  1    wreg      void 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2, status,0, pclath, cstack
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/0
 11380 ;;		On exit  : 0/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11383 ;;      Params:         0       0       0       0       0
 11384 ;;      Locals:         3       0       0       0       0
 11385 ;;      Temps:          1       0       0       0       0
 11386 ;;      Totals:         4       0       0       0       0
 11387 ;;Total ram usage:        4 bytes
 11388 ;; Hardware stack levels used: 1
 11389 ;; Hardware stack levels required when called: 1
 11390 ;; This function calls:
 11391 ;;		_Lcd_Port
 11392 ;; This function is called by:
 11393 ;;		_main
 11394 ;;		_Lcd_Write_String
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398     00C8                     _Lcd_Write_Char:	
 11399                           ;psect for function _Lcd_Write_Char
 11400                           
 11401                           
 11402                           ;incstack = 0
 11403                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11404                           ;Lcd_Write_Char@a stored from wreg
 11405     00C8  00F4               	movwf	Lcd_Write_Char@a
 11406     00C9                     l3108:
 11407                           
 11408                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
 11409     00C9  0874               	movf	Lcd_Write_Char@a,w
 11410     00CA  390F               	andlw	15
 11411     00CB  00F2               	movwf	Lcd_Write_Char@temp
 11412                           
 11413                           ;LCD.c: 86:     y = a & 0xF0;
 11414     00CC  0874               	movf	Lcd_Write_Char@a,w
 11415     00CD  39F0               	andlw	240
 11416     00CE  00F3               	movwf	Lcd_Write_Char@y
 11417     00CF                     l3110:
 11418                           
 11419                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
 11420     00CF  1283               	bcf	3,5	;RP0=0, select bank0
 11421     00D0  1303               	bcf	3,6	;RP1=0, select bank0
 11422     00D1  1508               	bsf	8,2	;volatile
 11423     00D2                     l3112:
 11424                           
 11425                           ;LCD.c: 88:     Lcd_Port(y >> 4);
 11426     00D2  0873               	movf	Lcd_Write_Char@y,w
 11427     00D3  00F1               	movwf	??_Lcd_Write_Char
 11428     00D4  3004               	movlw	4
 11429     00D5                     u4585:
 11430     00D5  1003               	clrc
 11431     00D6  0CF1               	rrf	??_Lcd_Write_Char,f
 11432     00D7  3EFF               	addlw	-1
 11433     00D8  1D03               	skipz
 11434     00D9  28D5               	goto	u4585
 11435     00DA  0871               	movf	??_Lcd_Write_Char,w
 11436     00DB  160A  158A  213C  120A  118A  	fcall	_Lcd_Port
 11437     00E0                     l3114:
 11438                           
 11439                           ;LCD.c: 89:     RD3 = 1;
 11440     00E0  1283               	bcf	3,5	;RP0=0, select bank0
 11441     00E1  1303               	bcf	3,6	;RP1=0, select bank0
 11442     00E2  1588               	bsf	8,3	;volatile
 11443     00E3                     l3116:
 11444                           
 11445                           ;LCD.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 11446     00E3  300D               	movlw	13
 11447     00E4  00F1               	movwf	??_Lcd_Write_Char
 11448     00E5                     u6687:
 11449     00E5  0BF1               	decfsz	??_Lcd_Write_Char,f
 11450     00E6  28E5               	goto	u6687
 11451     00E7                     l3118:
 11452                           
 11453                           ;LCD.c: 91:     RD3 = 0;
 11454     00E7  1283               	bcf	3,5	;RP0=0, select bank0
 11455     00E8  1303               	bcf	3,6	;RP1=0, select bank0
 11456     00E9  1188               	bcf	8,3	;volatile
 11457     00EA                     l3120:
 11458                           
 11459                           ;LCD.c: 92:     Lcd_Port(temp);
 11460     00EA  0872               	movf	Lcd_Write_Char@temp,w
 11461     00EB  160A  158A  213C  120A  118A  	fcall	_Lcd_Port
 11462     00F0                     l3122:
 11463                           
 11464                           ;LCD.c: 93:     RD3 = 1;
 11465     00F0  1283               	bcf	3,5	;RP0=0, select bank0
 11466     00F1  1303               	bcf	3,6	;RP1=0, select bank0
 11467     00F2  1588               	bsf	8,3	;volatile
 11468     00F3                     l3124:
 11469                           
 11470                           ;LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 11471     00F3  300D               	movlw	13
 11472     00F4  00F1               	movwf	??_Lcd_Write_Char
 11473     00F5                     u6697:
 11474     00F5  0BF1               	decfsz	??_Lcd_Write_Char,f
 11475     00F6  28F5               	goto	u6697
 11476     00F7                     l3126:
 11477                           
 11478                           ;LCD.c: 95:     RD3 = 0;
 11479     00F7  1283               	bcf	3,5	;RP0=0, select bank0
 11480     00F8  1303               	bcf	3,6	;RP1=0, select bank0
 11481     00F9  1188               	bcf	8,3	;volatile
 11482     00FA                     l137:
 11483     00FA  0008               	return
 11484     00FB                     __end_of_Lcd_Write_Char:
 11485                           
 11486                           	psect	text34
 11487     1AB0                     __ptext34:	
 11488 ;; *************** function _Lcd_Set_Cursor *****************
 11489 ;; Defined at:
 11490 ;;		line 48 in file "LCD.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;  a               1    wreg     unsigned char 
 11493 ;;  b               1    4[COMMON] unsigned char 
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;  a               1    6[COMMON] unsigned char 
 11496 ;;  temp            1    9[COMMON] unsigned char 
 11497 ;;  y               1    8[COMMON] unsigned char 
 11498 ;;  z               1    7[COMMON] unsigned char 
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  1    wreg      void 
 11501 ;; Registers used:
 11502 ;;		wreg, status,2, status,0, pclath, cstack
 11503 ;; Tracked objects:
 11504 ;;		On entry : 0/0
 11505 ;;		On exit  : 0/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11508 ;;      Params:         1       0       0       0       0
 11509 ;;      Locals:         4       0       0       0       0
 11510 ;;      Temps:          1       0       0       0       0
 11511 ;;      Totals:         6       0       0       0       0
 11512 ;;Total ram usage:        6 bytes
 11513 ;; Hardware stack levels used: 1
 11514 ;; Hardware stack levels required when called: 2
 11515 ;; This function calls:
 11516 ;;		_Lcd_Cmd
 11517 ;; This function is called by:
 11518 ;;		_main
 11519 ;; This function uses a non-reentrant model
 11520 ;;
 11521                           
 11522     1AB0                     _Lcd_Set_Cursor:	
 11523                           ;psect for function _Lcd_Set_Cursor
 11524                           
 11525                           
 11526                           ;incstack = 0
 11527                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11528                           ;Lcd_Set_Cursor@a stored from wreg
 11529     1AB0  00F6               	movwf	Lcd_Set_Cursor@a
 11530     1AB1                     l3548:
 11531                           
 11532                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
 11533     1AB1  0376               	decf	Lcd_Set_Cursor@a,w
 11534     1AB2  1D03               	btfss	3,2
 11535     1AB3  2AB5               	goto	u5741
 11536     1AB4  2AB6               	goto	u5740
 11537     1AB5                     u5741:
 11538     1AB5  2AD3               	goto	l3558
 11539     1AB6                     u5740:
 11540     1AB6                     l3550:
 11541                           
 11542                           ;LCD.c: 51:         temp = 0x80 + b - 1;
 11543     1AB6  0874               	movf	Lcd_Set_Cursor@b,w
 11544     1AB7  3E7F               	addlw	127
 11545     1AB8  00F9               	movwf	Lcd_Set_Cursor@temp
 11546                           
 11547                           ;LCD.c: 52:         z = temp >> 4;
 11548     1AB9  0879               	movf	Lcd_Set_Cursor@temp,w
 11549     1ABA  00F5               	movwf	??_Lcd_Set_Cursor
 11550     1ABB  3004               	movlw	4
 11551     1ABC                     u5755:
 11552     1ABC  1003               	clrc
 11553     1ABD  0CF5               	rrf	??_Lcd_Set_Cursor,f
 11554     1ABE  3EFF               	addlw	-1
 11555     1ABF  1D03               	skipz
 11556     1AC0  2ABC               	goto	u5755
 11557     1AC1  0875               	movf	??_Lcd_Set_Cursor,w
 11558     1AC2  00F7               	movwf	Lcd_Set_Cursor@z
 11559     1AC3                     l3552:
 11560                           
 11561                           ;LCD.c: 53:         y = temp & 0x0F;
 11562     1AC3  0879               	movf	Lcd_Set_Cursor@temp,w
 11563     1AC4  390F               	andlw	15
 11564     1AC5  00F8               	movwf	Lcd_Set_Cursor@y
 11565     1AC6                     l3554:
 11566                           
 11567                           ;LCD.c: 54:         Lcd_Cmd(z);
 11568     1AC6  0877               	movf	Lcd_Set_Cursor@z,w
 11569     1AC7  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11570     1ACC                     l3556:
 11571                           
 11572                           ;LCD.c: 55:         Lcd_Cmd(y);
 11573     1ACC  0878               	movf	Lcd_Set_Cursor@y,w
 11574     1ACD  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11575                           
 11576                           ;LCD.c: 56:     } else if (a == 2) {
 11577     1AD2  2AF5               	goto	l131
 11578     1AD3                     l3558:
 11579     1AD3  3002               	movlw	2
 11580     1AD4  0676               	xorwf	Lcd_Set_Cursor@a,w
 11581     1AD5  1D03               	btfss	3,2
 11582     1AD6  2AD8               	goto	u5761
 11583     1AD7  2AD9               	goto	u5760
 11584     1AD8                     u5761:
 11585     1AD8  2AF5               	goto	l131
 11586     1AD9                     u5760:
 11587     1AD9                     l3560:
 11588                           
 11589                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
 11590     1AD9  0874               	movf	Lcd_Set_Cursor@b,w
 11591     1ADA  3EBF               	addlw	191
 11592     1ADB  00F9               	movwf	Lcd_Set_Cursor@temp
 11593                           
 11594                           ;LCD.c: 58:         z = temp >> 4;
 11595     1ADC  0879               	movf	Lcd_Set_Cursor@temp,w
 11596     1ADD  00F5               	movwf	??_Lcd_Set_Cursor
 11597     1ADE  3004               	movlw	4
 11598     1ADF                     u5775:
 11599     1ADF  1003               	clrc
 11600     1AE0  0CF5               	rrf	??_Lcd_Set_Cursor,f
 11601     1AE1  3EFF               	addlw	-1
 11602     1AE2  1D03               	skipz
 11603     1AE3  2ADF               	goto	u5775
 11604     1AE4  0875               	movf	??_Lcd_Set_Cursor,w
 11605     1AE5  00F7               	movwf	Lcd_Set_Cursor@z
 11606     1AE6                     l3562:
 11607                           
 11608                           ;LCD.c: 59:         y = temp & 0x0F;
 11609     1AE6  0879               	movf	Lcd_Set_Cursor@temp,w
 11610     1AE7  390F               	andlw	15
 11611     1AE8  00F8               	movwf	Lcd_Set_Cursor@y
 11612     1AE9                     l3564:
 11613                           
 11614                           ;LCD.c: 60:         Lcd_Cmd(z);
 11615     1AE9  0877               	movf	Lcd_Set_Cursor@z,w
 11616     1AEA  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11617     1AEF                     l3566:
 11618                           
 11619                           ;LCD.c: 61:         Lcd_Cmd(y);
 11620     1AEF  0878               	movf	Lcd_Set_Cursor@y,w
 11621     1AF0  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11622     1AF5                     l131:
 11623     1AF5  0008               	return
 11624     1AF6                     __end_of_Lcd_Set_Cursor:
 11625                           
 11626                           	psect	text35
 11627     1C41                     __ptext35:	
 11628 ;; *************** function _Lcd_Init *****************
 11629 ;; Defined at:
 11630 ;;		line 65 in file "LCD.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;		None
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;		None
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      void 
 11637 ;; Registers used:
 11638 ;;		wreg, status,2, status,0, pclath, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11644 ;;      Params:         0       0       0       0       0
 11645 ;;      Locals:         0       0       0       0       0
 11646 ;;      Temps:          2       0       0       0       0
 11647 ;;      Totals:         2       0       0       0       0
 11648 ;;Total ram usage:        2 bytes
 11649 ;; Hardware stack levels used: 1
 11650 ;; Hardware stack levels required when called: 2
 11651 ;; This function calls:
 11652 ;;		_Lcd_Cmd
 11653 ;;		_Lcd_Port
 11654 ;; This function is called by:
 11655 ;;		_main
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659     1C41                     _Lcd_Init:	
 11660                           ;psect for function _Lcd_Init
 11661                           
 11662     1C41                     l3536:	
 11663                           ;incstack = 0
 11664                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11665                           
 11666                           
 11667                           ;LCD.c: 66:     Lcd_Port(0x00);
 11668     1C41  3000               	movlw	0
 11669     1C42  160A  158A  213C  160A  158A  	fcall	_Lcd_Port
 11670     1C47                     l3538:
 11671                           
 11672                           ;LCD.c: 67:     _delay((unsigned long)((20)*(4000000/4000.0)));
 11673     1C47  301A               	movlw	26
 11674     1C48  00F5               	movwf	??_Lcd_Init+1
 11675     1C49  30F8               	movlw	248
 11676     1C4A  00F4               	movwf	??_Lcd_Init
 11677     1C4B                     u6707:
 11678     1C4B  0BF4               	decfsz	??_Lcd_Init,f
 11679     1C4C  2C4B               	goto	u6707
 11680     1C4D  0BF5               	decfsz	??_Lcd_Init+1,f
 11681     1C4E  2C4B               	goto	u6707
 11682     1C4F  0000               	nop
 11683     1C50                     l3540:
 11684                           
 11685                           ;LCD.c: 68:     Lcd_Cmd(0x03);
 11686     1C50  3003               	movlw	3
 11687     1C51  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11688                           
 11689                           ;LCD.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
 11690     1C56  3007               	movlw	7
 11691     1C57  00F5               	movwf	??_Lcd_Init+1
 11692     1C58  307D               	movlw	125
 11693     1C59  00F4               	movwf	??_Lcd_Init
 11694     1C5A                     u6717:
 11695     1C5A  0BF4               	decfsz	??_Lcd_Init,f
 11696     1C5B  2C5A               	goto	u6717
 11697     1C5C  0BF5               	decfsz	??_Lcd_Init+1,f
 11698     1C5D  2C5A               	goto	u6717
 11699     1C5E                     l3542:
 11700                           
 11701                           ;LCD.c: 70:     Lcd_Cmd(0x03);
 11702     1C5E  3003               	movlw	3
 11703     1C5F  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11704     1C64                     l3544:
 11705                           
 11706                           ;LCD.c: 71:     _delay((unsigned long)((11)*(4000000/4000.0)));
 11707     1C64  300F               	movlw	15
 11708     1C65  00F5               	movwf	??_Lcd_Init+1
 11709     1C66  3047               	movlw	71
 11710     1C67  00F4               	movwf	??_Lcd_Init
 11711     1C68                     u6727:
 11712     1C68  0BF4               	decfsz	??_Lcd_Init,f
 11713     1C69  2C68               	goto	u6727
 11714     1C6A  0BF5               	decfsz	??_Lcd_Init+1,f
 11715     1C6B  2C68               	goto	u6727
 11716     1C6C  2C6D               	nop2
 11717                           
 11718                           ;LCD.c: 72:     Lcd_Cmd(0x03);
 11719     1C6D  3003               	movlw	3
 11720     1C6E  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11721                           
 11722                           ;LCD.c: 74:     Lcd_Cmd(0x02);
 11723     1C73  3002               	movlw	2
 11724     1C74  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11725                           
 11726                           ;LCD.c: 75:     Lcd_Cmd(0x02);
 11727     1C79  3002               	movlw	2
 11728     1C7A  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11729                           
 11730                           ;LCD.c: 76:     Lcd_Cmd(0x08);
 11731     1C7F  3008               	movlw	8
 11732     1C80  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11733                           
 11734                           ;LCD.c: 77:     Lcd_Cmd(0x00);
 11735     1C85  3000               	movlw	0
 11736     1C86  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11737                           
 11738                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
 11739     1C8B  300C               	movlw	12
 11740     1C8C  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11741                           
 11742                           ;LCD.c: 79:     Lcd_Cmd(0x00);
 11743     1C91  3000               	movlw	0
 11744     1C92  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11745                           
 11746                           ;LCD.c: 80:     Lcd_Cmd(0x06);
 11747     1C97  3006               	movlw	6
 11748     1C98  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11749     1C9D                     l134:
 11750     1C9D  0008               	return
 11751     1C9E                     __end_of_Lcd_Init:
 11752                           
 11753                           	psect	text36
 11754     18FF                     __ptext36:	
 11755 ;; *************** function _Lcd_Clear *****************
 11756 ;; Defined at:
 11757 ;;		line 43 in file "LCD.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;		None
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;		None
 11762 ;; Return value:  Size  Location     Type
 11763 ;;                  1    wreg      void 
 11764 ;; Registers used:
 11765 ;;		wreg, status,2, status,0, pclath, cstack
 11766 ;; Tracked objects:
 11767 ;;		On entry : 0/0
 11768 ;;		On exit  : 0/0
 11769 ;;		Unchanged: 0/0
 11770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11771 ;;      Params:         0       0       0       0       0
 11772 ;;      Locals:         0       0       0       0       0
 11773 ;;      Temps:          0       0       0       0       0
 11774 ;;      Totals:         0       0       0       0       0
 11775 ;;Total ram usage:        0 bytes
 11776 ;; Hardware stack levels used: 1
 11777 ;; Hardware stack levels required when called: 2
 11778 ;; This function calls:
 11779 ;;		_Lcd_Cmd
 11780 ;; This function is called by:
 11781 ;;		_main
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785     18FF                     _Lcd_Clear:	
 11786                           ;psect for function _Lcd_Clear
 11787                           
 11788     18FF                     l3546:	
 11789                           ;incstack = 0
 11790                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 11791                           
 11792                           
 11793                           ;LCD.c: 44:     Lcd_Cmd(0);
 11794     18FF  3000               	movlw	0
 11795     1900  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11796                           
 11797                           ;LCD.c: 45:     Lcd_Cmd(1);
 11798     1905  3001               	movlw	1
 11799     1906  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11800     190B                     l125:
 11801     190B  0008               	return
 11802     190C                     __end_of_Lcd_Clear:
 11803                           
 11804                           	psect	text37
 11805     1922                     __ptext37:	
 11806 ;; *************** function _Lcd_Cmd *****************
 11807 ;; Defined at:
 11808 ;;		line 35 in file "LCD.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;  a               1    wreg     unsigned char 
 11811 ;; Auto vars:     Size  Location     Type
 11812 ;;  a               1    3[COMMON] unsigned char 
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  1    wreg      void 
 11815 ;; Registers used:
 11816 ;;		wreg, status,2, status,0, pclath, cstack
 11817 ;; Tracked objects:
 11818 ;;		On entry : 0/0
 11819 ;;		On exit  : 0/0
 11820 ;;		Unchanged: 0/0
 11821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11822 ;;      Params:         0       0       0       0       0
 11823 ;;      Locals:         1       0       0       0       0
 11824 ;;      Temps:          2       0       0       0       0
 11825 ;;      Totals:         3       0       0       0       0
 11826 ;;Total ram usage:        3 bytes
 11827 ;; Hardware stack levels used: 1
 11828 ;; Hardware stack levels required when called: 1
 11829 ;; This function calls:
 11830 ;;		_Lcd_Port
 11831 ;; This function is called by:
 11832 ;;		_Lcd_Clear
 11833 ;;		_Lcd_Set_Cursor
 11834 ;;		_Lcd_Init
 11835 ;;		_Lcd_Shift_Right
 11836 ;;		_Lcd_Shift_Left
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840     1922                     _Lcd_Cmd:	
 11841                           ;psect for function _Lcd_Cmd
 11842                           
 11843                           
 11844                           ;incstack = 0
 11845                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11846                           ;Lcd_Cmd@a stored from wreg
 11847     1922  00F3               	movwf	Lcd_Cmd@a
 11848     1923                     l3138:
 11849                           
 11850                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
 11851     1923  1283               	bcf	3,5	;RP0=0, select bank0
 11852     1924  1303               	bcf	3,6	;RP1=0, select bank0
 11853     1925  1108               	bcf	8,2	;volatile
 11854     1926                     l3140:
 11855                           
 11856                           ;LCD.c: 37:     Lcd_Port(a);
 11857     1926  0873               	movf	Lcd_Cmd@a,w
 11858     1927  160A  158A  213C  160A  158A  	fcall	_Lcd_Port
 11859     192C                     l3142:
 11860                           
 11861                           ;LCD.c: 38:     RD3 = 1;
 11862     192C  1283               	bcf	3,5	;RP0=0, select bank0
 11863     192D  1303               	bcf	3,6	;RP1=0, select bank0
 11864     192E  1588               	bsf	8,3	;volatile
 11865     192F                     l3144:
 11866                           
 11867                           ;LCD.c: 39:     _delay((unsigned long)((4)*(4000000/4000.0)));
 11868     192F  3006               	movlw	6
 11869     1930  00F2               	movwf	??_Lcd_Cmd+1
 11870     1931  3030               	movlw	48
 11871     1932  00F1               	movwf	??_Lcd_Cmd
 11872     1933                     u6737:
 11873     1933  0BF1               	decfsz	??_Lcd_Cmd,f
 11874     1934  2933               	goto	u6737
 11875     1935  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11876     1936  2933               	goto	u6737
 11877     1937  0000               	nop
 11878     1938                     l3146:
 11879                           
 11880                           ;LCD.c: 40:     RD3 = 0;
 11881     1938  1283               	bcf	3,5	;RP0=0, select bank0
 11882     1939  1303               	bcf	3,6	;RP1=0, select bank0
 11883     193A  1188               	bcf	8,3	;volatile
 11884     193B                     l122:
 11885     193B  0008               	return
 11886     193C                     __end_of_Lcd_Cmd:
 11887                           
 11888                           	psect	text38
 11889     193C                     __ptext38:	
 11890 ;; *************** function _Lcd_Port *****************
 11891 ;; Defined at:
 11892 ;;		line 13 in file "LCD.c"
 11893 ;; Parameters:    Size  Location     Type
 11894 ;;  a               1    wreg     unsigned char 
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;  a               1    0[COMMON] unsigned char 
 11897 ;; Return value:  Size  Location     Type
 11898 ;;                  1    wreg      void 
 11899 ;; Registers used:
 11900 ;;		wreg
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11906 ;;      Params:         0       0       0       0       0
 11907 ;;      Locals:         1       0       0       0       0
 11908 ;;      Temps:          0       0       0       0       0
 11909 ;;      Totals:         1       0       0       0       0
 11910 ;;Total ram usage:        1 bytes
 11911 ;; Hardware stack levels used: 1
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		_Lcd_Cmd
 11916 ;;		_Lcd_Init
 11917 ;;		_Lcd_Write_Char
 11918 ;; This function uses a non-reentrant model
 11919 ;;
 11920                           
 11921     193C                     _Lcd_Port:	
 11922                           ;psect for function _Lcd_Port
 11923                           
 11924                           
 11925                           ;incstack = 0
 11926                           ; Regs used in _Lcd_Port: [wreg]
 11927                           ;Lcd_Port@a stored from wreg
 11928     193C  00F0               	movwf	Lcd_Port@a
 11929     193D                     l2634:
 11930                           
 11931                           ;LCD.c: 14:     if (a & 1)
 11932     193D  1C70               	btfss	Lcd_Port@a,0
 11933     193E  2940               	goto	u3391
 11934     193F  2941               	goto	u3390
 11935     1940                     u3391:
 11936     1940  2945               	goto	l111
 11937     1941                     u3390:
 11938     1941                     l2636:
 11939                           
 11940                           ;LCD.c: 15:         RD4 = 1;
 11941     1941  1283               	bcf	3,5	;RP0=0, select bank0
 11942     1942  1303               	bcf	3,6	;RP1=0, select bank0
 11943     1943  1608               	bsf	8,4	;volatile
 11944     1944  2948               	goto	l112
 11945     1945                     l111:	
 11946                           ;LCD.c: 16:     else
 11947                           
 11948                           
 11949                           ;LCD.c: 17:         RD4 = 0;
 11950     1945  1283               	bcf	3,5	;RP0=0, select bank0
 11951     1946  1303               	bcf	3,6	;RP1=0, select bank0
 11952     1947  1208               	bcf	8,4	;volatile
 11953     1948                     l112:
 11954                           
 11955                           ;LCD.c: 19:     if (a & 2)
 11956     1948  1CF0               	btfss	Lcd_Port@a,1
 11957     1949  294B               	goto	u3401
 11958     194A  294C               	goto	u3400
 11959     194B                     u3401:
 11960     194B  294E               	goto	l113
 11961     194C                     u3400:
 11962     194C                     l2638:
 11963                           
 11964                           ;LCD.c: 20:         RD5 = 1;
 11965     194C  1688               	bsf	8,5	;volatile
 11966     194D  294F               	goto	l114
 11967     194E                     l113:	
 11968                           ;LCD.c: 21:     else
 11969                           
 11970                           
 11971                           ;LCD.c: 22:         RD5 = 0;
 11972     194E  1288               	bcf	8,5	;volatile
 11973     194F                     l114:
 11974                           
 11975                           ;LCD.c: 24:     if (a & 4)
 11976     194F  1D70               	btfss	Lcd_Port@a,2
 11977     1950  2952               	goto	u3411
 11978     1951  2953               	goto	u3410
 11979     1952                     u3411:
 11980     1952  2955               	goto	l115
 11981     1953                     u3410:
 11982     1953                     l2640:
 11983                           
 11984                           ;LCD.c: 25:         RD6 = 1;
 11985     1953  1708               	bsf	8,6	;volatile
 11986     1954  2956               	goto	l116
 11987     1955                     l115:	
 11988                           ;LCD.c: 26:     else
 11989                           
 11990                           
 11991                           ;LCD.c: 27:         RD6 = 0;
 11992     1955  1308               	bcf	8,6	;volatile
 11993     1956                     l116:
 11994                           
 11995                           ;LCD.c: 29:     if (a & 8)
 11996     1956  1DF0               	btfss	Lcd_Port@a,3
 11997     1957  2959               	goto	u3421
 11998     1958  295A               	goto	u3420
 11999     1959                     u3421:
 12000     1959  295C               	goto	l117
 12001     195A                     u3420:
 12002     195A                     l2642:
 12003                           
 12004                           ;LCD.c: 30:         RD7 = 1;
 12005     195A  1788               	bsf	8,7	;volatile
 12006     195B  295D               	goto	l119
 12007     195C                     l117:	
 12008                           ;LCD.c: 31:     else
 12009                           
 12010                           
 12011                           ;LCD.c: 32:         RD7 = 0;
 12012     195C  1388               	bcf	8,7	;volatile
 12013     195D                     l119:
 12014     195D  0008               	return
 12015     195E                     __end_of_Lcd_Port:
 12016     007E                     btemp	set	126	;btemp
 12017     007E                     wtemp0	set	126
 12018                           
 12019                           	psect	idloc
 12020                           
 12021                           ;Config register IDLOC0 @ 0x2000
 12022                           ;	unspecified, using default values
 12023     2000                     	org	8192
 12024     2000  3FFF               	dw	16383
 12025                           
 12026                           ;Config register IDLOC1 @ 0x2001
 12027                           ;	unspecified, using default values
 12028     2001                     	org	8193
 12029     2001  3FFF               	dw	16383
 12030                           
 12031                           ;Config register IDLOC2 @ 0x2002
 12032                           ;	unspecified, using default values
 12033     2002                     	org	8194
 12034     2002  3FFF               	dw	16383
 12035                           
 12036                           ;Config register IDLOC3 @ 0x2003
 12037                           ;	unspecified, using default values
 12038     2003                     	org	8195
 12039     2003  3FFF               	dw	16383
 12040                           
 12041                           	psect	config
 12042                           
 12043                           ;Config register CONFIG1 @ 0x2007
 12044                           ;	Oscillator Selection bits
 12045                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 12046                           ;	Watchdog Timer Enable bit
 12047                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12048                           ;	Power-up Timer Enable bit
 12049                           ;	PWRTE = OFF, PWRT disabled
 12050                           ;	RE3/MCLR pin function select bit
 12051                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12052                           ;	Code Protection bit
 12053                           ;	CP = OFF, Program memory code protection is disabled
 12054                           ;	Data Code Protection bit
 12055                           ;	CPD = OFF, Data memory code protection is disabled
 12056                           ;	Brown Out Reset Selection bits
 12057                           ;	BOREN = OFF, BOR disabled
 12058                           ;	Internal External Switchover bit
 12059                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12060                           ;	Fail-Safe Clock Monitor Enabled bit
 12061                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12062                           ;	Low Voltage Programming Enable bit
 12063                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12064                           ;	In-Circuit Debugger Mode bit
 12065                           ;	DEBUG = 0x1, unprogramme 12066     2007                     	org	8199
 12067     2007  20D4               	dw	8404
 12068                           
 12069                           ;Config register CONFIG2 @ 0x2008
 12070                           ;	Brown-out Reset Selection bit
 12071                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12072                           ;	Flash Program Memory Self Write Enable bits
 12073                           ;	WRT = OFF, Write protection off
 12074     2008                     	org	8200
 12075     2008  3FFF               	dw	16383

Data Sizes:
    Strings     36
    Constant    144
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     39      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> valADC2(BANK1[3]), valADC(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> valADC2(BANK1[3]), valADC(BANK1[3]), STR_2(CODE[17]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _fround->___lwdiv
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _portsetup->_spiInit
    _descomponer->___lwdiv
    ___lwdiv->___lwmod
    ___awdiv->___awmod
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _descomponer->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   47149
                                             35 BANK1      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _descomponer
                          _inttochar
                          _portsetup
                        _setupINTOSC
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32659
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8016
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6479
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _descomponer                                          9     5      4    5070
                                              4 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     912
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _descomponer
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _inttochar
   _portsetup
     _spiInit
   _setupINTOSC
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      98       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      3C       7       75.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      98      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 13:07:52 2023

            ___fldiv@aexp 0057              ___fldiv@bexp 0056                         pc 0002  
            ___fldiv@sign 004F               _SSPSTATbits 0094                        l80 1601  
                      l83 16B2                        l94 197F                        l86 175B  
            ___awdiv@sign 0021                        fsr 0004       ___wmul@multiplicand 0072  
     __Umul8_16@word_mpld 0076                       l111 1945                       l112 1948  
                     l200 1B93                       l113 194E                       l114 194F  
                     l122 193B                       l115 1955                       l131 1AF5  
                     l116 1956                       l117 195C                       l125 190B  
                     l213 1B93                       l134 1C9D                       l222 1D5D  
                     l119 195D                       l143 1A6B                       l160 1CF0  
                     l137 00FA                       l162 1CFC                       l154 1CA9  
                     l155 1CB5                       l156 1CC1                       l157 1CCD  
                     l158 1CD9                       l182 18DC                       l159 1CE5  
                     l423 07AF                       l415 064E                       l408 0610  
                     l185 18E2                       l433 19B0                       l178 191C  
                     l179 1921                       l435 19C8                       l603 01B2  
                     l363 0FFF                       l196 18F3                       l188 18DB  
                     l620 1B2E                       l604 0119                       l356 134D  
                     l621 1B43                       l429 07F2                       l614 01A5  
                     l382 0220                       l607 0175                       l624 081E  
                     l632 18FE                       l802 159B                       l650 1142  
                     l619 1B12                       l627 088A                       l803 15A5  
                     l643 1076                       l651 10B6                       l628 08A3  
                     l636 108B                       l900 08C6                       l469 1DC3  
                     l661 1135                       l806 19A3                       l646 108B  
                     l902 095B                       l654 1105                       l840 1FF5  
                     l832 1F75                       l816 1E83                       l760 13A9  
                     l920 1013                       l913 0925                       l818 1FFF  
                     l586 1E2C                       l914 0931                       l906 0909  
                     l739 1AAF                       l764 142C                       l749 1A29  
                     l781 14F5                       l773 15A5                       l838 1FE7  
                     l766 1405                       l862 0C10                       l599 1C40  
                     l791 153B                       l856 0CA0                       l785 1519  
                     l689 1BE7                       l794 1579                       l875 19DD  
                     l868 0C94                       l877 19EF                       _RA0 0028  
                     _RA1 0029                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     _dec 00D2                       fsr0 0004                       _uni 00D3  
                     indf 0000              ___awmod@sign 0076              ___flmul@aexp 0036  
            ___flmul@bexp 0037              ___flmul@sign 0031              ___flmul@temp 003C  
            ___flmul@prod 0038              ___fltol@exp1 005A                      l3000 09A6  
                    l3002 09A8                      l3100 0C8E                      l3020 0A15  
                    l3012 09C3                      l3004 09B0                      l3110 00CF  
                    l3102 0C8F                      l3030 0A8E                      l3022 0A3F  
                    l3014 09D1                      l3006 09B5                      l3120 00EA  
                    l3112 00D2                      l3104 0C98                      l3040 0B0A  
                    l3032 0AAB                      l3024 0A5B                      l3016 09DE  
                    l3008 09BA                      l3200 0F4B                      l3122 00F0  
                    l3114 00E0                      l4010 1FAA                      l4002 1F7A  
                    l3130 1914                      l3050 0BBC                      l3042 0B35  
                    l3034 0AB9                      l3026 0A77                      l3018 09F9  
                    l3210 1004                      l3140 1926                      l3124 00F3  
                    l3116 00E3                      l3108 00C9                      l4020 1FDE  
                    l4004 1F7F                      l4012 1FB0                      l3132 1916  
                    l3300 0166                      l3220 108C                      l3060 0BE1  
                    l3052 0BC5                      l3044 0B43                      l3036 0AD6  
                    l3028 0A80                      l3212 100A                      l3204 0FD3  
                    l4100 1774                      l3142 192C                      l3126 00F7  
                    l3118 00E7                      l4022 1FE6                      l4014 1FBD  
                    l4006 1F8D                      l3134 1918                      l3310 0181  
                    l3302 016F                      l3222 109D                      l3070 0BF9  
                    l3062 0BEA                      l3054 0BD3                      l3046 0B6E  
                    l3038 0AED                      l3150 1146                      l3214 1010  
                    l4110 17F3                      l4102 1777                      l3144 192F  
                    l4024 1FEB                      l4016 1FCB                      l4008 1F91  
                    l3136 191B                      l3128 190D                      l3320 01AA  
                    l3304 0179                      l3312 0193                      l3240 10D5  
                    l3232 10B7                      l3080 0C28                      l3072 0C0D  
                    l3056 0BDC                      l3064 0BF0                      l3048 0B94  
                    l3160 125F                      l3152 114C                      l3216 1012  
                    l3208 1003                      l4104 177E                      l4040 15DD  
                    l3146 1938                      l3138 1923                      l4026 1FEF  
                    l4018 1FDA                      l3410 103B                      l3402 1014  
                    l3330 19B7                      l3250 10FF                      l3242 10DE  
                    l3234 10BD                      l3226 10A6                      l3090 0C63  
                    l3082 0C2C                      l3066 0BF4                      l3058 0BE0  
                    l3170 0CA8                      l4106 17DB                      l4050 15FB  
                    l4042 15E0                      l4034 15A6                      l4028 1FF1  
                    l2700 1BFD                      l3148 18DC                      l3412 103C  
                    l3404 101F                      l3340 1D6E                      l3332 19BE  
                    l3324 19A4                      l3500 094E                      l3252 1109  
                    l3260 1123                      l3244 10EC                      l3236 10CC  
                    l2620 19CA                      l3092 0C72                      l3084 0C45  
                    l3076 0C15                      l3068 0BF5                      l3164 130A  
                    l3180 0D99                      l3172 0CAA                      l4108 17EB  
                    l4060 163A                      l4052 1607                      l4044 15EA  
                    l4036 15C3                      l2710 1C15                      l2702 1C03  
                    l3510 1CA5                      l3414 1044                      l3350 1D9D  
                    l3342 1D71                      l3334 19C4                      l3326 19A6  
                    l3502 0952                      l3318 019A                      l3246 10F6  
                    l3238 10CE                      l2630 19EB                      l2622 19CC  
                    l3094 0C7C                      l3078 0C1A                      l3086 0C4B  
                    l3158 1259                      l3182 0DA0                      l3174 0CB1  
                    l3190 0E55                      l4150 0236                      l4070 168F  
                    l4062 1642                      l4054 1612                      l4046 15ED  
                    l4038 15CC                      l2640 1953                      l2720 1C37  
                    l2712 1C1F                      l2704 1C06                      l3520 1CDF  
                    l3512 1CAF                      l2800 1383                      l3432 106B  
                    l3424 1052                      l3416 1046                      l3408 1028  
                    l3352 1DAB                      l3344 1D7E                      l3440 1B9C  
                    l3328 19AA                      l3504 0953                      l3272 00FB  
                    l3248 10F7                      l2624 19D3                      l3096 0C7E  
                    l3088 0C58                      l3192 0E5C                      l3168 0CA4  
                    l4080 16C9                      l4072 1697                      l4064 1661  
                    l4056 1615                      l4048 15F8                      l2642 195A  
                    l2634 193D                      l2650 1DD0                      l2722 1C3C  
                    l2714 1C25                      l2706 1C0D                      l2730 1A74  
                    l3610 1B4C                      l3602 1B45                      l3530 1974  
                    l3522 1CEA                      l3514 1CBB                      l3370 1B42  
                    l3362 1AF6                      l2810 1396                      l2802 1387  
                    l3434 107B                      l3418 104A                      l3426 1064  
                    l3354 1DAC                      l3346 1D82                      l3338 1D5E  
                    l3450 1BD0                      l3442 1B9F                      l3290 0135  
                    l3274 0106                      l3266 112A                      l3258 1111  
                    l2626 19D7                      l3098 0C8A                      l3186 0E28  
                    l4090 1748                      l4082 16CC                      l4074 169F  
                    l4066 1669                      l4058 1632                      l2636 1941  
                    l3540 1C50                      l2660 1DE1                      l2652 1DD2  
                    l2644 1DC4                      l2716 1C2C                      l2708 1C11  
                    l2740 1A97                      l2732 1A77                      l3620 1B59  
                    l3612 1B51                      l3604 1B4A                      l3532 1975  
                    l3524 1CF5                      l3516 1CC7                      l3508 1C9F  
                    l3364 1B0A                      l3380 083A                      l2900 14CD  
                    l2820 13B3                      l2812 139E                      l2804 138B  
                    l3460 1984                      l3436 1080                      l3356 1DB5  
                    l3348 1D8B                      l3452 1BD9                      l3444 1BAC  
                    l3292 013C                      l3284 011A                      l3268 113A  
                    l2628 19E6                      l3700 01F4                      l4092 1752  
                    l4084 1727                      l4076 16A9                      l4068 1671  
                    l2638 194C                      l3542 1C5E                      l3550 1AB6  
                    l2670 1DF9                      l2662 1DE7                      l2654 1DD6  
                    l2646 1DC7                      l2718 1C32                      l2742 1A9D  
                    l2734 1A7E                      l2726 1A6C                      l3534 1976  
                    l3526 1CF9                      l3518 1CD3                      l3366 1B26  
                    l3390 08A2                      l3382 083E                      l3374 0802  
                    l2910 1502                      l2902 14D3                      l2830 13BF  
                    l2822 13B7                      l2814 139F                      l2806 138C  
                    l3358 1DBB                      l3446 1BB0                      l3454 1BDF  
                    l3438 1B94                      l3470 08BE                      l3294 0145  
                    l3286 0122                      l3278 010F                      l3198 0F44  
                    l3702 0207                      l4094 1755                      l4086 1737  
                    l4078 16B8                      l3544 1C64                      l3536 1C41  
                    l3560 1AD9                      l3552 1AC3                      l2672 1E0A  
                    l2664 1DEA                      l2680 1E1E                      l2656 1DDB  
                    l2648 1DCB                      l2744 1A9E                      l2736 1A82  
                    l2728 1A6E                      l2760 1A04                      l2752 19F0  
                    l3528 195E                      l3368 1B40                      l3384 0862  
                    l3376 0816                      l2920 151D                      l2904 14D8  
                    l2840 13C9                      l2832 13C1                      l2824 13B9  
                    l2808 1391                      l2816 13A1                      l3448 1BC2  
                    l3480 08E7                      l3472 08CE                      l3464 08A5  
                    l3296 0157                      l3288 0133                      l3800 058C  
                    l3720 0252                      l3712 0222                      l3704 020B  
                    l4096 1761                      l4088 173F                      l3546 18FF  
                    l3538 1C47                      l3562 1AE6                      l3554 1AC6  
                    l3570 1A2D                      l2682 1E23                      l2674 1E10  
                    l2666 1DF1                      l2658 1DDF                      l2690 1BE9  
                    l2746 1AA5                      l2738 1A86                      l2762 1A08  
                    l2754 19F6                      l2770 1A25                      l3650 1B73  
                    l3642 1B6B                      l3634 1B63                      l3626 1B5B  
                    l3618 1B53                      l3386 0866                      l3378 0832  
                    l3394 18F4                      l2922 1520                      l2914 150B  
                    l2906 14E7                      l2930 152D                      l2850 13D3  
                    l2842 13CB                      l2834 13C3                      l2826 13BB  
                    l2818 13AF                      l3458 1980                      l3490 091B  
                    l3482 08EE                      l3466 08AA                      l3298 0165  
                    l3810 05E7                      l3802 0596                      l3730 029A  
                    l3722 0260                      l3714 023E                      l3706 021C  
                    l4098 1769                      l3564 1AE9                      l3556 1ACC  
                    l3548 1AB1                      l3572 1A49                      l3900 1E3B  
                    l2684 1E28                      l2676 1E11                      l2668 1DF5  
                    l2692 1BED                      l2748 1AAB                      l2764 1A12  
                    l2756 19F9                      l3580 1D35                      l3660 1B81  
                    l3652 1B79                      l3644 1B71                      l3636 1B69  
                    l3628 1B61                      l3388 08A0                      l3396 18FC  
                    l2940 1540                      l2932 152E                      l2924 1522  
                    l2916 1514                      l2908 14FD                      l2860 1410  
                    l2844 13CD                      l2836 13C5                      l2828 13BD  
                    l2852 13D5                      l2780 135B                      l3492 091F  
                    l3484 08F2                      l3476 08D7                      l3468 08AE  
                    l3820 0629                      l3812 0606                      l3804 05A2  
                    l3740 02DB                      l3732 029E                      l3724 0264  
                    l3716 024A                      l3708 021E                      l3566 1AEF  
                    l3558 1AD3                      l3574 1A4F                      l3902 1E40  
                    l3910 1E50                      l2678 1E18                      l2694 1BF2  
                    l2766 1A18                      l2758 1A00                      l3590 1D44  
                    l3582 1D3C                      l3398 18FE                      l2950 157E  
                    l2942 1545                      l2934 1532                      l2926 1527  
                    l2918 1518                      l2862 1412                      l2870 1424  
                    l2854 13D6                      l2846 13CF                      l2838 13C7  
                    l2790 136F                      l2782 135C                      l2774 134E  
                    l3494 0929                      l3486 0900                      l3478 08DA  
                    l3830 065C                      l3822 0636                      l3814 0618  
                    l3806 05A7                      l3750 0362                      l3742 02EE  
                    l3734 02B7                      l3726 027D                      l3718 024E  
                    l3568 1A2A                      l3920 1E66                      l3912 1E58  
                    l3904 1E45                      l2696 1BF4                      l2688 1BE8  
                    l2768 1A1F                      l3576 18D7                      l2960 1595  
                    l2952 1583                      l2944 1553                      l2936 1538  
                    l2928 1529                      l2880 1455                      l2872 1430  
                    l2864 1416                      l2856 13ED                      l2848 13D1  
                    l2784 1361                      l2792 1371                      l2776 1353  
                    l3496 0933                      l3488 0910                      l3840 0719  
                    l3832 0661                      l3824 0645                      l3816 061F  
                    l3808 05AC                      l3760 03B6                      l3752 037B  
                    l3744 02F2                      l3736 02C2                      l3728 0296  
                    l3680 01B6                      l3922 1E6B                      l3930 1E7B  
                    l3914 1E5D                      l3906 1E4D                      l2698 1BF8  
                    l3578 1CFD                      l3674 1B8B                      l3666 1B83  
                    l3658 1B7B                      l2962 1597                      l2954 158B  
                    l2946 1557                      l2890 146A                      l2882 1459  
                    l2874 1435                      l2866 1417                      l2858 1409  
                    l2794 1379                      l2786 1366                      l2778 1357  
                    l3498 0949                      l2970 0961                      l3850 078A  
                    l3842 0738                      l3834 0665                      l3826 064A  
                    l3818 0623                      l3770 045D                      l3762 03FD  
                    l3754 0384                      l3746 02F8                      l3738 02C8  
                    l3690 01CB                      l3682 01B9                      l3932 1E8B  
                    l3940 1EA4                      l3924 1E70                      l3916 1E61  
                    l3908 1E4E                      l3596 1D56                      l3588 1D3E  
                    l3676 1B91                      l3668 1B89                      l2964 15A0  
                    l2956 1590                      l2948 1575                      l2892 146B  
                    l2884 145D                      l2868 1420                      l2796 137C  
                    l2788 136E                      l2980 0974                      l2972 0965  
                    l3860 07A9                      l3852 078E                      l3844 0742  
                    l3836 0683                      l3828 0657                      l3772 0478  
                    l3764 040C                      l3756 039F                      l3748 0317  
                    l3692 01D7                      l3684 01BF                      l3950 1ECC  
                    l3942 1EA9                      l3934 1E97                      l3926 1E78  
                    l3918 1E65                      l3598 1D5C                      l2966 15A4  
                    l2958 1591                      l2894 1474                      l2886 1464  
                    l2878 143E                      l2798 1382                      l2990 098F  
                    l2982 097C                      l2974 0969                      l3870 07D8  
                    l3862 07BA                      l3854 0794                      l3838 06DE  
                    l3846 077D                      l3790 0553                      l3782 04C6  
                    l3774 0481                      l3766 0427                      l3758 03A7  
                    l3694 01D8                      l3686 01C4                      l3960 1EF5  
                    l3952 1ED4                      l3936 1E9B                      l3928 1E79  
                    l2888 1466                      l2896 1479                      l2992 0993  
                    l2984 097E                      l2976 096A                      l2968 095C  
                    l3864 07BB                      l3848 0785                      l3776 0489  
                    l3768 044E                      l3784 04CF                      l3856 079B  
                    l3696 01DC                      l3688 01C9                      l3970 1F16  
                    l3962 1EF9                      l3954 1EDC                      l3946 1EB2  
                    l2898 148F                      l2994 0994                      l2986 0986  
                    l2978 096F                      l3866 07CA                      l3858 07A1  
                    l3786 0504                      l3778 04A7                      l3698 01DF  
                    l3874 07DE                      l3980 1F38                      l3972 1F24  
                    l3964 1EFA                      l3956 1EDE                      l3948 1EC4  
                    l3892 1E2D                      l2996 0999                      l2988 098B  
                    l3868 07CA                      l3796 0555                      l3788 0551  
                    l3876 07EE                      l3982 1F41                      l3990 1F55  
                    l3958 1EE3                      l3966 1F03                      l3974 1F28  
                    l3894 1E32                      l3886 18EB                      l2998 099E  
                    l3992 1F59                      l3984 1F45                      l3976 1F2E  
                    l3968 1F15                      l3896 1E36                      l3888 18F0  
                    l3994 1F5A                      l3986 1F46                      l3978 1F36  
                    l3898 1E3A                      l3996 1F5E                      l3988 1F4F  
                    l3998 1F72                      STR_1 00B4                      STR_2 00A3  
                    STR_3 00C2                      STR_4 00C2                      u4000 14BA  
                    u4001 14BB                      u4010 14D8                      u4002 14C0  
                    u4011 14D7                      u4003 14C1                      u4100 1538  
                    u4020 14FD                      u4101 1537                      u4021 14FC  
                    u4110 153F                      u4030 1502                      u4111 153E  
                    u4031 1501                      u3400 194C                      u4200 15A4  
                    u4120 1545                      u5000 113A                      u3401 194B  
                    u4201 15A3                      u4121 1544                      u5001 1139  
                    u3410 1953                      u4130 1557                      u4050 1518  
                    u5010 0106                      u4210 0969                      u3411 1952  
                    u4131 1556                      u4051 1517                      u5011 0105  
                    u4211 0968                      u3420 195A                      u4140 1566  
                    u4060 151D                      u5100 0192                      u5020 0118  
                    u4220 096F                      u3421 1959                      u4061 151C  
                    u4045 150D                      u5101 0191                      u5021 0117  
                    u4301 0A23                      u4221 096E                      u3510 1E1E  
                    u3430 1DCB                      u4150 1575                      u4070 1527  
                    u5110 0199                      u4302 0A2A                      u4230 0974  
                    u3511 1E1D                      u3431 1DCA                      u4151 1574  
                    u4071 1526                      u5111 0198                      u4311 0A4D  
                    u4303 0A31                      u4231 0973                      u3520 1E23  
                    u3440 1DD6                      u3600 1C32                      u4160 157E  
                    u4080 152D                      u5200 1D82                      u5040 0157  
                    u3360 19D7                      u4400 0B7A                      u4312 0A54  
                    u4240 0993                      u6000 02B7                      u3521 1E22  
                    u3505 1E12                      u3441 1DD5                      u3601 1C31  
                    u4161 157D                      u4145 1561                      u4081 152C  
                    u5201 1D81                      u5041 0156                      u3361 19D6  
                    u4321 0A69                      u4313 0A5B                      u4241 0992  
                    u6001 02B6                      u3450 1DE7                      u3610 1C37  
                    u3530 1BED                      u4170 1583                      u4090 1532  
                    u5130 01AA                      u4322 0A70                      u4250 0999  
                    u6010 02F2                      u3451 1DE6                      u3611 1C36  
                    u3531 1BEC                      u4171 1582                      u4091 1531  
                    u5131 01A9                      u5035 013E                      u4411 0B86  
                    u4323 0A77                      u4251 0998                      u6011 02F1  
                    u3540 1BF8                      u3620 1A74                      u5300 083E  
                    u4180 1590                      u5220 1D9D                      u5140 19AA  
                    u5060 0175                      u3380 19EB                      u4500 0C0D  
                    u4420 0BA2                      u4412 0B8D                      u4260 099E  
                    u6020 037B                      u3541 1BF7                      u3621 1A73  
                    u5301 083D                      u4181 158F                      u5221 1D9C  
                    u5141 19A9                      u5125 019C                      u5061 0174  
                    u5045 0153                      u3381 19EA                      u4501 0C0C  
                    u4413 0B94                      u4405 0B75                      u4341 0A9D  
                    u4261 099D                      u6021 037A                      u3390 1941  
                    u3470 1DF9                      u3550 1C03                      u3710 1A08  
                    u4190 1595                      u5070 0179                      u4510 0C14  
                    u4342 0AA4                      u4270 09B5                      u6110 058B  
                    u6030 039F                      u3391 1940                      u3471 1DF8  
                    u3551 1C02                      u3711 1A07                      u5311 084D  
                    u4191 1594                      u5215 1D84                      u5071 0178  
                    u5055 0168                      u3375 19DE                      u4511 0C13  
                    u4431 0BAE                      u4351 0AC8                      u4343 0AAB  
                    u4335 0A79                      u4271 09B4                      u6111 058A  
                    u6031 039E                      u3640 1A86                      u3720 1A12  
                    u4600 18E2                      u5320 0866                      u5312 084E  
                    u3800 1391                      u5240 1DBB                      u5080 0180  
                    u4520 0C1A                      u4432 0BB5                      u4352 0ACF  
                    u4280 09BA                      u6120 0596                      u6040 03B6  
                    u3465 1DEB                      u3641 1A85                      u3721 1A11  
                    u3705 19FA                      u4601 18E1                      u5321 0865  
                    u5313 0853                      u3801 1390                      u5241 1DBA  
                    u5225 1D99                      u5081 017F                      u4521 0C19  
                    u4433 0BBC                      u4425 0B9D                      u4353 0AD6  
                    u4281 09B9                      u6121 0595                      u6105 0558  
                    u6041 03B5                      u3490 1E0A                      u3570 1C15  
                    u5250 1B0A                      u5314 0854                      u3810 1396  
                    u5410 1063                      u5170 19C4                      u4530 0C2C  
                    u4610 114C                      u6210 0784                      u6130 05A2  
                    u6050 040C                      u3491 1E09                      u3571 1C14  
                    u3635 1A78                      u5251 1B09                      u5331 0875  
                    u5315 0859                      u3811 1395                      u5411 1062  
                    u5235 1DAD                      u5171 19C3                      u5155 19B1  
                    u4531 0C2B                      u4371 0AFC                      u4291 0A07  
                    u4611 114B                      u6211 0783                      u6131 05A1  
                    u6115 0587                      u6051 040B                      u6300 1E40  
                    u3580 1C1F                      u3660 1A97                      u3740 1A25  
                    u5260 1B26                      u5340 08A0                      u5332 0876  
                    u5316 085A                      u3900 142C                      u3820 13AF  
                    u5420 106A                      u5180 1D6E                      u4540 0C3B  
                    u4460 0BE0                      u4372 0B03                      u4292 0A0E  
                    u4700 0CB1                      u6220 079A                      u6060 0427  
                    u6301 1E3F                      u3485 1DFA                      u3581 1C1E  
                    u3565 1C07                      u3661 1A96                      u3741 1A24  
                    u3725 1A0E                      u5261 1B25                      u5341 089F  
                    u5333 087B                      u3901 142B                      u3821 13AE  
                    u5421 1069                      u5405 1053                      u5181 1D6D  
                    u5165 19B8                      u4461 0BDF                      u4445 0BBE  
                    u4381 0B27                      u4373 0B0A                      u4365 0AD8  
                    u4293 0A15                      u4701 0CB0                      u6221 0799  
                    u6205 0745                      u6061 0426                      u6045 03B2  
                    u6310 1E45                      u5270 1B40                      u5334 087C  
                    u5350 18FC                      u3910 1430                      u3830 13B3  
                    u3750 135B                      u5510 1BDF                      u4550 0C58  
                    u4382 0B2E                      u6230 07A1                      u6150 0617  
                    u6070 044E                      u6311 1E44                      u3495 1E06  
                    u3655 1A87                      u3735 1A19                      u5271 1B3F  
                    u5335 0881                      u5351 18FB                      u3911 142F  
                    u3831 13B2                      u3751 135A                      u5511 1BDE  
                    u5095 0182                      u4551 0C57                      u4455 0BD5  
                    u4391 0B52                      u4383 0B35                      u6231 07A0  
                    u6151 0616                      u6071 044D                      u6055 0408  
                    u6400 1EF9                      u6320 1E65                      u3680 1AAB  
                    u5336 0882                      u5280 0816                      u3920 1435  
                    u3840 13ED                      u3760 1361                      u5440 107B  
                    u5360 101F                      u5600 091F                      u5520 08AA  
                    u4560 0C72                      u4480 0BF4                      u4392 0B59  
                    u6240 07A9                      u6160 0636                      u6080 045D  
                    u6401 1EF8                      u6321 1E64                      u3585 1C1B  
                    u3681 1AAA                      u3665 1A93                      u5345 089C  
                    u5281 0815                      u3921 1434                      u3841 13EC  
                    u3761 1360                      u5441 107A                      u5361 101E  
                    u5505 1BD1                      u5601 091E                      u5521 08A9  
                    u4561 0C71                      u4545 0C36                      u4481 0BF3  
                    u4393 0B60                      u4625 1169                      u6241 07A8  
                    u6161 0635                      u6145 05AF                      u6081 045C  
                    u6330 1E6B                      u3690 19F6                      u5290 0832  
                    u3850 13F8                      u3770 1366                      u5450 1080  
                    u5370 1036                      u5610 0925                      u5530 08AE  
                    u4570 0C8E                      u4490 0BF9                      u4650 125F  
                    u6250 07BA                      u6170 0645                      u6090 0478  
                    u6331 1E6A                      u3595 1C26                      u3675 1A9F  
                    u3691 19F5                      u5275 1B3C                      u5291 0831  
                    u3931 1447                      u3851 13F6                      u3771 1365  
                    u5451 107F                      u5435 106D                      u5195 1D73  
                    u5611 0924                      u5531 08AD                      u4571 0C8D  
                    u4555 0C54                      u4491 0BF8                      u4475 0BE3  
                    u4651 125E                      u4635 11C3                      u4715 0CD1  
                    u6251 07B9                      u6171 0644                      u6091 0477  
                    u6500 1F72                      u6420 1F15                      u6340 1E70  
                    u5700 1CD3                      u3940 1459                      u3932 144E  
                    u3860 13F9                      u3780 1382                      u5380 104A  
                    u5460 1B9C                      u5620 0929                      u5540 08CE  
                    u4820 0F4B                      u4740 0DA0                      u6260 07CA  
                    u6180 065C                      u6501 1F71                      u6421 1F14  
                    u6341 1E6F                      u5701 1CD2                      u3941 1458  
                    u3933 1455                      u3845 13E9                      u3781 1381  
                    u5381 1049                      u5461 1B9B                      u5621 0928  
                    u5541 08CD                      u4565 0C6E                      u4645 1218  
                    u4821 0F4A                      u4805 0EB8                      u4741 0D9F  
                    u4725 0D0D                      u6261 07C9                      u6181 065B  
                    u6165 0632                      u6085 0459                      u6510 1F79  
                    u6430 1F2E                      u6350 1E8B                      u4590 1914  
                    u5710 1CDF                      u3950 145D                      u3870 1409  
                    u3790 138B                      u5390 1051                      u5630 093E  
                    u4910 10EC                      u6270 07D8                      u6511 1F78  
                    u6431 1F2D                      u6415 1EFC                      u6351 1E8A  
                    u4591 1913                      u5711 1CDE                      u3951 145C  
                    u3871 1408                      u3791 138A                      u5391 1050  
                    u5375 1031                      u4911 10EB                      u4815 0F03  
                    u4735 0D58                      u6271 07D7                      u6255 07B6  
                    u6175 0641                      u5800 1A6B                      u6520 1F7F  
                    u6440 1F36                      u6360 1EA9                      u5720 1CEA  
                    u3960 146A                      u3880 1416                      u5480 1BB0  
                    u5640 094E                      u5560 08ED                      u6280 07EE  
                    u6600 1761                      u4585 00D5                      u5801 1A6A  
                    u6521 1F7E                      u6441 1F35                      u6425 1F11  
                    u6361 1EA8                      u5721 1CE9                      u3961 1469  
                    u3881 1415                      u5481 1BAF                      u5641 094D  
                    u5561 08EC                      u4905 10D7                      u4665 127C  
                    u6281 07ED                      u6265 07C6                      u6601 1760  
                    u6530 1F91                      u6370 1EE3                      u6290 1E3A  
                    u5810 1D3C                      u5730 1CF5                      u5490 1BC2  
                    u5650 0952                      u4930 1105                      u4690 0CA8  
                    u6531 1F90                      u6371 1EE2                      u6291 1E39  
                    u5811 1D3B                      u5731 1CF4                      u5491 1BC1  
                    u5475 1BA1                      u5651 0951                      u5635 0939  
                    u5555 08DF                      u4931 1104                      u4915 10E8  
                    u4675 12C9                      u4835 0F5E                      u4755 0DB3  
                    u4691 0CA7                      u6195 06E1                      u5740 1AB6  
                    u6540 1FA0                      u6460 1F45                      u5820 1D44  
                    u5900 1B79                      u5660 1CA5                      u3980 148F  
                    u5580 090F                      u4940 1109                      u4860 100A  
                    u4780 0E5C                      u5741 1AB5                      u6461 1F44  
                    u5821 1D43                      u5901 1B78                      u5661 1CA4  
                    u3981 148E                      u5581 090E                      u4941 1108  
                    u4925 10F8                      u4685 1315                      u4861 1009  
                    u4845 0F9A                      u4781 0E5B                      u4765 0DEF  
                    u6550 1FBD                      u5830 1D5C                      u5910 1B81  
                    u5670 1CAF                      u4950 1110                      u4870 1010  
                    u6551 1FBC                      u6455 1F3A                      u5831 1D5B  
                    u5911 1B80                      u5671 1CAE                      u3991 14A6  
                    u3983 148B                      u3975 146D                      u3895 1419  
                    u5495 1BBE                      u5575 0901                      u4951 110F  
                    u4871 100F                      u4855 0FD6                      u4775 0E2B  
                    u5760 1AD9                      u6560 1FDA                      u6480 1F59  
                    u5920 1B89                      u5840 1B4A                      u5680 1CBB  
                    u3992 14A7                      u4880 109D                      u5761 1AD8  
                    u6561 1FD9                      u6545 1F9B                      u6481 1F58  
                    u6385 1EE5                      u5921 1B88                      u5841 1B49  
                    u5681 1CBA                      u3993 14AC                      u4881 109C  
                    u6617 15E6                      u6570 1FEF                      u6490 1F5E  
                    u5930 1B91                      u5850 1B51                      u5690 1CC7  
                    u3994 14AD                      u4970 1122                      u4890 10B5  
                    u6707 1C4B                      u5755 1ABC                      u6571 1FEE  
                    u6555 1FB9                      u6491 1F5D                      u6475 1F48  
                    u6395 1EEE                      u5931 1B90                      u5851 1B50  
                    u5691 1CC6                      u3995 14B2                      u5595 0914  
                    u4971 1121                      u4891 10B4                      u4795 0E7C  
                    u6627 15F3                      u5780 1A37                      u5860 1B59  
                    u3996 14B3                      u4980 1129                      u5940 01BF  
                    u6580 1607                      u6717 1C5A                      u6565 1FD6  
                    u5861 1B58                      u4981 1128                      u4965 1112  
                    u5941 01BE                      u6637 16A5                      u6581 1606  
                    u5790 1A59                      u5870 1B61                      u5950 01D7  
                    u6590 16B8                      u6727 1C68                      u5775 1ADF  
                    u5871 1B60                      u5951 01D6                      u6647 16C4  
                    u6591 16B7                      u5880 1B69                      u5960 021B  
                    u6737 1933                      u5881 1B68                      u5961 021A  
                    u6657 174E                      u5890 1B71                      u5970 024A  
                    u5891 1B70                      u4995 112C                      u5971 0249  
                    u6667 176F                      u5980 024E                      u5981 024D  
                    u6677 177B                      u5990 027D                      u6687 00E5  
                    u5991 027C                      u6697 00F5         ?_Lcd_Write_String 0075  
                    _cent 00D1                      _cont 00CF                      _main 15A6  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0077  
         ___fldiv@new_exp 0050              _sprintf$1168 00AA           __end_of_Lcd_Cmd 193C  
           ___fltol@sign1 0059           __end_of___fladd 15A6                     ?_main 0070  
         __end_of___fldiv 2000           __end_of___awdiv 1E2D           __end_of___flneg 18FF  
         __end_of___awmod 1C41           __end_of___flmul 0CA1           __end_of___flsub 19A4  
         __end_of___fltol 108C                     _ANSEL 0188           __end_of___lldiv 1DC4  
         ___awdiv@divisor 0077           __end_of___llmod 1BE8           __end_of___lwdiv 1AB0  
         __end_of___lwmod 1A2A           ___awdiv@counter 0020                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088           __end_of_dpowers 00A3  
                   _scale 0CA1           __end_of_isdigit 1014                     pclath 000A  
         __end_of_spiInit 1922           __end_of_spiRead 18F4                     status 0003  
                   wtemp0 007E           __end_of_sprintf 07F3          __end_of_Lcd_Init 1C9E  
        __end_of_Lcd_Port 195E           __initialization 07F3              __end_of_main 1800  
                  ??_main 00C3          ___llmod@dividend 0074                    ?_scale 003E  
        ___awdiv@dividend 0079                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPBUF 0013  
                  _SSPCON 0014          __end_of___xxtofl 095C          __end_of__powers_ 0047  
                  ___flge 0802                    ___fleq 1AF6                 ??___fladd 005A  
                  ___wmul 19A4                 ??___fldiv 0046                 ??___awdiv 007B  
                  _lecADC 00D5                 ??___flneg 0074                 ??___awmod 0074  
               ??___flmul 002C                 ??___flsub 007E                 ??___fltol 0055  
               ??___lldiv 0078                 ??___llmod 0078                 ??___lwdiv 007A  
               ??___lwmod 0074                    _conver 00CB                    _valADC 00D9  
                  _fround 1143          ___awdiv@quotient 0022           ___awmod@divisor 0070  
         ___awmod@counter 0075              ?_setupINTOSC 0070                 ??_isdigit 0070  
        __end_of_spiWrite 18DC                 ??_spiInit 0073                 ??_spiRead 0070  
               ??_sprintf 00A5           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077                ___flge@ff1 0070  
              ___flge@ff2 0074              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
 __end_of__initialization 07FC                ___flneg@f1 0070         __end_of_Lcd_Clear 190C  
              ___fltol@f1 0051           descomponer@cent 002A            __pcstackCOMMON 0070  
           __end_of_scale 1000            _Lcd_Set_Cursor 1AB0                __div_to_l_ 00FB  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070           __div_to_l_@exp1 0025  
         __div_to_l_@cntr 0024                   ??_scale 0042           __div_to_l_@quot 0020  
              __pbssBANK1 00C7             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
       __end_of__Umul8_16 19F0                __pmaintext 15A6                   ?___flge 0070  
                 ?___fleq 0070                   ?___wmul 0070                   ?_fround 003E  
  __end_of_Lcd_Set_Cursor 1AF6                 ?___xxtofl 0070                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 00C8                   _Lcd_Cmd 1922         __end_of__npowers_ 007B  
              _scale$1167 004C                 ?_spiWrite 0070                   ___fladd 134E  
                 ___fldiv 1E2D                   ___awdiv 1DC4                   ___flneg 18F4  
                 ___awmod 1BE8                   ___flmul 095C                   ___flsub 1980  
                 ___fltol 1014                   ___lldiv 1D5E                   ___llmod 1B94  
                 ___lwdiv 1A6C                   ___lwmod 19F0                   _lecADC2 00D4  
         ?_Lcd_Set_Cursor 0074                   __ptext1 01B3                   __ptext2 0CA1  
                 __ptext3 1002                   __ptext4 1143                   __ptext5 095C  
                 __ptext6 19C9                   __ptext7 108C                   __ptext8 00FB  
                 __ptext9 08A4                   _conver1 00C7                   _valADC2 00D6  
             ?__div_to_l_ 0070                   _dpowers 007B                   _isdigit 1002  
              ??___xxtofl 0074          ___awmod@dividend 0072                   _spiInit 190C  
                 _spiRead 18EB                   _sprintf 01B3                   clrloop0 18E4  
       __end_of_inttochar 1B94    __end_of_Lcd_Write_Char 00FB      end_of_initialization 07FC  
         ___lldiv@divisor 0070           ___lldiv@counter 007D                ??_spiWrite 0070  
               Lcd_Port@a 0070         __end_of_portsetup 1980            __tdiv_to_l_@f1 0070  
          __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078                 _PORTAbits 0005  
               _PORTDbits 0008             ??_descomponer 0028               ___fladd@grs 0065  
           ___xxtofl@sign 0078               ___fldiv@grs 0052               ___fldiv@rem 004B  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A               ___flmul@grs 0032                 _Lcd_Clear 18FF  
          _spiReceiveWait 18DC            __end_of___flge 08A4            __end_of___fleq 1B44  
          __end_of___wmul 19C9          _Lcd_Write_String 1A2A            __end_of_fround 134E  
     start_initialization 07F3       __end_of__tdiv_to_l_ 1143       __end_of_descomponer 1D5E  
         ___llmod@divisor 0070           ___llmod@counter 0079    __end_of_spiReceiveWait 18E3  
              ?_Lcd_Clear 0070                  ??___flge 0078                  ??___fleq 0078  
                ??___wmul 0074                 __Umul8_16 19C9           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                  ??_fround 0042             sprintf@tmpval 00B7  
               ___fladd@a 0056                 ___fladd@b 0052                fround@prec 0051  
               ___fldiv@a 003E                 ___fldiv@b 0042                 ___flmul@a 0028  
               ___flmul@b 0024                 ___flsub@a 0066                 ___flsub@b 006A  
               ___latbits 0002            descomponer@dec 002C             __pcstackBANK0 0020  
           __pcstackBANK1 00A0            descomponer@num 0026            descomponer@pos 0024  
          descomponer@uni 002B           setupINTOSC@IRCF 0070                  ?_Lcd_Cmd 0070  
             sprintf@flag 00AF               sprintf@eexp 00B5               sprintf@fval 00BE  
             sprintf@prec 00BC          ___lwdiv@dividend 0078           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___fladd 0052              inttochar@num 0070  
                ?___fldiv 003E                  ?___awdiv 0077                  ?___flneg 0070  
                ?___awmod 0070                  ?___flmul 0024                  ?___flsub 0066  
                ?___fltol 0051                  ?___lldiv 0070                  ?___llmod 0070  
               __npowers_ 0047                ?__Umul8_16 0070                  ?___lwdiv 0076  
                ?___lwmod 0070                 __pstrings 0003               __tdiv_to_l_ 108C  
            ??__div_to_l_ 0078               _descomponer 1CFD                  ?_isdigit 0070  
                ?_spiInit 0070                  ?_spiRead 0070          ___lwdiv@quotient 007B  
                ?_sprintf 00A0      spiInit@sTransmitEdge 0072            ___wmul@product 0074  
               _inttochar 1B44                 clear_ram0 18E3        spiInit@sDataSample 0070  
                Lcd_Cmd@a 0073        __end_of__div_to_l_ 01B3               ??_Lcd_Clear 0074  
             __stringbase 0012             ??_setupINTOSC 0070                 _portsetup 195E  
       ___wmul@multiplier 0070          ??_Lcd_Write_Char 0071                  _Lcd_Init 1C41  
                _Lcd_Port 193C  __end_of_Lcd_Write_String 1A6C                ?_inttochar 0070  
             ??__Umul8_16 0072               _fround$1165 004D               _fround$1166 0049  
      __end_of__stringtab 0013                ?_portsetup 0070               _isdigit$976 0070  
              sprintf@val 00B1                  ___xxtofl 08A4           ___lwdiv@divisor 0076  
         ___lwdiv@counter 007D                  __ptext10 19A4                  __ptext11 1B94  
                __ptext20 18EB                  __ptext12 1D5E                  __ptext21 18DC  
                __ptext13 1014                  __ptext30 1DC4                  __ptext22 1C9E  
                __ptext14 1980                  __ptext31 1E2D                  __ptext23 195E  
                __ptext15 134E                  __ptext32 1A2A                  __ptext24 190C  
                __ptext16 18F4                  __ptext33 00C8                  __ptext25 1B44  
                __ptext17 0802                  __ptext34 1AB0                  __ptext26 1CFD  
                __ptext18 1AF6                  __ptext35 1C41                  __ptext27 19F0  
                __ptext19 18D6                  __ptext36 18FF                  __ptext28 1A6C  
                __ptext37 1922                  __ptext29 1BE8                  __ptext38 193C  
     __end_of_setupINTOSC 1CFD                  __powers_ 0013                  _spiWrite 18D6  
            spiInit@sType 0073         spiInit@sClockIdle 0071                  isdigit@c 0071  
                scale@scl 0050        Lcd_Write_Char@temp 0072                 sprintf@ap 00AE  
        __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024                 sprintf@sp 00BB  
        __tdiv_to_l_@quot 0020          ___lwmod@dividend 0072          ___lldiv@dividend 0074  
        ??_spiReceiveWait 0070               ??_inttochar 0070                 stringcode 000D  
              _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079              ?__tdiv_to_l_ 0070  
             ??_portsetup 0074    __Umul8_16@multiplicand 0070               _setupINTOSC 1C9E  
                sprintf@c 00C2                  sprintf@f 00A0              ?_descomponer 0024  
        ___lldiv@quotient 0079           ___lwmod@divisor 0070           ___lwmod@counter 0075  
                stringdir 000D                  stringtab 0003             ___fladd@signs 0062  
            ___fladd@aexp 0063              ___fladd@bexp 0064      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074  
