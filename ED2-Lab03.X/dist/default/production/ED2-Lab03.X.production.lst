

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 20:53:35 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Version 2.40
    55                           ; Generated 17/11/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89     0000                     	;# 
    90     0001                     	;# 
    91     0002                     	;# 
    92     0003                     	;# 
    93     0004                     	;# 
    94     0005                     	;# 
    95     0006                     	;# 
    96     0007                     	;# 
    97     0008                     	;# 
    98     0009                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     000D                     	;# 
   103     000E                     	;# 
   104     000E                     	;# 
   105     000F                     	;# 
   106     0010                     	;# 
   107     0011                     	;# 
   108     0012                     	;# 
   109     0013                     	;# 
   110     0014                     	;# 
   111     0015                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001B                     	;# 
   119     001B                     	;# 
   120     001C                     	;# 
   121     001D                     	;# 
   122     001E                     	;# 
   123     001F                     	;# 
   124     0081                     	;# 
   125     0085                     	;# 
   126     0086                     	;# 
   127     0087                     	;# 
   128     0088                     	;# 
   129     0089                     	;# 
   130     008C                     	;# 
   131     008D                     	;# 
   132     008E                     	;# 
   133     008F                     	;# 
   134     0090                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0094                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0097                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009A                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     009F                     	;# 
   152     0105                     	;# 
   153     0107                     	;# 
   154     0108                     	;# 
   155     0109                     	;# 
   156     010C                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     0185                     	;# 
   162     0187                     	;# 
   163     0188                     	;# 
   164     0189                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0000                     	;# 
   168     0001                     	;# 
   169     0002                     	;# 
   170     0003                     	;# 
   171     0004                     	;# 
   172     0005                     	;# 
   173     0006                     	;# 
   174     0007                     	;# 
   175     0008                     	;# 
   176     0009                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     0088                     	;# 
   207     0089                     	;# 
   208     008C                     	;# 
   209     008D                     	;# 
   210     008E                     	;# 
   211     008F                     	;# 
   212     0090                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0094                     	;# 
   219     0095                     	;# 
   220     0096                     	;# 
   221     0097                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009A                     	;# 
   225     009B                     	;# 
   226     009C                     	;# 
   227     009D                     	;# 
   228     009E                     	;# 
   229     009F                     	;# 
   230     0105                     	;# 
   231     0107                     	;# 
   232     0108                     	;# 
   233     0109                     	;# 
   234     010C                     	;# 
   235     010C                     	;# 
   236     010D                     	;# 
   237     010E                     	;# 
   238     010F                     	;# 
   239     0185                     	;# 
   240     0187                     	;# 
   241     0188                     	;# 
   242     0189                     	;# 
   243     018C                     	;# 
   244     018D                     	;# 
   245     0000                     	;# 
   246     0001                     	;# 
   247     0002                     	;# 
   248     0003                     	;# 
   249     0004                     	;# 
   250     0005                     	;# 
   251     0006                     	;# 
   252     0007                     	;# 
   253     0008                     	;# 
   254     0009                     	;# 
   255     000A                     	;# 
   256     000B                     	;# 
   257     000C                     	;# 
   258     000D                     	;# 
   259     000E                     	;# 
   260     000E                     	;# 
   261     000F                     	;# 
   262     0010                     	;# 
   263     0011                     	;# 
   264     0012                     	;# 
   265     0013                     	;# 
   266     0014                     	;# 
   267     0015                     	;# 
   268     0015                     	;# 
   269     0016                     	;# 
   270     0017                     	;# 
   271     0018                     	;# 
   272     0019                     	;# 
   273     001A                     	;# 
   274     001B                     	;# 
   275     001B                     	;# 
   276     001C                     	;# 
   277     001D                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     0081                     	;# 
   281     0085                     	;# 
   282     0086                     	;# 
   283     0087                     	;# 
   284     0088                     	;# 
   285     0089                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     008F                     	;# 
   290     0090                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0094                     	;# 
   297     0095                     	;# 
   298     0096                     	;# 
   299     0097                     	;# 
   300     0098                     	;# 
   301     0099                     	;# 
   302     009A                     	;# 
   303     009B                     	;# 
   304     009C                     	;# 
   305     009D                     	;# 
   306     009E                     	;# 
   307     009F                     	;# 
   308     0105                     	;# 
   309     0107                     	;# 
   310     0108                     	;# 
   311     0109                     	;# 
   312     010C                     	;# 
   313     010C                     	;# 
   314     010D                     	;# 
   315     010E                     	;# 
   316     010F                     	;# 
   317     0185                     	;# 
   318     0187                     	;# 
   319     0188                     	;# 
   320     0189                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     008F                     	;# 
   368     0090                     	;# 
   369     0091                     	;# 
   370     0092                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0093                     	;# 
   374     0094                     	;# 
   375     0095                     	;# 
   376     0096                     	;# 
   377     0097                     	;# 
   378     0098                     	;# 
   379     0099                     	;# 
   380     009A                     	;# 
   381     009B                     	;# 
   382     009C                     	;# 
   383     009D                     	;# 
   384     009E                     	;# 
   385     009F                     	;# 
   386     0105                     	;# 
   387     0107                     	;# 
   388     0108                     	;# 
   389     0109                     	;# 
   390     010C                     	;# 
   391     010C                     	;# 
   392     010D                     	;# 
   393     010E                     	;# 
   394     010F                     	;# 
   395     0185                     	;# 
   396     0187                     	;# 
   397     0188                     	;# 
   398     0189                     	;# 
   399     018C                     	;# 
   400     018D                     	;# 
   401     0000                     	;# 
   402     0001                     	;# 
   403     0002                     	;# 
   404     0003                     	;# 
   405     0004                     	;# 
   406     0005                     	;# 
   407     0006                     	;# 
   408     0007                     	;# 
   409     0008                     	;# 
   410     0009                     	;# 
   411     000A                     	;# 
   412     000B                     	;# 
   413     000C                     	;# 
   414     000D                     	;# 
   415     000E                     	;# 
   416     000E                     	;# 
   417     000F                     	;# 
   418     0010                     	;# 
   419     0011                     	;# 
   420     0012                     	;# 
   421     0013                     	;# 
   422     0014                     	;# 
   423     0015                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0017                     	;# 
   427     0018                     	;# 
   428     0019                     	;# 
   429     001A                     	;# 
   430     001B                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001D                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     0081                     	;# 
   437     0085                     	;# 
   438     0086                     	;# 
   439     0087                     	;# 
   440     0088                     	;# 
   441     0089                     	;# 
   442     008C                     	;# 
   443     008D                     	;# 
   444     008E                     	;# 
   445     008F                     	;# 
   446     0090                     	;# 
   447     0091                     	;# 
   448     0092                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0093                     	;# 
   452     0094                     	;# 
   453     0095                     	;# 
   454     0096                     	;# 
   455     0097                     	;# 
   456     0098                     	;# 
   457     0099                     	;# 
   458     009A                     	;# 
   459     009B                     	;# 
   460     009C                     	;# 
   461     009D                     	;# 
   462     009E                     	;# 
   463     009F                     	;# 
   464     0105                     	;# 
   465     0107                     	;# 
   466     0108                     	;# 
   467     0109                     	;# 
   468     010C                     	;# 
   469     010C                     	;# 
   470     010D                     	;# 
   471     010E                     	;# 
   472     010F                     	;# 
   473     0185                     	;# 
   474     0187                     	;# 
   475     0188                     	;# 
   476     0189                     	;# 
   477     018C                     	;# 
   478     018D                     	;# 
   479     0000                     	;# 
   480     0001                     	;# 
   481     0002                     	;# 
   482     0003                     	;# 
   483     0004                     	;# 
   484     0005                     	;# 
   485     0006                     	;# 
   486     0007                     	;# 
   487     0008                     	;# 
   488     0009                     	;# 
   489     000A                     	;# 
   490     000B                     	;# 
   491     000C                     	;# 
   492     000D                     	;# 
   493     000E                     	;# 
   494     000E                     	;# 
   495     000F                     	;# 
   496     0010                     	;# 
   497     0011                     	;# 
   498     0012                     	;# 
   499     0013                     	;# 
   500     0014                     	;# 
   501     0015                     	;# 
   502     0015                     	;# 
   503     0016                     	;# 
   504     0017                     	;# 
   505     0018                     	;# 
   506     0019                     	;# 
   507     001A                     	;# 
   508     001B                     	;# 
   509     001B                     	;# 
   510     001C                     	;# 
   511     001D                     	;# 
   512     001E                     	;# 
   513     001F                     	;# 
   514     0081                     	;# 
   515     0085                     	;# 
   516     0086                     	;# 
   517     0087                     	;# 
   518     0088                     	;# 
   519     0089                     	;# 
   520     008C                     	;# 
   521     008D                     	;# 
   522     008E                     	;# 
   523     008F                     	;# 
   524     0090                     	;# 
   525     0091                     	;# 
   526     0092                     	;# 
   527     0093                     	;# 
   528     0093                     	;# 
   529     0093                     	;# 
   530     0094                     	;# 
   531     0095                     	;# 
   532     0096                     	;# 
   533     0097                     	;# 
   534     0098                     	;# 
   535     0099                     	;# 
   536     009A                     	;# 
   537     009B                     	;# 
   538     009C                     	;# 
   539     009D                     	;# 
   540     009E                     	;# 
   541     009F                     	;# 
   542     0105                     	;# 
   543     0107                     	;# 
   544     0108                     	;# 
   545     0109                     	;# 
   546     010C                     	;# 
   547     010C                     	;# 
   548     010D                     	;# 
   549     010E                     	;# 
   550     010F                     	;# 
   551     0185                     	;# 
   552     0187                     	;# 
   553     0188                     	;# 
   554     0189                     	;# 
   555     018C                     	;# 
   556     018D                     	;# 
   557                           
   558                           	psect	strings
   559     0003                     __pstrings:
   560     0003                     stringtab:
   561     0003                     __stringtab:
   562                           
   563                           ;	String table - string pointers are 1 byte each
   564     0003  1BFF               	btfsc	btemp+1,7
   565     0004  280D               	ljmp	stringcode
   566     0005  1383               	bcf	3,7
   567     0006  187F               	btfsc	btemp+1,0
   568     0007  1783               	bsf	3,7
   569     0008  0800               	movf	0,w
   570     0009  0A84               	incf	4,f
   571     000A  1903               	skipnz
   572     000B  0AFF               	incf	btemp+1,f
   573     000C  0008               	return
   574     000D                     stringcode:
   575     000D                     stringdir:
   576     000D  3000               	movlw	high stringdir
   577     000E  008A               	movwf	10
   578     000F  0804               	movf	4,w
   579     0010  0A84               	incf	4,f
   580     0011  0782               	addwf	2,f
   581     0012                     __stringbase:
   582     0012  3400               	retlw	0
   583     0013                     __end_of__stringtab:
   584     0013                     __powers_:
   585     0013  3400               	retlw	0
   586     0014  3400               	retlw	0
   587     0015  3480               	retlw	128
   588     0016  343F               	retlw	63
   589     0017  3400               	retlw	0
   590     0018  3400               	retlw	0
   591     0019  3420               	retlw	32
   592     001A  3441               	retlw	65
   593     001B  3400               	retlw	0
   594     001C  3400               	retlw	0
   595     001D  34C8               	retlw	200
   596     001E  3442               	retlw	66
   597     001F  3400               	retlw	0
   598     0020  3400               	retlw	0
   599     0021  347A               	retlw	122
   600     0022  3444               	retlw	68
   601     0023  3400               	retlw	0
   602     0024  3440               	retlw	64
   603     0025  341C               	retlw	28
   604     0026  3446               	retlw	70
   605     0027  3400               	retlw	0
   606     0028  3450               	retlw	80
   607     0029  34C3               	retlw	195
   608     002A  3447               	retlw	71
   609     002B  3400               	retlw	0
   610     002C  3424               	retlw	36
   611     002D  3474               	retlw	116
   612     002E  3449               	retlw	73
   613     002F  3480               	retlw	128
   614     0030  3496               	retlw	150
   615     0031  3418               	retlw	24
   616     0032  344B               	retlw	75
   617     0033  3420               	retlw	32
   618     0034  34BC               	retlw	188
   619     0035  34BE               	retlw	190
   620     0036  344C               	retlw	76
   621     0037  3428               	retlw	40
   622     0038  346B               	retlw	107
   623     0039  346E               	retlw	110
   624     003A  344E               	retlw	78
   625     003B  34F9               	retlw	249
   626     003C  3402               	retlw	2
   627     003D  3415               	retlw	21
   628     003E  3450               	retlw	80
   629     003F  34EC               	retlw	236
   630     0040  3478               	retlw	120
   631     0041  34AD               	retlw	173
   632     0042  3460               	retlw	96
   633     0043  34CA               	retlw	202
   634     0044  34F2               	retlw	242
   635     0045  3449               	retlw	73
   636     0046  3471               	retlw	113
   637     0047                     __end_of__powers_:
   638     0047                     __npowers_:
   639     0047  3400               	retlw	0
   640     0048  3400               	retlw	0
   641     0049  3480               	retlw	128
   642     004A  343F               	retlw	63
   643     004B  34CD               	retlw	205
   644     004C  34CC               	retlw	204
   645     004D  34CC               	retlw	204
   646     004E  343D               	retlw	61
   647     004F  340A               	retlw	10
   648     0050  34D7               	retlw	215
   649     0051  3423               	retlw	35
   650     0052  343C               	retlw	60
   651     0053  346F               	retlw	111
   652     0054  3412               	retlw	18
   653     0055  3483               	retlw	131
   654     0056  343A               	retlw	58
   655     0057  3417               	retlw	23
   656     0058  34B7               	retlw	183
   657     0059  34D1               	retlw	209
   658     005A  3438               	retlw	56
   659     005B  34AC               	retlw	172
   660     005C  34C5               	retlw	197
   661     005D  3427               	retlw	39
   662     005E  3437               	retlw	55
   663     005F  34BD               	retlw	189
   664     0060  3437               	retlw	55
   665     0061  3486               	retlw	134
   666     0062  3435               	retlw	53
   667     0063  3495               	retlw	149
   668     0064  34BF               	retlw	191
   669     0065  34D6               	retlw	214
   670     0066  3433               	retlw	51
   671     0067  3477               	retlw	119
   672     0068  34CC               	retlw	204
   673     0069  342B               	retlw	43
   674     006A  3432               	retlw	50
   675     006B  345F               	retlw	95
   676     006C  3470               	retlw	112
   677     006D  3489               	retlw	137
   678     006E  3430               	retlw	48
   679     006F  34FF               	retlw	255
   680     0070  34E6               	retlw	230
   681     0071  34DB               	retlw	219
   682     0072  342E               	retlw	46
   683     0073  3408               	retlw	8
   684     0074  34E5               	retlw	229
   685     0075  343C               	retlw	60
   686     0076  341E               	retlw	30
   687     0077  3460               	retlw	96
   688     0078  3442               	retlw	66
   689     0079  34A2               	retlw	162
   690     007A  340D               	retlw	13
   691     007B                     __end_of__npowers_:
   692     007B                     _dpowers:
   693     007B  3401               	retlw	1
   694     007C  3400               	retlw	0
   695     007D  3400               	retlw	0
   696     007E  3400               	retlw	0
   697     007F  340A               	retlw	10
   698     0080  3400               	retlw	0
   699     0081  3400               	retlw	0
   700     0082  3400               	retlw	0
   701     0083  3464               	retlw	100
   702     0084  3400               	retlw	0
   703     0085  3400               	retlw	0
   704     0086  3400               	retlw	0
   705     0087  34E8               	retlw	232
   706     0088  3403               	retlw	3
   707     0089  3400               	retlw	0
   708     008A  3400               	retlw	0
   709     008B  3410               	retlw	16
   710     008C  3427               	retlw	39
   711     008D  3400               	retlw	0
   712     008E  3400               	retlw	0
   713     008F  34A0               	retlw	160
   714     0090  3486               	retlw	134
   715     0091  3401               	retlw	1
   716     0092  3400               	retlw	0
   717     0093  3440               	retlw	64
   718     0094  3442               	retlw	66
   719     0095  340F               	retlw	15
   720     0096  3400               	retlw	0
   721     0097  3480               	retlw	128
   722     0098  3496               	retlw	150
   723     0099  3498               	retlw	152
   724     009A  3400               	retlw	0
   725     009B  3400               	retlw	0
   726     009C  34E1               	retlw	225
   727     009D  34F5               	retlw	245
   728     009E  3405               	retlw	5
   729     009F  3400               	retlw	0
   730     00A0  34CA               	retlw	202
   731     00A1  349A               	retlw	154
   732     00A2  343B               	retlw	59
   733     00A3                     __end_of_dpowers:
   734     0014                     _SSPCON	set	20
   735     0008                     _PORTDbits	set	8
   736     0005                     _PORTAbits	set	5
   737     0005                     _PORTA	set	5
   738     0006                     _PORTB	set	6
   739     0008                     _PORTD	set	8
   740     0013                     _SSPBUF	set	19
   741     0043                     _RD3	set	67
   742     0047                     _RD7	set	71
   743     0046                     _RD6	set	70
   744     0045                     _RD5	set	69
   745     0044                     _RD4	set	68
   746     0029                     _RA1	set	41
   747     0028                     _RA0	set	40
   748     0094                     _SSPSTAT	set	148
   749     008F                     _OSCCONbits	set	143
   750     0085                     _TRISA	set	133
   751     0086                     _TRISB	set	134
   752     0088                     _TRISD	set	136
   753     0094                     _SSPSTATbits	set	148
   754     043B                     _TRISC3	set	1083
   755     043D                     _TRISC5	set	1085
   756     0189                     _ANSELH	set	393
   757     0188                     _ANSEL	set	392
   758     00A3                     STR_1:
   759     00A3  3453               	retlw	83	;'S'
   760     00A4  3431               	retlw	49	;'1'
   761     00A5  343A               	retlw	58	;':'
   762     00A6  3420               	retlw	32	;' '
   763     00A7  3420               	retlw	32	;' '
   764     00A8  3420               	retlw	32	;' '
   765     00A9  3453               	retlw	83	;'S'
   766     00AA  3432               	retlw	50	;'2'
   767     00AB  343A               	retlw	58	;':'
   768     00AC  3420               	retlw	32	;' '
   769     00AD  3420               	retlw	32	;' '
   770     00AE  3443               	retlw	67	;'C'
   771     00AF  344F               	retlw	79	;'O'
   772     00B0  344E               	retlw	78	;'N'
   773     00B1  3400               	retlw	0
   774     00B2                     STR_2:
   775     00B2  3420               	retlw	32	;' '
   776     00B3  3420               	retlw	32	;' '
   777     00B4  3420               	retlw	32	;' '
   778     00B5  3420               	retlw	32	;' '
   779     00B6  3456               	retlw	86	;'V'
   780     00B7  3420               	retlw	32	;' '
   781     00B8  3420               	retlw	32	;' '
   782     00B9  3420               	retlw	32	;' '
   783     00BA  3420               	retlw	32	;' '
   784     00BB  3420               	retlw	32	;' '
   785     00BC  3456               	retlw	86	;'V'
   786     00BD  3420               	retlw	32	;' '
   787     00BE  3420               	retlw	32	;' '
   788     00BF  3400               	retlw	0
   789     00C0                     STR_3:
   790     00C0  3425               	retlw	37	;'%'
   791     00C1  342E               	retlw	46	;'.'
   792     00C2  3432               	retlw	50	;'2'
   793     00C3  3466               	retlw	102	;'f'
   794     00C4  3400               	retlw	0
   795     00C0                     
   796                           	psect	cinit
   797     07F3                     start_initialization:	
   798                           ; #config settings
   799                           
   800     07F3                     __initialization:
   801                           
   802                           ; Clear objects allocated to BANK1
   803     07F3  1383               	bcf	3,7	;select IRP bank0
   804     07F4  30C7               	movlw	low __pbssBANK1
   805     07F5  0084               	movwf	4
   806     07F6  30DC               	movlw	low (__pbssBANK1+21)
   807     07F7  160A  158A  20DE  120A  118A  	fcall	clear_ram0
   808     07FC                     end_of_initialization:	
   809                           ;End of C runtime variable initialization code
   810                           
   811     07FC                     __end_of__initialization:
   812     07FC  0183               	clrf	3
   813     07FD  160A  118A  2DA3   	ljmp	_main	;jump to C main() function
   814                           
   815                           	psect	bssBANK1
   816     00C7                     __pbssBANK1:
   817     00C7                     _conver1:
   818     00C7                     	ds	4
   819     00CB                     _conver:
   820     00CB                     	ds	4
   821     00CF                     _cont:
   822     00CF                     	ds	2
   823     00D1                     _cent:
   824     00D1                     	ds	1
   825     00D2                     _dec:
   826     00D2                     	ds	1
   827     00D3                     _uni:
   828     00D3                     	ds	1
   829     00D4                     _lecADC2:
   830     00D4                     	ds	1
   831     00D5                     _lecADC:
   832     00D5                     	ds	1
   833     00D6                     _valADC2:
   834     00D6                     	ds	3
   835     00D9                     _valADC:
   836     00D9                     	ds	3
   837                           
   838                           	psect	clrtext
   839     18DE                     clear_ram0:	
   840                           ;	Called with FSR containing the base address, and
   841                           ;	W with the last address+1
   842                           
   843     18DE  0064               	clrwdt	;clear the watchdog before getting into this loop
   844     18DF                     clrloop0:
   845     18DF  0180               	clrf	0	;clear RAM location pointed to by FSR
   846     18E0  0A84               	incf	4,f	;increment pointer
   847     18E1  0604               	xorwf	4,w	;XOR with final address
   848     18E2  1903               	btfsc	3,2	;have we reached the end yet?
   849     18E3  3400               	retlw	0	;all done for this memory range, return
   850     18E4  0604               	xorwf	4,w	;XOR again to restore value
   851     18E5  28DF               	goto	clrloop0	;do the next byte
   852                           
   853                           	psect	cstackBANK1
   854     00A0                     __pcstackBANK1:
   855     00A0                     ?_sprintf:
   856     00A0                     sprintf@f:	
   857                           ; 2 bytes @ 0x0
   858                           
   859                           
   860                           ; 1 bytes @ 0x0
   861     00A0                     	ds	5
   862     00A5                     ??_sprintf:
   863                           
   864                           ; 1 bytes @ 0x5
   865     00A5                     	ds	5
   866     00AA                     _sprintf$1168:
   867                           
   868                           ; 4 bytes @ 0xA
   869     00AA                     	ds	4
   870     00AE                     sprintf@ap:
   871                           
   872                           ; 1 bytes @ 0xE
   873     00AE                     	ds	1
   874     00AF                     sprintf@flag:
   875                           
   876                           ; 2 bytes @ 0xF
   877     00AF                     	ds	2
   878     00B1                     sprintf@val:
   879                           
   880                           ; 4 bytes @ 0x11
   881     00B1                     	ds	4
   882     00B5                     sprintf@eexp:
   883                           
   884                           ; 2 bytes @ 0x15
   885     00B5                     	ds	2
   886     00B7                     sprintf@tmpval:
   887                           
   888                           ; 4 bytes @ 0x17
   889     00B7                     	ds	4
   890     00BB                     sprintf@sp:
   891                           
   892                           ; 1 bytes @ 0x1B
   893     00BB                     	ds	1
   894     00BC                     sprintf@prec:
   895                           
   896                           ; 2 bytes @ 0x1C
   897     00BC                     	ds	2
   898     00BE                     sprintf@fval:
   899                           
   900                           ; 4 bytes @ 0x1E
   901     00BE                     	ds	4
   902     00C2                     sprintf@c:
   903                           
   904                           ; 1 bytes @ 0x22
   905     00C2                     	ds	1
   906     00C3                     ??_main:
   907                           
   908                           ; 1 bytes @ 0x23
   909     00C3                     	ds	4
   910                           
   911                           	psect	cstackCOMMON
   912     0070                     __pcstackCOMMON:
   913     0070                     ?_isdigit:
   914     0070                     ?___fleq:	
   915                           ; 1 bit 
   916                           
   917     0070                     ?___flge:	
   918                           ; 1 bit 
   919                           
   920     0070                     ?_setupINTOSC:	
   921                           ; 1 bit 
   922                           
   923     0070                     ??_setupINTOSC:	
   924                           ; 1 bytes @ 0x0
   925                           
   926     0070                     ?_portsetup:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0070                     ?_Lcd_Init:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0070                     ?_Lcd_Clear:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0070                     ?_spiWrite:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0070                     ??_spiWrite:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0070                     ?_inttochar:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0070                     ??_inttochar:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0070                     ?_Lcd_Write_Char:	
   948                           ; 1 bytes @ 0x0
   949                           
   950     0070                     ?_spiRead:	
   951                           ; 1 bytes @ 0x0
   952                           
   953     0070                     ??_spiRead:	
   954                           ; 1 bytes @ 0x0
   955                           
   956     0070                     ?_spiInit:	
   957                           ; 1 bytes @ 0x0
   958                           
   959     0070                     ??_isdigit:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0070                     ?_main:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0070                     ?_Lcd_Port:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0070                     ??_Lcd_Port:	
   969                           ; 1 bytes @ 0x0
   970                           
   971     0070                     ?_Lcd_Cmd:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0070                     ?_spiReceiveWait:	
   975                           ; 1 bytes @ 0x0
   976                           
   977     0070                     ??_spiReceiveWait:	
   978                           ; 1 bytes @ 0x0
   979                           
   980     0070                     ?__Umul8_16:	
   981                           ; 1 bytes @ 0x0
   982                           
   983     0070                     ?___wmul:	
   984                           ; 2 bytes @ 0x0
   985                           
   986     0070                     ?___awmod:	
   987                           ; 2 bytes @ 0x0
   988                           
   989     0070                     ?___lwmod:	
   990                           ; 2 bytes @ 0x0
   991                           
   992     0070                     ?__tdiv_to_l_:	
   993                           ; 2 bytes @ 0x0
   994                           
   995     0070                     ?__div_to_l_:	
   996                           ; 4 bytes @ 0x0
   997                           
   998     0070                     ?___lldiv:	
   999                           ; 4 bytes @ 0x0
  1000                           
  1001     0070                     ?___flneg:	
  1002                           ; 4 bytes @ 0x0
  1003                           
  1004     0070                     ?___llmod:	
  1005                           ; 4 bytes @ 0x0
  1006                           
  1007     0070                     ?___xxtofl:	
  1008                           ; 4 bytes @ 0x0
  1009                           
  1010     0070                     Lcd_Port@a:	
  1011                           ; 4 bytes @ 0x0
  1012                           
  1013     0070                     setupINTOSC@IRCF:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016     0070                     spiInit@sDataSample:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019     0070                     spiWrite@dat:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022     0070                     inttochar@num:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025     0070                     __Umul8_16@multiplicand:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028     0070                     _isdigit$976:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031     0070                     ___wmul@multiplier:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034     0070                     ___awmod@divisor:	
  1035                           ; 2 bytes @ 0x0
  1036                           
  1037     0070                     ___lwmod@divisor:	
  1038                           ; 2 bytes @ 0x0
  1039                           
  1040     0070                     ___lldiv@divisor:	
  1041                           ; 2 bytes @ 0x0
  1042                           
  1043     0070                     __div_to_l_@f1:	
  1044                           ; 4 bytes @ 0x0
  1045                           
  1046     0070                     ___fleq@ff1:	
  1047                           ; 4 bytes @ 0x0
  1048                           
  1049     0070                     ___flge@ff1:	
  1050                           ; 4 bytes @ 0x0
  1051                           
  1052     0070                     ___flneg@f1:	
  1053                           ; 4 bytes @ 0x0
  1054                           
  1055     0070                     __tdiv_to_l_@f1:	
  1056                           ; 4 bytes @ 0x0
  1057                           
  1058     0070                     ___llmod@divisor:	
  1059                           ; 4 bytes @ 0x0
  1060                           
  1061     0070                     ___xxtofl@val:	
  1062                           ; 4 bytes @ 0x0
  1063                           
  1064                           
  1065                           ; 4 bytes @ 0x0
  1066     0070                     	ds	1
  1067     0071                     ??_Lcd_Write_Char:
  1068     0071                     ??_Lcd_Cmd:	
  1069                           ; 1 bytes @ 0x1
  1070                           
  1071     0071                     spiInit@sClockIdle:	
  1072                           ; 1 bytes @ 0x1
  1073                           
  1074     0071                     isdigit@c:	
  1075                           ; 1 bytes @ 0x1
  1076                           
  1077                           
  1078                           ; 1 bytes @ 0x1
  1079     0071                     	ds	1
  1080     0072                     ??__Umul8_16:
  1081     0072                     Lcd_Write_Char@temp:	
  1082                           ; 1 bytes @ 0x2
  1083                           
  1084     0072                     spiInit@sTransmitEdge:	
  1085                           ; 1 bytes @ 0x2
  1086                           
  1087     0072                     ___wmul@multiplicand:	
  1088                           ; 1 bytes @ 0x2
  1089                           
  1090     0072                     ___awmod@dividend:	
  1091                           ; 2 bytes @ 0x2
  1092                           
  1093     0072                     ___lwmod@dividend:	
  1094                           ; 2 bytes @ 0x2
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x2
  1098     0072                     	ds	1
  1099     0073                     ??_spiInit:
  1100     0073                     Lcd_Cmd@a:	
  1101                           ; 1 bytes @ 0x3
  1102                           
  1103     0073                     Lcd_Write_Char@y:	
  1104                           ; 1 bytes @ 0x3
  1105                           
  1106     0073                     spiInit@sType:	
  1107                           ; 1 bytes @ 0x3
  1108                           
  1109                           
  1110                           ; 1 bytes @ 0x3
  1111     0073                     	ds	1
  1112     0074                     ??_portsetup:
  1113     0074                     ??_Lcd_Init:	
  1114                           ; 1 bytes @ 0x4
  1115                           
  1116     0074                     ??_Lcd_Clear:	
  1117                           ; 1 bytes @ 0x4
  1118                           
  1119     0074                     ?_Lcd_Set_Cursor:	
  1120                           ; 1 bytes @ 0x4
  1121                           
  1122     0074                     ??___wmul:	
  1123                           ; 1 bytes @ 0x4
  1124                           
  1125     0074                     ??___awmod:	
  1126                           ; 1 bytes @ 0x4
  1127                           
  1128     0074                     ??___flneg:	
  1129                           ; 1 bytes @ 0x4
  1130                           
  1131     0074                     ??___lwmod:	
  1132                           ; 1 bytes @ 0x4
  1133                           
  1134     0074                     ??___xxtofl:	
  1135                           ; 1 bytes @ 0x4
  1136                           
  1137     0074                     Lcd_Set_Cursor@b:	
  1138                           ; 1 bytes @ 0x4
  1139                           
  1140     0074                     Lcd_Write_Char@a:	
  1141                           ; 1 bytes @ 0x4
  1142                           
  1143     0074                     ___wmul@product:	
  1144                           ; 1 bytes @ 0x4
  1145                           
  1146     0074                     __Umul8_16@product:	
  1147                           ; 2 bytes @ 0x4
  1148                           
  1149     0074                     ___lldiv@dividend:	
  1150                           ; 2 bytes @ 0x4
  1151                           
  1152     0074                     __div_to_l_@f2:	
  1153                           ; 4 bytes @ 0x4
  1154                           
  1155     0074                     ___fleq@ff2:	
  1156                           ; 4 bytes @ 0x4
  1157                           
  1158     0074                     ___flge@ff2:	
  1159                           ; 4 bytes @ 0x4
  1160                           
  1161     0074                     __tdiv_to_l_@f2:	
  1162                           ; 4 bytes @ 0x4
  1163                           
  1164     0074                     ___llmod@dividend:	
  1165                           ; 4 bytes @ 0x4
  1166                           
  1167                           
  1168                           ; 4 bytes @ 0x4
  1169     0074                     	ds	1
  1170     0075                     ??_Lcd_Set_Cursor:
  1171     0075                     ?_Lcd_Write_String:	
  1172                           ; 1 bytes @ 0x5
  1173                           
  1174     0075                     ___awmod@counter:	
  1175                           ; 1 bytes @ 0x5
  1176                           
  1177     0075                     ___lwmod@counter:	
  1178                           ; 1 bytes @ 0x5
  1179                           
  1180     0075                     Lcd_Write_String@a:	
  1181                           ; 1 bytes @ 0x5
  1182                           
  1183                           
  1184                           ; 2 bytes @ 0x5
  1185     0075                     	ds	1
  1186     0076                     ?___lwdiv:
  1187     0076                     Lcd_Set_Cursor@a:	
  1188                           ; 2 bytes @ 0x6
  1189                           
  1190     0076                     ___awmod@sign:	
  1191                           ; 1 bytes @ 0x6
  1192                           
  1193     0076                     ___lwdiv@divisor:	
  1194                           ; 1 bytes @ 0x6
  1195                           
  1196     0076                     __Umul8_16@word_mpld:	
  1197                           ; 2 bytes @ 0x6
  1198                           
  1199                           
  1200                           ; 2 bytes @ 0x6
  1201     0076                     	ds	1
  1202     0077                     ??_Lcd_Write_String:
  1203     0077                     ?___awdiv:	
  1204                           ; 1 bytes @ 0x7
  1205                           
  1206     0077                     Lcd_Set_Cursor@z:	
  1207                           ; 2 bytes @ 0x7
  1208                           
  1209     0077                     ___awdiv@divisor:	
  1210                           ; 1 bytes @ 0x7
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0x7
  1214     0077                     	ds	1
  1215     0078                     ??__tdiv_to_l_:
  1216     0078                     ??__div_to_l_:	
  1217                           ; 1 bytes @ 0x8
  1218                           
  1219     0078                     ??___lldiv:	
  1220                           ; 1 bytes @ 0x8
  1221                           
  1222     0078                     ??___fleq:	
  1223                           ; 1 bytes @ 0x8
  1224                           
  1225     0078                     ??___flge:	
  1226                           ; 1 bytes @ 0x8
  1227                           
  1228     0078                     ??___llmod:	
  1229                           ; 1 bytes @ 0x8
  1230                           
  1231     0078                     Lcd_Set_Cursor@y:	
  1232                           ; 1 bytes @ 0x8
  1233                           
  1234     0078                     __Umul8_16@multiplier:	
  1235                           ; 1 bytes @ 0x8
  1236                           
  1237     0078                     ___xxtofl@sign:	
  1238                           ; 1 bytes @ 0x8
  1239                           
  1240     0078                     ___lwdiv@dividend:	
  1241                           ; 1 bytes @ 0x8
  1242                           
  1243                           
  1244                           ; 2 bytes @ 0x8
  1245     0078                     	ds	1
  1246     0079                     Lcd_Set_Cursor@temp:
  1247     0079                     ___llmod@counter:	
  1248                           ; 1 bytes @ 0x9
  1249                           
  1250     0079                     ___xxtofl@exp:	
  1251                           ; 1 bytes @ 0x9
  1252                           
  1253     0079                     ___awdiv@dividend:	
  1254                           ; 1 bytes @ 0x9
  1255                           
  1256     0079                     ___lldiv@quotient:	
  1257                           ; 2 bytes @ 0x9
  1258                           
  1259                           
  1260                           ; 4 bytes @ 0x9
  1261     0079                     	ds	1
  1262     007A                     ??___lwdiv:
  1263     007A                     Lcd_Write_String@i:	
  1264                           ; 1 bytes @ 0xA
  1265                           
  1266     007A                     ___xxtofl@arg:	
  1267                           ; 2 bytes @ 0xA
  1268                           
  1269                           
  1270                           ; 4 bytes @ 0xA
  1271     007A                     	ds	1
  1272     007B                     ??___awdiv:
  1273     007B                     ___lwdiv@quotient:	
  1274                           ; 1 bytes @ 0xB
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0xB
  1278     007B                     	ds	2
  1279     007D                     ___lldiv@counter:
  1280     007D                     ___lwdiv@counter:	
  1281                           ; 1 bytes @ 0xD
  1282                           
  1283                           
  1284                           ; 1 bytes @ 0xD
  1285     007D                     	ds	1
  1286     007E                     ??___flsub:
  1287                           
  1288                           	psect	cstackBANK0
  1289     0020                     __pcstackBANK0:	
  1290                           ; 1 bytes @ 0xE
  1291                           
  1292     0020                     ___awdiv@counter:
  1293     0020                     __div_to_l_@quot:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296     0020                     __tdiv_to_l_@quot:	
  1297                           ; 4 bytes @ 0x0
  1298                           
  1299                           
  1300                           ; 4 bytes @ 0x0
  1301     0020                     	ds	1
  1302     0021                     ___awdiv@sign:
  1303                           
  1304                           ; 1 bytes @ 0x1
  1305     0021                     	ds	1
  1306     0022                     ___awdiv@quotient:
  1307                           
  1308                           ; 2 bytes @ 0x2
  1309     0022                     	ds	2
  1310     0024                     ?_descomponer:
  1311     0024                     ?___flmul:	
  1312                           ; 1 bytes @ 0x4
  1313                           
  1314     0024                     __div_to_l_@cntr:	
  1315                           ; 4 bytes @ 0x4
  1316                           
  1317     0024                     __tdiv_to_l_@cntr:	
  1318                           ; 1 bytes @ 0x4
  1319                           
  1320     0024                     descomponer@pos:	
  1321                           ; 1 bytes @ 0x4
  1322                           
  1323     0024                     ___flmul@b:	
  1324                           ; 2 bytes @ 0x4
  1325                           
  1326                           
  1327                           ; 4 bytes @ 0x4
  1328     0024                     	ds	1
  1329     0025                     __div_to_l_@exp1:
  1330     0025                     __tdiv_to_l_@exp1:	
  1331                           ; 1 bytes @ 0x5
  1332                           
  1333                           
  1334                           ; 1 bytes @ 0x5
  1335     0025                     	ds	1
  1336     0026                     descomponer@num:
  1337                           
  1338                           ; 2 bytes @ 0x6
  1339     0026                     	ds	2
  1340     0028                     ??_descomponer:
  1341     0028                     ___flmul@a:	
  1342                           ; 1 bytes @ 0x8
  1343                           
  1344                           
  1345                           ; 4 bytes @ 0x8
  1346     0028                     	ds	2
  1347     002A                     descomponer@cent:
  1348                           
  1349                           ; 1 bytes @ 0xA
  1350     002A                     	ds	1
  1351     002B                     descomponer@uni:
  1352                           
  1353                           ; 1 bytes @ 0xB
  1354     002B                     	ds	1
  1355     002C                     ??___flmul:
  1356     002C                     descomponer@dec:	
  1357                           ; 1 bytes @ 0xC
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0xC
  1361     002C                     	ds	5
  1362     0031                     ___flmul@sign:
  1363                           
  1364                           ; 1 bytes @ 0x11
  1365     0031                     	ds	1
  1366     0032                     ___flmul@grs:
  1367                           
  1368                           ; 4 bytes @ 0x12
  1369     0032                     	ds	4
  1370     0036                     ___flmul@aexp:
  1371                           
  1372                           ; 1 bytes @ 0x16
  1373     0036                     	ds	1
  1374     0037                     ___flmul@bexp:
  1375                           
  1376                           ; 1 bytes @ 0x17
  1377     0037                     	ds	1
  1378     0038                     ___flmul@prod:
  1379                           
  1380                           ; 4 bytes @ 0x18
  1381     0038                     	ds	4
  1382     003C                     ___flmul@temp:
  1383                           
  1384                           ; 2 bytes @ 0x1C
  1385     003C                     	ds	2
  1386     003E                     ?_fround:
  1387     003E                     ?_scale:	
  1388                           ; 4 bytes @ 0x1E
  1389                           
  1390     003E                     ?___fldiv:	
  1391                           ; 4 bytes @ 0x1E
  1392                           
  1393     003E                     ___fldiv@a:	
  1394                           ; 4 bytes @ 0x1E
  1395                           
  1396                           
  1397                           ; 4 bytes @ 0x1E
  1398     003E                     	ds	4
  1399     0042                     ??_fround:
  1400     0042                     ??_scale:	
  1401                           ; 1 bytes @ 0x22
  1402                           
  1403     0042                     ___fldiv@b:	
  1404                           ; 1 bytes @ 0x22
  1405                           
  1406                           
  1407                           ; 4 bytes @ 0x22
  1408     0042                     	ds	4
  1409     0046                     ??___fldiv:
  1410                           
  1411                           ; 1 bytes @ 0x26
  1412     0046                     	ds	3
  1413     0049                     _fround$1166:
  1414                           
  1415                           ; 4 bytes @ 0x29
  1416     0049                     	ds	2
  1417     004B                     ___fldiv@rem:
  1418                           
  1419                           ; 4 bytes @ 0x2B
  1420     004B                     	ds	1
  1421     004C                     _scale$1167:
  1422                           
  1423                           ; 4 bytes @ 0x2C
  1424     004C                     	ds	1
  1425     004D                     _fround$1165:
  1426                           
  1427                           ; 4 bytes @ 0x2D
  1428     004D                     	ds	2
  1429     004F                     ___fldiv@sign:
  1430                           
  1431                           ; 1 bytes @ 0x2F
  1432     004F                     	ds	1
  1433     0050                     scale@scl:
  1434     0050                     ___fldiv@new_exp:	
  1435                           ; 1 bytes @ 0x30
  1436                           
  1437                           
  1438                           ; 2 bytes @ 0x30
  1439     0050                     	ds	1
  1440     0051                     ?___fltol:
  1441     0051                     fround@prec:	
  1442                           ; 4 bytes @ 0x31
  1443                           
  1444     0051                     ___fltol@f1:	
  1445                           ; 1 bytes @ 0x31
  1446                           
  1447                           
  1448                           ; 4 bytes @ 0x31
  1449     0051                     	ds	1
  1450     0052                     ?___fladd:
  1451     0052                     ___fladd@b:	
  1452                           ; 4 bytes @ 0x32
  1453                           
  1454     0052                     ___fldiv@grs:	
  1455                           ; 4 bytes @ 0x32
  1456                           
  1457                           
  1458                           ; 4 bytes @ 0x32
  1459     0052                     	ds	3
  1460     0055                     ??___fltol:
  1461                           
  1462                           ; 1 bytes @ 0x35
  1463     0055                     	ds	1
  1464     0056                     ___fldiv@bexp:
  1465     0056                     ___fladd@a:	
  1466                           ; 1 bytes @ 0x36
  1467                           
  1468                           
  1469                           ; 4 bytes @ 0x36
  1470     0056                     	ds	1
  1471     0057                     ___fldiv@aexp:
  1472                           
  1473                           ; 1 bytes @ 0x37
  1474     0057                     	ds	2
  1475     0059                     ___fltol@sign1:
  1476                           
  1477                           ; 1 bytes @ 0x39
  1478     0059                     	ds	1
  1479     005A                     ??___fladd:
  1480     005A                     ___fltol@exp1:	
  1481                           ; 1 bytes @ 0x3A
  1482                           
  1483                           
  1484                           ; 1 bytes @ 0x3A
  1485     005A                     	ds	8
  1486     0062                     ___fladd@signs:
  1487                           
  1488                           ; 1 bytes @ 0x42
  1489     0062                     	ds	1
  1490     0063                     ___fladd@aexp:
  1491                           
  1492                           ; 1 bytes @ 0x43
  1493     0063                     	ds	1
  1494     0064                     ___fladd@bexp:
  1495                           
  1496                           ; 1 bytes @ 0x44
  1497     0064                     	ds	1
  1498     0065                     ___fladd@grs:
  1499                           
  1500                           ; 1 bytes @ 0x45
  1501     0065                     	ds	1
  1502     0066                     ?___flsub:
  1503     0066                     ___flsub@a:	
  1504                           ; 4 bytes @ 0x46
  1505                           
  1506                           
  1507                           ; 4 bytes @ 0x46
  1508     0066                     	ds	4
  1509     006A                     ___flsub@b:
  1510                           
  1511                           ; 4 bytes @ 0x4A
  1512     006A                     	ds	4
  1513                           
  1514                           	psect	maintext
  1515     15A3                     __pmaintext:	
  1516 ;;
  1517 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1518 ;;
  1519 ;; *************** function _main *****************
  1520 ;; Defined at:
  1521 ;;		line 61 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : B00/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0
  1537 ;;      Temps:          0       0       4       0       0
  1538 ;;      Totals:         0       0       4       0       0
  1539 ;;Total ram usage:        4 bytes
  1540 ;; Hardware stack levels required when called: 4
  1541 ;; This function calls:
  1542 ;;		_Lcd_Clear
  1543 ;;		_Lcd_Init
  1544 ;;		_Lcd_Set_Cursor
  1545 ;;		_Lcd_Write_Char
  1546 ;;		_Lcd_Write_String
  1547 ;;		___fldiv
  1548 ;;		___flmul
  1549 ;;		___xxtofl
  1550 ;;		_descomponer
  1551 ;;		_inttochar
  1552 ;;		_portsetup
  1553 ;;		_setupINTOSC
  1554 ;;		_spiRead
  1555 ;;		_spiWrite
  1556 ;;		_sprintf
  1557 ;; This function is called by:
  1558 ;;		Startup code after reset
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562     15A3                     _main:	
  1563                           ;psect for function _main
  1564                           
  1565     15A3                     l4034:	
  1566                           ;incstack = 0
  1567                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1568                           
  1569                           
  1570                           ;main.c: 62:     setupINTOSC(5);
  1571     15A3  3005               	movlw	5
  1572     15A4  160A  158A  249E  160A  118A  	fcall	_setupINTOSC
  1573                           
  1574                           ;main.c: 63:     portsetup();
  1575     15A9  160A  158A  215E  160A  118A  	fcall	_portsetup
  1576                           
  1577                           ;main.c: 64:     Lcd_Init();
  1578     15AE  160A  158A  2441  160A  118A  	fcall	_Lcd_Init
  1579                           
  1580                           ;main.c: 65:     Lcd_Clear();
  1581     15B3  160A  118A  2004  160A  118A  	fcall	_Lcd_Clear
  1582                           
  1583                           ;main.c: 66:     Lcd_Set_Cursor(1,2);
  1584     15B8  3002               	movlw	2
  1585     15B9  00F4               	movwf	Lcd_Set_Cursor@b
  1586     15BA  3001               	movlw	1
  1587     15BB  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1588     15C0                     l4036:
  1589                           
  1590                           ;main.c: 67:     Lcd_Write_String("S1:   S2:  CON");
  1591     15C0  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1592     15C1  00F5               	movwf	Lcd_Write_String@a
  1593     15C2  3080               	movlw	128
  1594     15C3  00F6               	movwf	Lcd_Write_String@a+1
  1595     15C4  160A  158A  222A  160A  118A  	fcall	_Lcd_Write_String
  1596     15C9                     l4038:
  1597                           
  1598                           ;main.c: 68:     Lcd_Set_Cursor(2,1);
  1599     15C9  01F4               	clrf	Lcd_Set_Cursor@b
  1600     15CA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1601     15CB  3002               	movlw	2
  1602     15CC  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1603                           
  1604                           ;main.c: 69:     Lcd_Write_String("    V     V  ");
  1605     15D1  30A0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1606     15D2  00F5               	movwf	Lcd_Write_String@a
  1607     15D3  3080               	movlw	128
  1608     15D4  00F6               	movwf	Lcd_Write_String@a+1
  1609     15D5  160A  158A  222A  160A  118A  	fcall	_Lcd_Write_String
  1610     15DA                     l4040:
  1611                           
  1612                           ;main.c: 70:     SSPBUF = 0;
  1613     15DA  1283               	bcf	3,5	;RP0=0, select bank0
  1614     15DB  1303               	bcf	3,6	;RP1=0, select bank0
  1615     15DC  0193               	clrf	19	;volatile
  1616     15DD                     l4042:
  1617                           
  1618                           ;main.c: 73:         _delay((unsigned long)((10)*(2000000/4000.0)));
  1619     15DD  3007               	movlw	7
  1620     15DE  1683               	bsf	3,5	;RP0=1, select bank1
  1621     15DF  1303               	bcf	3,6	;RP1=0, select bank1
  1622     15E0  00C4               	movwf	(??_main^(0+128)+1)
  1623     15E1  307C               	movlw	124
  1624     15E2  00C3               	movwf	??_main^(0+128)
  1625     15E3                     u6617:
  1626     15E3  0BC3               	decfsz	??_main^(0+128),f
  1627     15E4  2DE3               	goto	u6617
  1628     15E5  0BC4               	decfsz	(??_main^(0+128)+1),f
  1629     15E6  2DE3               	goto	u6617
  1630     15E7  0000               	nop
  1631     15E8                     l4044:
  1632                           
  1633                           ;main.c: 74:         RA0 = 1;
  1634     15E8  1283               	bcf	3,5	;RP0=0, select bank0
  1635     15E9  1303               	bcf	3,6	;RP1=0, select bank0
  1636     15EA  1405               	bsf	5,0	;volatile
  1637     15EB                     l4046:
  1638                           
  1639                           ;main.c: 75:         _delay((unsigned long)((10)*(2000000/4000.0)));
  1640     15EB  3007               	movlw	7
  1641     15EC  1683               	bsf	3,5	;RP0=1, select bank1
  1642     15ED  1303               	bcf	3,6	;RP1=0, select bank1
  1643     15EE  00C4               	movwf	(??_main^(0+128)+1)
  1644     15EF  307C               	movlw	124
  1645     15F0  00C3               	movwf	??_main^(0+128)
  1646     15F1                     u6627:
  1647     15F1  0BC3               	decfsz	??_main^(0+128),f
  1648     15F2  2DF1               	goto	u6627
  1649     15F3  0BC4               	decfsz	(??_main^(0+128)+1),f
  1650     15F4  2DF1               	goto	u6627
  1651     15F5  0000               	nop
  1652     15F6                     l4048:
  1653                           
  1654                           ;main.c: 78:         RA0 = 0;
  1655     15F6  1283               	bcf	3,5	;RP0=0, select bank0
  1656     15F7  1303               	bcf	3,6	;RP1=0, select bank0
  1657     15F8  1005               	bcf	5,0	;volatile
  1658     15F9                     l4050:
  1659                           
  1660                           ;main.c: 79:         spiWrite(1);
  1661     15F9  3001               	movlw	1
  1662     15FA  160A  158A  20D1  160A  118A  	fcall	_spiWrite
  1663     15FF                     l80:	
  1664                           ;main.c: 80:         while(!SSPSTATbits.BF);
  1665                           
  1666     15FF  1683               	bsf	3,5	;RP0=1, select bank1
  1667     1600  1303               	bcf	3,6	;RP1=0, select bank1
  1668     1601  1C14               	btfss	20,0	;volatile
  1669     1602  2E04               	goto	u6581
  1670     1603  2E05               	goto	u6580
  1671     1604                     u6581:
  1672     1604  2DFF               	goto	l80
  1673     1605                     u6580:
  1674     1605                     l4052:
  1675                           
  1676                           ;main.c: 81:         cont = SSPBUF;
  1677     1605  1283               	bcf	3,5	;RP0=0, select bank0
  1678     1606  1303               	bcf	3,6	;RP1=0, select bank0
  1679     1607  0813               	movf	19,w	;volatile
  1680     1608  1683               	bsf	3,5	;RP0=1, select bank1
  1681     1609  1303               	bcf	3,6	;RP1=0, select bank1
  1682     160A  00C3               	movwf	??_main^(0+128)
  1683     160B  01C4               	clrf	(??_main^(0+128)+1)
  1684     160C  0843               	movf	??_main^(0+128),w
  1685     160D  00CF               	movwf	_cont^(0+128)
  1686     160E  0844               	movf	(??_main+1)^(0+128),w
  1687     160F  00D0               	movwf	(_cont+1)^(0+128)
  1688     1610                     l4054:
  1689                           
  1690                           ;main.c: 82:         RA0 = 1;
  1691     1610  1283               	bcf	3,5	;RP0=0, select bank0
  1692     1611  1303               	bcf	3,6	;RP1=0, select bank0
  1693     1612  1405               	bsf	5,0	;volatile
  1694     1613                     l4056:
  1695                           
  1696                           ;main.c: 85:         cent = inttochar(descomponer(2, cont));
  1697     1613  3002               	movlw	2
  1698     1614  00A4               	movwf	descomponer@pos
  1699     1615  3000               	movlw	0
  1700     1616  00A5               	movwf	descomponer@pos+1
  1701     1617  1683               	bsf	3,5	;RP0=1, select bank1
  1702     1618  1303               	bcf	3,6	;RP1=0, select bank1
  1703     1619  0850               	movf	(_cont+1)^(0+128),w
  1704     161A  1283               	bcf	3,5	;RP0=0, select bank0
  1705     161B  1303               	bcf	3,6	;RP1=0, select bank0
  1706     161C  00A7               	movwf	descomponer@num+1
  1707     161D  1683               	bsf	3,5	;RP0=1, select bank1
  1708     161E  1303               	bcf	3,6	;RP1=0, select bank1
  1709     161F  084F               	movf	_cont^(0+128),w
  1710     1620  1283               	bcf	3,5	;RP0=0, select bank0
  1711     1621  1303               	bcf	3,6	;RP1=0, select bank0
  1712     1622  00A6               	movwf	descomponer@num
  1713     1623  160A  158A  24FD  160A  118A  	fcall	_descomponer
  1714     1628  160A  158A  2344  160A  118A  	fcall	_inttochar
  1715     162D  1683               	bsf	3,5	;RP0=1, select bank1
  1716     162E  1303               	bcf	3,6	;RP1=0, select bank1
  1717     162F  00D1               	movwf	_cent^(0+128)
  1718     1630                     l4058:
  1719                           
  1720                           ;main.c: 86:         Lcd_Set_Cursor(2,13);
  1721     1630  300D               	movlw	13
  1722     1631  00F4               	movwf	Lcd_Set_Cursor@b
  1723     1632  3002               	movlw	2
  1724     1633  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1725     1638                     l4060:
  1726                           
  1727                           ;main.c: 87:         Lcd_Write_Char(cent);
  1728     1638  1683               	bsf	3,5	;RP0=1, select bank1
  1729     1639  1303               	bcf	3,6	;RP1=0, select bank1
  1730     163A  0851               	movf	_cent^(0+128),w
  1731     163B  120A  118A  20C8  160A  118A  	fcall	_Lcd_Write_Char
  1732     1640                     l4062:
  1733                           
  1734                           ;main.c: 88:         dec = inttochar(descomponer(1, cont));
  1735     1640  3001               	movlw	1
  1736     1641  1283               	bcf	3,5	;RP0=0, select bank0
  1737     1642  1303               	bcf	3,6	;RP1=0, select bank0
  1738     1643  00A4               	movwf	descomponer@pos
  1739     1644  3000               	movlw	0
  1740     1645  00A5               	movwf	descomponer@pos+1
  1741     1646  1683               	bsf	3,5	;RP0=1, select bank1
  1742     1647  1303               	bcf	3,6	;RP1=0, select bank1
  1743     1648  0850               	movf	(_cont+1)^(0+128),w
  1744     1649  1283               	bcf	3,5	;RP0=0, select bank0
  1745     164A  1303               	bcf	3,6	;RP1=0, select bank0
  1746     164B  00A7               	movwf	descomponer@num+1
  1747     164C  1683               	bsf	3,5	;RP0=1, select bank1
  1748     164D  1303               	bcf	3,6	;RP1=0, select bank1
  1749     164E  084F               	movf	_cont^(0+128),w
  1750     164F  1283               	bcf	3,5	;RP0=0, select bank0
  1751     1650  1303               	bcf	3,6	;RP1=0, select bank0
  1752     1651  00A6               	movwf	descomponer@num
  1753     1652  160A  158A  24FD  160A  118A  	fcall	_descomponer
  1754     1657  160A  158A  2344  160A  118A  	fcall	_inttochar
  1755     165C  1683               	bsf	3,5	;RP0=1, select bank1
  1756     165D  1303               	bcf	3,6	;RP1=0, select bank1
  1757     165E  00D2               	movwf	_dec^(0+128)
  1758     165F                     l4064:
  1759                           
  1760                           ;main.c: 89:         Lcd_Set_Cursor(2,14);
  1761     165F  300E               	movlw	14
  1762     1660  00F4               	movwf	Lcd_Set_Cursor@b
  1763     1661  3002               	movlw	2
  1764     1662  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1765     1667                     l4066:
  1766                           
  1767                           ;main.c: 90:         Lcd_Write_Char(dec);
  1768     1667  1683               	bsf	3,5	;RP0=1, select bank1
  1769     1668  1303               	bcf	3,6	;RP1=0, select bank1
  1770     1669  0852               	movf	_dec^(0+128),w
  1771     166A  120A  118A  20C8  160A  118A  	fcall	_Lcd_Write_Char
  1772     166F                     l4068:
  1773                           
  1774                           ;main.c: 91:         uni = inttochar(descomponer(0, cont));
  1775     166F  3000               	movlw	0
  1776     1670  1283               	bcf	3,5	;RP0=0, select bank0
  1777     1671  1303               	bcf	3,6	;RP1=0, select bank0
  1778     1672  00A4               	movwf	descomponer@pos
  1779     1673  00A5               	movwf	descomponer@pos+1
  1780     1674  1683               	bsf	3,5	;RP0=1, select bank1
  1781     1675  1303               	bcf	3,6	;RP1=0, select bank1
  1782     1676  0850               	movf	(_cont+1)^(0+128),w
  1783     1677  1283               	bcf	3,5	;RP0=0, select bank0
  1784     1678  1303               	bcf	3,6	;RP1=0, select bank0
  1785     1679  00A7               	movwf	descomponer@num+1
  1786     167A  1683               	bsf	3,5	;RP0=1, select bank1
  1787     167B  1303               	bcf	3,6	;RP1=0, select bank1
  1788     167C  084F               	movf	_cont^(0+128),w
  1789     167D  1283               	bcf	3,5	;RP0=0, select bank0
  1790     167E  1303               	bcf	3,6	;RP1=0, select bank0
  1791     167F  00A6               	movwf	descomponer@num
  1792     1680  160A  158A  24FD  160A  118A  	fcall	_descomponer
  1793     1685  160A  158A  2344  160A  118A  	fcall	_inttochar
  1794     168A  1683               	bsf	3,5	;RP0=1, select bank1
  1795     168B  1303               	bcf	3,6	;RP1=0, select bank1
  1796     168C  00D3               	movwf	_uni^(0+128)
  1797     168D                     l4070:
  1798                           
  1799                           ;main.c: 92:         Lcd_Set_Cursor(2,15);
  1800     168D  300F               	movlw	15
  1801     168E  00F4               	movwf	Lcd_Set_Cursor@b
  1802     168F  3002               	movlw	2
  1803     1690  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1804     1695                     l4072:
  1805                           
  1806                           ;main.c: 93:         Lcd_Write_Char(uni);
  1807     1695  1683               	bsf	3,5	;RP0=1, select bank1
  1808     1696  1303               	bcf	3,6	;RP1=0, select bank1
  1809     1697  0853               	movf	_uni^(0+128),w
  1810     1698  120A  118A  20C8  160A  118A  	fcall	_Lcd_Write_Char
  1811     169D                     l4074:
  1812                           
  1813                           ;main.c: 96:         _delay((unsigned long)((10)*(2000000/4000.0)));
  1814     169D  3007               	movlw	7
  1815     169E  1683               	bsf	3,5	;RP0=1, select bank1
  1816     169F  1303               	bcf	3,6	;RP1=0, select bank1
  1817     16A0  00C4               	movwf	(??_main^(0+128)+1)
  1818     16A1  307C               	movlw	124
  1819     16A2  00C3               	movwf	??_main^(0+128)
  1820     16A3                     u6637:
  1821     16A3  0BC3               	decfsz	??_main^(0+128),f
  1822     16A4  2EA3               	goto	u6637
  1823     16A5  0BC4               	decfsz	(??_main^(0+128)+1),f
  1824     16A6  2EA3               	goto	u6637
  1825     16A7  0000               	nop
  1826     16A8                     l4076:
  1827                           
  1828                           ;main.c: 98:         RA0 = 0;
  1829     16A8  1283               	bcf	3,5	;RP0=0, select bank0
  1830     16A9  1303               	bcf	3,6	;RP1=0, select bank0
  1831     16AA  1005               	bcf	5,0	;volatile
  1832                           
  1833                           ;main.c: 99:         spiWrite(0);
  1834     16AB  3000               	movlw	0
  1835     16AC  160A  158A  20D1  160A  118A  	fcall	_spiWrite
  1836     16B1                     l83:	
  1837                           ;main.c: 101:         while(!SSPSTATbits.BF);
  1838                           
  1839     16B1  1683               	bsf	3,5	;RP0=1, select bank1
  1840     16B2  1303               	bcf	3,6	;RP1=0, select bank1
  1841     16B3  1C14               	btfss	20,0	;volatile
  1842     16B4  2EB6               	goto	u6591
  1843     16B5  2EB7               	goto	u6590
  1844     16B6                     u6591:
  1845     16B6  2EB1               	goto	l83
  1846     16B7                     u6590:
  1847     16B7                     l4078:
  1848                           
  1849                           ;main.c: 102:         lecADC = SSPBUF;
  1850     16B7  1283               	bcf	3,5	;RP0=0, select bank0
  1851     16B8  1303               	bcf	3,6	;RP1=0, select bank0
  1852     16B9  0813               	movf	19,w	;volatile
  1853     16BA  1683               	bsf	3,5	;RP0=1, select bank1
  1854     16BB  1303               	bcf	3,6	;RP1=0, select bank1
  1855     16BC  00D5               	movwf	_lecADC^(0+128)
  1856                           
  1857                           ;main.c: 103:         _delay((unsigned long)((10)*(2000000/4000.0)));
  1858     16BD  3007               	movlw	7
  1859     16BE  1683               	bsf	3,5	;RP0=1, select bank1
  1860     16BF  1303               	bcf	3,6	;RP1=0, select bank1
  1861     16C0  00C4               	movwf	(??_main^(0+128)+1)
  1862     16C1  307C               	movlw	124
  1863     16C2  00C3               	movwf	??_main^(0+128)
  1864     16C3                     u6647:
  1865     16C3  0BC3               	decfsz	??_main^(0+128),f
  1866     16C4  2EC3               	goto	u6647
  1867     16C5  0BC4               	decfsz	(??_main^(0+128)+1),f
  1868     16C6  2EC3               	goto	u6647
  1869     16C7  0000               	nop
  1870     16C8                     l4080:
  1871                           
  1872                           ;main.c: 104:         RA0 = 1;
  1873     16C8  1283               	bcf	3,5	;RP0=0, select bank0
  1874     16C9  1303               	bcf	3,6	;RP1=0, select bank0
  1875     16CA  1405               	bsf	5,0	;volatile
  1876     16CB                     l4082:
  1877                           
  1878                           ;main.c: 107:         conver = (lecADC*5.0)/255;
  1879     16CB  3043               	movlw	67
  1880     16CC  00C1               	movwf	___fldiv@a+3
  1881     16CD  307F               	movlw	127
  1882     16CE  00C0               	movwf	___fldiv@a+2
  1883     16CF  3000               	movlw	0
  1884     16D0  00BF               	movwf	___fldiv@a+1
  1885     16D1  3000               	movlw	0
  1886     16D2  00BE               	movwf	___fldiv@a
  1887     16D3  3040               	movlw	64
  1888     16D4  00A7               	movwf	___flmul@b+3
  1889     16D5  30A0               	movlw	160
  1890     16D6  00A6               	movwf	___flmul@b+2
  1891     16D7  3000               	movlw	0
  1892     16D8  00A5               	movwf	___flmul@b+1
  1893     16D9  3000               	movlw	0
  1894     16DA  00A4               	movwf	___flmul@b
  1895     16DB  1683               	bsf	3,5	;RP0=1, select bank1
  1896     16DC  1303               	bcf	3,6	;RP1=0, select bank1
  1897     16DD  0855               	movf	_lecADC^(0+128),w
  1898     16DE  00C3               	movwf	??_main^(0+128)
  1899     16DF  01C4               	clrf	(??_main^(0+128)+1)
  1900     16E0  01C5               	clrf	(??_main^(0+128)+2)
  1901     16E1  01C6               	clrf	(??_main^(0+128)+3)
  1902     16E2  0846               	movf	(??_main+3)^(0+128),w
  1903     16E3  00F3               	movwf	___xxtofl@val+3
  1904     16E4  0845               	movf	(??_main+2)^(0+128),w
  1905     16E5  00F2               	movwf	___xxtofl@val+2
  1906     16E6  0844               	movf	(??_main+1)^(0+128),w
  1907     16E7  00F1               	movwf	___xxtofl@val+1
  1908     16E8  0843               	movf	??_main^(0+128),w
  1909     16E9  00F0               	movwf	___xxtofl@val
  1910     16EA  3001               	movlw	1
  1911     16EB  120A  158A  20A4  160A  118A  	fcall	___xxtofl
  1912     16F0  0873               	movf	?___xxtofl+3,w
  1913     16F1  1283               	bcf	3,5	;RP0=0, select bank0
  1914     16F2  1303               	bcf	3,6	;RP1=0, select bank0
  1915     16F3  00AB               	movwf	___flmul@a+3
  1916     16F4  0872               	movf	?___xxtofl+2,w
  1917     16F5  00AA               	movwf	___flmul@a+2
  1918     16F6  0871               	movf	?___xxtofl+1,w
  1919     16F7  00A9               	movwf	___flmul@a+1
  1920     16F8  0870               	movf	?___xxtofl,w
  1921     16F9  00A8               	movwf	___flmul@a
  1922     16FA  120A  158A  215C  160A  118A  	fcall	___flmul
  1923     16FF  1283               	bcf	3,5	;RP0=0, select bank0
  1924     1700  1303               	bcf	3,6	;RP1=0, select bank0
  1925     1701  0827               	movf	?___flmul+3,w
  1926     1702  00C5               	movwf	___fldiv@b+3
  1927     1703  0826               	movf	?___flmul+2,w
  1928     1704  00C4               	movwf	___fldiv@b+2
  1929     1705  0825               	movf	?___flmul+1,w
  1930     1706  00C3               	movwf	___fldiv@b+1
  1931     1707  0824               	movf	?___flmul,w
  1932     1708  00C2               	movwf	___fldiv@b
  1933     1709  160A  158A  262D  160A  118A  	fcall	___fldiv
  1934     170E  1283               	bcf	3,5	;RP0=0, select bank0
  1935     170F  1303               	bcf	3,6	;RP1=0, select bank0
  1936     1710  0841               	movf	?___fldiv+3,w
  1937     1711  1683               	bsf	3,5	;RP0=1, select bank1
  1938     1712  1303               	bcf	3,6	;RP1=0, select bank1
  1939     1713  00CE               	movwf	(_conver+3)^(0+128)
  1940     1714  1283               	bcf	3,5	;RP0=0, select bank0
  1941     1715  1303               	bcf	3,6	;RP1=0, select bank0
  1942     1716  0840               	movf	?___fldiv+2,w
  1943     1717  1683               	bsf	3,5	;RP0=1, select bank1
  1944     1718  1303               	bcf	3,6	;RP1=0, select bank1
  1945     1719  00CD               	movwf	(_conver+2)^(0+128)
  1946     171A  1283               	bcf	3,5	;RP0=0, select bank0
  1947     171B  1303               	bcf	3,6	;RP1=0, select bank0
  1948     171C  083F               	movf	?___fldiv+1,w
  1949     171D  1683               	bsf	3,5	;RP0=1, select bank1
  1950     171E  1303               	bcf	3,6	;RP1=0, select bank1
  1951     171F  00CC               	movwf	(_conver+1)^(0+128)
  1952     1720  1283               	bcf	3,5	;RP0=0, select bank0
  1953     1721  1303               	bcf	3,6	;RP1=0, select bank0
  1954     1722  083E               	movf	?___fldiv,w
  1955     1723  1683               	bsf	3,5	;RP0=1, select bank1
  1956     1724  1303               	bcf	3,6	;RP1=0, select bank1
  1957     1725  00CB               	movwf	_conver^(0+128)
  1958     1726                     l4084:
  1959                           
  1960                           ;main.c: 108:         sprintf(valADC, "%.2f", conver);
  1961     1726  30AE               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1962     1727  00A0               	movwf	sprintf@f^(0+128)
  1963     1728  084E               	movf	(_conver+3)^(0+128),w
  1964     1729  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1965     172A  084D               	movf	(_conver+2)^(0+128),w
  1966     172B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1967     172C  084C               	movf	(_conver+1)^(0+128),w
  1968     172D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1969     172E  084B               	movf	_conver^(0+128),w
  1970     172F  00A1               	movwf	(?_sprintf^(0+128)+1)
  1971     1730  30D9               	movlw	(low (_valADC| 0))& (0+255)
  1972     1731  120A  118A  21B3  160A  118A  	fcall	_sprintf
  1973     1736                     l4086:
  1974                           
  1975                           ;main.c: 109:         Lcd_Set_Cursor(2,1);
  1976     1736  01F4               	clrf	Lcd_Set_Cursor@b
  1977     1737  0AF4               	incf	Lcd_Set_Cursor@b,f
  1978     1738  3002               	movlw	2
  1979     1739  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  1980     173E                     l4088:
  1981                           
  1982                           ;main.c: 110:         Lcd_Write_String(valADC);
  1983     173E  30D9               	movlw	(low (_valADC| 0))& (0+255)
  1984     173F  00F5               	movwf	Lcd_Write_String@a
  1985     1740  3000               	movlw	0
  1986     1741  00F6               	movwf	Lcd_Write_String@a+1
  1987     1742  160A  158A  222A  160A  118A  	fcall	_Lcd_Write_String
  1988     1747                     l4090:
  1989                           
  1990                           ;main.c: 113:         _delay((unsigned long)((10)*(2000000/4000.0)));
  1991     1747  3007               	movlw	7
  1992     1748  1683               	bsf	3,5	;RP0=1, select bank1
  1993     1749  1303               	bcf	3,6	;RP1=0, select bank1
  1994     174A  00C4               	movwf	(??_main^(0+128)+1)
  1995     174B  307C               	movlw	124
  1996     174C  00C3               	movwf	??_main^(0+128)
  1997     174D                     u6657:
  1998     174D  0BC3               	decfsz	??_main^(0+128),f
  1999     174E  2F4D               	goto	u6657
  2000     174F  0BC4               	decfsz	(??_main^(0+128)+1),f
  2001     1750  2F4D               	goto	u6657
  2002     1751  0000               	nop
  2003     1752                     l4092:
  2004                           
  2005                           ;main.c: 114:         RA1 = 0;
  2006     1752  1283               	bcf	3,5	;RP0=0, select bank0
  2007     1753  1303               	bcf	3,6	;RP1=0, select bank0
  2008     1754  1085               	bcf	5,1	;volatile
  2009     1755                     l4094:
  2010                           
  2011                           ;main.c: 115:         spiWrite(0);
  2012     1755  3000               	movlw	0
  2013     1756  160A  158A  20D1  160A  118A  	fcall	_spiWrite
  2014     175B                     l86:	
  2015                           ;main.c: 116:         while(!SSPSTATbits.BF);
  2016                           
  2017     175B  1683               	bsf	3,5	;RP0=1, select bank1
  2018     175C  1303               	bcf	3,6	;RP1=0, select bank1
  2019     175D  1C14               	btfss	20,0	;volatile
  2020     175E  2F60               	goto	u6601
  2021     175F  2F61               	goto	u6600
  2022     1760                     u6601:
  2023     1760  2F5B               	goto	l86
  2024     1761                     u6600:
  2025     1761                     l4096:
  2026                           
  2027                           ;main.c: 117:         lecADC2 = spiRead();
  2028     1761  160A  158A  20E6  160A  118A  	fcall	_spiRead
  2029     1766  1683               	bsf	3,5	;RP0=1, select bank1
  2030     1767  1303               	bcf	3,6	;RP1=0, select bank1
  2031     1768  00D4               	movwf	_lecADC2^(0+128)
  2032     1769                     l4098:
  2033                           
  2034                           ;main.c: 118:         _delay((unsigned long)((10)*(2000000/4000.0)));
  2035     1769  3007               	movlw	7
  2036     176A  1683               	bsf	3,5	;RP0=1, select bank1
  2037     176B  1303               	bcf	3,6	;RP1=0, select bank1
  2038     176C  00C4               	movwf	(??_main^(0+128)+1)
  2039     176D  307C               	movlw	124
  2040     176E  00C3               	movwf	??_main^(0+128)
  2041     176F                     u6667:
  2042     176F  0BC3               	decfsz	??_main^(0+128),f
  2043     1770  2F6F               	goto	u6667
  2044     1771  0BC4               	decfsz	(??_main^(0+128)+1),f
  2045     1772  2F6F               	goto	u6667
  2046     1773  0000               	nop
  2047     1774                     l4100:
  2048                           
  2049                           ;main.c: 119:         RA1 = 1;
  2050     1774  1283               	bcf	3,5	;RP0=0, select bank0
  2051     1775  1303               	bcf	3,6	;RP1=0, select bank0
  2052     1776  1485               	bsf	5,1	;volatile
  2053     1777                     l4102:
  2054                           
  2055                           ;main.c: 120:         _delay((unsigned long)((1)*(2000000/4000.0)));
  2056     1777  30A5               	movlw	165
  2057     1778  1683               	bsf	3,5	;RP0=1, select bank1
  2058     1779  1303               	bcf	3,6	;RP1=0, select bank1
  2059     177A  00C3               	movwf	??_main^(0+128)
  2060     177B                     u6677:
  2061     177B  0BC3               	decfsz	??_main^(0+128),f
  2062     177C  2F7B               	goto	u6677
  2063     177D  2F7E               	nop2
  2064     177E                     l4104:
  2065                           
  2066                           ;main.c: 123:         conver1 = (lecADC2*5.0)/255;
  2067     177E  3043               	movlw	67
  2068     177F  1283               	bcf	3,5	;RP0=0, select bank0
  2069     1780  1303               	bcf	3,6	;RP1=0, select bank0
  2070     1781  00C1               	movwf	___fldiv@a+3
  2071     1782  307F               	movlw	127
  2072     1783  00C0               	movwf	___fldiv@a+2
  2073     1784  3000               	movlw	0
  2074     1785  00BF               	movwf	___fldiv@a+1
  2075     1786  3000               	movlw	0
  2076     1787  00BE               	movwf	___fldiv@a
  2077     1788  3040               	movlw	64
  2078     1789  00A7               	movwf	___flmul@b+3
  2079     178A  30A0               	movlw	160
  2080     178B  00A6               	movwf	___flmul@b+2
  2081     178C  3000               	movlw	0
  2082     178D  00A5               	movwf	___flmul@b+1
  2083     178E  3000               	movlw	0
  2084     178F  00A4               	movwf	___flmul@b
  2085     1790  1683               	bsf	3,5	;RP0=1, select bank1
  2086     1791  1303               	bcf	3,6	;RP1=0, select bank1
  2087     1792  0854               	movf	_lecADC2^(0+128),w
  2088     1793  00C3               	movwf	??_main^(0+128)
  2089     1794  01C4               	clrf	(??_main^(0+128)+1)
  2090     1795  01C5               	clrf	(??_main^(0+128)+2)
  2091     1796  01C6               	clrf	(??_main^(0+128)+3)
  2092     1797  0846               	movf	(??_main+3)^(0+128),w
  2093     1798  00F3               	movwf	___xxtofl@val+3
  2094     1799  0845               	movf	(??_main+2)^(0+128),w
  2095     179A  00F2               	movwf	___xxtofl@val+2
  2096     179B  0844               	movf	(??_main+1)^(0+128),w
  2097     179C  00F1               	movwf	___xxtofl@val+1
  2098     179D  0843               	movf	??_main^(0+128),w
  2099     179E  00F0               	movwf	___xxtofl@val
  2100     179F  3001               	movlw	1
  2101     17A0  120A  158A  20A4  160A  118A  	fcall	___xxtofl
  2102     17A5  0873               	movf	?___xxtofl+3,w
  2103     17A6  1283               	bcf	3,5	;RP0=0, select bank0
  2104     17A7  1303               	bcf	3,6	;RP1=0, select bank0
  2105     17A8  00AB               	movwf	___flmul@a+3
  2106     17A9  0872               	movf	?___xxtofl+2,w
  2107     17AA  00AA               	movwf	___flmul@a+2
  2108     17AB  0871               	movf	?___xxtofl+1,w
  2109     17AC  00A9               	movwf	___flmul@a+1
  2110     17AD  0870               	movf	?___xxtofl,w
  2111     17AE  00A8               	movwf	___flmul@a
  2112     17AF  120A  158A  215C  160A  118A  	fcall	___flmul
  2113     17B4  1283               	bcf	3,5	;RP0=0, select bank0
  2114     17B5  1303               	bcf	3,6	;RP1=0, select bank0
  2115     17B6  0827               	movf	?___flmul+3,w
  2116     17B7  00C5               	movwf	___fldiv@b+3
  2117     17B8  0826               	movf	?___flmul+2,w
  2118     17B9  00C4               	movwf	___fldiv@b+2
  2119     17BA  0825               	movf	?___flmul+1,w
  2120     17BB  00C3               	movwf	___fldiv@b+1
  2121     17BC  0824               	movf	?___flmul,w
  2122     17BD  00C2               	movwf	___fldiv@b
  2123     17BE  160A  158A  262D  160A  118A  	fcall	___fldiv
  2124     17C3  1283               	bcf	3,5	;RP0=0, select bank0
  2125     17C4  1303               	bcf	3,6	;RP1=0, select bank0
  2126     17C5  0841               	movf	?___fldiv+3,w
  2127     17C6  1683               	bsf	3,5	;RP0=1, select bank1
  2128     17C7  1303               	bcf	3,6	;RP1=0, select bank1
  2129     17C8  00CA               	movwf	(_conver1+3)^(0+128)
  2130     17C9  1283               	bcf	3,5	;RP0=0, select bank0
  2131     17CA  1303               	bcf	3,6	;RP1=0, select bank0
  2132     17CB  0840               	movf	?___fldiv+2,w
  2133     17CC  1683               	bsf	3,5	;RP0=1, select bank1
  2134     17CD  1303               	bcf	3,6	;RP1=0, select bank1
  2135     17CE  00C9               	movwf	(_conver1+2)^(0+128)
  2136     17CF  1283               	bcf	3,5	;RP0=0, select bank0
  2137     17D0  1303               	bcf	3,6	;RP1=0, select bank0
  2138     17D1  083F               	movf	?___fldiv+1,w
  2139     17D2  1683               	bsf	3,5	;RP0=1, select bank1
  2140     17D3  1303               	bcf	3,6	;RP1=0, select bank1
  2141     17D4  00C8               	movwf	(_conver1+1)^(0+128)
  2142     17D5  1283               	bcf	3,5	;RP0=0, select bank0
  2143     17D6  1303               	bcf	3,6	;RP1=0, select bank0
  2144     17D7  083E               	movf	?___fldiv,w
  2145     17D8  1683               	bsf	3,5	;RP0=1, select bank1
  2146     17D9  1303               	bcf	3,6	;RP1=0, select bank1
  2147     17DA  00C7               	movwf	_conver1^(0+128)
  2148     17DB                     l4106:
  2149                           
  2150                           ;main.c: 124:         sprintf(valADC2, "%.2f", conver1);
  2151     17DB  30AE               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2152     17DC  00A0               	movwf	sprintf@f^(0+128)
  2153     17DD  084A               	movf	(_conver1+3)^(0+128),w
  2154     17DE  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2155     17DF  0849               	movf	(_conver1+2)^(0+128),w
  2156     17E0  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2157     17E1  0848               	movf	(_conver1+1)^(0+128),w
  2158     17E2  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2159     17E3  0847               	movf	_conver1^(0+128),w
  2160     17E4  00A1               	movwf	(?_sprintf^(0+128)+1)
  2161     17E5  30D6               	movlw	(low (_valADC2| 0))& (0+255)
  2162     17E6  120A  118A  21B3  160A  118A  	fcall	_sprintf
  2163     17EB                     l4108:
  2164                           
  2165                           ;main.c: 125:         Lcd_Set_Cursor(2,7);
  2166     17EB  3007               	movlw	7
  2167     17EC  00F4               	movwf	Lcd_Set_Cursor@b
  2168     17ED  3002               	movlw	2
  2169     17EE  160A  158A  22B0  160A  118A  	fcall	_Lcd_Set_Cursor
  2170     17F3                     l4110:
  2171                           
  2172                           ;main.c: 126:         Lcd_Write_String(valADC2);
  2173     17F3  30D6               	movlw	(low (_valADC2| 0))& (0+255)
  2174     17F4  00F5               	movwf	Lcd_Write_String@a
  2175     17F5  3000               	movlw	0
  2176     17F6  00F6               	movwf	Lcd_Write_String@a+1
  2177     17F7  160A  158A  222A  160A  118A  	fcall	_Lcd_Write_String
  2178     17FC  2DDD               	goto	l4042
  2179     17FD  120A  118A  2800   	ljmp	start
  2180     1800                     __end_of_main:
  2181                           
  2182                           	psect	text1
  2183     01B3                     __ptext1:	
  2184 ;; *************** function _sprintf *****************
  2185 ;; Defined at:
  2186 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  sp              1    wreg     PTR unsigned char 
  2189 ;;		 -> valADC2(3), valADC(3), 
  2190 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2191 ;;		 -> STR_4(5), STR_3(5), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  2194 ;;		 -> valADC2(3), valADC(3), 
  2195 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  2196 ;;  tmpval          4   23[BANK1 ] struct .
  2197 ;;  val             4   17[BANK1 ] unsigned long 
  2198 ;;  prec            2   28[BANK1 ] int 
  2199 ;;  eexp            2   21[BANK1 ] int 
  2200 ;;  flag            2   15[BANK1 ] unsigned short 
  2201 ;;  cp              2    0        PTR const unsigned char 
  2202 ;;  len             2    0        unsigned int 
  2203 ;;  width           2    0        int 
  2204 ;;  c               1   34[BANK1 ] unsigned char 
  2205 ;;  ap              1   14[BANK1 ] PTR void [1]
  2206 ;;		 -> ?_sprintf(2), 
  2207 ;;  d               1    0        unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  2    0[BANK1 ] int 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2217 ;;      Params:         0       0       5       0       0
  2218 ;;      Locals:         0       0      25       0       0
  2219 ;;      Temps:          0       0       5       0       0
  2220 ;;      Totals:         0       0      35       0       0
  2221 ;;Total ram usage:       35 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 3
  2224 ;; This function calls:
  2225 ;;		___awdiv
  2226 ;;		___fladd
  2227 ;;		___fleq
  2228 ;;		___flge
  2229 ;;		___flmul
  2230 ;;		___flneg
  2231 ;;		___flsub
  2232 ;;		___fltol
  2233 ;;		___lldiv
  2234 ;;		___llmod
  2235 ;;		___wmul
  2236 ;;		___xxtofl
  2237 ;;		__div_to_l_
  2238 ;;		__tdiv_to_l_
  2239 ;;		_fround
  2240 ;;		_isdigit
  2241 ;;		_scale
  2242 ;; This function is called by:
  2243 ;;		_main
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247     01B3                     _sprintf:	
  2248                           ;psect for function _sprintf
  2249                           
  2250                           
  2251                           ;incstack = 0
  2252                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2253                           ;sprintf@sp stored from wreg
  2254     01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2255     01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2256     01B5  00BB               	movwf	sprintf@sp^(0+128)
  2257     01B6                     l3680:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2260     01B6  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2261     01B7  00AE               	movwf	sprintf@ap^(0+128)
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2264     01B8  2FDE               	goto	l3874
  2265     01B9                     l3682:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2268     01B9  3025               	movlw	37
  2269     01BA  0642               	xorwf	sprintf@c^(0+128),w
  2270     01BB  1903               	btfsc	3,2
  2271     01BC  29BE               	goto	u5941
  2272     01BD  29BF               	goto	u5940
  2273     01BE                     u5941:
  2274     01BE  29C9               	goto	l3688
  2275     01BF                     u5940:
  2276     01BF                     l3684:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2279     01BF  083B               	movf	sprintf@sp^(0+128),w
  2280     01C0  0084               	movwf	4
  2281     01C1  0842               	movf	sprintf@c^(0+128),w
  2282     01C2  1383               	bcf	3,7	;select IRP bank0
  2283     01C3  0080               	movwf	0
  2284     01C4                     l3686:
  2285     01C4  3001               	movlw	1
  2286     01C5  00A5               	movwf	??_sprintf^(0+128)
  2287     01C6  0825               	movf	??_sprintf^(0+128),w
  2288     01C7  07BB               	addwf	sprintf@sp^(0+128),f
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2291     01C8  2FDE               	goto	l3874
  2292     01C9                     l3688:
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2295     01C9  01AF               	clrf	sprintf@flag^(0+128)
  2296     01CA  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2297     01CB                     l3690:
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2300     01CB  0820               	movf	sprintf@f^(0+128),w
  2301     01CC  0084               	movwf	4
  2302     01CD  120A  118A  200D  120A  118A  	fcall	stringdir
  2303     01D2  3A2E               	xorlw	46
  2304     01D3  1D03               	skipz
  2305     01D4  29D6               	goto	u5951
  2306     01D5  29D7               	goto	u5950
  2307     01D6                     u5951:
  2308     01D6  2A1C               	goto	l3706
  2309     01D7                     u5950:
  2310     01D7                     l3692:
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2313     01D7  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2314     01D8                     l3694:
  2315                           
  2316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 630:    f++;
  2317     01D8  3001               	movlw	1
  2318     01D9  00A5               	movwf	??_sprintf^(0+128)
  2319     01DA  0825               	movf	??_sprintf^(0+128),w
  2320     01DB  07A0               	addwf	sprintf@f^(0+128),f
  2321     01DC                     l3696:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2324     01DC  01BC               	clrf	sprintf@prec^(0+128)
  2325     01DD  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2328     01DE  2A0B               	goto	l3704
  2329     01DF                     l3698:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2332     01DF  300A               	movlw	10
  2333     01E0  00F0               	movwf	___wmul@multiplier
  2334     01E1  3000               	movlw	0
  2335     01E2  00F1               	movwf	___wmul@multiplier+1
  2336     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  2337     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  2338     01E5  083D               	movf	(sprintf@prec+1)^(0+128),w
  2339     01E6  00F3               	movwf	___wmul@multiplicand+1
  2340     01E7  083C               	movf	sprintf@prec^(0+128),w
  2341     01E8  00F2               	movwf	___wmul@multiplicand
  2342     01E9  160A  158A  21A4  120A  118A  	fcall	___wmul
  2343     01EE  0871               	movf	?___wmul+1,w
  2344     01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2345     01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2346     01F1  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2347     01F2  0870               	movf	?___wmul,w
  2348     01F3  00BC               	movwf	sprintf@prec^(0+128)
  2349     01F4                     l3700:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2352     01F4  0820               	movf	sprintf@f^(0+128),w
  2353     01F5  0084               	movwf	4
  2354     01F6  120A  118A  200D  120A  118A  	fcall	stringdir
  2355     01FB  3ED0               	addlw	208
  2356     01FC  00A5               	movwf	??_sprintf^(0+128)
  2357     01FD  30FF               	movlw	255
  2358     01FE  1803               	skipnc
  2359     01FF  3000               	movlw	0
  2360     0200  00A6               	movwf	(??_sprintf^(0+128)+1)
  2361     0201  0825               	movf	??_sprintf^(0+128),w
  2362     0202  07BC               	addwf	sprintf@prec^(0+128),f
  2363     0203  1803               	skipnc
  2364     0204  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2365     0205  0826               	movf	(??_sprintf+1)^(0+128),w
  2366     0206  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2367     0207                     l3702:
  2368     0207  3001               	movlw	1
  2369     0208  00A5               	movwf	??_sprintf^(0+128)
  2370     0209  0825               	movf	??_sprintf^(0+128),w
  2371     020A  07A0               	addwf	sprintf@f^(0+128),f
  2372     020B                     l3704:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2375     020B  0820               	movf	sprintf@f^(0+128),w
  2376     020C  0084               	movwf	4
  2377     020D  120A  118A  200D  120A  118A  	fcall	stringdir
  2378     0212  160A  158A  20FA  120A  118A  	fcall	_isdigit
  2379     0217  1803               	btfsc	3,0
  2380     0218  2A1A               	goto	u5961
  2381     0219  2A1B               	goto	u5960
  2382     021A                     u5961:
  2383     021A  29DF               	goto	l3698
  2384     021B                     u5960:
  2385     021B  2A22               	goto	l3712
  2386     021C                     l3706:
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2389     021C  01BC               	clrf	sprintf@prec^(0+128)
  2390     021D  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2391     021E                     l3708:
  2392                           
  2393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2394     021E  1630               	bsf	(sprintf@flag^(0+128)+1),4
  2395     021F  2A22               	goto	l3712
  2396     0220                     l382:	
  2397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2398                           
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2401     0220  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2402                           
  2403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2404     0221  2A3E               	goto	l3714
  2405     0222                     l3712:
  2406     0222  3001               	movlw	1
  2407     0223  1683               	bsf	3,5	;RP0=1, select bank1
  2408     0224  1303               	bcf	3,6	;RP1=0, select bank1
  2409     0225  07A0               	addwf	sprintf@f^(0+128),f
  2410     0226  30FF               	movlw	-1
  2411     0227  0720               	addwf	sprintf@f^(0+128),w
  2412     0228  0084               	movwf	4
  2413     0229  120A  118A  200D  120A  118A  	fcall	stringdir
  2414     022E  00C2               	movwf	sprintf@c^(0+128)
  2415     022F  00A5               	movwf	??_sprintf^(0+128)
  2416     0230  01A6               	clrf	(??_sprintf^(0+128)+1)
  2417                           
  2418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2419                           ; Switch size 1, requested type "simple"
  2420                           ; Number of cases is 1, Range of values is 0 to 0
  2421                           ; switch strategies available:
  2422                           ; Name         Instructions Cycles
  2423                           ; simple_byte            4     3 (average)
  2424                           ; direct_byte           11     8 (fixed)
  2425                           ; jumptable            260     6 (fixed)
  2426                           ;	Chosen strategy is simple_byte
  2427     0231  0826               	movf	(??_sprintf+1)^(0+128),w
  2428     0232  3A00               	xorlw	0	; case 0
  2429     0233  1903               	skipnz
  2430     0234  2A36               	goto	l4150
  2431     0235  2FDE               	goto	l3874
  2432     0236                     l4150:
  2433                           
  2434                           ; Switch size 1, requested type "simple"
  2435                           ; Number of cases is 2, Range of values is 0 to 102
  2436                           ; switch strategies available:
  2437                           ; Name         Instructions Cycles
  2438                           ; simple_byte            7     4 (average)
  2439                           ; jumptable            260     6 (fixed)
  2440                           ;	Chosen strategy is simple_byte
  2441     0236  0825               	movf	??_sprintf^(0+128),w
  2442     0237  3A00               	xorlw	0	; case 0
  2443     0238  1903               	skipnz
  2444     0239  2FEE               	goto	l3876
  2445     023A  3A66               	xorlw	102	; case 102
  2446     023B  1903               	skipnz
  2447     023C  2A20               	goto	l382
  2448     023D  2FDE               	goto	l3874
  2449     023E                     l3714:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2452     023E  3000               	movlw	0
  2453     023F  052F               	andwf	sprintf@flag^(0+128),w
  2454     0240  00A5               	movwf	??_sprintf^(0+128)
  2455     0241  3007               	movlw	7
  2456     0242  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2457     0243  00A6               	movwf	(??_sprintf+1)^(0+128)
  2458     0244  0825               	movf	??_sprintf^(0+128),w
  2459     0245  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2460     0246  1903               	btfsc	3,2
  2461     0247  2A49               	goto	u5971
  2462     0248  2A4A               	goto	u5970
  2463     0249                     u5971:
  2464     0249  2F9B               	goto	l3856
  2465     024A                     u5970:
  2466     024A                     l3716:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2469     024A  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2470     024B  2A4D               	goto	u5981
  2471     024C  2A4E               	goto	u5980
  2472     024D                     u5981:
  2473     024D  2A52               	goto	l3720
  2474     024E                     u5980:
  2475     024E                     l3718:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2478     024E  3006               	movlw	6
  2479     024F  00BC               	movwf	sprintf@prec^(0+128)
  2480     0250  3000               	movlw	0
  2481     0251  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2482     0252                     l3720:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2485     0252  082E               	movf	sprintf@ap^(0+128),w
  2486     0253  0084               	movwf	4
  2487     0254  1383               	bcf	3,7	;select IRP bank0
  2488     0255  0800               	movf	0,w
  2489     0256  00BE               	movwf	sprintf@fval^(0+128)
  2490     0257  0A84               	incf	4,f
  2491     0258  0800               	movf	0,w
  2492     0259  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2493     025A  0A84               	incf	4,f
  2494     025B  0800               	movf	0,w
  2495     025C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2496     025D  0A84               	incf	4,f
  2497     025E  0800               	movf	0,w
  2498     025F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2499     0260                     l3722:
  2500     0260  3004               	movlw	4
  2501     0261  00A5               	movwf	??_sprintf^(0+128)
  2502     0262  0825               	movf	??_sprintf^(0+128),w
  2503     0263  07AE               	addwf	sprintf@ap^(0+128),f
  2504     0264                     l3724:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2507     0264  0841               	movf	(sprintf@fval+3)^(0+128),w
  2508     0265  00F3               	movwf	___flge@ff1+3
  2509     0266  0840               	movf	(sprintf@fval+2)^(0+128),w
  2510     0267  00F2               	movwf	___flge@ff1+2
  2511     0268  083F               	movf	(sprintf@fval+1)^(0+128),w
  2512     0269  00F1               	movwf	___flge@ff1+1
  2513     026A  083E               	movf	sprintf@fval^(0+128),w
  2514     026B  00F0               	movwf	___flge@ff1
  2515     026C  3000               	movlw	0
  2516     026D  00F7               	movwf	___flge@ff2+3
  2517     026E  3000               	movlw	0
  2518     026F  00F6               	movwf	___flge@ff2+2
  2519     0270  3000               	movlw	0
  2520     0271  00F5               	movwf	___flge@ff2+1
  2521     0272  3000               	movlw	0
  2522     0273  00F4               	movwf	___flge@ff2
  2523     0274  120A  158A  2002  120A  118A  	fcall	___flge
  2524     0279  1803               	btfsc	3,0
  2525     027A  2A7C               	goto	u5991
  2526     027B  2A7D               	goto	u5990
  2527     027C                     u5991:
  2528     027C  2A9A               	goto	l3730
  2529     027D                     u5990:
  2530     027D                     l3726:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2533     027D  1683               	bsf	3,5	;RP0=1, select bank1
  2534     027E  1303               	bcf	3,6	;RP1=0, select bank1
  2535     027F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2536     0280  00F3               	movwf	___flneg@f1+3
  2537     0281  0840               	movf	(sprintf@fval+2)^(0+128),w
  2538     0282  00F2               	movwf	___flneg@f1+2
  2539     0283  083F               	movf	(sprintf@fval+1)^(0+128),w
  2540     0284  00F1               	movwf	___flneg@f1+1
  2541     0285  083E               	movf	sprintf@fval^(0+128),w
  2542     0286  00F0               	movwf	___flneg@f1
  2543     0287  160A  158A  20EF  120A  118A  	fcall	___flneg
  2544     028C  0873               	movf	?___flneg+3,w
  2545     028D  1683               	bsf	3,5	;RP0=1, select bank1
  2546     028E  1303               	bcf	3,6	;RP1=0, select bank1
  2547     028F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2548     0290  0872               	movf	?___flneg+2,w
  2549     0291  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2550     0292  0871               	movf	?___flneg+1,w
  2551     0293  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2552     0294  0870               	movf	?___flneg,w
  2553     0295  00BE               	movwf	sprintf@fval^(0+128)
  2554     0296                     l3728:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2557     0296  3003               	movlw	3
  2558     0297  04AF               	iorwf	sprintf@flag^(0+128),f
  2559     0298  3000               	movlw	0
  2560     0299  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2561     029A                     l3730:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2564     029A  1683               	bsf	3,5	;RP0=1, select bank1
  2565     029B  1303               	bcf	3,6	;RP1=0, select bank1
  2566     029C  01B5               	clrf	sprintf@eexp^(0+128)
  2567     029D  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2568     029E                     l3732:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2571     029E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2572     029F  00F3               	movwf	___fleq@ff1+3
  2573     02A0  0840               	movf	(sprintf@fval+2)^(0+128),w
  2574     02A1  00F2               	movwf	___fleq@ff1+2
  2575     02A2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2576     02A3  00F1               	movwf	___fleq@ff1+1
  2577     02A4  083E               	movf	sprintf@fval^(0+128),w
  2578     02A5  00F0               	movwf	___fleq@ff1
  2579     02A6  3000               	movlw	0
  2580     02A7  00F7               	movwf	___fleq@ff2+3
  2581     02A8  3000               	movlw	0
  2582     02A9  00F6               	movwf	___fleq@ff2+2
  2583     02AA  3000               	movlw	0
  2584     02AB  00F5               	movwf	___fleq@ff2+1
  2585     02AC  3000               	movlw	0
  2586     02AD  00F4               	movwf	___fleq@ff2
  2587     02AE  160A  158A  22F6  120A  118A  	fcall	___fleq
  2588     02B3  1803               	btfsc	3,0
  2589     02B4  2AB6               	goto	u6001
  2590     02B5  2AB7               	goto	u6000
  2591     02B6                     u6001:
  2592     02B6  2BA7               	goto	l3758
  2593     02B7                     u6000:
  2594     02B7                     l3734:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2597     02B7  1003               	clrc
  2598     02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2599     02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2600     02BA  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2601     02BB  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2602     02BC  3E82               	addlw	130
  2603     02BD  00B5               	movwf	sprintf@eexp^(0+128)
  2604     02BE  30FF               	movlw	255
  2605     02BF  1803               	skipnc
  2606     02C0  3000               	movlw	0
  2607     02C1  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2608     02C2                     l3736:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2611     02C2  30FF               	movlw	255
  2612     02C3  07B5               	addwf	sprintf@eexp^(0+128),f
  2613     02C4  1803               	skipnc
  2614     02C5  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2615     02C6  30FF               	movlw	255
  2616     02C7  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2617     02C8                     l3738:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2620     02C8  3003               	movlw	3
  2621     02C9  00F0               	movwf	___wmul@multiplier
  2622     02CA  3000               	movlw	0
  2623     02CB  00F1               	movwf	___wmul@multiplier+1
  2624     02CC  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2625     02CD  00F3               	movwf	___wmul@multiplicand+1
  2626     02CE  0835               	movf	sprintf@eexp^(0+128),w
  2627     02CF  00F2               	movwf	___wmul@multiplicand
  2628     02D0  160A  158A  21A4  120A  118A  	fcall	___wmul
  2629     02D5  0871               	movf	?___wmul+1,w
  2630     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2631     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2632     02D8  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2633     02D9  0870               	movf	?___wmul,w
  2634     02DA  00B5               	movwf	sprintf@eexp^(0+128)
  2635     02DB                     l3740:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2638     02DB  300A               	movlw	10
  2639     02DC  00F7               	movwf	___awdiv@divisor
  2640     02DD  3000               	movlw	0
  2641     02DE  00F8               	movwf	___awdiv@divisor+1
  2642     02DF  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2643     02E0  00FA               	movwf	___awdiv@dividend+1
  2644     02E1  0835               	movf	sprintf@eexp^(0+128),w
  2645     02E2  00F9               	movwf	___awdiv@dividend
  2646     02E3  160A  158A  25C4  120A  118A  	fcall	___awdiv
  2647     02E8  0878               	movf	?___awdiv+1,w
  2648     02E9  1683               	bsf	3,5	;RP0=1, select bank1
  2649     02EA  1303               	bcf	3,6	;RP1=0, select bank1
  2650     02EB  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2651     02EC  0877               	movf	?___awdiv,w
  2652     02ED  00B5               	movwf	sprintf@eexp^(0+128)
  2653     02EE                     l3742:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2656     02EE  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2657     02EF  2AF1               	goto	u6011
  2658     02F0  2AF2               	goto	u6010
  2659     02F1                     u6011:
  2660     02F1  2AF8               	goto	l3746
  2661     02F2                     u6010:
  2662     02F2                     l3744:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2665     02F2  30FF               	movlw	255
  2666     02F3  07B5               	addwf	sprintf@eexp^(0+128),f
  2667     02F4  1803               	skipnc
  2668     02F5  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2669     02F6  30FF               	movlw	255
  2670     02F7  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2671     02F8                     l3746:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2674     02F8  0335               	decf	sprintf@eexp^(0+128),w
  2675     02F9  3AFF               	xorlw	255
  2676     02FA  120A  158A  24A1  120A  118A  	fcall	_scale
  2677     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2678     0300  1303               	bcf	3,6	;RP1=0, select bank0
  2679     0301  0841               	movf	?_scale+3,w
  2680     0302  1683               	bsf	3,5	;RP0=1, select bank1
  2681     0303  1303               	bcf	3,6	;RP1=0, select bank1
  2682     0304  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2683     0305  1283               	bcf	3,5	;RP0=0, select bank0
  2684     0306  1303               	bcf	3,6	;RP1=0, select bank0
  2685     0307  0840               	movf	?_scale+2,w
  2686     0308  1683               	bsf	3,5	;RP0=1, select bank1
  2687     0309  1303               	bcf	3,6	;RP1=0, select bank1
  2688     030A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2689     030B  1283               	bcf	3,5	;RP0=0, select bank0
  2690     030C  1303               	bcf	3,6	;RP1=0, select bank0
  2691     030D  083F               	movf	?_scale+1,w
  2692     030E  1683               	bsf	3,5	;RP0=1, select bank1
  2693     030F  1303               	bcf	3,6	;RP1=0, select bank1
  2694     0310  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2695     0311  1283               	bcf	3,5	;RP0=0, select bank0
  2696     0312  1303               	bcf	3,6	;RP1=0, select bank0
  2697     0313  083E               	movf	?_scale,w
  2698     0314  1683               	bsf	3,5	;RP0=1, select bank1
  2699     0315  1303               	bcf	3,6	;RP1=0, select bank1
  2700     0316  00B7               	movwf	sprintf@tmpval^(0+128)
  2701     0317                     l3748:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2704     0317  0841               	movf	(sprintf@fval+3)^(0+128),w
  2705     0318  1283               	bcf	3,5	;RP0=0, select bank0
  2706     0319  1303               	bcf	3,6	;RP1=0, select bank0
  2707     031A  00A7               	movwf	___flmul@b+3
  2708     031B  1683               	bsf	3,5	;RP0=1, select bank1
  2709     031C  1303               	bcf	3,6	;RP1=0, select bank1
  2710     031D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2711     031E  1283               	bcf	3,5	;RP0=0, select bank0
  2712     031F  1303               	bcf	3,6	;RP1=0, select bank0
  2713     0320  00A6               	movwf	___flmul@b+2
  2714     0321  1683               	bsf	3,5	;RP0=1, select bank1
  2715     0322  1303               	bcf	3,6	;RP1=0, select bank1
  2716     0323  083F               	movf	(sprintf@fval+1)^(0+128),w
  2717     0324  1283               	bcf	3,5	;RP0=0, select bank0
  2718     0325  1303               	bcf	3,6	;RP1=0, select bank0
  2719     0326  00A5               	movwf	___flmul@b+1
  2720     0327  1683               	bsf	3,5	;RP0=1, select bank1
  2721     0328  1303               	bcf	3,6	;RP1=0, select bank1
  2722     0329  083E               	movf	sprintf@fval^(0+128),w
  2723     032A  1283               	bcf	3,5	;RP0=0, select bank0
  2724     032B  1303               	bcf	3,6	;RP1=0, select bank0
  2725     032C  00A4               	movwf	___flmul@b
  2726     032D  1683               	bsf	3,5	;RP0=1, select bank1
  2727     032E  1303               	bcf	3,6	;RP1=0, select bank1
  2728     032F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2729     0330  1283               	bcf	3,5	;RP0=0, select bank0
  2730     0331  1303               	bcf	3,6	;RP1=0, select bank0
  2731     0332  00AB               	movwf	___flmul@a+3
  2732     0333  1683               	bsf	3,5	;RP0=1, select bank1
  2733     0334  1303               	bcf	3,6	;RP1=0, select bank1
  2734     0335  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2735     0336  1283               	bcf	3,5	;RP0=0, select bank0
  2736     0337  1303               	bcf	3,6	;RP1=0, select bank0
  2737     0338  00AA               	movwf	___flmul@a+2
  2738     0339  1683               	bsf	3,5	;RP0=1, select bank1
  2739     033A  1303               	bcf	3,6	;RP1=0, select bank1
  2740     033B  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2741     033C  1283               	bcf	3,5	;RP0=0, select bank0
  2742     033D  1303               	bcf	3,6	;RP1=0, select bank0
  2743     033E  00A9               	movwf	___flmul@a+1
  2744     033F  1683               	bsf	3,5	;RP0=1, select bank1
  2745     0340  1303               	bcf	3,6	;RP1=0, select bank1
  2746     0341  0837               	movf	sprintf@tmpval^(0+128),w
  2747     0342  1283               	bcf	3,5	;RP0=0, select bank0
  2748     0343  1303               	bcf	3,6	;RP1=0, select bank0
  2749     0344  00A8               	movwf	___flmul@a
  2750     0345  120A  158A  215C  120A  118A  	fcall	___flmul
  2751     034A  1283               	bcf	3,5	;RP0=0, select bank0
  2752     034B  1303               	bcf	3,6	;RP1=0, select bank0
  2753     034C  0827               	movf	?___flmul+3,w
  2754     034D  1683               	bsf	3,5	;RP0=1, select bank1
  2755     034E  1303               	bcf	3,6	;RP1=0, select bank1
  2756     034F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2757     0350  1283               	bcf	3,5	;RP0=0, select bank0
  2758     0351  1303               	bcf	3,6	;RP1=0, select bank0
  2759     0352  0826               	movf	?___flmul+2,w
  2760     0353  1683               	bsf	3,5	;RP0=1, select bank1
  2761     0354  1303               	bcf	3,6	;RP1=0, select bank1
  2762     0355  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2763     0356  1283               	bcf	3,5	;RP0=0, select bank0
  2764     0357  1303               	bcf	3,6	;RP1=0, select bank0
  2765     0358  0825               	movf	?___flmul+1,w
  2766     0359  1683               	bsf	3,5	;RP0=1, select bank1
  2767     035A  1303               	bcf	3,6	;RP1=0, select bank1
  2768     035B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2769     035C  1283               	bcf	3,5	;RP0=0, select bank0
  2770     035D  1303               	bcf	3,6	;RP1=0, select bank0
  2771     035E  0824               	movf	?___flmul,w
  2772     035F  1683               	bsf	3,5	;RP0=1, select bank1
  2773     0360  1303               	bcf	3,6	;RP1=0, select bank1
  2774     0361  00B7               	movwf	sprintf@tmpval^(0+128)
  2775     0362                     l3750:
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2778     0362  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2779     0363  00F3               	movwf	___flge@ff1+3
  2780     0364  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2781     0365  00F2               	movwf	___flge@ff1+2
  2782     0366  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2783     0367  00F1               	movwf	___flge@ff1+1
  2784     0368  0837               	movf	sprintf@tmpval^(0+128),w
  2785     0369  00F0               	movwf	___flge@ff1
  2786     036A  303F               	movlw	63
  2787     036B  00F7               	movwf	___flge@ff2+3
  2788     036C  3080               	movlw	128
  2789     036D  00F6               	movwf	___flge@ff2+2
  2790     036E  3000               	movlw	0
  2791     036F  00F5               	movwf	___flge@ff2+1
  2792     0370  3000               	movlw	0
  2793     0371  00F4               	movwf	___flge@ff2
  2794     0372  120A  158A  2002  120A  118A  	fcall	___flge
  2795     0377  1803               	btfsc	3,0
  2796     0378  2B7A               	goto	u6021
  2797     0379  2B7B               	goto	u6020
  2798     037A                     u6021:
  2799     037A  2B84               	goto	l3754
  2800     037B                     u6020:
  2801     037B                     l3752:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2804     037B  30FF               	movlw	255
  2805     037C  1683               	bsf	3,5	;RP0=1, select bank1
  2806     037D  1303               	bcf	3,6	;RP1=0, select bank1
  2807     037E  07B5               	addwf	sprintf@eexp^(0+128),f
  2808     037F  1803               	skipnc
  2809     0380  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2810     0381  30FF               	movlw	255
  2811     0382  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2812     0383  2BA7               	goto	l3758
  2813     0384                     l3754:
  2814     0384  1683               	bsf	3,5	;RP0=1, select bank1
  2815     0385  1303               	bcf	3,6	;RP1=0, select bank1
  2816     0386  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2817     0387  00F3               	movwf	___flge@ff1+3
  2818     0388  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2819     0389  00F2               	movwf	___flge@ff1+2
  2820     038A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2821     038B  00F1               	movwf	___flge@ff1+1
  2822     038C  0837               	movf	sprintf@tmpval^(0+128),w
  2823     038D  00F0               	movwf	___flge@ff1
  2824     038E  3041               	movlw	65
  2825     038F  00F7               	movwf	___flge@ff2+3
  2826     0390  3020               	movlw	32
  2827     0391  00F6               	movwf	___flge@ff2+2
  2828     0392  3000               	movlw	0
  2829     0393  00F5               	movwf	___flge@ff2+1
  2830     0394  3000               	movlw	0
  2831     0395  00F4               	movwf	___flge@ff2
  2832     0396  120A  158A  2002  120A  118A  	fcall	___flge
  2833     039B  1C03               	btfss	3,0
  2834     039C  2B9E               	goto	u6031
  2835     039D  2B9F               	goto	u6030
  2836     039E                     u6031:
  2837     039E  2BA7               	goto	l3758
  2838     039F                     u6030:
  2839     039F                     l3756:
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2842     039F  3001               	movlw	1
  2843     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2844     03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2845     03A2  07B5               	addwf	sprintf@eexp^(0+128),f
  2846     03A3  1803               	skipnc
  2847     03A4  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2848     03A5  3000               	movlw	0
  2849     03A6  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2850     03A7                     l3758:
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2853     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2854     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2855     03A9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2856     03AA  3A80               	xorlw	128
  2857     03AB  00FF               	movwf	btemp+1
  2858     03AC  3080               	movlw	128
  2859     03AD  027F               	subwf	btemp+1,w
  2860     03AE  1D03               	skipz
  2861     03AF  2BB2               	goto	u6045
  2862     03B0  300D               	movlw	13
  2863     03B1  023C               	subwf	sprintf@prec^(0+128),w
  2864     03B2                     u6045:
  2865     03B2  1803               	skipnc
  2866     03B3  2BB5               	goto	u6041
  2867     03B4  2BB6               	goto	u6040
  2868     03B5                     u6041:
  2869     03B5  2BFD               	goto	l3762
  2870     03B6                     u6040:
  2871     03B6                     l3760:
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2874     03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2875     03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2876     03B8  083C               	movf	sprintf@prec^(0+128),w
  2877     03B9  160A  118A  2140  120A  118A  	fcall	_fround
  2878     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2879     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2880     03C0  0841               	movf	?_fround+3,w
  2881     03C1  00D5               	movwf	___fladd@b+3
  2882     03C2  0840               	movf	?_fround+2,w
  2883     03C3  00D4               	movwf	___fladd@b+2
  2884     03C4  083F               	movf	?_fround+1,w
  2885     03C5  00D3               	movwf	___fladd@b+1
  2886     03C6  083E               	movf	?_fround,w
  2887     03C7  00D2               	movwf	___fladd@b
  2888     03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2889     03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2890     03CA  0841               	movf	(sprintf@fval+3)^(0+128),w
  2891     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2892     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2893     03CD  00D9               	movwf	___fladd@a+3
  2894     03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2895     03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2896     03D0  0840               	movf	(sprintf@fval+2)^(0+128),w
  2897     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2898     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2899     03D3  00D8               	movwf	___fladd@a+2
  2900     03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2901     03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2902     03D6  083F               	movf	(sprintf@fval+1)^(0+128),w
  2903     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2904     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2905     03D9  00D7               	movwf	___fladd@a+1
  2906     03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2907     03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2908     03DC  083E               	movf	sprintf@fval^(0+128),w
  2909     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2910     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2911     03DF  00D6               	movwf	___fladd@a
  2912     03E0  160A  118A  234B  120A  118A  	fcall	___fladd
  2913     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2914     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2915     03E7  0855               	movf	?___fladd+3,w
  2916     03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2917     03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2918     03EA  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2919     03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2920     03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2921     03ED  0854               	movf	?___fladd+2,w
  2922     03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2923     03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2924     03F0  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2925     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2926     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2927     03F3  0853               	movf	?___fladd+1,w
  2928     03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2929     03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2930     03F6  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2931     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2932     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2933     03F9  0852               	movf	?___fladd,w
  2934     03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2935     03FB  1303               	bcf	3,6	;RP1=0, select bank1
  2936     03FC  00BE               	movwf	sprintf@fval^(0+128)
  2937     03FD                     l3762:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2940     03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2941     03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2942     03FF  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2943     0400  3A80               	xorlw	128
  2944     0401  00FF               	movwf	btemp+1
  2945     0402  3080               	movlw	128
  2946     0403  027F               	subwf	btemp+1,w
  2947     0404  1D03               	skipz
  2948     0405  2C08               	goto	u6055
  2949     0406  300A               	movlw	10
  2950     0407  0235               	subwf	sprintf@eexp^(0+128),w
  2951     0408                     u6055:
  2952     0408  1803               	skipnc
  2953     0409  2C0B               	goto	u6051
  2954     040A  2C0C               	goto	u6050
  2955     040B                     u6051:
  2956     040B  2C5D               	goto	l3770
  2957     040C                     u6050:
  2958     040C                     l3764:
  2959     040C  1683               	bsf	3,5	;RP0=1, select bank1
  2960     040D  1303               	bcf	3,6	;RP1=0, select bank1
  2961     040E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2962     040F  00F3               	movwf	___fleq@ff1+3
  2963     0410  0840               	movf	(sprintf@fval+2)^(0+128),w
  2964     0411  00F2               	movwf	___fleq@ff1+2
  2965     0412  083F               	movf	(sprintf@fval+1)^(0+128),w
  2966     0413  00F1               	movwf	___fleq@ff1+1
  2967     0414  083E               	movf	sprintf@fval^(0+128),w
  2968     0415  00F0               	movwf	___fleq@ff1
  2969     0416  3000               	movlw	0
  2970     0417  00F7               	movwf	___fleq@ff2+3
  2971     0418  3000               	movlw	0
  2972     0419  00F6               	movwf	___fleq@ff2+2
  2973     041A  3000               	movlw	0
  2974     041B  00F5               	movwf	___fleq@ff2+1
  2975     041C  3000               	movlw	0
  2976     041D  00F4               	movwf	___fleq@ff2
  2977     041E  160A  158A  22F6  120A  118A  	fcall	___fleq
  2978     0423  1803               	btfsc	3,0
  2979     0424  2C26               	goto	u6061
  2980     0425  2C27               	goto	u6060
  2981     0426                     u6061:
  2982     0426  2CCF               	goto	l3784
  2983     0427                     u6060:
  2984     0427                     l3766:
  2985     0427  1683               	bsf	3,5	;RP0=1, select bank1
  2986     0428  1303               	bcf	3,6	;RP1=0, select bank1
  2987     0429  0841               	movf	(sprintf@fval+3)^(0+128),w
  2988     042A  1283               	bcf	3,5	;RP0=0, select bank0
  2989     042B  1303               	bcf	3,6	;RP1=0, select bank0
  2990     042C  00D4               	movwf	___fltol@f1+3
  2991     042D  1683               	bsf	3,5	;RP0=1, select bank1
  2992     042E  1303               	bcf	3,6	;RP1=0, select bank1
  2993     042F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2994     0430  1283               	bcf	3,5	;RP0=0, select bank0
  2995     0431  1303               	bcf	3,6	;RP1=0, select bank0
  2996     0432  00D3               	movwf	___fltol@f1+2
  2997     0433  1683               	bsf	3,5	;RP0=1, select bank1
  2998     0434  1303               	bcf	3,6	;RP1=0, select bank1
  2999     0435  083F               	movf	(sprintf@fval+1)^(0+128),w
  3000     0436  1283               	bcf	3,5	;RP0=0, select bank0
  3001     0437  1303               	bcf	3,6	;RP1=0, select bank0
  3002     0438  00D2               	movwf	___fltol@f1+1
  3003     0439  1683               	bsf	3,5	;RP0=1, select bank1
  3004     043A  1303               	bcf	3,6	;RP1=0, select bank1
  3005     043B  083E               	movf	sprintf@fval^(0+128),w
  3006     043C  1283               	bcf	3,5	;RP0=0, select bank0
  3007     043D  1303               	bcf	3,6	;RP1=0, select bank0
  3008     043E  00D1               	movwf	___fltol@f1
  3009     043F  160A  118A  2011  120A  118A  	fcall	___fltol
  3010     0444  1283               	bcf	3,5	;RP0=0, select bank0
  3011     0445  1303               	bcf	3,6	;RP1=0, select bank0
  3012     0446  0854               	movf	?___fltol+3,w
  3013     0447  0453               	iorwf	?___fltol+2,w
  3014     0448  0452               	iorwf	?___fltol+1,w
  3015     0449  0451               	iorwf	?___fltol,w
  3016     044A  1D03               	skipz
  3017     044B  2C4D               	goto	u6071
  3018     044C  2C4E               	goto	u6070
  3019     044D                     u6071:
  3020     044D  2CCF               	goto	l3784
  3021     044E                     u6070:
  3022     044E                     l3768:
  3023     044E  1683               	bsf	3,5	;RP0=1, select bank1
  3024     044F  1303               	bcf	3,6	;RP1=0, select bank1
  3025     0450  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3026     0451  3A80               	xorlw	128
  3027     0452  00FF               	movwf	btemp+1
  3028     0453  3080               	movlw	128
  3029     0454  027F               	subwf	btemp+1,w
  3030     0455  1D03               	skipz
  3031     0456  2C59               	goto	u6085
  3032     0457  3002               	movlw	2
  3033     0458  0235               	subwf	sprintf@eexp^(0+128),w
  3034     0459                     u6085:
  3035     0459  1C03               	skipc
  3036     045A  2C5C               	goto	u6081
  3037     045B  2C5D               	goto	u6080
  3038     045C                     u6081:
  3039     045C  2CCF               	goto	l3784
  3040     045D                     u6080:
  3041     045D                     l3770:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3044     045D  1683               	bsf	3,5	;RP0=1, select bank1
  3045     045E  1303               	bcf	3,6	;RP1=0, select bank1
  3046     045F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3047     0460  00F3               	movwf	___flge@ff1+3
  3048     0461  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3049     0462  00F2               	movwf	___flge@ff1+2
  3050     0463  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3051     0464  00F1               	movwf	___flge@ff1+1
  3052     0465  0837               	movf	sprintf@tmpval^(0+128),w
  3053     0466  00F0               	movwf	___flge@ff1
  3054     0467  3040               	movlw	64
  3055     0468  00F7               	movwf	___flge@ff2+3
  3056     0469  3089               	movlw	137
  3057     046A  00F6               	movwf	___flge@ff2+2
  3058     046B  3070               	movlw	112
  3059     046C  00F5               	movwf	___flge@ff2+1
  3060     046D  305F               	movlw	95
  3061     046E  00F4               	movwf	___flge@ff2
  3062     046F  120A  158A  2002  120A  118A  	fcall	___flge
  3063     0474  1803               	btfsc	3,0
  3064     0475  2C77               	goto	u6091
  3065     0476  2C78               	goto	u6090
  3066     0477                     u6091:
  3067     0477  2C81               	goto	l3774
  3068     0478                     u6090:
  3069     0478                     l3772:
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3072     0478  30F7               	movlw	247
  3073     0479  1683               	bsf	3,5	;RP0=1, select bank1
  3074     047A  1303               	bcf	3,6	;RP1=0, select bank1
  3075     047B  07B5               	addwf	sprintf@eexp^(0+128),f
  3076     047C  1803               	skipnc
  3077     047D  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3078     047E  30FF               	movlw	255
  3079     047F  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3082     0480  2C89               	goto	l3776
  3083     0481                     l3774:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3086     0481  30F8               	movlw	248
  3087     0482  1683               	bsf	3,5	;RP0=1, select bank1
  3088     0483  1303               	bcf	3,6	;RP1=0, select bank1
  3089     0484  07B5               	addwf	sprintf@eexp^(0+128),f
  3090     0485  1803               	skipnc
  3091     0486  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3092     0487  30FF               	movlw	255
  3093     0488  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3094     0489                     l3776:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3097     0489  0835               	movf	sprintf@eexp^(0+128),w
  3098     048A  120A  158A  24A1  120A  118A  	fcall	_scale
  3099     048F  1283               	bcf	3,5	;RP0=0, select bank0
  3100     0490  1303               	bcf	3,6	;RP1=0, select bank0
  3101     0491  0841               	movf	?_scale+3,w
  3102     0492  1683               	bsf	3,5	;RP0=1, select bank1
  3103     0493  1303               	bcf	3,6	;RP1=0, select bank1
  3104     0494  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3105     0495  1283               	bcf	3,5	;RP0=0, select bank0
  3106     0496  1303               	bcf	3,6	;RP1=0, select bank0
  3107     0497  0840               	movf	?_scale+2,w
  3108     0498  1683               	bsf	3,5	;RP0=1, select bank1
  3109     0499  1303               	bcf	3,6	;RP1=0, select bank1
  3110     049A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3111     049B  1283               	bcf	3,5	;RP0=0, select bank0
  3112     049C  1303               	bcf	3,6	;RP1=0, select bank0
  3113     049D  083F               	movf	?_scale+1,w
  3114     049E  1683               	bsf	3,5	;RP0=1, select bank1
  3115     049F  1303               	bcf	3,6	;RP1=0, select bank1
  3116     04A0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3117     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  3118     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  3119     04A3  083E               	movf	?_scale,w
  3120     04A4  1683               	bsf	3,5	;RP0=1, select bank1
  3121     04A5  1303               	bcf	3,6	;RP1=0, select bank1
  3122     04A6  00B7               	movwf	sprintf@tmpval^(0+128)
  3123     04A7                     l3778:
  3124     04A7  0841               	movf	(sprintf@fval+3)^(0+128),w
  3125     04A8  00F3               	movwf	__div_to_l_@f1+3
  3126     04A9  0840               	movf	(sprintf@fval+2)^(0+128),w
  3127     04AA  00F2               	movwf	__div_to_l_@f1+2
  3128     04AB  083F               	movf	(sprintf@fval+1)^(0+128),w
  3129     04AC  00F1               	movwf	__div_to_l_@f1+1
  3130     04AD  083E               	movf	sprintf@fval^(0+128),w
  3131     04AE  00F0               	movwf	__div_to_l_@f1
  3132     04AF  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3133     04B0  00F7               	movwf	__div_to_l_@f2+3
  3134     04B1  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3135     04B2  00F6               	movwf	__div_to_l_@f2+2
  3136     04B3  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3137     04B4  00F5               	movwf	__div_to_l_@f2+1
  3138     04B5  0837               	movf	sprintf@tmpval^(0+128),w
  3139     04B6  00F4               	movwf	__div_to_l_@f2
  3140     04B7  120A  118A  20FB  120A  118A  	fcall	__div_to_l_
  3141     04BC  0873               	movf	?__div_to_l_+3,w
  3142     04BD  1683               	bsf	3,5	;RP0=1, select bank1
  3143     04BE  1303               	bcf	3,6	;RP1=0, select bank1
  3144     04BF  00B4               	movwf	(sprintf@val+3)^(0+128)
  3145     04C0  0872               	movf	?__div_to_l_+2,w
  3146     04C1  00B3               	movwf	(sprintf@val+2)^(0+128)
  3147     04C2  0871               	movf	?__div_to_l_+1,w
  3148     04C3  00B2               	movwf	(sprintf@val+1)^(0+128)
  3149     04C4  0870               	movf	?__div_to_l_,w
  3150     04C5  00B1               	movwf	sprintf@val^(0+128)
  3151     04C6                     l3782:
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3154     04C6  3000               	movlw	0
  3155     04C7  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3156     04C8  3000               	movlw	0
  3157     04C9  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3158     04CA  3000               	movlw	0
  3159     04CB  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3160     04CC  3000               	movlw	0
  3161     04CD  00BE               	movwf	sprintf@fval^(0+128)
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3164     04CE  2D53               	goto	l3790
  3165     04CF                     l3784:
  3166                           
  3167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3168     04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3169     04D0  1303               	bcf	3,6	;RP1=0, select bank1
  3170     04D1  0841               	movf	(sprintf@fval+3)^(0+128),w
  3171     04D2  1283               	bcf	3,5	;RP0=0, select bank0
  3172     04D3  1303               	bcf	3,6	;RP1=0, select bank0
  3173     04D4  00D4               	movwf	___fltol@f1+3
  3174     04D5  1683               	bsf	3,5	;RP0=1, select bank1
  3175     04D6  1303               	bcf	3,6	;RP1=0, select bank1
  3176     04D7  0840               	movf	(sprintf@fval+2)^(0+128),w
  3177     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3178     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3179     04DA  00D3               	movwf	___fltol@f1+2
  3180     04DB  1683               	bsf	3,5	;RP0=1, select bank1
  3181     04DC  1303               	bcf	3,6	;RP1=0, select bank1
  3182     04DD  083F               	movf	(sprintf@fval+1)^(0+128),w
  3183     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3184     04DF  1303               	bcf	3,6	;RP1=0, select bank0
  3185     04E0  00D2               	movwf	___fltol@f1+1
  3186     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3187     04E2  1303               	bcf	3,6	;RP1=0, select bank1
  3188     04E3  083E               	movf	sprintf@fval^(0+128),w
  3189     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3190     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3191     04E6  00D1               	movwf	___fltol@f1
  3192     04E7  160A  118A  2011  120A  118A  	fcall	___fltol
  3193     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3194     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3195     04EE  0854               	movf	?___fltol+3,w
  3196     04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3197     04F0  1303               	bcf	3,6	;RP1=0, select bank1
  3198     04F1  00B4               	movwf	(sprintf@val+3)^(0+128)
  3199     04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3200     04F3  1303               	bcf	3,6	;RP1=0, select bank0
  3201     04F4  0853               	movf	?___fltol+2,w
  3202     04F5  1683               	bsf	3,5	;RP0=1, select bank1
  3203     04F6  1303               	bcf	3,6	;RP1=0, select bank1
  3204     04F7  00B3               	movwf	(sprintf@val+2)^(0+128)
  3205     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3206     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3207     04FA  0852               	movf	?___fltol+1,w
  3208     04FB  1683               	bsf	3,5	;RP0=1, select bank1
  3209     04FC  1303               	bcf	3,6	;RP1=0, select bank1
  3210     04FD  00B2               	movwf	(sprintf@val+1)^(0+128)
  3211     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3212     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3213     0500  0851               	movf	?___fltol,w
  3214     0501  1683               	bsf	3,5	;RP0=1, select bank1
  3215     0502  1303               	bcf	3,6	;RP1=0, select bank1
  3216     0503  00B1               	movwf	sprintf@val^(0+128)
  3217     0504                     l3786:
  3218                           
  3219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3220     0504  0834               	movf	(sprintf@val+3)^(0+128),w
  3221     0505  00F3               	movwf	___xxtofl@val+3
  3222     0506  0833               	movf	(sprintf@val+2)^(0+128),w
  3223     0507  00F2               	movwf	___xxtofl@val+2
  3224     0508  0832               	movf	(sprintf@val+1)^(0+128),w
  3225     0509  00F1               	movwf	___xxtofl@val+1
  3226     050A  0831               	movf	sprintf@val^(0+128),w
  3227     050B  00F0               	movwf	___xxtofl@val
  3228     050C  3000               	movlw	0
  3229     050D  120A  158A  20A4  120A  118A  	fcall	___xxtofl
  3230     0512  0873               	movf	?___xxtofl+3,w
  3231     0513  1283               	bcf	3,5	;RP0=0, select bank0
  3232     0514  1303               	bcf	3,6	;RP1=0, select bank0
  3233     0515  00E9               	movwf	___flsub@a+3
  3234     0516  0872               	movf	?___xxtofl+2,w
  3235     0517  00E8               	movwf	___flsub@a+2
  3236     0518  0871               	movf	?___xxtofl+1,w
  3237     0519  00E7               	movwf	___flsub@a+1
  3238     051A  0870               	movf	?___xxtofl,w
  3239     051B  00E6               	movwf	___flsub@a
  3240     051C  1683               	bsf	3,5	;RP0=1, select bank1
  3241     051D  1303               	bcf	3,6	;RP1=0, select bank1
  3242     051E  0841               	movf	(sprintf@fval+3)^(0+128),w
  3243     051F  1283               	bcf	3,5	;RP0=0, select bank0
  3244     0520  1303               	bcf	3,6	;RP1=0, select bank0
  3245     0521  00ED               	movwf	___flsub@b+3
  3246     0522  1683               	bsf	3,5	;RP0=1, select bank1
  3247     0523  1303               	bcf	3,6	;RP1=0, select bank1
  3248     0524  0840               	movf	(sprintf@fval+2)^(0+128),w
  3249     0525  1283               	bcf	3,5	;RP0=0, select bank0
  3250     0526  1303               	bcf	3,6	;RP1=0, select bank0
  3251     0527  00EC               	movwf	___flsub@b+2
  3252     0528  1683               	bsf	3,5	;RP0=1, select bank1
  3253     0529  1303               	bcf	3,6	;RP1=0, select bank1
  3254     052A  083F               	movf	(sprintf@fval+1)^(0+128),w
  3255     052B  1283               	bcf	3,5	;RP0=0, select bank0
  3256     052C  1303               	bcf	3,6	;RP1=0, select bank0
  3257     052D  00EB               	movwf	___flsub@b+1
  3258     052E  1683               	bsf	3,5	;RP0=1, select bank1
  3259     052F  1303               	bcf	3,6	;RP1=0, select bank1
  3260     0530  083E               	movf	sprintf@fval^(0+128),w
  3261     0531  1283               	bcf	3,5	;RP0=0, select bank0
  3262     0532  1303               	bcf	3,6	;RP1=0, select bank0
  3263     0533  00EA               	movwf	___flsub@b
  3264     0534  160A  158A  2180  120A  118A  	fcall	___flsub
  3265     0539  1283               	bcf	3,5	;RP0=0, select bank0
  3266     053A  1303               	bcf	3,6	;RP1=0, select bank0
  3267     053B  0869               	movf	?___flsub+3,w
  3268     053C  1683               	bsf	3,5	;RP0=1, select bank1
  3269     053D  1303               	bcf	3,6	;RP1=0, select bank1
  3270     053E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3271     053F  1283               	bcf	3,5	;RP0=0, select bank0
  3272     0540  1303               	bcf	3,6	;RP1=0, select bank0
  3273     0541  0868               	movf	?___flsub+2,w
  3274     0542  1683               	bsf	3,5	;RP0=1, select bank1
  3275     0543  1303               	bcf	3,6	;RP1=0, select bank1
  3276     0544  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3277     0545  1283               	bcf	3,5	;RP0=0, select bank0
  3278     0546  1303               	bcf	3,6	;RP1=0, select bank0
  3279     0547  0867               	movf	?___flsub+1,w
  3280     0548  1683               	bsf	3,5	;RP0=1, select bank1
  3281     0549  1303               	bcf	3,6	;RP1=0, select bank1
  3282     054A  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3283     054B  1283               	bcf	3,5	;RP0=0, select bank0
  3284     054C  1303               	bcf	3,6	;RP1=0, select bank0
  3285     054D  0866               	movf	?___flsub,w
  3286     054E  1683               	bsf	3,5	;RP0=1, select bank1
  3287     054F  1303               	bcf	3,6	;RP1=0, select bank1
  3288     0550  00BE               	movwf	sprintf@fval^(0+128)
  3289     0551                     l3788:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3292     0551  01B5               	clrf	sprintf@eexp^(0+128)
  3293     0552  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3294     0553                     l3790:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3297     0553  01C2               	clrf	sprintf@c^(0+128)
  3298     0554  0AC2               	incf	sprintf@c^(0+128),f
  3299     0555                     l3796:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3302     0555  0842               	movf	sprintf@c^(0+128),w
  3303     0556  00A5               	movwf	??_sprintf^(0+128)
  3304     0557  3001               	movlw	1
  3305     0558                     u6105:
  3306     0558  1003               	clrc
  3307     0559  0DA5               	rlf	??_sprintf^(0+128),f
  3308     055A  3EFF               	addlw	-1
  3309     055B  1D03               	skipz
  3310     055C  2D58               	goto	u6105
  3311     055D  1003               	clrc
  3312     055E  0D25               	rlf	??_sprintf^(0+128),w
  3313     055F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3314     0560  0084               	movwf	4
  3315     0561  120A  118A  200D  120A  118A  	fcall	stringdir
  3316     0566  00A6               	movwf	(??_sprintf+1)^(0+128)
  3317     0567  120A  118A  200D  120A  118A  	fcall	stringdir
  3318     056C  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3319     056D  120A  118A  200D  120A  118A  	fcall	stringdir
  3320     0572  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3321     0573  120A  118A  200D  120A  118A  	fcall	stringdir
  3322     0578  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3323     0579  0829               	movf	(??_sprintf+4)^(0+128),w
  3324     057A  0234               	subwf	(sprintf@val+3)^(0+128),w
  3325     057B  1D03               	skipz
  3326     057C  2D87               	goto	u6115
  3327     057D  0828               	movf	(??_sprintf+3)^(0+128),w
  3328     057E  0233               	subwf	(sprintf@val+2)^(0+128),w
  3329     057F  1D03               	skipz
  3330     0580  2D87               	goto	u6115
  3331     0581  0827               	movf	(??_sprintf+2)^(0+128),w
  3332     0582  0232               	subwf	(sprintf@val+1)^(0+128),w
  3333     0583  1D03               	skipz
  3334     0584  2D87               	goto	u6115
  3335     0585  0826               	movf	(??_sprintf+1)^(0+128),w
  3336     0586  0231               	subwf	sprintf@val^(0+128),w
  3337     0587                     u6115:
  3338     0587  1803               	skipnc
  3339     0588  2D8A               	goto	u6111
  3340     0589  2D8B               	goto	u6110
  3341     058A                     u6111:
  3342     058A  2D8C               	goto	l3800
  3343     058B                     u6110:
  3344     058B  2D96               	goto	l3802
  3345     058C                     l3800:
  3346     058C  3001               	movlw	1
  3347     058D  00A5               	movwf	??_sprintf^(0+128)
  3348     058E  0825               	movf	??_sprintf^(0+128),w
  3349     058F  07C2               	addwf	sprintf@c^(0+128),f
  3350     0590  300A               	movlw	10
  3351     0591  0642               	xorwf	sprintf@c^(0+128),w
  3352     0592  1D03               	btfss	3,2
  3353     0593  2D95               	goto	u6121
  3354     0594  2D96               	goto	u6120
  3355     0595                     u6121:
  3356     0595  2D55               	goto	l3796
  3357     0596                     u6120:
  3358     0596                     l3802:
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3361     0596  3003               	movlw	3
  3362     0597  052F               	andwf	sprintf@flag^(0+128),w
  3363     0598  00A5               	movwf	??_sprintf^(0+128)
  3364     0599  3000               	movlw	0
  3365     059A  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3366     059B  00A6               	movwf	(??_sprintf+1)^(0+128)
  3367     059C  0825               	movf	??_sprintf^(0+128),w
  3368     059D  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3369     059E  1903               	btfsc	3,2
  3370     059F  2DA1               	goto	u6131
  3371     05A0  2DA2               	goto	u6130
  3372     05A1                     u6131:
  3373     05A1  2E10               	goto	l408
  3374     05A2                     u6130:
  3375     05A2                     l3804:
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3378     05A2  083B               	movf	sprintf@sp^(0+128),w
  3379     05A3  0084               	movwf	4
  3380     05A4  302D               	movlw	45
  3381     05A5  1383               	bcf	3,7	;select IRP bank0
  3382     05A6  0080               	movwf	0
  3383     05A7                     l3806:
  3384     05A7  3001               	movlw	1
  3385     05A8  00A5               	movwf	??_sprintf^(0+128)
  3386     05A9  0825               	movf	??_sprintf^(0+128),w
  3387     05AA  07BB               	addwf	sprintf@sp^(0+128),f
  3388     05AB  2E10               	goto	l408
  3389     05AC                     l3808:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3392     05AC  0842               	movf	sprintf@c^(0+128),w
  3393     05AD  00A5               	movwf	??_sprintf^(0+128)
  3394     05AE  3001               	movlw	1
  3395     05AF                     u6145:
  3396     05AF  1003               	clrc
  3397     05B0  0DA5               	rlf	??_sprintf^(0+128),f
  3398     05B1  3EFF               	addlw	-1
  3399     05B2  1D03               	skipz
  3400     05B3  2DAF               	goto	u6145
  3401     05B4  1003               	clrc
  3402     05B5  0D25               	rlf	??_sprintf^(0+128),w
  3403     05B6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3404     05B7  0084               	movwf	4
  3405     05B8  120A  118A  200D  120A  118A  	fcall	stringdir
  3406     05BD  00F0               	movwf	___lldiv@divisor
  3407     05BE  120A  118A  200D  120A  118A  	fcall	stringdir
  3408     05C3  00F1               	movwf	___lldiv@divisor+1
  3409     05C4  120A  118A  200D  120A  118A  	fcall	stringdir
  3410     05C9  00F2               	movwf	___lldiv@divisor+2
  3411     05CA  120A  118A  200D  120A  118A  	fcall	stringdir
  3412     05CF  00F3               	movwf	___lldiv@divisor+3
  3413     05D0  0834               	movf	(sprintf@val+3)^(0+128),w
  3414     05D1  00F7               	movwf	___lldiv@dividend+3
  3415     05D2  0833               	movf	(sprintf@val+2)^(0+128),w
  3416     05D3  00F6               	movwf	___lldiv@dividend+2
  3417     05D4  0832               	movf	(sprintf@val+1)^(0+128),w
  3418     05D5  00F5               	movwf	___lldiv@dividend+1
  3419     05D6  0831               	movf	sprintf@val^(0+128),w
  3420     05D7  00F4               	movwf	___lldiv@dividend
  3421     05D8  160A  158A  255E  120A  118A  	fcall	___lldiv
  3422     05DD  0873               	movf	?___lldiv+3,w
  3423     05DE  1683               	bsf	3,5	;RP0=1, select bank1
  3424     05DF  1303               	bcf	3,6	;RP1=0, select bank1
  3425     05E0  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3426     05E1  0872               	movf	?___lldiv+2,w
  3427     05E2  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3428     05E3  0871               	movf	?___lldiv+1,w
  3429     05E4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3430     05E5  0870               	movf	?___lldiv,w
  3431     05E6  00B7               	movwf	sprintf@tmpval^(0+128)
  3432     05E7                     l3810:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3435     05E7  3000               	movlw	0
  3436     05E8  00F3               	movwf	___llmod@divisor+3
  3437     05E9  3000               	movlw	0
  3438     05EA  00F2               	movwf	___llmod@divisor+2
  3439     05EB  3000               	movlw	0
  3440     05EC  00F1               	movwf	___llmod@divisor+1
  3441     05ED  300A               	movlw	10
  3442     05EE  00F0               	movwf	___llmod@divisor
  3443     05EF  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3444     05F0  00F7               	movwf	___llmod@dividend+3
  3445     05F1  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3446     05F2  00F6               	movwf	___llmod@dividend+2
  3447     05F3  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3448     05F4  00F5               	movwf	___llmod@dividend+1
  3449     05F5  0837               	movf	sprintf@tmpval^(0+128),w
  3450     05F6  00F4               	movwf	___llmod@dividend
  3451     05F7  160A  158A  2394  120A  118A  	fcall	___llmod
  3452     05FC  0873               	movf	?___llmod+3,w
  3453     05FD  1683               	bsf	3,5	;RP0=1, select bank1
  3454     05FE  1303               	bcf	3,6	;RP1=0, select bank1
  3455     05FF  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3456     0600  0872               	movf	?___llmod+2,w
  3457     0601  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3458     0602  0871               	movf	?___llmod+1,w
  3459     0603  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3460     0604  0870               	movf	?___llmod,w
  3461     0605  00B7               	movwf	sprintf@tmpval^(0+128)
  3462     0606                     l3812:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3465     0606  083B               	movf	sprintf@sp^(0+128),w
  3466     0607  0084               	movwf	4
  3467     0608  0837               	movf	sprintf@tmpval^(0+128),w
  3468     0609  3E30               	addlw	48
  3469     060A  1383               	bcf	3,7	;select IRP bank0
  3470     060B  0080               	movwf	0
  3471     060C  3001               	movlw	1
  3472     060D  00A5               	movwf	??_sprintf^(0+128)
  3473     060E  0825               	movf	??_sprintf^(0+128),w
  3474     060F  07BB               	addwf	sprintf@sp^(0+128),f
  3475     0610                     l408:	
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  3477                           
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3480     0610  3001               	movlw	1
  3481     0611  02C2               	subwf	sprintf@c^(0+128),f
  3482     0612  0A42               	incf	sprintf@c^(0+128),w
  3483     0613  1D03               	btfss	3,2
  3484     0614  2E16               	goto	u6151
  3485     0615  2E17               	goto	u6150
  3486     0616                     u6151:
  3487     0616  2DAC               	goto	l3808
  3488     0617                     u6150:
  3489     0617  2E29               	goto	l3820
  3490     0618                     l3814:
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3493     0618  1683               	bsf	3,5	;RP0=1, select bank1
  3494     0619  1303               	bcf	3,6	;RP1=0, select bank1
  3495     061A  083B               	movf	sprintf@sp^(0+128),w
  3496     061B  0084               	movwf	4
  3497     061C  3030               	movlw	48
  3498     061D  1383               	bcf	3,7	;select IRP bank0
  3499     061E  0080               	movwf	0
  3500     061F                     l3816:
  3501     061F  3001               	movlw	1
  3502     0620  00A5               	movwf	??_sprintf^(0+128)
  3503     0621  0825               	movf	??_sprintf^(0+128),w
  3504     0622  07BB               	addwf	sprintf@sp^(0+128),f
  3505     0623                     l3818:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3508     0623  30FF               	movlw	255
  3509     0624  07B5               	addwf	sprintf@eexp^(0+128),f
  3510     0625  1803               	skipnc
  3511     0626  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3512     0627  30FF               	movlw	255
  3513     0628  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3514     0629                     l3820:
  3515                           
  3516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3517     0629  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3518     062A  3A80               	xorlw	128
  3519     062B  00FF               	movwf	btemp+1
  3520     062C  3080               	movlw	128
  3521     062D  027F               	subwf	btemp+1,w
  3522     062E  1D03               	skipz
  3523     062F  2E32               	goto	u6165
  3524     0630  3001               	movlw	1
  3525     0631  0235               	subwf	sprintf@eexp^(0+128),w
  3526     0632                     u6165:
  3527     0632  1803               	skipnc
  3528     0633  2E35               	goto	u6161
  3529     0634  2E36               	goto	u6160
  3530     0635                     u6161:
  3531     0635  2E18               	goto	l3814
  3532     0636                     u6160:
  3533     0636                     l3822:
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3536     0636  1683               	bsf	3,5	;RP0=1, select bank1
  3537     0637  1303               	bcf	3,6	;RP1=0, select bank1
  3538     0638  083D               	movf	(sprintf@prec+1)^(0+128),w
  3539     0639  3A80               	xorlw	128
  3540     063A  00FF               	movwf	btemp+1
  3541     063B  3080               	movlw	128
  3542     063C  027F               	subwf	btemp+1,w
  3543     063D  1D03               	skipz
  3544     063E  2E41               	goto	u6175
  3545     063F  3009               	movlw	9
  3546     0640  023C               	subwf	sprintf@prec^(0+128),w
  3547     0641                     u6175:
  3548     0641  1C03               	skipc
  3549     0642  2E44               	goto	u6171
  3550     0643  2E45               	goto	u6170
  3551     0644                     u6171:
  3552     0644  2E4A               	goto	l3826
  3553     0645                     u6170:
  3554     0645                     l3824:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3557     0645  3008               	movlw	8
  3558     0646  1683               	bsf	3,5	;RP0=1, select bank1
  3559     0647  1303               	bcf	3,6	;RP1=0, select bank1
  3560     0648  00C2               	movwf	sprintf@c^(0+128)
  3561     0649  2E4E               	goto	l415
  3562     064A                     l3826:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3565     064A  1683               	bsf	3,5	;RP0=1, select bank1
  3566     064B  1303               	bcf	3,6	;RP1=0, select bank1
  3567     064C  083C               	movf	sprintf@prec^(0+128),w
  3568     064D  00C2               	movwf	sprintf@c^(0+128)
  3569     064E                     l415:
  3570                           
  3571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3572     064E  0842               	movf	sprintf@c^(0+128),w
  3573     064F  00A5               	movwf	??_sprintf^(0+128)
  3574     0650  01A6               	clrf	(??_sprintf^(0+128)+1)
  3575     0651  0825               	movf	??_sprintf^(0+128),w
  3576     0652  02BC               	subwf	sprintf@prec^(0+128),f
  3577     0653  0826               	movf	(??_sprintf+1)^(0+128),w
  3578     0654  1C03               	skipc
  3579     0655  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3580     0656  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3581     0657                     l3828:
  3582                           
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3584     0657  0842               	movf	sprintf@c^(0+128),w
  3585     0658  1903               	btfsc	3,2
  3586     0659  2E5B               	goto	u6181
  3587     065A  2E5C               	goto	u6180
  3588     065B                     u6181:
  3589     065B  2E65               	goto	l3834
  3590     065C                     u6180:
  3591     065C                     l3830:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3594     065C  083B               	movf	sprintf@sp^(0+128),w
  3595     065D  0084               	movwf	4
  3596     065E  302E               	movlw	46
  3597     065F  1383               	bcf	3,7	;select IRP bank0
  3598     0660  0080               	movwf	0
  3599     0661                     l3832:
  3600     0661  3001               	movlw	1
  3601     0662  00A5               	movwf	??_sprintf^(0+128)
  3602     0663  0825               	movf	??_sprintf^(0+128),w
  3603     0664  07BB               	addwf	sprintf@sp^(0+128),f
  3604     0665                     l3834:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3607     0665  0842               	movf	sprintf@c^(0+128),w
  3608     0666  120A  158A  24A1  120A  118A  	fcall	_scale
  3609     066B  1283               	bcf	3,5	;RP0=0, select bank0
  3610     066C  1303               	bcf	3,6	;RP1=0, select bank0
  3611     066D  0841               	movf	?_scale+3,w
  3612     066E  1683               	bsf	3,5	;RP0=1, select bank1
  3613     066F  1303               	bcf	3,6	;RP1=0, select bank1
  3614     0670  00AD               	movwf	(_sprintf$1168+3)^(0+128)
  3615     0671  1283               	bcf	3,5	;RP0=0, select bank0
  3616     0672  1303               	bcf	3,6	;RP1=0, select bank0
  3617     0673  0840               	movf	?_scale+2,w
  3618     0674  1683               	bsf	3,5	;RP0=1, select bank1
  3619     0675  1303               	bcf	3,6	;RP1=0, select bank1
  3620     0676  00AC               	movwf	(_sprintf$1168+2)^(0+128)
  3621     0677  1283               	bcf	3,5	;RP0=0, select bank0
  3622     0678  1303               	bcf	3,6	;RP1=0, select bank0
  3623     0679  083F               	movf	?_scale+1,w
  3624     067A  1683               	bsf	3,5	;RP0=1, select bank1
  3625     067B  1303               	bcf	3,6	;RP1=0, select bank1
  3626     067C  00AB               	movwf	(_sprintf$1168+1)^(0+128)
  3627     067D  1283               	bcf	3,5	;RP0=0, select bank0
  3628     067E  1303               	bcf	3,6	;RP1=0, select bank0
  3629     067F  083E               	movf	?_scale,w
  3630     0680  1683               	bsf	3,5	;RP0=1, select bank1
  3631     0681  1303               	bcf	3,6	;RP1=0, select bank1
  3632     0682  00AA               	movwf	_sprintf$1168^(0+128)
  3633     0683                     l3836:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3636     0683  082D               	movf	(_sprintf$1168+3)^(0+128),w
  3637     0684  1283               	bcf	3,5	;RP0=0, select bank0
  3638     0685  1303               	bcf	3,6	;RP1=0, select bank0
  3639     0686  00AB               	movwf	___flmul@a+3
  3640     0687  1683               	bsf	3,5	;RP0=1, select bank1
  3641     0688  1303               	bcf	3,6	;RP1=0, select bank1
  3642     0689  082C               	movf	(_sprintf$1168+2)^(0+128),w
  3643     068A  1283               	bcf	3,5	;RP0=0, select bank0
  3644     068B  1303               	bcf	3,6	;RP1=0, select bank0
  3645     068C  00AA               	movwf	___flmul@a+2
  3646     068D  1683               	bsf	3,5	;RP0=1, select bank1
  3647     068E  1303               	bcf	3,6	;RP1=0, select bank1
  3648     068F  082B               	movf	(_sprintf$1168+1)^(0+128),w
  3649     0690  1283               	bcf	3,5	;RP0=0, select bank0
  3650     0691  1303               	bcf	3,6	;RP1=0, select bank0
  3651     0692  00A9               	movwf	___flmul@a+1
  3652     0693  1683               	bsf	3,5	;RP0=1, select bank1
  3653     0694  1303               	bcf	3,6	;RP1=0, select bank1
  3654     0695  082A               	movf	_sprintf$1168^(0+128),w
  3655     0696  1283               	bcf	3,5	;RP0=0, select bank0
  3656     0697  1303               	bcf	3,6	;RP1=0, select bank0
  3657     0698  00A8               	movwf	___flmul@a
  3658     0699  1683               	bsf	3,5	;RP0=1, select bank1
  3659     069A  1303               	bcf	3,6	;RP1=0, select bank1
  3660     069B  0841               	movf	(sprintf@fval+3)^(0+128),w
  3661     069C  1283               	bcf	3,5	;RP0=0, select bank0
  3662     069D  1303               	bcf	3,6	;RP1=0, select bank0
  3663     069E  00A7               	movwf	___flmul@b+3
  3664     069F  1683               	bsf	3,5	;RP0=1, select bank1
  3665     06A0  1303               	bcf	3,6	;RP1=0, select bank1
  3666     06A1  0840               	movf	(sprintf@fval+2)^(0+128),w
  3667     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3668     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  3669     06A4  00A6               	movwf	___flmul@b+2
  3670     06A5  1683               	bsf	3,5	;RP0=1, select bank1
  3671     06A6  1303               	bcf	3,6	;RP1=0, select bank1
  3672     06A7  083F               	movf	(sprintf@fval+1)^(0+128),w
  3673     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  3674     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  3675     06AA  00A5               	movwf	___flmul@b+1
  3676     06AB  1683               	bsf	3,5	;RP0=1, select bank1
  3677     06AC  1303               	bcf	3,6	;RP1=0, select bank1
  3678     06AD  083E               	movf	sprintf@fval^(0+128),w
  3679     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3680     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3681     06B0  00A4               	movwf	___flmul@b
  3682     06B1  120A  158A  215C  120A  118A  	fcall	___flmul
  3683     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3684     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3685     06B8  0827               	movf	?___flmul+3,w
  3686     06B9  00D4               	movwf	___fltol@f1+3
  3687     06BA  0826               	movf	?___flmul+2,w
  3688     06BB  00D3               	movwf	___fltol@f1+2
  3689     06BC  0825               	movf	?___flmul+1,w
  3690     06BD  00D2               	movwf	___fltol@f1+1
  3691     06BE  0824               	movf	?___flmul,w
  3692     06BF  00D1               	movwf	___fltol@f1
  3693     06C0  160A  118A  2011  120A  118A  	fcall	___fltol
  3694     06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3695     06C6  1303               	bcf	3,6	;RP1=0, select bank0
  3696     06C7  0854               	movf	?___fltol+3,w
  3697     06C8  1683               	bsf	3,5	;RP0=1, select bank1
  3698     06C9  1303               	bcf	3,6	;RP1=0, select bank1
  3699     06CA  00B4               	movwf	(sprintf@val+3)^(0+128)
  3700     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3701     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3702     06CD  0853               	movf	?___fltol+2,w
  3703     06CE  1683               	bsf	3,5	;RP0=1, select bank1
  3704     06CF  1303               	bcf	3,6	;RP1=0, select bank1
  3705     06D0  00B3               	movwf	(sprintf@val+2)^(0+128)
  3706     06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3707     06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3708     06D3  0852               	movf	?___fltol+1,w
  3709     06D4  1683               	bsf	3,5	;RP0=1, select bank1
  3710     06D5  1303               	bcf	3,6	;RP1=0, select bank1
  3711     06D6  00B2               	movwf	(sprintf@val+1)^(0+128)
  3712     06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3713     06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3714     06D9  0851               	movf	?___fltol,w
  3715     06DA  1683               	bsf	3,5	;RP0=1, select bank1
  3716     06DB  1303               	bcf	3,6	;RP1=0, select bank1
  3717     06DC  00B1               	movwf	sprintf@val^(0+128)
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3720     06DD  2F7D               	goto	l3846
  3721     06DE                     l3838:
  3722                           
  3723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3724     06DE  0842               	movf	sprintf@c^(0+128),w
  3725     06DF  00A5               	movwf	??_sprintf^(0+128)
  3726     06E0  3001               	movlw	1
  3727     06E1                     u6195:
  3728     06E1  1003               	clrc
  3729     06E2  0DA5               	rlf	??_sprintf^(0+128),f
  3730     06E3  3EFF               	addlw	-1
  3731     06E4  1D03               	skipz
  3732     06E5  2EE1               	goto	u6195
  3733     06E6  1003               	clrc
  3734     06E7  0D25               	rlf	??_sprintf^(0+128),w
  3735     06E8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3736     06E9  0084               	movwf	4
  3737     06EA  120A  118A  200D  120A  118A  	fcall	stringdir
  3738     06EF  00F0               	movwf	___lldiv@divisor
  3739     06F0  120A  118A  200D  120A  118A  	fcall	stringdir
  3740     06F5  00F1               	movwf	___lldiv@divisor+1
  3741     06F6  120A  118A  200D  120A  118A  	fcall	stringdir
  3742     06FB  00F2               	movwf	___lldiv@divisor+2
  3743     06FC  120A  118A  200D  120A  118A  	fcall	stringdir
  3744     0701  00F3               	movwf	___lldiv@divisor+3
  3745     0702  0834               	movf	(sprintf@val+3)^(0+128),w
  3746     0703  00F7               	movwf	___lldiv@dividend+3
  3747     0704  0833               	movf	(sprintf@val+2)^(0+128),w
  3748     0705  00F6               	movwf	___lldiv@dividend+2
  3749     0706  0832               	movf	(sprintf@val+1)^(0+128),w
  3750     0707  00F5               	movwf	___lldiv@dividend+1
  3751     0708  0831               	movf	sprintf@val^(0+128),w
  3752     0709  00F4               	movwf	___lldiv@dividend
  3753     070A  160A  158A  255E  120A  118A  	fcall	___lldiv
  3754     070F  0873               	movf	?___lldiv+3,w
  3755     0710  1683               	bsf	3,5	;RP0=1, select bank1
  3756     0711  1303               	bcf	3,6	;RP1=0, select bank1
  3757     0712  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3758     0713  0872               	movf	?___lldiv+2,w
  3759     0714  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3760     0715  0871               	movf	?___lldiv+1,w
  3761     0716  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3762     0717  0870               	movf	?___lldiv,w
  3763     0718  00B7               	movwf	sprintf@tmpval^(0+128)
  3764     0719                     l3840:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3767     0719  3000               	movlw	0
  3768     071A  00F3               	movwf	___llmod@divisor+3
  3769     071B  3000               	movlw	0
  3770     071C  00F2               	movwf	___llmod@divisor+2
  3771     071D  3000               	movlw	0
  3772     071E  00F1               	movwf	___llmod@divisor+1
  3773     071F  300A               	movlw	10
  3774     0720  00F0               	movwf	___llmod@divisor
  3775     0721  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3776     0722  00F7               	movwf	___llmod@dividend+3
  3777     0723  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3778     0724  00F6               	movwf	___llmod@dividend+2
  3779     0725  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3780     0726  00F5               	movwf	___llmod@dividend+1
  3781     0727  0837               	movf	sprintf@tmpval^(0+128),w
  3782     0728  00F4               	movwf	___llmod@dividend
  3783     0729  160A  158A  2394  120A  118A  	fcall	___llmod
  3784     072E  0873               	movf	?___llmod+3,w
  3785     072F  1683               	bsf	3,5	;RP0=1, select bank1
  3786     0730  1303               	bcf	3,6	;RP1=0, select bank1
  3787     0731  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3788     0732  0872               	movf	?___llmod+2,w
  3789     0733  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3790     0734  0871               	movf	?___llmod+1,w
  3791     0735  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3792     0736  0870               	movf	?___llmod,w
  3793     0737  00B7               	movwf	sprintf@tmpval^(0+128)
  3794     0738                     l3842:
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3797     0738  083B               	movf	sprintf@sp^(0+128),w
  3798     0739  0084               	movwf	4
  3799     073A  0837               	movf	sprintf@tmpval^(0+128),w
  3800     073B  3E30               	addlw	48
  3801     073C  1383               	bcf	3,7	;select IRP bank0
  3802     073D  0080               	movwf	0
  3803     073E  3001               	movlw	1
  3804     073F  00A5               	movwf	??_sprintf^(0+128)
  3805     0740  0825               	movf	??_sprintf^(0+128),w
  3806     0741  07BB               	addwf	sprintf@sp^(0+128),f
  3807     0742                     l3844:
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3810     0742  0842               	movf	sprintf@c^(0+128),w
  3811     0743  00A5               	movwf	??_sprintf^(0+128)
  3812     0744  3001               	movlw	1
  3813     0745                     u6205:
  3814     0745  1003               	clrc
  3815     0746  0DA5               	rlf	??_sprintf^(0+128),f
  3816     0747  3EFF               	addlw	-1
  3817     0748  1D03               	skipz
  3818     0749  2F45               	goto	u6205
  3819     074A  1003               	clrc
  3820     074B  0D25               	rlf	??_sprintf^(0+128),w
  3821     074C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3822     074D  0084               	movwf	4
  3823     074E  120A  118A  200D  120A  118A  	fcall	stringdir
  3824     0753  00F0               	movwf	___llmod@divisor
  3825     0754  120A  118A  200D  120A  118A  	fcall	stringdir
  3826     0759  00F1               	movwf	___llmod@divisor+1
  3827     075A  120A  118A  200D  120A  118A  	fcall	stringdir
  3828     075F  00F2               	movwf	___llmod@divisor+2
  3829     0760  120A  118A  200D  120A  118A  	fcall	stringdir
  3830     0765  00F3               	movwf	___llmod@divisor+3
  3831     0766  0834               	movf	(sprintf@val+3)^(0+128),w
  3832     0767  00F7               	movwf	___llmod@dividend+3
  3833     0768  0833               	movf	(sprintf@val+2)^(0+128),w
  3834     0769  00F6               	movwf	___llmod@dividend+2
  3835     076A  0832               	movf	(sprintf@val+1)^(0+128),w
  3836     076B  00F5               	movwf	___llmod@dividend+1
  3837     076C  0831               	movf	sprintf@val^(0+128),w
  3838     076D  00F4               	movwf	___llmod@dividend
  3839     076E  160A  158A  2394  120A  118A  	fcall	___llmod
  3840     0773  0873               	movf	?___llmod+3,w
  3841     0774  1683               	bsf	3,5	;RP0=1, select bank1
  3842     0775  1303               	bcf	3,6	;RP1=0, select bank1
  3843     0776  00B4               	movwf	(sprintf@val+3)^(0+128)
  3844     0777  0872               	movf	?___llmod+2,w
  3845     0778  00B3               	movwf	(sprintf@val+2)^(0+128)
  3846     0779  0871               	movf	?___llmod+1,w
  3847     077A  00B2               	movwf	(sprintf@val+1)^(0+128)
  3848     077B  0870               	movf	?___llmod,w
  3849     077C  00B1               	movwf	sprintf@val^(0+128)
  3850     077D                     l3846:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3853     077D  3001               	movlw	1
  3854     077E  02C2               	subwf	sprintf@c^(0+128),f
  3855     077F  0A42               	incf	sprintf@c^(0+128),w
  3856     0780  1D03               	btfss	3,2
  3857     0781  2F83               	goto	u6211
  3858     0782  2F84               	goto	u6210
  3859     0783                     u6211:
  3860     0783  2EDE               	goto	l3838
  3861     0784                     u6210:
  3862     0784  2F94               	goto	l3854
  3863     0785                     l3848:
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3866     0785  083B               	movf	sprintf@sp^(0+128),w
  3867     0786  0084               	movwf	4
  3868     0787  3030               	movlw	48
  3869     0788  1383               	bcf	3,7	;select IRP bank0
  3870     0789  0080               	movwf	0
  3871     078A                     l3850:
  3872     078A  3001               	movlw	1
  3873     078B  00A5               	movwf	??_sprintf^(0+128)
  3874     078C  0825               	movf	??_sprintf^(0+128),w
  3875     078D  07BB               	addwf	sprintf@sp^(0+128),f
  3876     078E                     l3852:
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3879     078E  30FF               	movlw	255
  3880     078F  07BC               	addwf	sprintf@prec^(0+128),f
  3881     0790  1803               	skipnc
  3882     0791  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3883     0792  30FF               	movlw	255
  3884     0793  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3885     0794                     l3854:
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3888     0794  083C               	movf	sprintf@prec^(0+128),w
  3889     0795  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3890     0796  1D03               	btfss	3,2
  3891     0797  2F99               	goto	u6221
  3892     0798  2F9A               	goto	u6220
  3893     0799                     u6221:
  3894     0799  2F85               	goto	l3848
  3895     079A                     u6220:
  3896     079A  2FDE               	goto	l3874
  3897     079B                     l3856:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3900     079B  083C               	movf	sprintf@prec^(0+128),w
  3901     079C  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3902     079D  1D03               	btfss	3,2
  3903     079E  2FA0               	goto	u6231
  3904     079F  2FA1               	goto	u6230
  3905     07A0                     u6231:
  3906     07A0  2FAF               	goto	l423
  3907     07A1                     u6230:
  3908     07A1                     l3858:
  3909     07A1  0834               	movf	(sprintf@val+3)^(0+128),w
  3910     07A2  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3911     07A3  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3912     07A4  0431               	iorwf	sprintf@val^(0+128),w
  3913     07A5  1D03               	skipz
  3914     07A6  2FA8               	goto	u6241
  3915     07A7  2FA9               	goto	u6240
  3916     07A8                     u6241:
  3917     07A8  2FAF               	goto	l423
  3918     07A9                     u6240:
  3919     07A9                     l3860:
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3922     07A9  3001               	movlw	1
  3923     07AA  07BC               	addwf	sprintf@prec^(0+128),f
  3924     07AB  1803               	skipnc
  3925     07AC  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3926     07AD  3000               	movlw	0
  3927     07AE  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3928     07AF                     l423:
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3931     07AF  083D               	movf	(sprintf@prec+1)^(0+128),w
  3932     07B0  3A80               	xorlw	128
  3933     07B1  3C80               	sublw	128
  3934     07B2  1D03               	skipz
  3935     07B3  2FB6               	goto	u6255
  3936     07B4  083C               	movf	sprintf@prec^(0+128),w
  3937     07B5  0242               	subwf	sprintf@c^(0+128),w
  3938     07B6                     u6255:
  3939     07B6  1803               	skipnc
  3940     07B7  2FB9               	goto	u6251
  3941     07B8  2FBA               	goto	u6250
  3942     07B9                     u6251:
  3943     07B9  2FBB               	goto	l3864
  3944     07BA                     u6250:
  3945     07BA                     l3862:
  3946     07BA  2FCA               	goto	l3868
  3947     07BB                     l3864:
  3948     07BB  1683               	bsf	3,5	;RP0=1, select bank1
  3949     07BC  1303               	bcf	3,6	;RP1=0, select bank1
  3950     07BD  083D               	movf	(sprintf@prec+1)^(0+128),w
  3951     07BE  3A80               	xorlw	128
  3952     07BF  00A5               	movwf	??_sprintf^(0+128)
  3953     07C0  3080               	movlw	128
  3954     07C1  0225               	subwf	??_sprintf^(0+128),w
  3955     07C2  1D03               	skipz
  3956     07C3  2FC6               	goto	u6265
  3957     07C4  0842               	movf	sprintf@c^(0+128),w
  3958     07C5  023C               	subwf	sprintf@prec^(0+128),w
  3959     07C6                     u6265:
  3960     07C6  1803               	skipnc
  3961     07C7  2FC9               	goto	u6261
  3962     07C8  2FCA               	goto	u6260
  3963     07C9                     u6261:
  3964     07C9  2FCA               	goto	l3868
  3965     07CA                     u6260:
  3966     07CA                     l3866:
  3967     07CA                     l3868:
  3968                           
  3969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3970     07CA  3003               	movlw	3
  3971     07CB  1683               	bsf	3,5	;RP0=1, select bank1
  3972     07CC  1303               	bcf	3,6	;RP1=0, select bank1
  3973     07CD  052F               	andwf	sprintf@flag^(0+128),w
  3974     07CE  00A5               	movwf	??_sprintf^(0+128)
  3975     07CF  3000               	movlw	0
  3976     07D0  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3977     07D1  00A6               	movwf	(??_sprintf+1)^(0+128)
  3978     07D2  0825               	movf	??_sprintf^(0+128),w
  3979     07D3  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3980     07D4  1903               	btfsc	3,2
  3981     07D5  2FD7               	goto	u6271
  3982     07D6  2FD8               	goto	u6270
  3983     07D7                     u6271:
  3984     07D7  2FDE               	goto	l3874
  3985     07D8                     u6270:
  3986     07D8                     l3870:
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3989     07D8  083B               	movf	sprintf@sp^(0+128),w
  3990     07D9  0084               	movwf	4
  3991     07DA  302D               	movlw	45
  3992     07DB  1383               	bcf	3,7	;select IRP bank0
  3993     07DC  0080               	movwf	0
  3994     07DD  29C4               	goto	l3686
  3995     07DE                     l3874:
  3996                           
  3997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3998     07DE  3001               	movlw	1
  3999     07DF  07A0               	addwf	sprintf@f^(0+128),f
  4000     07E0  30FF               	movlw	-1
  4001     07E1  0720               	addwf	sprintf@f^(0+128),w
  4002     07E2  0084               	movwf	4
  4003     07E3  120A  118A  200D  120A  118A  	fcall	stringdir
  4004     07E8  00C2               	movwf	sprintf@c^(0+128)
  4005     07E9  0842               	movf	sprintf@c^(0+128),w
  4006     07EA  1D03               	btfss	3,2
  4007     07EB  2FED               	goto	u6281
  4008     07EC  2FEE               	goto	u6280
  4009     07ED                     u6281:
  4010     07ED  29B9               	goto	l3682
  4011     07EE                     u6280:
  4012     07EE                     l3876:
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4015     07EE  083B               	movf	sprintf@sp^(0+128),w
  4016     07EF  0084               	movwf	4
  4017     07F0  1383               	bcf	3,7	;select IRP bank0
  4018     07F1  0180               	clrf	0
  4019     07F2                     l429:
  4020     07F2  0008               	return
  4021     07F3                     __end_of_sprintf:
  4022                           
  4023                           	psect	text2
  4024     0CA1                     __ptext2:	
  4025 ;; *************** function _scale *****************
  4026 ;; Defined at:
  4027 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  scl             1    wreg     char 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  scl             1   48[BANK0 ] char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  4   30[BANK0 ] char 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4041 ;;      Params:         0       4       0       0       0
  4042 ;;      Locals:         0       5       0       0       0
  4043 ;;      Temps:          0      10       0       0       0
  4044 ;;      Totals:         0      19       0       0       0
  4045 ;;Total ram usage:       19 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 2
  4048 ;; This function calls:
  4049 ;;		___awdiv
  4050 ;;		___awmod
  4051 ;;		___flmul
  4052 ;; This function is called by:
  4053 ;;		_sprintf
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057     0CA1                     _scale:	
  4058                           ;psect for function _scale
  4059                           
  4060                           
  4061                           ;incstack = 0
  4062                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4063                           ;scale@scl stored from wreg
  4064     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  4065     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  4066     0CA3  00D0               	movwf	scale@scl
  4067     0CA4                     l3168:
  4068                           
  4069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4070     0CA4  1FD0               	btfss	scale@scl,7
  4071     0CA5  2CA7               	goto	u4691
  4072     0CA6  2CA8               	goto	u4690
  4073     0CA7                     u4691:
  4074     0CA7  2E55               	goto	l3190
  4075     0CA8                     u4690:
  4076     0CA8                     l3170:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4079     0CA8  09D0               	comf	scale@scl,f
  4080     0CA9  0AD0               	incf	scale@scl,f
  4081     0CAA                     l3172:
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4084     0CAA  0850               	movf	scale@scl,w
  4085     0CAB  3A80               	xorlw	128
  4086     0CAC  3E12               	addlw	-238
  4087     0CAD  1C03               	skipc
  4088     0CAE  2CB0               	goto	u4701
  4089     0CAF  2CB1               	goto	u4700
  4090     0CB0                     u4701:
  4091     0CB0  2D99               	goto	l3180
  4092     0CB1                     u4700:
  4093     0CB1                     l3174:
  4094                           
  4095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4096     0CB1  300A               	movlw	10
  4097     0CB2  00F7               	movwf	___awdiv@divisor
  4098     0CB3  3000               	movlw	0
  4099     0CB4  00F8               	movwf	___awdiv@divisor+1
  4100     0CB5  0850               	movf	scale@scl,w
  4101     0CB6  00F2               	movwf	___awmod@dividend
  4102     0CB7  01F3               	clrf	___awmod@dividend+1
  4103     0CB8  1BF2               	btfsc	___awmod@dividend,7
  4104     0CB9  03F3               	decf	___awmod@dividend+1,f
  4105     0CBA  3064               	movlw	100
  4106     0CBB  00F0               	movwf	___awmod@divisor
  4107     0CBC  3000               	movlw	0
  4108     0CBD  00F1               	movwf	___awmod@divisor+1
  4109     0CBE  160A  158A  23E8  120A  158A  	fcall	___awmod
  4110     0CC3  0871               	movf	?___awmod+1,w
  4111     0CC4  00FA               	movwf	___awdiv@dividend+1
  4112     0CC5  0870               	movf	?___awmod,w
  4113     0CC6  00F9               	movwf	___awdiv@dividend
  4114     0CC7  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4115     0CCC  0877               	movf	?___awdiv,w
  4116     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4117     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  4118     0CCF  00C2               	movwf	??_scale
  4119     0CD0  3001               	movlw	1
  4120     0CD1                     u4715:
  4121     0CD1  1003               	clrc
  4122     0CD2  0DC2               	rlf	??_scale,f
  4123     0CD3  3EFF               	addlw	-1
  4124     0CD4  1D03               	skipz
  4125     0CD5  2CD1               	goto	u4715
  4126     0CD6  1003               	clrc
  4127     0CD7  0D42               	rlf	??_scale,w
  4128     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4129     0CD9  0084               	movwf	4
  4130     0CDA  120A  118A  200D  120A  158A  	fcall	stringdir
  4131     0CDF  00C3               	movwf	??_scale+1
  4132     0CE0  120A  118A  200D  120A  158A  	fcall	stringdir
  4133     0CE5  00C4               	movwf	??_scale+2
  4134     0CE6  120A  118A  200D  120A  158A  	fcall	stringdir
  4135     0CEB  00C5               	movwf	??_scale+3
  4136     0CEC  120A  118A  200D  120A  158A  	fcall	stringdir
  4137     0CF1  00C6               	movwf	??_scale+4
  4138     0CF2  0846               	movf	??_scale+4,w
  4139     0CF3  00A7               	movwf	___flmul@b+3
  4140     0CF4  0845               	movf	??_scale+3,w
  4141     0CF5  00A6               	movwf	___flmul@b+2
  4142     0CF6  0844               	movf	??_scale+2,w
  4143     0CF7  00A5               	movwf	___flmul@b+1
  4144     0CF8  0843               	movf	??_scale+1,w
  4145     0CF9  00A4               	movwf	___flmul@b
  4146     0CFA  3064               	movlw	100
  4147     0CFB  00F7               	movwf	___awdiv@divisor
  4148     0CFC  3000               	movlw	0
  4149     0CFD  00F8               	movwf	___awdiv@divisor+1
  4150     0CFE  0850               	movf	scale@scl,w
  4151     0CFF  00F9               	movwf	___awdiv@dividend
  4152     0D00  01FA               	clrf	___awdiv@dividend+1
  4153     0D01  1BF9               	btfsc	___awdiv@dividend,7
  4154     0D02  03FA               	decf	___awdiv@dividend+1,f
  4155     0D03  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4156     0D08  0877               	movf	?___awdiv,w
  4157     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  4158     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  4159     0D0B  00C7               	movwf	??_scale+5
  4160     0D0C  3001               	movlw	1
  4161     0D0D                     u4725:
  4162     0D0D  1003               	clrc
  4163     0D0E  0DC7               	rlf	??_scale+5,f
  4164     0D0F  3EFF               	addlw	-1
  4165     0D10  1D03               	skipz
  4166     0D11  2D0D               	goto	u4725
  4167     0D12  1003               	clrc
  4168     0D13  0D47               	rlf	??_scale+5,w
  4169     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4170     0D15  0084               	movwf	4
  4171     0D16  120A  118A  200D  120A  158A  	fcall	stringdir
  4172     0D1B  00C8               	movwf	??_scale+6
  4173     0D1C  120A  118A  200D  120A  158A  	fcall	stringdir
  4174     0D21  00C9               	movwf	??_scale+7
  4175     0D22  120A  118A  200D  120A  158A  	fcall	stringdir
  4176     0D27  00CA               	movwf	??_scale+8
  4177     0D28  120A  118A  200D  120A  158A  	fcall	stringdir
  4178     0D2D  00CB               	movwf	??_scale+9
  4179     0D2E  084B               	movf	??_scale+9,w
  4180     0D2F  00AB               	movwf	___flmul@a+3
  4181     0D30  084A               	movf	??_scale+8,w
  4182     0D31  00AA               	movwf	___flmul@a+2
  4183     0D32  0849               	movf	??_scale+7,w
  4184     0D33  00A9               	movwf	___flmul@a+1
  4185     0D34  0848               	movf	??_scale+6,w
  4186     0D35  00A8               	movwf	___flmul@a
  4187     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  4188     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4189     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4190     0D3D  0827               	movf	?___flmul+3,w
  4191     0D3E  00CF               	movwf	_scale$1167+3
  4192     0D3F  0826               	movf	?___flmul+2,w
  4193     0D40  00CE               	movwf	_scale$1167+2
  4194     0D41  0825               	movf	?___flmul+1,w
  4195     0D42  00CD               	movwf	_scale$1167+1
  4196     0D43  0824               	movf	?___flmul,w
  4197     0D44  00CC               	movwf	_scale$1167
  4198                           
  4199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4200     0D45  300A               	movlw	10
  4201     0D46  00F0               	movwf	___awmod@divisor
  4202     0D47  3000               	movlw	0
  4203     0D48  00F1               	movwf	___awmod@divisor+1
  4204     0D49  0850               	movf	scale@scl,w
  4205     0D4A  00F2               	movwf	___awmod@dividend
  4206     0D4B  01F3               	clrf	___awmod@dividend+1
  4207     0D4C  1BF2               	btfsc	___awmod@dividend,7
  4208     0D4D  03F3               	decf	___awmod@dividend+1,f
  4209     0D4E  160A  158A  23E8  120A  158A  	fcall	___awmod
  4210     0D53  0870               	movf	?___awmod,w
  4211     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  4212     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  4213     0D56  00C2               	movwf	??_scale
  4214     0D57  3001               	movlw	1
  4215     0D58                     u4735:
  4216     0D58  1003               	clrc
  4217     0D59  0DC2               	rlf	??_scale,f
  4218     0D5A  3EFF               	addlw	-1
  4219     0D5B  1D03               	skipz
  4220     0D5C  2D58               	goto	u4735
  4221     0D5D  1003               	clrc
  4222     0D5E  0D42               	rlf	??_scale,w
  4223     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4224     0D60  0084               	movwf	4
  4225     0D61  120A  118A  200D  120A  158A  	fcall	stringdir
  4226     0D66  00C3               	movwf	??_scale+1
  4227     0D67  120A  118A  200D  120A  158A  	fcall	stringdir
  4228     0D6C  00C4               	movwf	??_scale+2
  4229     0D6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4230     0D72  00C5               	movwf	??_scale+3
  4231     0D73  120A  118A  200D  120A  158A  	fcall	stringdir
  4232     0D78  00C6               	movwf	??_scale+4
  4233     0D79  0846               	movf	??_scale+4,w
  4234     0D7A  00A7               	movwf	___flmul@b+3
  4235     0D7B  0845               	movf	??_scale+3,w
  4236     0D7C  00A6               	movwf	___flmul@b+2
  4237     0D7D  0844               	movf	??_scale+2,w
  4238     0D7E  00A5               	movwf	___flmul@b+1
  4239     0D7F  0843               	movf	??_scale+1,w
  4240     0D80  00A4               	movwf	___flmul@b
  4241     0D81  084F               	movf	_scale$1167+3,w
  4242     0D82  00AB               	movwf	___flmul@a+3
  4243     0D83  084E               	movf	_scale$1167+2,w
  4244     0D84  00AA               	movwf	___flmul@a+2
  4245     0D85  084D               	movf	_scale$1167+1,w
  4246     0D86  00A9               	movwf	___flmul@a+1
  4247     0D87  084C               	movf	_scale$1167,w
  4248     0D88  00A8               	movwf	___flmul@a
  4249     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  4250     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4251     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  4252     0D90  0827               	movf	?___flmul+3,w
  4253     0D91  00C1               	movwf	?_scale+3
  4254     0D92  0826               	movf	?___flmul+2,w
  4255     0D93  00C0               	movwf	?_scale+2
  4256     0D94  0825               	movf	?___flmul+1,w
  4257     0D95  00BF               	movwf	?_scale+1
  4258     0D96  0824               	movf	?___flmul,w
  4259     0D97  00BE               	movwf	?_scale
  4260     0D98  2FFF               	goto	l363
  4261     0D99                     l3180:
  4262     0D99  0850               	movf	scale@scl,w
  4263     0D9A  3A80               	xorlw	128
  4264     0D9B  3E75               	addlw	-139
  4265     0D9C  1C03               	skipc
  4266     0D9D  2D9F               	goto	u4741
  4267     0D9E  2DA0               	goto	u4740
  4268     0D9F                     u4741:
  4269     0D9F  2E28               	goto	l3186
  4270     0DA0                     u4740:
  4271     0DA0                     l3182:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4274     0DA0  300A               	movlw	10
  4275     0DA1  00F0               	movwf	___awmod@divisor
  4276     0DA2  3000               	movlw	0
  4277     0DA3  00F1               	movwf	___awmod@divisor+1
  4278     0DA4  0850               	movf	scale@scl,w
  4279     0DA5  00F2               	movwf	___awmod@dividend
  4280     0DA6  01F3               	clrf	___awmod@dividend+1
  4281     0DA7  1BF2               	btfsc	___awmod@dividend,7
  4282     0DA8  03F3               	decf	___awmod@dividend+1,f
  4283     0DA9  160A  158A  23E8  120A  158A  	fcall	___awmod
  4284     0DAE  0870               	movf	?___awmod,w
  4285     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4286     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4287     0DB1  00C2               	movwf	??_scale
  4288     0DB2  3001               	movlw	1
  4289     0DB3                     u4755:
  4290     0DB3  1003               	clrc
  4291     0DB4  0DC2               	rlf	??_scale,f
  4292     0DB5  3EFF               	addlw	-1
  4293     0DB6  1D03               	skipz
  4294     0DB7  2DB3               	goto	u4755
  4295     0DB8  1003               	clrc
  4296     0DB9  0D42               	rlf	??_scale,w
  4297     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4298     0DBB  0084               	movwf	4
  4299     0DBC  120A  118A  200D  120A  158A  	fcall	stringdir
  4300     0DC1  00C3               	movwf	??_scale+1
  4301     0DC2  120A  118A  200D  120A  158A  	fcall	stringdir
  4302     0DC7  00C4               	movwf	??_scale+2
  4303     0DC8  120A  118A  200D  120A  158A  	fcall	stringdir
  4304     0DCD  00C5               	movwf	??_scale+3
  4305     0DCE  120A  118A  200D  120A  158A  	fcall	stringdir
  4306     0DD3  00C6               	movwf	??_scale+4
  4307     0DD4  0846               	movf	??_scale+4,w
  4308     0DD5  00A7               	movwf	___flmul@b+3
  4309     0DD6  0845               	movf	??_scale+3,w
  4310     0DD7  00A6               	movwf	___flmul@b+2
  4311     0DD8  0844               	movf	??_scale+2,w
  4312     0DD9  00A5               	movwf	___flmul@b+1
  4313     0DDA  0843               	movf	??_scale+1,w
  4314     0DDB  00A4               	movwf	___flmul@b
  4315     0DDC  300A               	movlw	10
  4316     0DDD  00F7               	movwf	___awdiv@divisor
  4317     0DDE  3000               	movlw	0
  4318     0DDF  00F8               	movwf	___awdiv@divisor+1
  4319     0DE0  0850               	movf	scale@scl,w
  4320     0DE1  00F9               	movwf	___awdiv@dividend
  4321     0DE2  01FA               	clrf	___awdiv@dividend+1
  4322     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  4323     0DE4  03FA               	decf	___awdiv@dividend+1,f
  4324     0DE5  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4325     0DEA  0877               	movf	?___awdiv,w
  4326     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  4327     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  4328     0DED  00C7               	movwf	??_scale+5
  4329     0DEE  3001               	movlw	1
  4330     0DEF                     u4765:
  4331     0DEF  1003               	clrc
  4332     0DF0  0DC7               	rlf	??_scale+5,f
  4333     0DF1  3EFF               	addlw	-1
  4334     0DF2  1D03               	skipz
  4335     0DF3  2DEF               	goto	u4765
  4336     0DF4  1003               	clrc
  4337     0DF5  0D47               	rlf	??_scale+5,w
  4338     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4339     0DF7  0084               	movwf	4
  4340     0DF8  120A  118A  200D  120A  158A  	fcall	stringdir
  4341     0DFD  00C8               	movwf	??_scale+6
  4342     0DFE  120A  118A  200D  120A  158A  	fcall	stringdir
  4343     0E03  00C9               	movwf	??_scale+7
  4344     0E04  120A  118A  200D  120A  158A  	fcall	stringdir
  4345     0E09  00CA               	movwf	??_scale+8
  4346     0E0A  120A  118A  200D  120A  158A  	fcall	stringdir
  4347     0E0F  00CB               	movwf	??_scale+9
  4348     0E10  084B               	movf	??_scale+9,w
  4349     0E11  00AB               	movwf	___flmul@a+3
  4350     0E12  084A               	movf	??_scale+8,w
  4351     0E13  00AA               	movwf	___flmul@a+2
  4352     0E14  0849               	movf	??_scale+7,w
  4353     0E15  00A9               	movwf	___flmul@a+1
  4354     0E16  0848               	movf	??_scale+6,w
  4355     0E17  00A8               	movwf	___flmul@a
  4356     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  4357     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4358     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4359     0E1F  0827               	movf	?___flmul+3,w
  4360     0E20  00C1               	movwf	?_scale+3
  4361     0E21  0826               	movf	?___flmul+2,w
  4362     0E22  00C0               	movwf	?_scale+2
  4363     0E23  0825               	movf	?___flmul+1,w
  4364     0E24  00BF               	movwf	?_scale+1
  4365     0E25  0824               	movf	?___flmul,w
  4366     0E26  00BE               	movwf	?_scale
  4367     0E27  2FFF               	goto	l363
  4368     0E28                     l3186:
  4369                           
  4370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4371     0E28  0850               	movf	scale@scl,w
  4372     0E29  00C2               	movwf	??_scale
  4373     0E2A  3001               	movlw	1
  4374     0E2B                     u4775:
  4375     0E2B  1003               	clrc
  4376     0E2C  0DC2               	rlf	??_scale,f
  4377     0E2D  3EFF               	addlw	-1
  4378     0E2E  1D03               	skipz
  4379     0E2F  2E2B               	goto	u4775
  4380     0E30  1003               	clrc
  4381     0E31  0D42               	rlf	??_scale,w
  4382     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4383     0E33  0084               	movwf	4
  4384     0E34  120A  118A  200D  120A  158A  	fcall	stringdir
  4385     0E39  00C3               	movwf	??_scale+1
  4386     0E3A  120A  118A  200D  120A  158A  	fcall	stringdir
  4387     0E3F  00C4               	movwf	??_scale+2
  4388     0E40  120A  118A  200D  120A  158A  	fcall	stringdir
  4389     0E45  00C5               	movwf	??_scale+3
  4390     0E46  120A  118A  200D  120A  158A  	fcall	stringdir
  4391     0E4B  00C6               	movwf	??_scale+4
  4392     0E4C  0846               	movf	??_scale+4,w
  4393     0E4D  00C1               	movwf	?_scale+3
  4394     0E4E  0845               	movf	??_scale+3,w
  4395     0E4F  00C0               	movwf	?_scale+2
  4396     0E50  0844               	movf	??_scale+2,w
  4397     0E51  00BF               	movwf	?_scale+1
  4398     0E52  0843               	movf	??_scale+1,w
  4399     0E53  00BE               	movwf	?_scale
  4400     0E54  2FFF               	goto	l363
  4401     0E55                     l3190:
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4404     0E55  0850               	movf	scale@scl,w
  4405     0E56  3A80               	xorlw	128
  4406     0E57  3E12               	addlw	-238
  4407     0E58  1C03               	skipc
  4408     0E59  2E5B               	goto	u4781
  4409     0E5A  2E5C               	goto	u4780
  4410     0E5B                     u4781:
  4411     0E5B  2F44               	goto	l3198
  4412     0E5C                     u4780:
  4413     0E5C                     l3192:
  4414                           
  4415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4416     0E5C  300A               	movlw	10
  4417     0E5D  00F7               	movwf	___awdiv@divisor
  4418     0E5E  3000               	movlw	0
  4419     0E5F  00F8               	movwf	___awdiv@divisor+1
  4420     0E60  0850               	movf	scale@scl,w
  4421     0E61  00F2               	movwf	___awmod@dividend
  4422     0E62  01F3               	clrf	___awmod@dividend+1
  4423     0E63  1BF2               	btfsc	___awmod@dividend,7
  4424     0E64  03F3               	decf	___awmod@dividend+1,f
  4425     0E65  3064               	movlw	100
  4426     0E66  00F0               	movwf	___awmod@divisor
  4427     0E67  3000               	movlw	0
  4428     0E68  00F1               	movwf	___awmod@divisor+1
  4429     0E69  160A  158A  23E8  120A  158A  	fcall	___awmod
  4430     0E6E  0871               	movf	?___awmod+1,w
  4431     0E6F  00FA               	movwf	___awdiv@dividend+1
  4432     0E70  0870               	movf	?___awmod,w
  4433     0E71  00F9               	movwf	___awdiv@dividend
  4434     0E72  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4435     0E77  0877               	movf	?___awdiv,w
  4436     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4437     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4438     0E7A  00C2               	movwf	??_scale
  4439     0E7B  3001               	movlw	1
  4440     0E7C                     u4795:
  4441     0E7C  1003               	clrc
  4442     0E7D  0DC2               	rlf	??_scale,f
  4443     0E7E  3EFF               	addlw	-1
  4444     0E7F  1D03               	skipz
  4445     0E80  2E7C               	goto	u4795
  4446     0E81  1003               	clrc
  4447     0E82  0D42               	rlf	??_scale,w
  4448     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4449     0E84  0084               	movwf	4
  4450     0E85  120A  118A  200D  120A  158A  	fcall	stringdir
  4451     0E8A  00C3               	movwf	??_scale+1
  4452     0E8B  120A  118A  200D  120A  158A  	fcall	stringdir
  4453     0E90  00C4               	movwf	??_scale+2
  4454     0E91  120A  118A  200D  120A  158A  	fcall	stringdir
  4455     0E96  00C5               	movwf	??_scale+3
  4456     0E97  120A  118A  200D  120A  158A  	fcall	stringdir
  4457     0E9C  00C6               	movwf	??_scale+4
  4458     0E9D  0846               	movf	??_scale+4,w
  4459     0E9E  00A7               	movwf	___flmul@b+3
  4460     0E9F  0845               	movf	??_scale+3,w
  4461     0EA0  00A6               	movwf	___flmul@b+2
  4462     0EA1  0844               	movf	??_scale+2,w
  4463     0EA2  00A5               	movwf	___flmul@b+1
  4464     0EA3  0843               	movf	??_scale+1,w
  4465     0EA4  00A4               	movwf	___flmul@b
  4466     0EA5  3064               	movlw	100
  4467     0EA6  00F7               	movwf	___awdiv@divisor
  4468     0EA7  3000               	movlw	0
  4469     0EA8  00F8               	movwf	___awdiv@divisor+1
  4470     0EA9  0850               	movf	scale@scl,w
  4471     0EAA  00F9               	movwf	___awdiv@dividend
  4472     0EAB  01FA               	clrf	___awdiv@dividend+1
  4473     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  4474     0EAD  03FA               	decf	___awdiv@dividend+1,f
  4475     0EAE  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4476     0EB3  0877               	movf	?___awdiv,w
  4477     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4478     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4479     0EB6  00C7               	movwf	??_scale+5
  4480     0EB7  3001               	movlw	1
  4481     0EB8                     u4805:
  4482     0EB8  1003               	clrc
  4483     0EB9  0DC7               	rlf	??_scale+5,f
  4484     0EBA  3EFF               	addlw	-1
  4485     0EBB  1D03               	skipz
  4486     0EBC  2EB8               	goto	u4805
  4487     0EBD  1003               	clrc
  4488     0EBE  0D47               	rlf	??_scale+5,w
  4489     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4490     0EC0  0084               	movwf	4
  4491     0EC1  120A  118A  200D  120A  158A  	fcall	stringdir
  4492     0EC6  00C8               	movwf	??_scale+6
  4493     0EC7  120A  118A  200D  120A  158A  	fcall	stringdir
  4494     0ECC  00C9               	movwf	??_scale+7
  4495     0ECD  120A  118A  200D  120A  158A  	fcall	stringdir
  4496     0ED2  00CA               	movwf	??_scale+8
  4497     0ED3  120A  118A  200D  120A  158A  	fcall	stringdir
  4498     0ED8  00CB               	movwf	??_scale+9
  4499     0ED9  084B               	movf	??_scale+9,w
  4500     0EDA  00AB               	movwf	___flmul@a+3
  4501     0EDB  084A               	movf	??_scale+8,w
  4502     0EDC  00AA               	movwf	___flmul@a+2
  4503     0EDD  0849               	movf	??_scale+7,w
  4504     0EDE  00A9               	movwf	___flmul@a+1
  4505     0EDF  0848               	movf	??_scale+6,w
  4506     0EE0  00A8               	movwf	___flmul@a
  4507     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  4508     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4509     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4510     0EE8  0827               	movf	?___flmul+3,w
  4511     0EE9  00CF               	movwf	_scale$1167+3
  4512     0EEA  0826               	movf	?___flmul+2,w
  4513     0EEB  00CE               	movwf	_scale$1167+2
  4514     0EEC  0825               	movf	?___flmul+1,w
  4515     0EED  00CD               	movwf	_scale$1167+1
  4516     0EEE  0824               	movf	?___flmul,w
  4517     0EEF  00CC               	movwf	_scale$1167
  4518                           
  4519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4520     0EF0  300A               	movlw	10
  4521     0EF1  00F0               	movwf	___awmod@divisor
  4522     0EF2  3000               	movlw	0
  4523     0EF3  00F1               	movwf	___awmod@divisor+1
  4524     0EF4  0850               	movf	scale@scl,w
  4525     0EF5  00F2               	movwf	___awmod@dividend
  4526     0EF6  01F3               	clrf	___awmod@dividend+1
  4527     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4528     0EF8  03F3               	decf	___awmod@dividend+1,f
  4529     0EF9  160A  158A  23E8  120A  158A  	fcall	___awmod
  4530     0EFE  0870               	movf	?___awmod,w
  4531     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4532     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4533     0F01  00C2               	movwf	??_scale
  4534     0F02  3001               	movlw	1
  4535     0F03                     u4815:
  4536     0F03  1003               	clrc
  4537     0F04  0DC2               	rlf	??_scale,f
  4538     0F05  3EFF               	addlw	-1
  4539     0F06  1D03               	skipz
  4540     0F07  2F03               	goto	u4815
  4541     0F08  1003               	clrc
  4542     0F09  0D42               	rlf	??_scale,w
  4543     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4544     0F0B  0084               	movwf	4
  4545     0F0C  120A  118A  200D  120A  158A  	fcall	stringdir
  4546     0F11  00C3               	movwf	??_scale+1
  4547     0F12  120A  118A  200D  120A  158A  	fcall	stringdir
  4548     0F17  00C4               	movwf	??_scale+2
  4549     0F18  120A  118A  200D  120A  158A  	fcall	stringdir
  4550     0F1D  00C5               	movwf	??_scale+3
  4551     0F1E  120A  118A  200D  120A  158A  	fcall	stringdir
  4552     0F23  00C6               	movwf	??_scale+4
  4553     0F24  0846               	movf	??_scale+4,w
  4554     0F25  00A7               	movwf	___flmul@b+3
  4555     0F26  0845               	movf	??_scale+3,w
  4556     0F27  00A6               	movwf	___flmul@b+2
  4557     0F28  0844               	movf	??_scale+2,w
  4558     0F29  00A5               	movwf	___flmul@b+1
  4559     0F2A  0843               	movf	??_scale+1,w
  4560     0F2B  00A4               	movwf	___flmul@b
  4561     0F2C  084F               	movf	_scale$1167+3,w
  4562     0F2D  00AB               	movwf	___flmul@a+3
  4563     0F2E  084E               	movf	_scale$1167+2,w
  4564     0F2F  00AA               	movwf	___flmul@a+2
  4565     0F30  084D               	movf	_scale$1167+1,w
  4566     0F31  00A9               	movwf	___flmul@a+1
  4567     0F32  084C               	movf	_scale$1167,w
  4568     0F33  00A8               	movwf	___flmul@a
  4569     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4570     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4571     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4572     0F3B  0827               	movf	?___flmul+3,w
  4573     0F3C  00C1               	movwf	?_scale+3
  4574     0F3D  0826               	movf	?___flmul+2,w
  4575     0F3E  00C0               	movwf	?_scale+2
  4576     0F3F  0825               	movf	?___flmul+1,w
  4577     0F40  00BF               	movwf	?_scale+1
  4578     0F41  0824               	movf	?___flmul,w
  4579     0F42  00BE               	movwf	?_scale
  4580     0F43  2FFF               	goto	l363
  4581     0F44                     l3198:
  4582     0F44  0850               	movf	scale@scl,w
  4583     0F45  3A80               	xorlw	128
  4584     0F46  3E75               	addlw	-139
  4585     0F47  1C03               	skipc
  4586     0F48  2F4A               	goto	u4821
  4587     0F49  2F4B               	goto	u4820
  4588     0F4A                     u4821:
  4589     0F4A  2FD3               	goto	l3204
  4590     0F4B                     u4820:
  4591     0F4B                     l3200:
  4592                           
  4593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4594     0F4B  300A               	movlw	10
  4595     0F4C  00F0               	movwf	___awmod@divisor
  4596     0F4D  3000               	movlw	0
  4597     0F4E  00F1               	movwf	___awmod@divisor+1
  4598     0F4F  0850               	movf	scale@scl,w
  4599     0F50  00F2               	movwf	___awmod@dividend
  4600     0F51  01F3               	clrf	___awmod@dividend+1
  4601     0F52  1BF2               	btfsc	___awmod@dividend,7
  4602     0F53  03F3               	decf	___awmod@dividend+1,f
  4603     0F54  160A  158A  23E8  120A  158A  	fcall	___awmod
  4604     0F59  0870               	movf	?___awmod,w
  4605     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4606     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4607     0F5C  00C2               	movwf	??_scale
  4608     0F5D  3001               	movlw	1
  4609     0F5E                     u4835:
  4610     0F5E  1003               	clrc
  4611     0F5F  0DC2               	rlf	??_scale,f
  4612     0F60  3EFF               	addlw	-1
  4613     0F61  1D03               	skipz
  4614     0F62  2F5E               	goto	u4835
  4615     0F63  1003               	clrc
  4616     0F64  0D42               	rlf	??_scale,w
  4617     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4618     0F66  0084               	movwf	4
  4619     0F67  120A  118A  200D  120A  158A  	fcall	stringdir
  4620     0F6C  00C3               	movwf	??_scale+1
  4621     0F6D  120A  118A  200D  120A  158A  	fcall	stringdir
  4622     0F72  00C4               	movwf	??_scale+2
  4623     0F73  120A  118A  200D  120A  158A  	fcall	stringdir
  4624     0F78  00C5               	movwf	??_scale+3
  4625     0F79  120A  118A  200D  120A  158A  	fcall	stringdir
  4626     0F7E  00C6               	movwf	??_scale+4
  4627     0F7F  0846               	movf	??_scale+4,w
  4628     0F80  00A7               	movwf	___flmul@b+3
  4629     0F81  0845               	movf	??_scale+3,w
  4630     0F82  00A6               	movwf	___flmul@b+2
  4631     0F83  0844               	movf	??_scale+2,w
  4632     0F84  00A5               	movwf	___flmul@b+1
  4633     0F85  0843               	movf	??_scale+1,w
  4634     0F86  00A4               	movwf	___flmul@b
  4635     0F87  300A               	movlw	10
  4636     0F88  00F7               	movwf	___awdiv@divisor
  4637     0F89  3000               	movlw	0
  4638     0F8A  00F8               	movwf	___awdiv@divisor+1
  4639     0F8B  0850               	movf	scale@scl,w
  4640     0F8C  00F9               	movwf	___awdiv@dividend
  4641     0F8D  01FA               	clrf	___awdiv@dividend+1
  4642     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  4643     0F8F  03FA               	decf	___awdiv@dividend+1,f
  4644     0F90  160A  158A  25C4  120A  158A  	fcall	___awdiv
  4645     0F95  0877               	movf	?___awdiv,w
  4646     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4647     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4648     0F98  00C7               	movwf	??_scale+5
  4649     0F99  3001               	movlw	1
  4650     0F9A                     u4845:
  4651     0F9A  1003               	clrc
  4652     0F9B  0DC7               	rlf	??_scale+5,f
  4653     0F9C  3EFF               	addlw	-1
  4654     0F9D  1D03               	skipz
  4655     0F9E  2F9A               	goto	u4845
  4656     0F9F  1003               	clrc
  4657     0FA0  0D47               	rlf	??_scale+5,w
  4658     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4659     0FA2  0084               	movwf	4
  4660     0FA3  120A  118A  200D  120A  158A  	fcall	stringdir
  4661     0FA8  00C8               	movwf	??_scale+6
  4662     0FA9  120A  118A  200D  120A  158A  	fcall	stringdir
  4663     0FAE  00C9               	movwf	??_scale+7
  4664     0FAF  120A  118A  200D  120A  158A  	fcall	stringdir
  4665     0FB4  00CA               	movwf	??_scale+8
  4666     0FB5  120A  118A  200D  120A  158A  	fcall	stringdir
  4667     0FBA  00CB               	movwf	??_scale+9
  4668     0FBB  084B               	movf	??_scale+9,w
  4669     0FBC  00AB               	movwf	___flmul@a+3
  4670     0FBD  084A               	movf	??_scale+8,w
  4671     0FBE  00AA               	movwf	___flmul@a+2
  4672     0FBF  0849               	movf	??_scale+7,w
  4673     0FC0  00A9               	movwf	___flmul@a+1
  4674     0FC1  0848               	movf	??_scale+6,w
  4675     0FC2  00A8               	movwf	___flmul@a
  4676     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4677     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4678     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4679     0FCA  0827               	movf	?___flmul+3,w
  4680     0FCB  00C1               	movwf	?_scale+3
  4681     0FCC  0826               	movf	?___flmul+2,w
  4682     0FCD  00C0               	movwf	?_scale+2
  4683     0FCE  0825               	movf	?___flmul+1,w
  4684     0FCF  00BF               	movwf	?_scale+1
  4685     0FD0  0824               	movf	?___flmul,w
  4686     0FD1  00BE               	movwf	?_scale
  4687     0FD2  2FFF               	goto	l363
  4688     0FD3                     l3204:
  4689                           
  4690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4691     0FD3  0850               	movf	scale@scl,w
  4692     0FD4  00C2               	movwf	??_scale
  4693     0FD5  3001               	movlw	1
  4694     0FD6                     u4855:
  4695     0FD6  1003               	clrc
  4696     0FD7  0DC2               	rlf	??_scale,f
  4697     0FD8  3EFF               	addlw	-1
  4698     0FD9  1D03               	skipz
  4699     0FDA  2FD6               	goto	u4855
  4700     0FDB  1003               	clrc
  4701     0FDC  0D42               	rlf	??_scale,w
  4702     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4703     0FDE  0084               	movwf	4
  4704     0FDF  120A  118A  200D  120A  158A  	fcall	stringdir
  4705     0FE4  00C3               	movwf	??_scale+1
  4706     0FE5  120A  118A  200D  120A  158A  	fcall	stringdir
  4707     0FEA  00C4               	movwf	??_scale+2
  4708     0FEB  120A  118A  200D  120A  158A  	fcall	stringdir
  4709     0FF0  00C5               	movwf	??_scale+3
  4710     0FF1  120A  118A  200D  120A  158A  	fcall	stringdir
  4711     0FF6  00C6               	movwf	??_scale+4
  4712     0FF7  0846               	movf	??_scale+4,w
  4713     0FF8  00C1               	movwf	?_scale+3
  4714     0FF9  0845               	movf	??_scale+3,w
  4715     0FFA  00C0               	movwf	?_scale+2
  4716     0FFB  0844               	movf	??_scale+2,w
  4717     0FFC  00BF               	movwf	?_scale+1
  4718     0FFD  0843               	movf	??_scale+1,w
  4719     0FFE  00BE               	movwf	?_scale
  4720     0FFF                     l363:
  4721     0FFF  0008               	return
  4722     1000                     __end_of_scale:
  4723                           
  4724                           	psect	text3
  4725     18FA                     __ptext3:	
  4726 ;; *************** function _isdigit *****************
  4727 ;; Defined at:
  4728 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  c               1    wreg     unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  c               1    1[COMMON] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;		None               void
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         0       0       0       0       0
  4743 ;;      Locals:         2       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0
  4745 ;;      Totals:         2       0       0       0       0
  4746 ;;Total ram usage:        2 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_sprintf
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755     18FA                     _isdigit:	
  4756                           ;psect for function _isdigit
  4757                           
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4761                           ;isdigit@c stored from wreg
  4762     18FA  00F1               	movwf	isdigit@c
  4763     18FB                     l3208:
  4764     18FB  01F0               	clrf	_isdigit$976
  4765     18FC                     l3210:
  4766     18FC  303A               	movlw	58
  4767     18FD  0271               	subwf	isdigit@c,w
  4768     18FE  1803               	skipnc
  4769     18FF  2901               	goto	u4861
  4770     1900  2902               	goto	u4860
  4771     1901                     u4861:
  4772     1901  290A               	goto	l3216
  4773     1902                     u4860:
  4774     1902                     l3212:
  4775     1902  3030               	movlw	48
  4776     1903  0271               	subwf	isdigit@c,w
  4777     1904  1C03               	skipc
  4778     1905  2907               	goto	u4871
  4779     1906  2908               	goto	u4870
  4780     1907                     u4871:
  4781     1907  290A               	goto	l3216
  4782     1908                     u4870:
  4783     1908                     l3214:
  4784     1908  01F0               	clrf	_isdigit$976
  4785     1909  0AF0               	incf	_isdigit$976,f
  4786     190A                     l3216:
  4787     190A  0C70               	rrf	_isdigit$976,w
  4788     190B                     l920:
  4789     190B  0008               	return
  4790     190C                     __end_of_isdigit:
  4791                           
  4792                           	psect	text4
  4793     1140                     __ptext4:	
  4794 ;; *************** function _fround *****************
  4795 ;; Defined at:
  4796 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  prec            1    wreg     unsigned char 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  prec            1   49[BANK0 ] unsigned char 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  4   30[BANK0 ] unsigned char 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4810 ;;      Params:         0       4       0       0       0
  4811 ;;      Locals:         0       9       0       0       0
  4812 ;;      Temps:          0       7       0       0       0
  4813 ;;      Totals:         0      20       0       0       0
  4814 ;;Total ram usage:       20 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; Hardware stack levels required when called: 2
  4817 ;; This function calls:
  4818 ;;		___flmul
  4819 ;;		___lwdiv
  4820 ;;		___lwmod
  4821 ;; This function is called by:
  4822 ;;		_sprintf
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826     1140                     _fround:	
  4827                           ;psect for function _fround
  4828                           
  4829                           
  4830                           ;incstack = 0
  4831                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4832                           ;fround@prec stored from wreg
  4833     1140  1283               	bcf	3,5	;RP0=0, select bank0
  4834     1141  1303               	bcf	3,6	;RP1=0, select bank0
  4835     1142  00D1               	movwf	fround@prec
  4836     1143                     l3150:
  4837                           
  4838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4839     1143  306E               	movlw	110
  4840     1144  0251               	subwf	fround@prec,w
  4841     1145  1C03               	skipc
  4842     1146  2948               	goto	u4611
  4843     1147  2949               	goto	u4610
  4844     1148                     u4611:
  4845     1148  2A56               	goto	l3158
  4846     1149                     u4610:
  4847     1149                     l3152:
  4848                           
  4849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4850     1149  303F               	movlw	63
  4851     114A  00A7               	movwf	___flmul@b+3
  4852     114B  3000               	movlw	0
  4853     114C  00A6               	movwf	___flmul@b+2
  4854     114D  3000               	movlw	0
  4855     114E  00A5               	movwf	___flmul@b+1
  4856     114F  3000               	movlw	0
  4857     1150  00A4               	movwf	___flmul@b
  4858     1151  3064               	movlw	100
  4859     1152  00F6               	movwf	___lwdiv@divisor
  4860     1153  3000               	movlw	0
  4861     1154  00F7               	movwf	___lwdiv@divisor+1
  4862     1155  0851               	movf	fround@prec,w
  4863     1156  00C2               	movwf	??_fround
  4864     1157  01C3               	clrf	??_fround+1
  4865     1158  0842               	movf	??_fround,w
  4866     1159  00F8               	movwf	___lwdiv@dividend
  4867     115A  0843               	movf	??_fround+1,w
  4868     115B  00F9               	movwf	___lwdiv@dividend+1
  4869     115C  160A  158A  226C  160A  118A  	fcall	___lwdiv
  4870     1161  0876               	movf	?___lwdiv,w
  4871     1162  1283               	bcf	3,5	;RP0=0, select bank0
  4872     1163  1303               	bcf	3,6	;RP1=0, select bank0
  4873     1164  00C4               	movwf	??_fround+2
  4874     1165  3001               	movlw	1
  4875     1166                     u4625:
  4876     1166  1003               	clrc
  4877     1167  0DC4               	rlf	??_fround+2,f
  4878     1168  3EFF               	addlw	-1
  4879     1169  1D03               	skipz
  4880     116A  2966               	goto	u4625
  4881     116B  1003               	clrc
  4882     116C  0D44               	rlf	??_fround+2,w
  4883     116D  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4884     116E  0084               	movwf	4
  4885     116F  120A  118A  200D  160A  118A  	fcall	stringdir
  4886     1174  00C5               	movwf	??_fround+3
  4887     1175  120A  118A  200D  160A  118A  	fcall	stringdir
  4888     117A  00C6               	movwf	??_fround+4
  4889     117B  120A  118A  200D  160A  118A  	fcall	stringdir
  4890     1180  00C7               	movwf	??_fround+5
  4891     1181  120A  118A  200D  160A  118A  	fcall	stringdir
  4892     1186  00C8               	movwf	??_fround+6
  4893     1187  0848               	movf	??_fround+6,w
  4894     1188  00AB               	movwf	___flmul@a+3
  4895     1189  0847               	movf	??_fround+5,w
  4896     118A  00AA               	movwf	___flmul@a+2
  4897     118B  0846               	movf	??_fround+4,w
  4898     118C  00A9               	movwf	___flmul@a+1
  4899     118D  0845               	movf	??_fround+3,w
  4900     118E  00A8               	movwf	___flmul@a
  4901     118F  120A  158A  215C  160A  118A  	fcall	___flmul
  4902     1194  1283               	bcf	3,5	;RP0=0, select bank0
  4903     1195  1303               	bcf	3,6	;RP1=0, select bank0
  4904     1196  0827               	movf	?___flmul+3,w
  4905     1197  00D0               	movwf	_fround$1165+3
  4906     1198  0826               	movf	?___flmul+2,w
  4907     1199  00CF               	movwf	_fround$1165+2
  4908     119A  0825               	movf	?___flmul+1,w
  4909     119B  00CE               	movwf	_fround$1165+1
  4910     119C  0824               	movf	?___flmul,w
  4911     119D  00CD               	movwf	_fround$1165
  4912                           
  4913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4914     119E  300A               	movlw	10
  4915     119F  00F6               	movwf	___lwdiv@divisor
  4916     11A0  3000               	movlw	0
  4917     11A1  00F7               	movwf	___lwdiv@divisor+1
  4918     11A2  0851               	movf	fround@prec,w
  4919     11A3  00C2               	movwf	??_fround
  4920     11A4  01C3               	clrf	??_fround+1
  4921     11A5  0842               	movf	??_fround,w
  4922     11A6  00F2               	movwf	___lwmod@dividend
  4923     11A7  0843               	movf	??_fround+1,w
  4924     11A8  00F3               	movwf	___lwmod@dividend+1
  4925     11A9  3064               	movlw	100
  4926     11AA  00F0               	movwf	___lwmod@divisor
  4927     11AB  3000               	movlw	0
  4928     11AC  00F1               	movwf	___lwmod@divisor+1
  4929     11AD  160A  158A  21F0  160A  118A  	fcall	___lwmod
  4930     11B2  0871               	movf	?___lwmod+1,w
  4931     11B3  00F9               	movwf	___lwdiv@dividend+1
  4932     11B4  0870               	movf	?___lwmod,w
  4933     11B5  00F8               	movwf	___lwdiv@dividend
  4934     11B6  160A  158A  226C  160A  118A  	fcall	___lwdiv
  4935     11BB  0876               	movf	?___lwdiv,w
  4936     11BC  1283               	bcf	3,5	;RP0=0, select bank0
  4937     11BD  1303               	bcf	3,6	;RP1=0, select bank0
  4938     11BE  00C4               	movwf	??_fround+2
  4939     11BF  3001               	movlw	1
  4940     11C0                     u4635:
  4941     11C0  1003               	clrc
  4942     11C1  0DC4               	rlf	??_fround+2,f
  4943     11C2  3EFF               	addlw	-1
  4944     11C3  1D03               	skipz
  4945     11C4  29C0               	goto	u4635
  4946     11C5  1003               	clrc
  4947     11C6  0D44               	rlf	??_fround+2,w
  4948     11C7  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4949     11C8  0084               	movwf	4
  4950     11C9  120A  118A  200D  160A  118A  	fcall	stringdir
  4951     11CE  00C5               	movwf	??_fround+3
  4952     11CF  120A  118A  200D  160A  118A  	fcall	stringdir
  4953     11D4  00C6               	movwf	??_fround+4
  4954     11D5  120A  118A  200D  160A  118A  	fcall	stringdir
  4955     11DA  00C7               	movwf	??_fround+5
  4956     11DB  120A  118A  200D  160A  118A  	fcall	stringdir
  4957     11E0  00C8               	movwf	??_fround+6
  4958     11E1  0848               	movf	??_fround+6,w
  4959     11E2  00A7               	movwf	___flmul@b+3
  4960     11E3  0847               	movf	??_fround+5,w
  4961     11E4  00A6               	movwf	___flmul@b+2
  4962     11E5  0846               	movf	??_fround+4,w
  4963     11E6  00A5               	movwf	___flmul@b+1
  4964     11E7  0845               	movf	??_fround+3,w
  4965     11E8  00A4               	movwf	___flmul@b
  4966     11E9  0850               	movf	_fround$1165+3,w
  4967     11EA  00AB               	movwf	___flmul@a+3
  4968     11EB  084F               	movf	_fround$1165+2,w
  4969     11EC  00AA               	movwf	___flmul@a+2
  4970     11ED  084E               	movf	_fround$1165+1,w
  4971     11EE  00A9               	movwf	___flmul@a+1
  4972     11EF  084D               	movf	_fround$1165,w
  4973     11F0  00A8               	movwf	___flmul@a
  4974     11F1  120A  158A  215C  160A  118A  	fcall	___flmul
  4975     11F6  1283               	bcf	3,5	;RP0=0, select bank0
  4976     11F7  1303               	bcf	3,6	;RP1=0, select bank0
  4977     11F8  0827               	movf	?___flmul+3,w
  4978     11F9  00CC               	movwf	_fround$1166+3
  4979     11FA  0826               	movf	?___flmul+2,w
  4980     11FB  00CB               	movwf	_fround$1166+2
  4981     11FC  0825               	movf	?___flmul+1,w
  4982     11FD  00CA               	movwf	_fround$1166+1
  4983     11FE  0824               	movf	?___flmul,w
  4984     11FF  00C9               	movwf	_fround$1166
  4985                           
  4986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4987     1200  300A               	movlw	10
  4988     1201  00F0               	movwf	___lwmod@divisor
  4989     1202  3000               	movlw	0
  4990     1203  00F1               	movwf	___lwmod@divisor+1
  4991     1204  0851               	movf	fround@prec,w
  4992     1205  00C2               	movwf	??_fround
  4993     1206  01C3               	clrf	??_fround+1
  4994     1207  0842               	movf	??_fround,w
  4995     1208  00F2               	movwf	___lwmod@dividend
  4996     1209  0843               	movf	??_fround+1,w
  4997     120A  00F3               	movwf	___lwmod@dividend+1
  4998     120B  160A  158A  21F0  160A  118A  	fcall	___lwmod
  4999     1210  0870               	movf	?___lwmod,w
  5000     1211  1283               	bcf	3,5	;RP0=0, select bank0
  5001     1212  1303               	bcf	3,6	;RP1=0, select bank0
  5002     1213  00C4               	movwf	??_fround+2
  5003     1214  3001               	movlw	1
  5004     1215                     u4645:
  5005     1215  1003               	clrc
  5006     1216  0DC4               	rlf	??_fround+2,f
  5007     1217  3EFF               	addlw	-1
  5008     1218  1D03               	skipz
  5009     1219  2A15               	goto	u4645
  5010     121A  1003               	clrc
  5011     121B  0D44               	rlf	??_fround+2,w
  5012     121C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5013     121D  0084               	movwf	4
  5014     121E  120A  118A  200D  160A  118A  	fcall	stringdir
  5015     1223  00C5               	movwf	??_fround+3
  5016     1224  120A  118A  200D  160A  118A  	fcall	stringdir
  5017     1229  00C6               	movwf	??_fround+4
  5018     122A  120A  118A  200D  160A  118A  	fcall	stringdir
  5019     122F  00C7               	movwf	??_fround+5
  5020     1230  120A  118A  200D  160A  118A  	fcall	stringdir
  5021     1235  00C8               	movwf	??_fround+6
  5022     1236  0848               	movf	??_fround+6,w
  5023     1237  00A7               	movwf	___flmul@b+3
  5024     1238  0847               	movf	??_fround+5,w
  5025     1239  00A6               	movwf	___flmul@b+2
  5026     123A  0846               	movf	??_fround+4,w
  5027     123B  00A5               	movwf	___flmul@b+1
  5028     123C  0845               	movf	??_fround+3,w
  5029     123D  00A4               	movwf	___flmul@b
  5030     123E  084C               	movf	_fround$1166+3,w
  5031     123F  00AB               	movwf	___flmul@a+3
  5032     1240  084B               	movf	_fround$1166+2,w
  5033     1241  00AA               	movwf	___flmul@a+2
  5034     1242  084A               	movf	_fround$1166+1,w
  5035     1243  00A9               	movwf	___flmul@a+1
  5036     1244  0849               	movf	_fround$1166,w
  5037     1245  00A8               	movwf	___flmul@a
  5038     1246  120A  158A  215C  160A  118A  	fcall	___flmul
  5039     124B  1283               	bcf	3,5	;RP0=0, select bank0
  5040     124C  1303               	bcf	3,6	;RP1=0, select bank0
  5041     124D  0827               	movf	?___flmul+3,w
  5042     124E  00C1               	movwf	?_fround+3
  5043     124F  0826               	movf	?___flmul+2,w
  5044     1250  00C0               	movwf	?_fround+2
  5045     1251  0825               	movf	?___flmul+1,w
  5046     1252  00BF               	movwf	?_fround+1
  5047     1253  0824               	movf	?___flmul,w
  5048     1254  00BE               	movwf	?_fround
  5049     1255  2B4A               	goto	l356
  5050     1256                     l3158:
  5051     1256  300B               	movlw	11
  5052     1257  0251               	subwf	fround@prec,w
  5053     1258  1C03               	skipc
  5054     1259  2A5B               	goto	u4651
  5055     125A  2A5C               	goto	u4650
  5056     125B                     u4651:
  5057     125B  2B07               	goto	l3164
  5058     125C                     u4650:
  5059     125C                     l3160:
  5060                           
  5061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5062     125C  303F               	movlw	63
  5063     125D  00A7               	movwf	___flmul@b+3
  5064     125E  3000               	movlw	0
  5065     125F  00A6               	movwf	___flmul@b+2
  5066     1260  3000               	movlw	0
  5067     1261  00A5               	movwf	___flmul@b+1
  5068     1262  3000               	movlw	0
  5069     1263  00A4               	movwf	___flmul@b
  5070     1264  300A               	movlw	10
  5071     1265  00F6               	movwf	___lwdiv@divisor
  5072     1266  3000               	movlw	0
  5073     1267  00F7               	movwf	___lwdiv@divisor+1
  5074     1268  0851               	movf	fround@prec,w
  5075     1269  00C2               	movwf	??_fround
  5076     126A  01C3               	clrf	??_fround+1
  5077     126B  0842               	movf	??_fround,w
  5078     126C  00F8               	movwf	___lwdiv@dividend
  5079     126D  0843               	movf	??_fround+1,w
  5080     126E  00F9               	movwf	___lwdiv@dividend+1
  5081     126F  160A  158A  226C  160A  118A  	fcall	___lwdiv
  5082     1274  0876               	movf	?___lwdiv,w
  5083     1275  1283               	bcf	3,5	;RP0=0, select bank0
  5084     1276  1303               	bcf	3,6	;RP1=0, select bank0
  5085     1277  00C4               	movwf	??_fround+2
  5086     1278  3001               	movlw	1
  5087     1279                     u4665:
  5088     1279  1003               	clrc
  5089     127A  0DC4               	rlf	??_fround+2,f
  5090     127B  3EFF               	addlw	-1
  5091     127C  1D03               	skipz
  5092     127D  2A79               	goto	u4665
  5093     127E  1003               	clrc
  5094     127F  0D44               	rlf	??_fround+2,w
  5095     1280  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5096     1281  0084               	movwf	4
  5097     1282  120A  118A  200D  160A  118A  	fcall	stringdir
  5098     1287  00C5               	movwf	??_fround+3
  5099     1288  120A  118A  200D  160A  118A  	fcall	stringdir
  5100     128D  00C6               	movwf	??_fround+4
  5101     128E  120A  118A  200D  160A  118A  	fcall	stringdir
  5102     1293  00C7               	movwf	??_fround+5
  5103     1294  120A  118A  200D  160A  118A  	fcall	stringdir
  5104     1299  00C8               	movwf	??_fround+6
  5105     129A  0848               	movf	??_fround+6,w
  5106     129B  00AB               	movwf	___flmul@a+3
  5107     129C  0847               	movf	??_fround+5,w
  5108     129D  00AA               	movwf	___flmul@a+2
  5109     129E  0846               	movf	??_fround+4,w
  5110     129F  00A9               	movwf	___flmul@a+1
  5111     12A0  0845               	movf	??_fround+3,w
  5112     12A1  00A8               	movwf	___flmul@a
  5113     12A2  120A  158A  215C  160A  118A  	fcall	___flmul
  5114     12A7  1283               	bcf	3,5	;RP0=0, select bank0
  5115     12A8  1303               	bcf	3,6	;RP1=0, select bank0
  5116     12A9  0827               	movf	?___flmul+3,w
  5117     12AA  00D0               	movwf	_fround$1165+3
  5118     12AB  0826               	movf	?___flmul+2,w
  5119     12AC  00CF               	movwf	_fround$1165+2
  5120     12AD  0825               	movf	?___flmul+1,w
  5121     12AE  00CE               	movwf	_fround$1165+1
  5122     12AF  0824               	movf	?___flmul,w
  5123     12B0  00CD               	movwf	_fround$1165
  5124                           
  5125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5126     12B1  300A               	movlw	10
  5127     12B2  00F0               	movwf	___lwmod@divisor
  5128     12B3  3000               	movlw	0
  5129     12B4  00F1               	movwf	___lwmod@divisor+1
  5130     12B5  0851               	movf	fround@prec,w
  5131     12B6  00C2               	movwf	??_fround
  5132     12B7  01C3               	clrf	??_fround+1
  5133     12B8  0842               	movf	??_fround,w
  5134     12B9  00F2               	movwf	___lwmod@dividend
  5135     12BA  0843               	movf	??_fround+1,w
  5136     12BB  00F3               	movwf	___lwmod@dividend+1
  5137     12BC  160A  158A  21F0  160A  118A  	fcall	___lwmod
  5138     12C1  0870               	movf	?___lwmod,w
  5139     12C2  1283               	bcf	3,5	;RP0=0, select bank0
  5140     12C3  1303               	bcf	3,6	;RP1=0, select bank0
  5141     12C4  00C4               	movwf	??_fround+2
  5142     12C5  3001               	movlw	1
  5143     12C6                     u4675:
  5144     12C6  1003               	clrc
  5145     12C7  0DC4               	rlf	??_fround+2,f
  5146     12C8  3EFF               	addlw	-1
  5147     12C9  1D03               	skipz
  5148     12CA  2AC6               	goto	u4675
  5149     12CB  1003               	clrc
  5150     12CC  0D44               	rlf	??_fround+2,w
  5151     12CD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5152     12CE  0084               	movwf	4
  5153     12CF  120A  118A  200D  160A  118A  	fcall	stringdir
  5154     12D4  00C5               	movwf	??_fround+3
  5155     12D5  120A  118A  200D  160A  118A  	fcall	stringdir
  5156     12DA  00C6               	movwf	??_fround+4
  5157     12DB  120A  118A  200D  160A  118A  	fcall	stringdir
  5158     12E0  00C7               	movwf	??_fround+5
  5159     12E1  120A  118A  200D  160A  118A  	fcall	stringdir
  5160     12E6  00C8               	movwf	??_fround+6
  5161     12E7  0848               	movf	??_fround+6,w
  5162     12E8  00A7               	movwf	___flmul@b+3
  5163     12E9  0847               	movf	??_fround+5,w
  5164     12EA  00A6               	movwf	___flmul@b+2
  5165     12EB  0846               	movf	??_fround+4,w
  5166     12EC  00A5               	movwf	___flmul@b+1
  5167     12ED  0845               	movf	??_fround+3,w
  5168     12EE  00A4               	movwf	___flmul@b
  5169     12EF  0850               	movf	_fround$1165+3,w
  5170     12F0  00AB               	movwf	___flmul@a+3
  5171     12F1  084F               	movf	_fround$1165+2,w
  5172     12F2  00AA               	movwf	___flmul@a+2
  5173     12F3  084E               	movf	_fround$1165+1,w
  5174     12F4  00A9               	movwf	___flmul@a+1
  5175     12F5  084D               	movf	_fround$1165,w
  5176     12F6  00A8               	movwf	___flmul@a
  5177     12F7  120A  158A  215C  160A  118A  	fcall	___flmul
  5178     12FC  1283               	bcf	3,5	;RP0=0, select bank0
  5179     12FD  1303               	bcf	3,6	;RP1=0, select bank0
  5180     12FE  0827               	movf	?___flmul+3,w
  5181     12FF  00C1               	movwf	?_fround+3
  5182     1300  0826               	movf	?___flmul+2,w
  5183     1301  00C0               	movwf	?_fround+2
  5184     1302  0825               	movf	?___flmul+1,w
  5185     1303  00BF               	movwf	?_fround+1
  5186     1304  0824               	movf	?___flmul,w
  5187     1305  00BE               	movwf	?_fround
  5188     1306  2B4A               	goto	l356
  5189     1307                     l3164:
  5190                           
  5191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5192     1307  303F               	movlw	63
  5193     1308  00A7               	movwf	___flmul@b+3
  5194     1309  3000               	movlw	0
  5195     130A  00A6               	movwf	___flmul@b+2
  5196     130B  3000               	movlw	0
  5197     130C  00A5               	movwf	___flmul@b+1
  5198     130D  3000               	movlw	0
  5199     130E  00A4               	movwf	___flmul@b
  5200     130F  0851               	movf	fround@prec,w
  5201     1310  00C2               	movwf	??_fround
  5202     1311  3001               	movlw	1
  5203     1312                     u4685:
  5204     1312  1003               	clrc
  5205     1313  0DC2               	rlf	??_fround,f
  5206     1314  3EFF               	addlw	-1
  5207     1315  1D03               	skipz
  5208     1316  2B12               	goto	u4685
  5209     1317  1003               	clrc
  5210     1318  0D42               	rlf	??_fround,w
  5211     1319  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5212     131A  0084               	movwf	4
  5213     131B  120A  118A  200D  160A  118A  	fcall	stringdir
  5214     1320  00C3               	movwf	??_fround+1
  5215     1321  120A  118A  200D  160A  118A  	fcall	stringdir
  5216     1326  00C4               	movwf	??_fround+2
  5217     1327  120A  118A  200D  160A  118A  	fcall	stringdir
  5218     132C  00C5               	movwf	??_fround+3
  5219     132D  120A  118A  200D  160A  118A  	fcall	stringdir
  5220     1332  00C6               	movwf	??_fround+4
  5221     1333  0846               	movf	??_fround+4,w
  5222     1334  00AB               	movwf	___flmul@a+3
  5223     1335  0845               	movf	??_fround+3,w
  5224     1336  00AA               	movwf	___flmul@a+2
  5225     1337  0844               	movf	??_fround+2,w
  5226     1338  00A9               	movwf	___flmul@a+1
  5227     1339  0843               	movf	??_fround+1,w
  5228     133A  00A8               	movwf	___flmul@a
  5229     133B  120A  158A  215C  160A  118A  	fcall	___flmul
  5230     1340  1283               	bcf	3,5	;RP0=0, select bank0
  5231     1341  1303               	bcf	3,6	;RP1=0, select bank0
  5232     1342  0827               	movf	?___flmul+3,w
  5233     1343  00C1               	movwf	?_fround+3
  5234     1344  0826               	movf	?___flmul+2,w
  5235     1345  00C0               	movwf	?_fround+2
  5236     1346  0825               	movf	?___flmul+1,w
  5237     1347  00BF               	movwf	?_fround+1
  5238     1348  0824               	movf	?___flmul,w
  5239     1349  00BE               	movwf	?_fround
  5240     134A                     l356:
  5241     134A  0008               	return
  5242     134B                     __end_of_fround:
  5243                           
  5244                           	psect	text5
  5245     095C                     __ptext5:	
  5246 ;; *************** function ___flmul *****************
  5247 ;; Defined at:
  5248 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  b               4    4[BANK0 ] unsigned char 
  5251 ;;  a               4    8[BANK0 ] unsigned char 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  prod            4   24[BANK0 ] struct .
  5254 ;;  grs             4   18[BANK0 ] unsigned long 
  5255 ;;  temp            2   28[BANK0 ] struct .
  5256 ;;  bexp            1   23[BANK0 ] unsigned char 
  5257 ;;  aexp            1   22[BANK0 ] unsigned char 
  5258 ;;  sign            1   17[BANK0 ] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  4    4[BANK0 ] unsigned char 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5268 ;;      Params:         0       8       0       0       0
  5269 ;;      Locals:         0      13       0       0       0
  5270 ;;      Temps:          0       5       0       0       0
  5271 ;;      Totals:         0      26       0       0       0
  5272 ;;Total ram usage:       26 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 1
  5275 ;; This function calls:
  5276 ;;		__Umul8_16
  5277 ;; This function is called by:
  5278 ;;		_main
  5279 ;;		_fround
  5280 ;;		_scale
  5281 ;;		_sprintf
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285     095C                     ___flmul:	
  5286                           ;psect for function ___flmul
  5287                           
  5288     095C                     l2968:	
  5289                           ;incstack = 0
  5290                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5291                           
  5292     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5293     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5294     095E  0827               	movf	___flmul@b+3,w
  5295     095F  3980               	andlw	128
  5296     0960  00B1               	movwf	___flmul@sign
  5297     0961                     l2970:
  5298     0961  0827               	movf	___flmul@b+3,w
  5299     0962  00AC               	movwf	??___flmul
  5300     0963  072C               	addwf	??___flmul,w
  5301     0964  00B7               	movwf	___flmul@bexp
  5302     0965                     l2972:
  5303     0965  1FA6               	btfss	___flmul@b+2,7
  5304     0966  2968               	goto	u4211
  5305     0967  2969               	goto	u4210
  5306     0968                     u4211:
  5307     0968  296A               	goto	l2976
  5308     0969                     u4210:
  5309     0969                     l2974:
  5310     0969  1437               	bsf	___flmul@bexp,0
  5311     096A                     l2976:
  5312     096A  0837               	movf	___flmul@bexp,w
  5313     096B  1903               	btfsc	3,2
  5314     096C  296E               	goto	u4221
  5315     096D  296F               	goto	u4220
  5316     096E                     u4221:
  5317     096E  297E               	goto	l2984
  5318     096F                     u4220:
  5319     096F                     l2978:
  5320     096F  0A37               	incf	___flmul@bexp,w
  5321     0970  1D03               	btfss	3,2
  5322     0971  2973               	goto	u4231
  5323     0972  2974               	goto	u4230
  5324     0973                     u4231:
  5325     0973  297C               	goto	l2982
  5326     0974                     u4230:
  5327     0974                     l2980:
  5328     0974  3000               	movlw	0
  5329     0975  00A7               	movwf	___flmul@b+3
  5330     0976  3000               	movlw	0
  5331     0977  00A6               	movwf	___flmul@b+2
  5332     0978  3000               	movlw	0
  5333     0979  00A5               	movwf	___flmul@b+1
  5334     097A  3000               	movlw	0
  5335     097B  00A4               	movwf	___flmul@b
  5336     097C                     l2982:
  5337     097C  17A6               	bsf	___flmul@b+2,7
  5338     097D  2986               	goto	l2986
  5339     097E                     l2984:
  5340     097E  3000               	movlw	0
  5341     097F  00A7               	movwf	___flmul@b+3
  5342     0980  3000               	movlw	0
  5343     0981  00A6               	movwf	___flmul@b+2
  5344     0982  3000               	movlw	0
  5345     0983  00A5               	movwf	___flmul@b+1
  5346     0984  3000               	movlw	0
  5347     0985  00A4               	movwf	___flmul@b
  5348     0986                     l2986:
  5349     0986  082B               	movf	___flmul@a+3,w
  5350     0987  3980               	andlw	128
  5351     0988  00AC               	movwf	??___flmul
  5352     0989  082C               	movf	??___flmul,w
  5353     098A  06B1               	xorwf	___flmul@sign,f
  5354     098B                     l2988:
  5355     098B  082B               	movf	___flmul@a+3,w
  5356     098C  00AC               	movwf	??___flmul
  5357     098D  072C               	addwf	??___flmul,w
  5358     098E  00B6               	movwf	___flmul@aexp
  5359     098F                     l2990:
  5360     098F  1FAA               	btfss	___flmul@a+2,7
  5361     0990  2992               	goto	u4241
  5362     0991  2993               	goto	u4240
  5363     0992                     u4241:
  5364     0992  2994               	goto	l2994
  5365     0993                     u4240:
  5366     0993                     l2992:
  5367     0993  1436               	bsf	___flmul@aexp,0
  5368     0994                     l2994:
  5369     0994  0836               	movf	___flmul@aexp,w
  5370     0995  1903               	btfsc	3,2
  5371     0996  2998               	goto	u4251
  5372     0997  2999               	goto	u4250
  5373     0998                     u4251:
  5374     0998  29A8               	goto	l3002
  5375     0999                     u4250:
  5376     0999                     l2996:
  5377     0999  0A36               	incf	___flmul@aexp,w
  5378     099A  1D03               	btfss	3,2
  5379     099B  299D               	goto	u4261
  5380     099C  299E               	goto	u4260
  5381     099D                     u4261:
  5382     099D  29A6               	goto	l3000
  5383     099E                     u4260:
  5384     099E                     l2998:
  5385     099E  3000               	movlw	0
  5386     099F  00AB               	movwf	___flmul@a+3
  5387     09A0  3000               	movlw	0
  5388     09A1  00AA               	movwf	___flmul@a+2
  5389     09A2  3000               	movlw	0
  5390     09A3  00A9               	movwf	___flmul@a+1
  5391     09A4  3000               	movlw	0
  5392     09A5  00A8               	movwf	___flmul@a
  5393     09A6                     l3000:
  5394     09A6  17AA               	bsf	___flmul@a+2,7
  5395     09A7  29B0               	goto	l3004
  5396     09A8                     l3002:
  5397     09A8  3000               	movlw	0
  5398     09A9  00AB               	movwf	___flmul@a+3
  5399     09AA  3000               	movlw	0
  5400     09AB  00AA               	movwf	___flmul@a+2
  5401     09AC  3000               	movlw	0
  5402     09AD  00A9               	movwf	___flmul@a+1
  5403     09AE  3000               	movlw	0
  5404     09AF  00A8               	movwf	___flmul@a
  5405     09B0                     l3004:
  5406     09B0  0836               	movf	___flmul@aexp,w
  5407     09B1  1903               	btfsc	3,2
  5408     09B2  29B4               	goto	u4271
  5409     09B3  29B5               	goto	u4270
  5410     09B4                     u4271:
  5411     09B4  29BA               	goto	l3008
  5412     09B5                     u4270:
  5413     09B5                     l3006:
  5414     09B5  0837               	movf	___flmul@bexp,w
  5415     09B6  1D03               	btfss	3,2
  5416     09B7  29B9               	goto	u4281
  5417     09B8  29BA               	goto	u4280
  5418     09B9                     u4281:
  5419     09B9  29C3               	goto	l3012
  5420     09BA                     u4280:
  5421     09BA                     l3008:
  5422     09BA  3000               	movlw	0
  5423     09BB  00A7               	movwf	?___flmul+3
  5424     09BC  3000               	movlw	0
  5425     09BD  00A6               	movwf	?___flmul+2
  5426     09BE  3000               	movlw	0
  5427     09BF  00A5               	movwf	?___flmul+1
  5428     09C0  3000               	movlw	0
  5429     09C1  00A4               	movwf	?___flmul
  5430     09C2  2CA0               	goto	l856
  5431     09C3                     l3012:
  5432     09C3  0824               	movf	___flmul@b,w
  5433     09C4  00F0               	movwf	__Umul8_16@multiplicand
  5434     09C5  082A               	movf	___flmul@a+2,w
  5435     09C6  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5436     09CB  0871               	movf	?__Umul8_16+1,w
  5437     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5438     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5439     09CE  00BD               	movwf	___flmul@temp+1
  5440     09CF  0870               	movf	?__Umul8_16,w
  5441     09D0  00BC               	movwf	___flmul@temp
  5442     09D1                     l3014:
  5443     09D1  083C               	movf	___flmul@temp,w
  5444     09D2  00AC               	movwf	??___flmul
  5445     09D3  01AD               	clrf	??___flmul+1
  5446     09D4  01AE               	clrf	??___flmul+2
  5447     09D5  01AF               	clrf	??___flmul+3
  5448     09D6  082F               	movf	??___flmul+3,w
  5449     09D7  00B5               	movwf	___flmul@grs+3
  5450     09D8  082E               	movf	??___flmul+2,w
  5451     09D9  00B4               	movwf	___flmul@grs+2
  5452     09DA  082D               	movf	??___flmul+1,w
  5453     09DB  00B3               	movwf	___flmul@grs+1
  5454     09DC  082C               	movf	??___flmul,w
  5455     09DD  00B2               	movwf	___flmul@grs
  5456     09DE                     l3016:
  5457     09DE  083D               	movf	___flmul@temp+1,w
  5458     09DF  00AC               	movwf	??___flmul
  5459     09E0  01AD               	clrf	??___flmul+1
  5460     09E1  01AE               	clrf	??___flmul+2
  5461     09E2  01AF               	clrf	??___flmul+3
  5462     09E3  082F               	movf	??___flmul+3,w
  5463     09E4  00BB               	movwf	___flmul@prod+3
  5464     09E5  082E               	movf	??___flmul+2,w
  5465     09E6  00BA               	movwf	___flmul@prod+2
  5466     09E7  082D               	movf	??___flmul+1,w
  5467     09E8  00B9               	movwf	___flmul@prod+1
  5468     09E9  082C               	movf	??___flmul,w
  5469     09EA  00B8               	movwf	___flmul@prod
  5470     09EB  0825               	movf	___flmul@b+1,w
  5471     09EC  00F0               	movwf	__Umul8_16@multiplicand
  5472     09ED  0829               	movf	___flmul@a+1,w
  5473     09EE  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5474     09F3  0871               	movf	?__Umul8_16+1,w
  5475     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5476     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5477     09F6  00BD               	movwf	___flmul@temp+1
  5478     09F7  0870               	movf	?__Umul8_16,w
  5479     09F8  00BC               	movwf	___flmul@temp
  5480     09F9                     l3018:
  5481     09F9  083C               	movf	___flmul@temp,w
  5482     09FA  00AC               	movwf	??___flmul
  5483     09FB  01AD               	clrf	??___flmul+1
  5484     09FC  01AE               	clrf	??___flmul+2
  5485     09FD  01AF               	clrf	??___flmul+3
  5486     09FE  082C               	movf	??___flmul,w
  5487     09FF  07B2               	addwf	___flmul@grs,f
  5488     0A00  082D               	movf	??___flmul+1,w
  5489     0A01  1103               	clrz
  5490     0A02  1803               	skipnc
  5491     0A03  3E01               	addlw	1
  5492     0A04  1903               	skipnz
  5493     0A05  2A07               	goto	u4291
  5494     0A06  07B3               	addwf	___flmul@grs+1,f
  5495     0A07                     u4291:
  5496     0A07  082E               	movf	??___flmul+2,w
  5497     0A08  1103               	clrz
  5498     0A09  1803               	skipnc
  5499     0A0A  3E01               	addlw	1
  5500     0A0B  1903               	skipnz
  5501     0A0C  2A0E               	goto	u4292
  5502     0A0D  07B4               	addwf	___flmul@grs+2,f
  5503     0A0E                     u4292:
  5504     0A0E  082F               	movf	??___flmul+3,w
  5505     0A0F  1103               	clrz
  5506     0A10  1803               	skipnc
  5507     0A11  3E01               	addlw	1
  5508     0A12  1903               	skipnz
  5509     0A13  2A15               	goto	u4293
  5510     0A14  07B5               	addwf	___flmul@grs+3,f
  5511     0A15                     u4293:
  5512     0A15                     l3020:
  5513     0A15  083D               	movf	___flmul@temp+1,w
  5514     0A16  00AC               	movwf	??___flmul
  5515     0A17  01AD               	clrf	??___flmul+1
  5516     0A18  01AE               	clrf	??___flmul+2
  5517     0A19  01AF               	clrf	??___flmul+3
  5518     0A1A  082C               	movf	??___flmul,w
  5519     0A1B  07B8               	addwf	___flmul@prod,f
  5520     0A1C  082D               	movf	??___flmul+1,w
  5521     0A1D  1103               	clrz
  5522     0A1E  1803               	skipnc
  5523     0A1F  3E01               	addlw	1
  5524     0A20  1903               	skipnz
  5525     0A21  2A23               	goto	u4301
  5526     0A22  07B9               	addwf	___flmul@prod+1,f
  5527     0A23                     u4301:
  5528     0A23  082E               	movf	??___flmul+2,w
  5529     0A24  1103               	clrz
  5530     0A25  1803               	skipnc
  5531     0A26  3E01               	addlw	1
  5532     0A27  1903               	skipnz
  5533     0A28  2A2A               	goto	u4302
  5534     0A29  07BA               	addwf	___flmul@prod+2,f
  5535     0A2A                     u4302:
  5536     0A2A  082F               	movf	??___flmul+3,w
  5537     0A2B  1103               	clrz
  5538     0A2C  1803               	skipnc
  5539     0A2D  3E01               	addlw	1
  5540     0A2E  1903               	skipnz
  5541     0A2F  2A31               	goto	u4303
  5542     0A30  07BB               	addwf	___flmul@prod+3,f
  5543     0A31                     u4303:
  5544     0A31  0826               	movf	___flmul@b+2,w
  5545     0A32  00F0               	movwf	__Umul8_16@multiplicand
  5546     0A33  0828               	movf	___flmul@a,w
  5547     0A34  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5548     0A39  0871               	movf	?__Umul8_16+1,w
  5549     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  5550     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  5551     0A3C  00BD               	movwf	___flmul@temp+1
  5552     0A3D  0870               	movf	?__Umul8_16,w
  5553     0A3E  00BC               	movwf	___flmul@temp
  5554     0A3F                     l3022:
  5555     0A3F  083C               	movf	___flmul@temp,w
  5556     0A40  00AC               	movwf	??___flmul
  5557     0A41  01AD               	clrf	??___flmul+1
  5558     0A42  01AE               	clrf	??___flmul+2
  5559     0A43  01AF               	clrf	??___flmul+3
  5560     0A44  082C               	movf	??___flmul,w
  5561     0A45  07B2               	addwf	___flmul@grs,f
  5562     0A46  082D               	movf	??___flmul+1,w
  5563     0A47  1103               	clrz
  5564     0A48  1803               	skipnc
  5565     0A49  3E01               	addlw	1
  5566     0A4A  1903               	skipnz
  5567     0A4B  2A4D               	goto	u4311
  5568     0A4C  07B3               	addwf	___flmul@grs+1,f
  5569     0A4D                     u4311:
  5570     0A4D  082E               	movf	??___flmul+2,w
  5571     0A4E  1103               	clrz
  5572     0A4F  1803               	skipnc
  5573     0A50  3E01               	addlw	1
  5574     0A51  1903               	skipnz
  5575     0A52  2A54               	goto	u4312
  5576     0A53  07B4               	addwf	___flmul@grs+2,f
  5577     0A54                     u4312:
  5578     0A54  082F               	movf	??___flmul+3,w
  5579     0A55  1103               	clrz
  5580     0A56  1803               	skipnc
  5581     0A57  3E01               	addlw	1
  5582     0A58  1903               	skipnz
  5583     0A59  2A5B               	goto	u4313
  5584     0A5A  07B5               	addwf	___flmul@grs+3,f
  5585     0A5B                     u4313:
  5586     0A5B                     l3024:
  5587     0A5B  083D               	movf	___flmul@temp+1,w
  5588     0A5C  00AC               	movwf	??___flmul
  5589     0A5D  01AD               	clrf	??___flmul+1
  5590     0A5E  01AE               	clrf	??___flmul+2
  5591     0A5F  01AF               	clrf	??___flmul+3
  5592     0A60  082C               	movf	??___flmul,w
  5593     0A61  07B8               	addwf	___flmul@prod,f
  5594     0A62  082D               	movf	??___flmul+1,w
  5595     0A63  1103               	clrz
  5596     0A64  1803               	skipnc
  5597     0A65  3E01               	addlw	1
  5598     0A66  1903               	skipnz
  5599     0A67  2A69               	goto	u4321
  5600     0A68  07B9               	addwf	___flmul@prod+1,f
  5601     0A69                     u4321:
  5602     0A69  082E               	movf	??___flmul+2,w
  5603     0A6A  1103               	clrz
  5604     0A6B  1803               	skipnc
  5605     0A6C  3E01               	addlw	1
  5606     0A6D  1903               	skipnz
  5607     0A6E  2A70               	goto	u4322
  5608     0A6F  07BA               	addwf	___flmul@prod+2,f
  5609     0A70                     u4322:
  5610     0A70  082F               	movf	??___flmul+3,w
  5611     0A71  1103               	clrz
  5612     0A72  1803               	skipnc
  5613     0A73  3E01               	addlw	1
  5614     0A74  1903               	skipnz
  5615     0A75  2A77               	goto	u4323
  5616     0A76  07BB               	addwf	___flmul@prod+3,f
  5617     0A77                     u4323:
  5618     0A77                     l3026:
  5619     0A77  3008               	movlw	8
  5620     0A78  00AC               	movwf	??___flmul
  5621     0A79                     u4335:
  5622     0A79  1003               	clrc
  5623     0A7A  0DB2               	rlf	___flmul@grs,f
  5624     0A7B  0DB3               	rlf	___flmul@grs+1,f
  5625     0A7C  0DB4               	rlf	___flmul@grs+2,f
  5626     0A7D  0DB5               	rlf	___flmul@grs+3,f
  5627     0A7E  0BAC               	decfsz	??___flmul,f
  5628     0A7F  2A79               	goto	u4335
  5629     0A80                     l3028:
  5630     0A80  0825               	movf	___flmul@b+1,w
  5631     0A81  00F0               	movwf	__Umul8_16@multiplicand
  5632     0A82  0828               	movf	___flmul@a,w
  5633     0A83  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5634     0A88  0871               	movf	?__Umul8_16+1,w
  5635     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5636     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5637     0A8B  00BD               	movwf	___flmul@temp+1
  5638     0A8C  0870               	movf	?__Umul8_16,w
  5639     0A8D  00BC               	movwf	___flmul@temp
  5640     0A8E                     l3030:
  5641     0A8E  083C               	movf	___flmul@temp,w
  5642     0A8F  00AC               	movwf	??___flmul
  5643     0A90  083D               	movf	___flmul@temp+1,w
  5644     0A91  00AD               	movwf	??___flmul+1
  5645     0A92  01AE               	clrf	??___flmul+2
  5646     0A93  01AF               	clrf	??___flmul+3
  5647     0A94  082C               	movf	??___flmul,w
  5648     0A95  07B2               	addwf	___flmul@grs,f
  5649     0A96  082D               	movf	??___flmul+1,w
  5650     0A97  1103               	clrz
  5651     0A98  1803               	skipnc
  5652     0A99  3E01               	addlw	1
  5653     0A9A  1903               	skipnz
  5654     0A9B  2A9D               	goto	u4341
  5655     0A9C  07B3               	addwf	___flmul@grs+1,f
  5656     0A9D                     u4341:
  5657     0A9D  082E               	movf	??___flmul+2,w
  5658     0A9E  1103               	clrz
  5659     0A9F  1803               	skipnc
  5660     0AA0  3E01               	addlw	1
  5661     0AA1  1903               	skipnz
  5662     0AA2  2AA4               	goto	u4342
  5663     0AA3  07B4               	addwf	___flmul@grs+2,f
  5664     0AA4                     u4342:
  5665     0AA4  082F               	movf	??___flmul+3,w
  5666     0AA5  1103               	clrz
  5667     0AA6  1803               	skipnc
  5668     0AA7  3E01               	addlw	1
  5669     0AA8  1903               	skipnz
  5670     0AA9  2AAB               	goto	u4343
  5671     0AAA  07B5               	addwf	___flmul@grs+3,f
  5672     0AAB                     u4343:
  5673     0AAB                     l3032:
  5674     0AAB  0824               	movf	___flmul@b,w
  5675     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  5676     0AAD  0829               	movf	___flmul@a+1,w
  5677     0AAE  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5678     0AB3  0871               	movf	?__Umul8_16+1,w
  5679     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5680     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  5681     0AB6  00BD               	movwf	___flmul@temp+1
  5682     0AB7  0870               	movf	?__Umul8_16,w
  5683     0AB8  00BC               	movwf	___flmul@temp
  5684     0AB9                     l3034:
  5685     0AB9  083C               	movf	___flmul@temp,w
  5686     0ABA  00AC               	movwf	??___flmul
  5687     0ABB  083D               	movf	___flmul@temp+1,w
  5688     0ABC  00AD               	movwf	??___flmul+1
  5689     0ABD  01AE               	clrf	??___flmul+2
  5690     0ABE  01AF               	clrf	??___flmul+3
  5691     0ABF  082C               	movf	??___flmul,w
  5692     0AC0  07B2               	addwf	___flmul@grs,f
  5693     0AC1  082D               	movf	??___flmul+1,w
  5694     0AC2  1103               	clrz
  5695     0AC3  1803               	skipnc
  5696     0AC4  3E01               	addlw	1
  5697     0AC5  1903               	skipnz
  5698     0AC6  2AC8               	goto	u4351
  5699     0AC7  07B3               	addwf	___flmul@grs+1,f
  5700     0AC8                     u4351:
  5701     0AC8  082E               	movf	??___flmul+2,w
  5702     0AC9  1103               	clrz
  5703     0ACA  1803               	skipnc
  5704     0ACB  3E01               	addlw	1
  5705     0ACC  1903               	skipnz
  5706     0ACD  2ACF               	goto	u4352
  5707     0ACE  07B4               	addwf	___flmul@grs+2,f
  5708     0ACF                     u4352:
  5709     0ACF  082F               	movf	??___flmul+3,w
  5710     0AD0  1103               	clrz
  5711     0AD1  1803               	skipnc
  5712     0AD2  3E01               	addlw	1
  5713     0AD3  1903               	skipnz
  5714     0AD4  2AD6               	goto	u4353
  5715     0AD5  07B5               	addwf	___flmul@grs+3,f
  5716     0AD6                     u4353:
  5717     0AD6                     l3036:
  5718     0AD6  3008               	movlw	8
  5719     0AD7  00AC               	movwf	??___flmul
  5720     0AD8                     u4365:
  5721     0AD8  1003               	clrc
  5722     0AD9  0DB2               	rlf	___flmul@grs,f
  5723     0ADA  0DB3               	rlf	___flmul@grs+1,f
  5724     0ADB  0DB4               	rlf	___flmul@grs+2,f
  5725     0ADC  0DB5               	rlf	___flmul@grs+3,f
  5726     0ADD  0BAC               	decfsz	??___flmul,f
  5727     0ADE  2AD8               	goto	u4365
  5728     0ADF  0824               	movf	___flmul@b,w
  5729     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5730     0AE1  0828               	movf	___flmul@a,w
  5731     0AE2  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5732     0AE7  0871               	movf	?__Umul8_16+1,w
  5733     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5734     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5735     0AEA  00BD               	movwf	___flmul@temp+1
  5736     0AEB  0870               	movf	?__Umul8_16,w
  5737     0AEC  00BC               	movwf	___flmul@temp
  5738     0AED                     l3038:
  5739     0AED  083C               	movf	___flmul@temp,w
  5740     0AEE  00AC               	movwf	??___flmul
  5741     0AEF  083D               	movf	___flmul@temp+1,w
  5742     0AF0  00AD               	movwf	??___flmul+1
  5743     0AF1  01AE               	clrf	??___flmul+2
  5744     0AF2  01AF               	clrf	??___flmul+3
  5745     0AF3  082C               	movf	??___flmul,w
  5746     0AF4  07B2               	addwf	___flmul@grs,f
  5747     0AF5  082D               	movf	??___flmul+1,w
  5748     0AF6  1103               	clrz
  5749     0AF7  1803               	skipnc
  5750     0AF8  3E01               	addlw	1
  5751     0AF9  1903               	skipnz
  5752     0AFA  2AFC               	goto	u4371
  5753     0AFB  07B3               	addwf	___flmul@grs+1,f
  5754     0AFC                     u4371:
  5755     0AFC  082E               	movf	??___flmul+2,w
  5756     0AFD  1103               	clrz
  5757     0AFE  1803               	skipnc
  5758     0AFF  3E01               	addlw	1
  5759     0B00  1903               	skipnz
  5760     0B01  2B03               	goto	u4372
  5761     0B02  07B4               	addwf	___flmul@grs+2,f
  5762     0B03                     u4372:
  5763     0B03  082F               	movf	??___flmul+3,w
  5764     0B04  1103               	clrz
  5765     0B05  1803               	skipnc
  5766     0B06  3E01               	addlw	1
  5767     0B07  1903               	skipnz
  5768     0B08  2B0A               	goto	u4373
  5769     0B09  07B5               	addwf	___flmul@grs+3,f
  5770     0B0A                     u4373:
  5771     0B0A                     l3040:
  5772     0B0A  0825               	movf	___flmul@b+1,w
  5773     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5774     0B0C  082A               	movf	___flmul@a+2,w
  5775     0B0D  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5776     0B12  0871               	movf	?__Umul8_16+1,w
  5777     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5778     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5779     0B15  00BD               	movwf	___flmul@temp+1
  5780     0B16  0870               	movf	?__Umul8_16,w
  5781     0B17  00BC               	movwf	___flmul@temp
  5782     0B18  083C               	movf	___flmul@temp,w
  5783     0B19  00AC               	movwf	??___flmul
  5784     0B1A  083D               	movf	___flmul@temp+1,w
  5785     0B1B  00AD               	movwf	??___flmul+1
  5786     0B1C  01AE               	clrf	??___flmul+2
  5787     0B1D  01AF               	clrf	??___flmul+3
  5788     0B1E  082C               	movf	??___flmul,w
  5789     0B1F  07B8               	addwf	___flmul@prod,f
  5790     0B20  082D               	movf	??___flmul+1,w
  5791     0B21  1103               	clrz
  5792     0B22  1803               	skipnc
  5793     0B23  3E01               	addlw	1
  5794     0B24  1903               	skipnz
  5795     0B25  2B27               	goto	u4381
  5796     0B26  07B9               	addwf	___flmul@prod+1,f
  5797     0B27                     u4381:
  5798     0B27  082E               	movf	??___flmul+2,w
  5799     0B28  1103               	clrz
  5800     0B29  1803               	skipnc
  5801     0B2A  3E01               	addlw	1
  5802     0B2B  1903               	skipnz
  5803     0B2C  2B2E               	goto	u4382
  5804     0B2D  07BA               	addwf	___flmul@prod+2,f
  5805     0B2E                     u4382:
  5806     0B2E  082F               	movf	??___flmul+3,w
  5807     0B2F  1103               	clrz
  5808     0B30  1803               	skipnc
  5809     0B31  3E01               	addlw	1
  5810     0B32  1903               	skipnz
  5811     0B33  2B35               	goto	u4383
  5812     0B34  07BB               	addwf	___flmul@prod+3,f
  5813     0B35                     u4383:
  5814     0B35                     l3042:
  5815     0B35  0826               	movf	___flmul@b+2,w
  5816     0B36  00F0               	movwf	__Umul8_16@multiplicand
  5817     0B37  0829               	movf	___flmul@a+1,w
  5818     0B38  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5819     0B3D  0871               	movf	?__Umul8_16+1,w
  5820     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  5821     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  5822     0B40  00BD               	movwf	___flmul@temp+1
  5823     0B41  0870               	movf	?__Umul8_16,w
  5824     0B42  00BC               	movwf	___flmul@temp
  5825     0B43                     l3044:
  5826     0B43  083C               	movf	___flmul@temp,w
  5827     0B44  00AC               	movwf	??___flmul
  5828     0B45  083D               	movf	___flmul@temp+1,w
  5829     0B46  00AD               	movwf	??___flmul+1
  5830     0B47  01AE               	clrf	??___flmul+2
  5831     0B48  01AF               	clrf	??___flmul+3
  5832     0B49  082C               	movf	??___flmul,w
  5833     0B4A  07B8               	addwf	___flmul@prod,f
  5834     0B4B  082D               	movf	??___flmul+1,w
  5835     0B4C  1103               	clrz
  5836     0B4D  1803               	skipnc
  5837     0B4E  3E01               	addlw	1
  5838     0B4F  1903               	skipnz
  5839     0B50  2B52               	goto	u4391
  5840     0B51  07B9               	addwf	___flmul@prod+1,f
  5841     0B52                     u4391:
  5842     0B52  082E               	movf	??___flmul+2,w
  5843     0B53  1103               	clrz
  5844     0B54  1803               	skipnc
  5845     0B55  3E01               	addlw	1
  5846     0B56  1903               	skipnz
  5847     0B57  2B59               	goto	u4392
  5848     0B58  07BA               	addwf	___flmul@prod+2,f
  5849     0B59                     u4392:
  5850     0B59  082F               	movf	??___flmul+3,w
  5851     0B5A  1103               	clrz
  5852     0B5B  1803               	skipnc
  5853     0B5C  3E01               	addlw	1
  5854     0B5D  1903               	skipnz
  5855     0B5E  2B60               	goto	u4393
  5856     0B5F  07BB               	addwf	___flmul@prod+3,f
  5857     0B60                     u4393:
  5858     0B60  0826               	movf	___flmul@b+2,w
  5859     0B61  00F0               	movwf	__Umul8_16@multiplicand
  5860     0B62  082A               	movf	___flmul@a+2,w
  5861     0B63  160A  158A  21C9  120A  158A  	fcall	__Umul8_16
  5862     0B68  0871               	movf	?__Umul8_16+1,w
  5863     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  5864     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  5865     0B6B  00BD               	movwf	___flmul@temp+1
  5866     0B6C  0870               	movf	?__Umul8_16,w
  5867     0B6D  00BC               	movwf	___flmul@temp
  5868     0B6E                     l3046:
  5869     0B6E  083C               	movf	___flmul@temp,w
  5870     0B6F  00AC               	movwf	??___flmul
  5871     0B70  083D               	movf	___flmul@temp+1,w
  5872     0B71  00AD               	movwf	??___flmul+1
  5873     0B72  01AE               	clrf	??___flmul+2
  5874     0B73  01AF               	clrf	??___flmul+3
  5875     0B74  3008               	movlw	8
  5876     0B75                     u4405:
  5877     0B75  1003               	clrc
  5878     0B76  0DAC               	rlf	??___flmul,f
  5879     0B77  0DAD               	rlf	??___flmul+1,f
  5880     0B78  0DAE               	rlf	??___flmul+2,f
  5881     0B79  0DAF               	rlf	??___flmul+3,f
  5882     0B7A                     u4400:
  5883     0B7A  3EFF               	addlw	-1
  5884     0B7B  1D03               	skipz
  5885     0B7C  2B75               	goto	u4405
  5886     0B7D  082C               	movf	??___flmul,w
  5887     0B7E  07B8               	addwf	___flmul@prod,f
  5888     0B7F  082D               	movf	??___flmul+1,w
  5889     0B80  1103               	clrz
  5890     0B81  1803               	skipnc
  5891     0B82  3E01               	addlw	1
  5892     0B83  1903               	skipnz
  5893     0B84  2B86               	goto	u4411
  5894     0B85  07B9               	addwf	___flmul@prod+1,f
  5895     0B86                     u4411:
  5896     0B86  082E               	movf	??___flmul+2,w
  5897     0B87  1103               	clrz
  5898     0B88  1803               	skipnc
  5899     0B89  3E01               	addlw	1
  5900     0B8A  1903               	skipnz
  5901     0B8B  2B8D               	goto	u4412
  5902     0B8C  07BA               	addwf	___flmul@prod+2,f
  5903     0B8D                     u4412:
  5904     0B8D  082F               	movf	??___flmul+3,w
  5905     0B8E  1103               	clrz
  5906     0B8F  1803               	skipnc
  5907     0B90  3E01               	addlw	1
  5908     0B91  1903               	skipnz
  5909     0B92  2B94               	goto	u4413
  5910     0B93  07BB               	addwf	___flmul@prod+3,f
  5911     0B94                     u4413:
  5912     0B94                     l3048:
  5913     0B94  0832               	movf	___flmul@grs,w
  5914     0B95  00AC               	movwf	??___flmul
  5915     0B96  0833               	movf	___flmul@grs+1,w
  5916     0B97  00AD               	movwf	??___flmul+1
  5917     0B98  0834               	movf	___flmul@grs+2,w
  5918     0B99  00AE               	movwf	??___flmul+2
  5919     0B9A  0835               	movf	___flmul@grs+3,w
  5920     0B9B  00AF               	movwf	??___flmul+3
  5921     0B9C  3018               	movlw	24
  5922     0B9D                     u4425:
  5923     0B9D  1003               	clrc
  5924     0B9E  0CAF               	rrf	??___flmul+3,f
  5925     0B9F  0CAE               	rrf	??___flmul+2,f
  5926     0BA0  0CAD               	rrf	??___flmul+1,f
  5927     0BA1  0CAC               	rrf	??___flmul,f
  5928     0BA2                     u4420:
  5929     0BA2  3EFF               	addlw	-1
  5930     0BA3  1D03               	skipz
  5931     0BA4  2B9D               	goto	u4425
  5932     0BA5  082C               	movf	??___flmul,w
  5933     0BA6  07B8               	addwf	___flmul@prod,f
  5934     0BA7  082D               	movf	??___flmul+1,w
  5935     0BA8  1103               	clrz
  5936     0BA9  1803               	skipnc
  5937     0BAA  3E01               	addlw	1
  5938     0BAB  1903               	skipnz
  5939     0BAC  2BAE               	goto	u4431
  5940     0BAD  07B9               	addwf	___flmul@prod+1,f
  5941     0BAE                     u4431:
  5942     0BAE  082E               	movf	??___flmul+2,w
  5943     0BAF  1103               	clrz
  5944     0BB0  1803               	skipnc
  5945     0BB1  3E01               	addlw	1
  5946     0BB2  1903               	skipnz
  5947     0BB3  2BB5               	goto	u4432
  5948     0BB4  07BA               	addwf	___flmul@prod+2,f
  5949     0BB5                     u4432:
  5950     0BB5  082F               	movf	??___flmul+3,w
  5951     0BB6  1103               	clrz
  5952     0BB7  1803               	skipnc
  5953     0BB8  3E01               	addlw	1
  5954     0BB9  1903               	skipnz
  5955     0BBA  2BBC               	goto	u4433
  5956     0BBB  07BB               	addwf	___flmul@prod+3,f
  5957     0BBC                     u4433:
  5958     0BBC                     l3050:
  5959     0BBC  3008               	movlw	8
  5960     0BBD  00AC               	movwf	??___flmul
  5961     0BBE                     u4445:
  5962     0BBE  1003               	clrc
  5963     0BBF  0DB2               	rlf	___flmul@grs,f
  5964     0BC0  0DB3               	rlf	___flmul@grs+1,f
  5965     0BC1  0DB4               	rlf	___flmul@grs+2,f
  5966     0BC2  0DB5               	rlf	___flmul@grs+3,f
  5967     0BC3  0BAC               	decfsz	??___flmul,f
  5968     0BC4  2BBE               	goto	u4445
  5969     0BC5                     l3052:
  5970     0BC5  0837               	movf	___flmul@bexp,w
  5971     0BC6  0736               	addwf	___flmul@aexp,w
  5972     0BC7  00AC               	movwf	??___flmul
  5973     0BC8  01AD               	clrf	??___flmul+1
  5974     0BC9  0DAD               	rlf	??___flmul+1,f
  5975     0BCA  082C               	movf	??___flmul,w
  5976     0BCB  3E82               	addlw	130
  5977     0BCC  00BC               	movwf	___flmul@temp
  5978     0BCD  082D               	movf	??___flmul+1,w
  5979     0BCE  1803               	skipnc
  5980     0BCF  3E01               	addlw	1
  5981     0BD0  3EFF               	addlw	255
  5982     0BD1  00BD               	movwf	___flmul@temp+1
  5983     0BD2  2BF0               	goto	l3064
  5984     0BD3                     l3054:
  5985     0BD3  3001               	movlw	1
  5986     0BD4  00AC               	movwf	??___flmul
  5987     0BD5                     u4455:
  5988     0BD5  1003               	clrc
  5989     0BD6  0DB8               	rlf	___flmul@prod,f
  5990     0BD7  0DB9               	rlf	___flmul@prod+1,f
  5991     0BD8  0DBA               	rlf	___flmul@prod+2,f
  5992     0BD9  0DBB               	rlf	___flmul@prod+3,f
  5993     0BDA  0BAC               	decfsz	??___flmul,f
  5994     0BDB  2BD5               	goto	u4455
  5995     0BDC                     l3056:
  5996     0BDC  1FB5               	btfss	___flmul@grs+3,7
  5997     0BDD  2BDF               	goto	u4461
  5998     0BDE  2BE0               	goto	u4460
  5999     0BDF                     u4461:
  6000     0BDF  2BE1               	goto	l3060
  6001     0BE0                     u4460:
  6002     0BE0                     l3058:
  6003     0BE0  1438               	bsf	___flmul@prod,0
  6004     0BE1                     l3060:
  6005     0BE1  3001               	movlw	1
  6006     0BE2  00AC               	movwf	??___flmul
  6007     0BE3                     u4475:
  6008     0BE3  1003               	clrc
  6009     0BE4  0DB2               	rlf	___flmul@grs,f
  6010     0BE5  0DB3               	rlf	___flmul@grs+1,f
  6011     0BE6  0DB4               	rlf	___flmul@grs+2,f
  6012     0BE7  0DB5               	rlf	___flmul@grs+3,f
  6013     0BE8  0BAC               	decfsz	??___flmul,f
  6014     0BE9  2BE3               	goto	u4475
  6015     0BEA                     l3062:
  6016     0BEA  30FF               	movlw	255
  6017     0BEB  07BC               	addwf	___flmul@temp,f
  6018     0BEC  1803               	skipnc
  6019     0BED  0ABD               	incf	___flmul@temp+1,f
  6020     0BEE  30FF               	movlw	255
  6021     0BEF  07BD               	addwf	___flmul@temp+1,f
  6022     0BF0                     l3064:
  6023     0BF0  1FBA               	btfss	___flmul@prod+2,7
  6024     0BF1  2BF3               	goto	u4481
  6025     0BF2  2BF4               	goto	u4480
  6026     0BF3                     u4481:
  6027     0BF3  2BD3               	goto	l3054
  6028     0BF4                     u4480:
  6029     0BF4                     l3066:
  6030     0BF4  01B6               	clrf	___flmul@aexp
  6031     0BF5                     l3068:
  6032     0BF5  1FB5               	btfss	___flmul@grs+3,7
  6033     0BF6  2BF8               	goto	u4491
  6034     0BF7  2BF9               	goto	u4490
  6035     0BF8                     u4491:
  6036     0BF8  2C15               	goto	l3076
  6037     0BF9                     u4490:
  6038     0BF9                     l3070:
  6039     0BF9  30FF               	movlw	255
  6040     0BFA  0532               	andwf	___flmul@grs,w
  6041     0BFB  00AC               	movwf	??___flmul
  6042     0BFC  30FF               	movlw	255
  6043     0BFD  0533               	andwf	___flmul@grs+1,w
  6044     0BFE  00AD               	movwf	??___flmul+1
  6045     0BFF  30FF               	movlw	255
  6046     0C00  0534               	andwf	___flmul@grs+2,w
  6047     0C01  00AE               	movwf	??___flmul+2
  6048     0C02  307F               	movlw	127
  6049     0C03  0535               	andwf	___flmul@grs+3,w
  6050     0C04  00AF               	movwf	??___flmul+3
  6051     0C05  082F               	movf	??___flmul+3,w
  6052     0C06  042E               	iorwf	??___flmul+2,w
  6053     0C07  042D               	iorwf	??___flmul+1,w
  6054     0C08  042C               	iorwf	??___flmul,w
  6055     0C09  1903               	skipnz
  6056     0C0A  2C0C               	goto	u4501
  6057     0C0B  2C0D               	goto	u4500
  6058     0C0C                     u4501:
  6059     0C0C  2C10               	goto	l862
  6060     0C0D                     u4500:
  6061     0C0D                     l3072:
  6062     0C0D  01B6               	clrf	___flmul@aexp
  6063     0C0E  0AB6               	incf	___flmul@aexp,f
  6064     0C0F  2C15               	goto	l3076
  6065     0C10                     l862:
  6066     0C10  1C38               	btfss	___flmul@prod,0
  6067     0C11  2C13               	goto	u4511
  6068     0C12  2C14               	goto	u4510
  6069     0C13                     u4511:
  6070     0C13  2C15               	goto	l3076
  6071     0C14                     u4510:
  6072     0C14  2C0D               	goto	l3072
  6073     0C15                     l3076:
  6074     0C15  0836               	movf	___flmul@aexp,w
  6075     0C16  1903               	btfsc	3,2
  6076     0C17  2C19               	goto	u4521
  6077     0C18  2C1A               	goto	u4520
  6078     0C19                     u4521:
  6079     0C19  2C4B               	goto	l3086
  6080     0C1A                     u4520:
  6081     0C1A                     l3078:
  6082     0C1A  3001               	movlw	1
  6083     0C1B  07B8               	addwf	___flmul@prod,f
  6084     0C1C  3000               	movlw	0
  6085     0C1D  1803               	skipnc
  6086     0C1E  3001               	movlw	1
  6087     0C1F  07B9               	addwf	___flmul@prod+1,f
  6088     0C20  3000               	movlw	0
  6089     0C21  1803               	skipnc
  6090     0C22  3001               	movlw	1
  6091     0C23  07BA               	addwf	___flmul@prod+2,f
  6092     0C24  3000               	movlw	0
  6093     0C25  1803               	skipnc
  6094     0C26  3001               	movlw	1
  6095     0C27  07BB               	addwf	___flmul@prod+3,f
  6096     0C28                     l3080:
  6097     0C28  1C3B               	btfss	___flmul@prod+3,0
  6098     0C29  2C2B               	goto	u4531
  6099     0C2A  2C2C               	goto	u4530
  6100     0C2B                     u4531:
  6101     0C2B  2C4B               	goto	l3086
  6102     0C2C                     u4530:
  6103     0C2C                     l3082:
  6104     0C2C  0838               	movf	___flmul@prod,w
  6105     0C2D  00AC               	movwf	??___flmul
  6106     0C2E  0839               	movf	___flmul@prod+1,w
  6107     0C2F  00AD               	movwf	??___flmul+1
  6108     0C30  083A               	movf	___flmul@prod+2,w
  6109     0C31  00AE               	movwf	??___flmul+2
  6110     0C32  083B               	movf	___flmul@prod+3,w
  6111     0C33  00AF               	movwf	??___flmul+3
  6112     0C34  3001               	movlw	1
  6113     0C35  00B0               	movwf	??___flmul+4
  6114     0C36                     u4545:
  6115     0C36  0D2F               	rlf	??___flmul+3,w
  6116     0C37  0CAF               	rrf	??___flmul+3,f
  6117     0C38  0CAE               	rrf	??___flmul+2,f
  6118     0C39  0CAD               	rrf	??___flmul+1,f
  6119     0C3A  0CAC               	rrf	??___flmul,f
  6120     0C3B                     u4540:
  6121     0C3B  0BB0               	decfsz	??___flmul+4,f
  6122     0C3C  2C36               	goto	u4545
  6123     0C3D  082F               	movf	??___flmul+3,w
  6124     0C3E  00BB               	movwf	___flmul@prod+3
  6125     0C3F  082E               	movf	??___flmul+2,w
  6126     0C40  00BA               	movwf	___flmul@prod+2
  6127     0C41  082D               	movf	??___flmul+1,w
  6128     0C42  00B9               	movwf	___flmul@prod+1
  6129     0C43  082C               	movf	??___flmul,w
  6130     0C44  00B8               	movwf	___flmul@prod
  6131     0C45                     l3084:
  6132     0C45  3001               	movlw	1
  6133     0C46  07BC               	addwf	___flmul@temp,f
  6134     0C47  1803               	skipnc
  6135     0C48  0ABD               	incf	___flmul@temp+1,f
  6136     0C49  3000               	movlw	0
  6137     0C4A  07BD               	addwf	___flmul@temp+1,f
  6138     0C4B                     l3086:
  6139     0C4B  083D               	movf	___flmul@temp+1,w
  6140     0C4C  3A80               	xorlw	128
  6141     0C4D  00FF               	movwf	btemp+1
  6142     0C4E  3080               	movlw	128
  6143     0C4F  027F               	subwf	btemp+1,w
  6144     0C50  1D03               	skipz
  6145     0C51  2C54               	goto	u4555
  6146     0C52  30FF               	movlw	255
  6147     0C53  023C               	subwf	___flmul@temp,w
  6148     0C54                     u4555:
  6149     0C54  1C03               	skipc
  6150     0C55  2C57               	goto	u4551
  6151     0C56  2C58               	goto	u4550
  6152     0C57                     u4551:
  6153     0C57  2C63               	goto	l3090
  6154     0C58                     u4550:
  6155     0C58                     l3088:
  6156     0C58  307F               	movlw	127
  6157     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6158     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6159     0C5B  00BB               	movwf	___flmul@prod+3
  6160     0C5C  3080               	movlw	128
  6161     0C5D  00BA               	movwf	___flmul@prod+2
  6162     0C5E  3000               	movlw	0
  6163     0C5F  00B9               	movwf	___flmul@prod+1
  6164     0C60  3000               	movlw	0
  6165     0C61  00B8               	movwf	___flmul@prod
  6166     0C62  2C94               	goto	l868
  6167     0C63                     l3090:
  6168     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6169     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6170     0C65  083D               	movf	___flmul@temp+1,w
  6171     0C66  3A80               	xorlw	128
  6172     0C67  00FF               	movwf	btemp+1
  6173     0C68  3080               	movlw	128
  6174     0C69  027F               	subwf	btemp+1,w
  6175     0C6A  1D03               	skipz
  6176     0C6B  2C6E               	goto	u4565
  6177     0C6C  3001               	movlw	1
  6178     0C6D  023C               	subwf	___flmul@temp,w
  6179     0C6E                     u4565:
  6180     0C6E  1803               	skipnc
  6181     0C6F  2C71               	goto	u4561
  6182     0C70  2C72               	goto	u4560
  6183     0C71                     u4561:
  6184     0C71  2C7E               	goto	l3096
  6185     0C72                     u4560:
  6186     0C72                     l3092:
  6187     0C72  3000               	movlw	0
  6188     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6189     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6190     0C75  00BB               	movwf	___flmul@prod+3
  6191     0C76  3000               	movlw	0
  6192     0C77  00BA               	movwf	___flmul@prod+2
  6193     0C78  3000               	movlw	0
  6194     0C79  00B9               	movwf	___flmul@prod+1
  6195     0C7A  3000               	movlw	0
  6196     0C7B  00B8               	movwf	___flmul@prod
  6197     0C7C                     l3094:
  6198     0C7C  01B1               	clrf	___flmul@sign
  6199     0C7D  2C94               	goto	l868
  6200     0C7E                     l3096:
  6201     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6202     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6203     0C80  083C               	movf	___flmul@temp,w
  6204     0C81  00B7               	movwf	___flmul@bexp
  6205     0C82  30FF               	movlw	255
  6206     0C83  05B8               	andwf	___flmul@prod,f
  6207     0C84  30FF               	movlw	255
  6208     0C85  05B9               	andwf	___flmul@prod+1,f
  6209     0C86  307F               	movlw	127
  6210     0C87  05BA               	andwf	___flmul@prod+2,f
  6211     0C88  3000               	movlw	0
  6212     0C89  05BB               	andwf	___flmul@prod+3,f
  6213     0C8A                     l3098:
  6214     0C8A  1C37               	btfss	___flmul@bexp,0
  6215     0C8B  2C8D               	goto	u4571
  6216     0C8C  2C8E               	goto	u4570
  6217     0C8D                     u4571:
  6218     0C8D  2C8F               	goto	l3102
  6219     0C8E                     u4570:
  6220     0C8E                     l3100:
  6221     0C8E  17BA               	bsf	___flmul@prod+2,7
  6222     0C8F                     l3102:
  6223     0C8F  0837               	movf	___flmul@bexp,w
  6224     0C90  00AC               	movwf	??___flmul
  6225     0C91  1003               	clrc
  6226     0C92  0C2C               	rrf	??___flmul,w
  6227     0C93  00BB               	movwf	___flmul@prod+3
  6228     0C94                     l868:
  6229     0C94  0831               	movf	___flmul@sign,w
  6230     0C95  00AC               	movwf	??___flmul
  6231     0C96  082C               	movf	??___flmul,w
  6232     0C97  04BB               	iorwf	___flmul@prod+3,f
  6233     0C98                     l3104:
  6234     0C98  083B               	movf	___flmul@prod+3,w
  6235     0C99  00A7               	movwf	?___flmul+3
  6236     0C9A  083A               	movf	___flmul@prod+2,w
  6237     0C9B  00A6               	movwf	?___flmul+2
  6238     0C9C  0839               	movf	___flmul@prod+1,w
  6239     0C9D  00A5               	movwf	?___flmul+1
  6240     0C9E  0838               	movf	___flmul@prod,w
  6241     0C9F  00A4               	movwf	?___flmul
  6242     0CA0                     l856:
  6243     0CA0  0008               	return
  6244     0CA1                     __end_of___flmul:
  6245                           
  6246                           	psect	text6
  6247     19C9                     __ptext6:	
  6248 ;; *************** function __Umul8_16 *****************
  6249 ;; Defined at:
  6250 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  multiplier      1    wreg     unsigned char 
  6253 ;;  multiplicand    1    0[COMMON] unsigned char 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  multiplier      1    8[COMMON] unsigned char 
  6256 ;;  word_mpld       2    6[COMMON] unsigned int 
  6257 ;;  product         2    4[COMMON] unsigned int 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  2    0[COMMON] unsigned int 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6267 ;;      Params:         2       0       0       0       0
  6268 ;;      Locals:         5       0       0       0       0
  6269 ;;      Temps:          2       0       0       0       0
  6270 ;;      Totals:         9       0       0       0       0
  6271 ;;Total ram usage:        9 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		___flmul
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280     19C9                     __Umul8_16:	
  6281                           ;psect for function __Umul8_16
  6282                           
  6283                           
  6284                           ;incstack = 0
  6285                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6286                           ;__Umul8_16@multiplier stored from wreg
  6287     19C9  00F8               	movwf	__Umul8_16@multiplier
  6288     19CA                     l2620:
  6289     19CA  01F4               	clrf	__Umul8_16@product
  6290     19CB  01F5               	clrf	__Umul8_16@product+1
  6291     19CC                     l2622:
  6292     19CC  0870               	movf	__Umul8_16@multiplicand,w
  6293     19CD  00F2               	movwf	??__Umul8_16
  6294     19CE  01F3               	clrf	??__Umul8_16+1
  6295     19CF  0872               	movf	??__Umul8_16,w
  6296     19D0  00F6               	movwf	__Umul8_16@word_mpld
  6297     19D1  0873               	movf	??__Umul8_16+1,w
  6298     19D2  00F7               	movwf	__Umul8_16@word_mpld+1
  6299     19D3                     l2624:
  6300     19D3  1C78               	btfss	__Umul8_16@multiplier,0
  6301     19D4  29D6               	goto	u3361
  6302     19D5  29D7               	goto	u3360
  6303     19D6                     u3361:
  6304     19D6  29DD               	goto	l875
  6305     19D7                     u3360:
  6306     19D7                     l2626:
  6307     19D7  0876               	movf	__Umul8_16@word_mpld,w
  6308     19D8  07F4               	addwf	__Umul8_16@product,f
  6309     19D9  1803               	skipnc
  6310     19DA  0AF5               	incf	__Umul8_16@product+1,f
  6311     19DB  0877               	movf	__Umul8_16@word_mpld+1,w
  6312     19DC  07F5               	addwf	__Umul8_16@product+1,f
  6313     19DD                     l875:
  6314     19DD  3001               	movlw	1
  6315     19DE                     u3375:
  6316     19DE  1003               	clrc
  6317     19DF  0DF6               	rlf	__Umul8_16@word_mpld,f
  6318     19E0  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6319     19E1  3EFF               	addlw	-1
  6320     19E2  1D03               	skipz
  6321     19E3  29DE               	goto	u3375
  6322     19E4  1003               	clrc
  6323     19E5  0CF8               	rrf	__Umul8_16@multiplier,f
  6324     19E6                     l2628:
  6325     19E6  0878               	movf	__Umul8_16@multiplier,w
  6326     19E7  1D03               	btfss	3,2
  6327     19E8  29EA               	goto	u3381
  6328     19E9  29EB               	goto	u3380
  6329     19EA                     u3381:
  6330     19EA  29D3               	goto	l2624
  6331     19EB                     u3380:
  6332     19EB                     l2630:
  6333     19EB  0875               	movf	__Umul8_16@product+1,w
  6334     19EC  00F1               	movwf	?__Umul8_16+1
  6335     19ED  0874               	movf	__Umul8_16@product,w
  6336     19EE  00F0               	movwf	?__Umul8_16
  6337     19EF                     l877:
  6338     19EF  0008               	return
  6339     19F0                     __end_of__Umul8_16:
  6340                           
  6341                           	psect	text7
  6342     1089                     __ptext7:	
  6343 ;; *************** function __tdiv_to_l_ *****************
  6344 ;; Defined at:
  6345 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  f1              4    0[COMMON] float 
  6348 ;;  f2              4    4[COMMON] float 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  quot            4    0[BANK0 ] unsigned long 
  6351 ;;  exp1            1    5[BANK0 ] unsigned char 
  6352 ;;  cntr            1    4[BANK0 ] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  4    0[COMMON] unsigned long 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6362 ;;      Params:         8       0       0       0       0
  6363 ;;      Locals:         0       6       0       0       0
  6364 ;;      Temps:          3       0       0       0       0
  6365 ;;      Totals:        11       6       0       0       0
  6366 ;;Total ram usage:       17 bytes
  6367 ;; Hardware stack levels used: 1
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_sprintf
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375     1089                     __tdiv_to_l_:	
  6376                           ;psect for function __tdiv_to_l_
  6377                           
  6378     1089                     l3220:	
  6379                           ;incstack = 0
  6380                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6381                           
  6382     1089  0870               	movf	__tdiv_to_l_@f1,w
  6383     108A  00F8               	movwf	??__tdiv_to_l_
  6384     108B  0871               	movf	__tdiv_to_l_@f1+1,w
  6385     108C  00F9               	movwf	??__tdiv_to_l_+1
  6386     108D  0872               	movf	__tdiv_to_l_@f1+2,w
  6387     108E  00FA               	movwf	??__tdiv_to_l_+2
  6388     108F  1003               	clrc
  6389     1090  0D79               	rlf	??__tdiv_to_l_+1,w
  6390     1091  0D7A               	rlf	??__tdiv_to_l_+2,w
  6391     1092  1283               	bcf	3,5	;RP0=0, select bank0
  6392     1093  1303               	bcf	3,6	;RP1=0, select bank0
  6393     1094  00A5               	movwf	__tdiv_to_l_@exp1
  6394     1095  0825               	movf	__tdiv_to_l_@exp1,w
  6395     1096  1D03               	btfss	3,2
  6396     1097  2899               	goto	u4881
  6397     1098  289A               	goto	u4880
  6398     1099                     u4881:
  6399     1099  28A3               	goto	l3226
  6400     109A                     u4880:
  6401     109A                     l3222:
  6402     109A  3000               	movlw	0
  6403     109B  00F3               	movwf	?__tdiv_to_l_+3
  6404     109C  3000               	movlw	0
  6405     109D  00F2               	movwf	?__tdiv_to_l_+2
  6406     109E  3000               	movlw	0
  6407     109F  00F1               	movwf	?__tdiv_to_l_+1
  6408     10A0  3000               	movlw	0
  6409     10A1  00F0               	movwf	?__tdiv_to_l_
  6410     10A2  293F               	goto	l650
  6411     10A3                     l3226:
  6412     10A3  0874               	movf	__tdiv_to_l_@f2,w
  6413     10A4  00F8               	movwf	??__tdiv_to_l_
  6414     10A5  0875               	movf	__tdiv_to_l_@f2+1,w
  6415     10A6  00F9               	movwf	??__tdiv_to_l_+1
  6416     10A7  0876               	movf	__tdiv_to_l_@f2+2,w
  6417     10A8  00FA               	movwf	??__tdiv_to_l_+2
  6418     10A9  1003               	clrc
  6419     10AA  0D79               	rlf	??__tdiv_to_l_+1,w
  6420     10AB  0D7A               	rlf	??__tdiv_to_l_+2,w
  6421     10AC  00A4               	movwf	__tdiv_to_l_@cntr
  6422     10AD  0824               	movf	__tdiv_to_l_@cntr,w
  6423     10AE  1D03               	btfss	3,2
  6424     10AF  28B1               	goto	u4891
  6425     10B0  28B2               	goto	u4890
  6426     10B1                     u4891:
  6427     10B1  28B3               	goto	l651
  6428     10B2                     u4890:
  6429     10B2  289A               	goto	l3222
  6430     10B3                     l651:
  6431     10B3  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6432     10B4                     l3232:
  6433     10B4  30FF               	movlw	255
  6434     10B5  05F0               	andwf	__tdiv_to_l_@f1,f
  6435     10B6  30FF               	movlw	255
  6436     10B7  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6437     10B8  3000               	movlw	0
  6438     10B9  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6439     10BA                     l3234:
  6440     10BA  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6441     10BB  30FF               	movlw	255
  6442     10BC  05F4               	andwf	__tdiv_to_l_@f2,f
  6443     10BD  30FF               	movlw	255
  6444     10BE  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6445     10BF  3000               	movlw	0
  6446     10C0  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6447     10C1  3000               	movlw	0
  6448     10C2  00A3               	movwf	__tdiv_to_l_@quot+3
  6449     10C3  3000               	movlw	0
  6450     10C4  00A2               	movwf	__tdiv_to_l_@quot+2
  6451     10C5  3000               	movlw	0
  6452     10C6  00A1               	movwf	__tdiv_to_l_@quot+1
  6453     10C7  3000               	movlw	0
  6454     10C8  00A0               	movwf	__tdiv_to_l_@quot
  6455     10C9                     l3236:
  6456     10C9  307F               	movlw	127
  6457     10CA  02A5               	subwf	__tdiv_to_l_@exp1,f
  6458     10CB                     l3238:
  6459     10CB  3098               	movlw	152
  6460     10CC  0724               	addwf	__tdiv_to_l_@cntr,w
  6461     10CD  00F8               	movwf	??__tdiv_to_l_
  6462     10CE  0878               	movf	??__tdiv_to_l_,w
  6463     10CF  02A5               	subwf	__tdiv_to_l_@exp1,f
  6464     10D0  3018               	movlw	24
  6465     10D1  00A4               	movwf	__tdiv_to_l_@cntr
  6466     10D2                     l3240:
  6467     10D2  3001               	movlw	1
  6468     10D3  00F8               	movwf	??__tdiv_to_l_
  6469     10D4                     u4905:
  6470     10D4  1003               	clrc
  6471     10D5  0DA0               	rlf	__tdiv_to_l_@quot,f
  6472     10D6  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6473     10D7  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6474     10D8  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6475     10D9  0BF8               	decfsz	??__tdiv_to_l_,f
  6476     10DA  28D4               	goto	u4905
  6477     10DB                     l3242:
  6478     10DB  0876               	movf	__tdiv_to_l_@f2+2,w
  6479     10DC  0272               	subwf	__tdiv_to_l_@f1+2,w
  6480     10DD  1D03               	skipz
  6481     10DE  28E5               	goto	u4915
  6482     10DF  0875               	movf	__tdiv_to_l_@f2+1,w
  6483     10E0  0271               	subwf	__tdiv_to_l_@f1+1,w
  6484     10E1  1D03               	skipz
  6485     10E2  28E5               	goto	u4915
  6486     10E3  0874               	movf	__tdiv_to_l_@f2,w
  6487     10E4  0270               	subwf	__tdiv_to_l_@f1,w
  6488     10E5                     u4915:
  6489     10E5  1C03               	skipc
  6490     10E6  28E8               	goto	u4911
  6491     10E7  28E9               	goto	u4910
  6492     10E8                     u4911:
  6493     10E8  28F4               	goto	l3248
  6494     10E9                     u4910:
  6495     10E9                     l3244:
  6496     10E9  0874               	movf	__tdiv_to_l_@f2,w
  6497     10EA  02F0               	subwf	__tdiv_to_l_@f1,f
  6498     10EB  0875               	movf	__tdiv_to_l_@f2+1,w
  6499     10EC  1C03               	skipc
  6500     10ED  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6501     10EE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6502     10EF  0876               	movf	__tdiv_to_l_@f2+2,w
  6503     10F0  1C03               	skipc
  6504     10F1  0A76               	incf	__tdiv_to_l_@f2+2,w
  6505     10F2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6506     10F3                     l3246:
  6507     10F3  1420               	bsf	__tdiv_to_l_@quot,0
  6508     10F4                     l3248:
  6509     10F4  3001               	movlw	1
  6510     10F5                     u4925:
  6511     10F5  1003               	clrc
  6512     10F6  0DF0               	rlf	__tdiv_to_l_@f1,f
  6513     10F7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6514     10F8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6515     10F9  3EFF               	addlw	-1
  6516     10FA  1D03               	skipz
  6517     10FB  28F5               	goto	u4925
  6518     10FC                     l3250:
  6519     10FC  3001               	movlw	1
  6520     10FD  02A4               	subwf	__tdiv_to_l_@cntr,f
  6521     10FE  1D03               	btfss	3,2
  6522     10FF  2901               	goto	u4931
  6523     1100  2902               	goto	u4930
  6524     1101                     u4931:
  6525     1101  28D2               	goto	l3240
  6526     1102                     u4930:
  6527     1102                     l654:
  6528     1102  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6529     1103  2905               	goto	u4941
  6530     1104  2906               	goto	u4940
  6531     1105                     u4941:
  6532     1105  2920               	goto	l3260
  6533     1106                     u4940:
  6534     1106                     l3252:
  6535     1106  0825               	movf	__tdiv_to_l_@exp1,w
  6536     1107  3A80               	xorlw	128
  6537     1108  3E97               	addlw	151
  6538     1109  1803               	skipnc
  6539     110A  290C               	goto	u4951
  6540     110B  290D               	goto	u4950
  6541     110C                     u4951:
  6542     110C  290E               	goto	l3258
  6543     110D                     u4950:
  6544     110D  289A               	goto	l3222
  6545     110E                     l3258:
  6546     110E  3001               	movlw	1
  6547     110F                     u4965:
  6548     110F  1003               	clrc
  6549     1110  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6550     1111  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6551     1112  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6552     1113  0CA0               	rrf	__tdiv_to_l_@quot,f
  6553     1114  3EFF               	addlw	-1
  6554     1115  1D03               	skipz
  6555     1116  290F               	goto	u4965
  6556     1117  3001               	movlw	1
  6557     1118  00F8               	movwf	??__tdiv_to_l_
  6558     1119  0878               	movf	??__tdiv_to_l_,w
  6559     111A  07A5               	addwf	__tdiv_to_l_@exp1,f
  6560     111B  1D03               	btfss	3,2
  6561     111C  291E               	goto	u4971
  6562     111D  291F               	goto	u4970
  6563     111E                     u4971:
  6564     111E  290E               	goto	l3258
  6565     111F                     u4970:
  6566     111F  2937               	goto	l3268
  6567     1120                     l3260:
  6568     1120  3018               	movlw	24
  6569     1121  0225               	subwf	__tdiv_to_l_@exp1,w
  6570     1122  1C03               	skipc
  6571     1123  2925               	goto	u4981
  6572     1124  2926               	goto	u4980
  6573     1125                     u4981:
  6574     1125  2932               	goto	l661
  6575     1126                     u4980:
  6576     1126  289A               	goto	l3222
  6577     1127                     l3266:
  6578     1127  3001               	movlw	1
  6579     1128  00F8               	movwf	??__tdiv_to_l_
  6580     1129                     u4995:
  6581     1129  1003               	clrc
  6582     112A  0DA0               	rlf	__tdiv_to_l_@quot,f
  6583     112B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6584     112C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6585     112D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6586     112E  0BF8               	decfsz	??__tdiv_to_l_,f
  6587     112F  2929               	goto	u4995
  6588     1130  3001               	movlw	1
  6589     1131  02A5               	subwf	__tdiv_to_l_@exp1,f
  6590     1132                     l661:
  6591     1132  0825               	movf	__tdiv_to_l_@exp1,w
  6592     1133  1D03               	btfss	3,2
  6593     1134  2936               	goto	u5001
  6594     1135  2937               	goto	u5000
  6595     1136                     u5001:
  6596     1136  2927               	goto	l3266
  6597     1137                     u5000:
  6598     1137                     l3268:
  6599     1137  0823               	movf	__tdiv_to_l_@quot+3,w
  6600     1138  00F3               	movwf	?__tdiv_to_l_+3
  6601     1139  0822               	movf	__tdiv_to_l_@quot+2,w
  6602     113A  00F2               	movwf	?__tdiv_to_l_+2
  6603     113B  0821               	movf	__tdiv_to_l_@quot+1,w
  6604     113C  00F1               	movwf	?__tdiv_to_l_+1
  6605     113D  0820               	movf	__tdiv_to_l_@quot,w
  6606     113E  00F0               	movwf	?__tdiv_to_l_
  6607     113F                     l650:
  6608     113F  0008               	return
  6609     1140                     __end_of__tdiv_to_l_:
  6610                           
  6611                           	psect	text8
  6612     00FB                     __ptext8:	
  6613 ;; *************** function __div_to_l_ *****************
  6614 ;; Defined at:
  6615 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  f1              4    0[COMMON] unsigned long 
  6618 ;;  f2              4    4[COMMON] unsigned long 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  quot            4    0[BANK0 ] unsigned long 
  6621 ;;  exp1            1    5[BANK0 ] unsigned char 
  6622 ;;  cntr            1    4[BANK0 ] unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  4    0[COMMON] unsigned long 
  6625 ;; Registers used:
  6626 ;;		wreg, status,2, status,0
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6632 ;;      Params:         8       0       0       0       0
  6633 ;;      Locals:         0       6       0       0       0
  6634 ;;      Temps:          1       0       0       0       0
  6635 ;;      Totals:         9       6       0       0       0
  6636 ;;Total ram usage:       15 bytes
  6637 ;; Hardware stack levels used: 1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_sprintf
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645     00FB                     __div_to_l_:	
  6646                           ;psect for function __div_to_l_
  6647                           
  6648     00FB                     l3272:	
  6649                           ;incstack = 0
  6650                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6651                           
  6652     00FB  1003               	clrc
  6653     00FC  0D72               	rlf	__div_to_l_@f1+2,w
  6654     00FD  0D73               	rlf	__div_to_l_@f1+3,w
  6655     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  6656     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  6657     0100  00A5               	movwf	__div_to_l_@exp1
  6658     0101  0825               	movf	__div_to_l_@exp1,w
  6659     0102  1D03               	btfss	3,2
  6660     0103  2905               	goto	u5011
  6661     0104  2906               	goto	u5010
  6662     0105                     u5011:
  6663     0105  290F               	goto	l3278
  6664     0106                     u5010:
  6665     0106                     l3274:
  6666     0106  3000               	movlw	0
  6667     0107  00F3               	movwf	?__div_to_l_+3
  6668     0108  3000               	movlw	0
  6669     0109  00F2               	movwf	?__div_to_l_+2
  6670     010A  3000               	movlw	0
  6671     010B  00F1               	movwf	?__div_to_l_+1
  6672     010C  3000               	movlw	0
  6673     010D  00F0               	movwf	?__div_to_l_
  6674     010E  29B2               	goto	l603
  6675     010F                     l3278:
  6676     010F  1003               	clrc
  6677     0110  0D76               	rlf	__div_to_l_@f2+2,w
  6678     0111  0D77               	rlf	__div_to_l_@f2+3,w
  6679     0112  00A4               	movwf	__div_to_l_@cntr
  6680     0113  0824               	movf	__div_to_l_@cntr,w
  6681     0114  1D03               	btfss	3,2
  6682     0115  2917               	goto	u5021
  6683     0116  2918               	goto	u5020
  6684     0117                     u5021:
  6685     0117  2919               	goto	l604
  6686     0118                     u5020:
  6687     0118  2906               	goto	l3274
  6688     0119                     l604:
  6689     0119  17F2               	bsf	__div_to_l_@f1+2,7
  6690     011A                     l3284:
  6691     011A  30FF               	movlw	255
  6692     011B  05F0               	andwf	__div_to_l_@f1,f
  6693     011C  30FF               	movlw	255
  6694     011D  05F1               	andwf	__div_to_l_@f1+1,f
  6695     011E  30FF               	movlw	255
  6696     011F  05F2               	andwf	__div_to_l_@f1+2,f
  6697     0120  3000               	movlw	0
  6698     0121  05F3               	andwf	__div_to_l_@f1+3,f
  6699     0122                     l3286:
  6700     0122  17F6               	bsf	__div_to_l_@f2+2,7
  6701     0123  30FF               	movlw	255
  6702     0124  05F4               	andwf	__div_to_l_@f2,f
  6703     0125  30FF               	movlw	255
  6704     0126  05F5               	andwf	__div_to_l_@f2+1,f
  6705     0127  30FF               	movlw	255
  6706     0128  05F6               	andwf	__div_to_l_@f2+2,f
  6707     0129  3000               	movlw	0
  6708     012A  05F7               	andwf	__div_to_l_@f2+3,f
  6709     012B  3000               	movlw	0
  6710     012C  00A3               	movwf	__div_to_l_@quot+3
  6711     012D  3000               	movlw	0
  6712     012E  00A2               	movwf	__div_to_l_@quot+2
  6713     012F  3000               	movlw	0
  6714     0130  00A1               	movwf	__div_to_l_@quot+1
  6715     0131  3000               	movlw	0
  6716     0132  00A0               	movwf	__div_to_l_@quot
  6717     0133                     l3288:
  6718     0133  307F               	movlw	127
  6719     0134  02A5               	subwf	__div_to_l_@exp1,f
  6720     0135                     l3290:
  6721     0135  30A0               	movlw	160
  6722     0136  0724               	addwf	__div_to_l_@cntr,w
  6723     0137  00F8               	movwf	??__div_to_l_
  6724     0138  0878               	movf	??__div_to_l_,w
  6725     0139  02A5               	subwf	__div_to_l_@exp1,f
  6726     013A  3020               	movlw	32
  6727     013B  00A4               	movwf	__div_to_l_@cntr
  6728     013C                     l3292:
  6729     013C  3001               	movlw	1
  6730     013D  00F8               	movwf	??__div_to_l_
  6731     013E                     u5035:
  6732     013E  1003               	clrc
  6733     013F  0DA0               	rlf	__div_to_l_@quot,f
  6734     0140  0DA1               	rlf	__div_to_l_@quot+1,f
  6735     0141  0DA2               	rlf	__div_to_l_@quot+2,f
  6736     0142  0DA3               	rlf	__div_to_l_@quot+3,f
  6737     0143  0BF8               	decfsz	??__div_to_l_,f
  6738     0144  293E               	goto	u5035
  6739     0145                     l3294:
  6740     0145  0877               	movf	__div_to_l_@f2+3,w
  6741     0146  0273               	subwf	__div_to_l_@f1+3,w
  6742     0147  1D03               	skipz
  6743     0148  2953               	goto	u5045
  6744     0149  0876               	movf	__div_to_l_@f2+2,w
  6745     014A  0272               	subwf	__div_to_l_@f1+2,w
  6746     014B  1D03               	skipz
  6747     014C  2953               	goto	u5045
  6748     014D  0875               	movf	__div_to_l_@f2+1,w
  6749     014E  0271               	subwf	__div_to_l_@f1+1,w
  6750     014F  1D03               	skipz
  6751     0150  2953               	goto	u5045
  6752     0151  0874               	movf	__div_to_l_@f2,w
  6753     0152  0270               	subwf	__div_to_l_@f1,w
  6754     0153                     u5045:
  6755     0153  1C03               	skipc
  6756     0154  2956               	goto	u5041
  6757     0155  2957               	goto	u5040
  6758     0156                     u5041:
  6759     0156  2966               	goto	l3300
  6760     0157                     u5040:
  6761     0157                     l3296:
  6762     0157  0874               	movf	__div_to_l_@f2,w
  6763     0158  02F0               	subwf	__div_to_l_@f1,f
  6764     0159  0875               	movf	__div_to_l_@f2+1,w
  6765     015A  1C03               	skipc
  6766     015B  0F75               	incfsz	__div_to_l_@f2+1,w
  6767     015C  02F1               	subwf	__div_to_l_@f1+1,f
  6768     015D  0876               	movf	__div_to_l_@f2+2,w
  6769     015E  1C03               	skipc
  6770     015F  0F76               	incfsz	__div_to_l_@f2+2,w
  6771     0160  02F2               	subwf	__div_to_l_@f1+2,f
  6772     0161  0877               	movf	__div_to_l_@f2+3,w
  6773     0162  1C03               	skipc
  6774     0163  0F77               	incfsz	__div_to_l_@f2+3,w
  6775     0164  02F3               	subwf	__div_to_l_@f1+3,f
  6776     0165                     l3298:
  6777     0165  1420               	bsf	__div_to_l_@quot,0
  6778     0166                     l3300:
  6779     0166  3001               	movlw	1
  6780     0167  00F8               	movwf	??__div_to_l_
  6781     0168                     u5055:
  6782     0168  1003               	clrc
  6783     0169  0DF0               	rlf	__div_to_l_@f1,f
  6784     016A  0DF1               	rlf	__div_to_l_@f1+1,f
  6785     016B  0DF2               	rlf	__div_to_l_@f1+2,f
  6786     016C  0DF3               	rlf	__div_to_l_@f1+3,f
  6787     016D  0BF8               	decfsz	??__div_to_l_,f
  6788     016E  2968               	goto	u5055
  6789     016F                     l3302:
  6790     016F  3001               	movlw	1
  6791     0170  02A4               	subwf	__div_to_l_@cntr,f
  6792     0171  1D03               	btfss	3,2
  6793     0172  2974               	goto	u5061
  6794     0173  2975               	goto	u5060
  6795     0174                     u5061:
  6796     0174  293C               	goto	l3292
  6797     0175                     u5060:
  6798     0175                     l607:
  6799     0175  1FA5               	btfss	__div_to_l_@exp1,7
  6800     0176  2978               	goto	u5071
  6801     0177  2979               	goto	u5070
  6802     0178                     u5071:
  6803     0178  2993               	goto	l3312
  6804     0179                     u5070:
  6805     0179                     l3304:
  6806     0179  0825               	movf	__div_to_l_@exp1,w
  6807     017A  3A80               	xorlw	128
  6808     017B  3E9F               	addlw	159
  6809     017C  1803               	skipnc
  6810     017D  297F               	goto	u5081
  6811     017E  2980               	goto	u5080
  6812     017F                     u5081:
  6813     017F  2981               	goto	l3310
  6814     0180                     u5080:
  6815     0180  2906               	goto	l3274
  6816     0181                     l3310:
  6817     0181  3001               	movlw	1
  6818     0182                     u5095:
  6819     0182  1003               	clrc
  6820     0183  0CA3               	rrf	__div_to_l_@quot+3,f
  6821     0184  0CA2               	rrf	__div_to_l_@quot+2,f
  6822     0185  0CA1               	rrf	__div_to_l_@quot+1,f
  6823     0186  0CA0               	rrf	__div_to_l_@quot,f
  6824     0187  3EFF               	addlw	-1
  6825     0188  1D03               	skipz
  6826     0189  2982               	goto	u5095
  6827     018A  3001               	movlw	1
  6828     018B  00F8               	movwf	??__div_to_l_
  6829     018C  0878               	movf	??__div_to_l_,w
  6830     018D  07A5               	addwf	__div_to_l_@exp1,f
  6831     018E  1D03               	btfss	3,2
  6832     018F  2991               	goto	u5101
  6833     0190  2992               	goto	u5100
  6834     0191                     u5101:
  6835     0191  2981               	goto	l3310
  6836     0192                     u5100:
  6837     0192  29AA               	goto	l3320
  6838     0193                     l3312:
  6839     0193  3020               	movlw	32
  6840     0194  0225               	subwf	__div_to_l_@exp1,w
  6841     0195  1C03               	skipc
  6842     0196  2998               	goto	u5111
  6843     0197  2999               	goto	u5110
  6844     0198                     u5111:
  6845     0198  29A5               	goto	l614
  6846     0199                     u5110:
  6847     0199  2906               	goto	l3274
  6848     019A                     l3318:
  6849     019A  3001               	movlw	1
  6850     019B  00F8               	movwf	??__div_to_l_
  6851     019C                     u5125:
  6852     019C  1003               	clrc
  6853     019D  0DA0               	rlf	__div_to_l_@quot,f
  6854     019E  0DA1               	rlf	__div_to_l_@quot+1,f
  6855     019F  0DA2               	rlf	__div_to_l_@quot+2,f
  6856     01A0  0DA3               	rlf	__div_to_l_@quot+3,f
  6857     01A1  0BF8               	decfsz	??__div_to_l_,f
  6858     01A2  299C               	goto	u5125
  6859     01A3  3001               	movlw	1
  6860     01A4  02A5               	subwf	__div_to_l_@exp1,f
  6861     01A5                     l614:
  6862     01A5  0825               	movf	__div_to_l_@exp1,w
  6863     01A6  1D03               	btfss	3,2
  6864     01A7  29A9               	goto	u5131
  6865     01A8  29AA               	goto	u5130
  6866     01A9                     u5131:
  6867     01A9  299A               	goto	l3318
  6868     01AA                     u5130:
  6869     01AA                     l3320:
  6870     01AA  0823               	movf	__div_to_l_@quot+3,w
  6871     01AB  00F3               	movwf	?__div_to_l_+3
  6872     01AC  0822               	movf	__div_to_l_@quot+2,w
  6873     01AD  00F2               	movwf	?__div_to_l_+2
  6874     01AE  0821               	movf	__div_to_l_@quot+1,w
  6875     01AF  00F1               	movwf	?__div_to_l_+1
  6876     01B0  0820               	movf	__div_to_l_@quot,w
  6877     01B1  00F0               	movwf	?__div_to_l_
  6878     01B2                     l603:
  6879     01B2  0008               	return
  6880     01B3                     __end_of__div_to_l_:
  6881                           
  6882                           	psect	text9
  6883     08A4                     __ptext9:	
  6884 ;; *************** function ___xxtofl *****************
  6885 ;; Defined at:
  6886 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  sign            1    wreg     unsigned char 
  6889 ;;  val             4    0[COMMON] long 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  sign            1    8[COMMON] unsigned char 
  6892 ;;  arg             4   10[COMMON] unsigned long 
  6893 ;;  exp             1    9[COMMON] unsigned char 
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  4    0[COMMON] unsigned char 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, status,0
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6903 ;;      Params:         4       0       0       0       0
  6904 ;;      Locals:         6       0       0       0       0
  6905 ;;      Temps:          4       0       0       0       0
  6906 ;;      Totals:        14       0       0       0       0
  6907 ;;Total ram usage:       14 bytes
  6908 ;; Hardware stack levels used: 1
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_main
  6913 ;;		_sprintf
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917     08A4                     ___xxtofl:	
  6918                           ;psect for function ___xxtofl
  6919                           
  6920                           
  6921                           ;incstack = 0
  6922                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6923                           ;___xxtofl@sign stored from wreg
  6924     08A4  00F8               	movwf	___xxtofl@sign
  6925     08A5                     l3464:
  6926     08A5  0878               	movf	___xxtofl@sign,w
  6927     08A6  1903               	btfsc	3,2
  6928     08A7  28A9               	goto	u5521
  6929     08A8  28AA               	goto	u5520
  6930     08A9                     u5521:
  6931     08A9  28BE               	goto	l3470
  6932     08AA                     u5520:
  6933     08AA                     l3466:
  6934     08AA  1FF3               	btfss	___xxtofl@val+3,7
  6935     08AB  28AD               	goto	u5531
  6936     08AC  28AE               	goto	u5530
  6937     08AD                     u5531:
  6938     08AD  28BE               	goto	l3470
  6939     08AE                     u5530:
  6940     08AE                     l3468:
  6941     08AE  0970               	comf	___xxtofl@val,w
  6942     08AF  00FA               	movwf	___xxtofl@arg
  6943     08B0  0971               	comf	___xxtofl@val+1,w
  6944     08B1  00FB               	movwf	___xxtofl@arg+1
  6945     08B2  0972               	comf	___xxtofl@val+2,w
  6946     08B3  00FC               	movwf	___xxtofl@arg+2
  6947     08B4  0973               	comf	___xxtofl@val+3,w
  6948     08B5  00FD               	movwf	___xxtofl@arg+3
  6949     08B6  0AFA               	incf	___xxtofl@arg,f
  6950     08B7  1903               	skipnz
  6951     08B8  0AFB               	incf	___xxtofl@arg+1,f
  6952     08B9  1903               	skipnz
  6953     08BA  0AFC               	incf	___xxtofl@arg+2,f
  6954     08BB  1903               	skipnz
  6955     08BC  0AFD               	incf	___xxtofl@arg+3,f
  6956     08BD  28C6               	goto	l900
  6957     08BE                     l3470:
  6958     08BE  0873               	movf	___xxtofl@val+3,w
  6959     08BF  00FD               	movwf	___xxtofl@arg+3
  6960     08C0  0872               	movf	___xxtofl@val+2,w
  6961     08C1  00FC               	movwf	___xxtofl@arg+2
  6962     08C2  0871               	movf	___xxtofl@val+1,w
  6963     08C3  00FB               	movwf	___xxtofl@arg+1
  6964     08C4  0870               	movf	___xxtofl@val,w
  6965     08C5  00FA               	movwf	___xxtofl@arg
  6966     08C6                     l900:
  6967     08C6  0873               	movf	___xxtofl@val+3,w
  6968     08C7  0472               	iorwf	___xxtofl@val+2,w
  6969     08C8  0471               	iorwf	___xxtofl@val+1,w
  6970     08C9  0470               	iorwf	___xxtofl@val,w
  6971     08CA  1D03               	skipz
  6972     08CB  28CD               	goto	u5541
  6973     08CC  28CE               	goto	u5540
  6974     08CD                     u5541:
  6975     08CD  28D7               	goto	l3476
  6976     08CE                     u5540:
  6977     08CE                     l3472:
  6978     08CE  3000               	movlw	0
  6979     08CF  00F3               	movwf	?___xxtofl+3
  6980     08D0  3000               	movlw	0
  6981     08D1  00F2               	movwf	?___xxtofl+2
  6982     08D2  3000               	movlw	0
  6983     08D3  00F1               	movwf	?___xxtofl+1
  6984     08D4  3000               	movlw	0
  6985     08D5  00F0               	movwf	?___xxtofl
  6986     08D6  295B               	goto	l902
  6987     08D7                     l3476:
  6988     08D7  3096               	movlw	150
  6989     08D8  00F9               	movwf	___xxtofl@exp
  6990     08D9  28E7               	goto	l3480
  6991     08DA                     l3478:
  6992     08DA  3001               	movlw	1
  6993     08DB  00F4               	movwf	??___xxtofl
  6994     08DC  0874               	movf	??___xxtofl,w
  6995     08DD  07F9               	addwf	___xxtofl@exp,f
  6996     08DE  3001               	movlw	1
  6997     08DF                     u5555:
  6998     08DF  1003               	clrc
  6999     08E0  0CFD               	rrf	___xxtofl@arg+3,f
  7000     08E1  0CFC               	rrf	___xxtofl@arg+2,f
  7001     08E2  0CFB               	rrf	___xxtofl@arg+1,f
  7002     08E3  0CFA               	rrf	___xxtofl@arg,f
  7003     08E4  3EFF               	addlw	-1
  7004     08E5  1D03               	skipz
  7005     08E6  28DF               	goto	u5555
  7006     08E7                     l3480:
  7007     08E7  30FE               	movlw	254
  7008     08E8  057D               	andwf	___xxtofl@arg+3,w
  7009     08E9  1D03               	btfss	3,2
  7010     08EA  28EC               	goto	u5561
  7011     08EB  28ED               	goto	u5560
  7012     08EC                     u5561:
  7013     08EC  28DA               	goto	l3478
  7014     08ED                     u5560:
  7015     08ED  2909               	goto	l906
  7016     08EE                     l3482:
  7017     08EE  3001               	movlw	1
  7018     08EF  00F4               	movwf	??___xxtofl
  7019     08F0  0874               	movf	??___xxtofl,w
  7020     08F1  07F9               	addwf	___xxtofl@exp,f
  7021     08F2                     l3484:
  7022     08F2  3001               	movlw	1
  7023     08F3  07FA               	addwf	___xxtofl@arg,f
  7024     08F4  3000               	movlw	0
  7025     08F5  1803               	skipnc
  7026     08F6  3001               	movlw	1
  7027     08F7  07FB               	addwf	___xxtofl@arg+1,f
  7028     08F8  3000               	movlw	0
  7029     08F9  1803               	skipnc
  7030     08FA  3001               	movlw	1
  7031     08FB  07FC               	addwf	___xxtofl@arg+2,f
  7032     08FC  3000               	movlw	0
  7033     08FD  1803               	skipnc
  7034     08FE  3001               	movlw	1
  7035     08FF  07FD               	addwf	___xxtofl@arg+3,f
  7036     0900                     l3486:
  7037     0900  3001               	movlw	1
  7038     0901                     u5575:
  7039     0901  1003               	clrc
  7040     0902  0CFD               	rrf	___xxtofl@arg+3,f
  7041     0903  0CFC               	rrf	___xxtofl@arg+2,f
  7042     0904  0CFB               	rrf	___xxtofl@arg+1,f
  7043     0905  0CFA               	rrf	___xxtofl@arg,f
  7044     0906  3EFF               	addlw	-1
  7045     0907  1D03               	skipz
  7046     0908  2901               	goto	u5575
  7047     0909                     l906:
  7048     0909  30FF               	movlw	255
  7049     090A  057D               	andwf	___xxtofl@arg+3,w
  7050     090B  1D03               	btfss	3,2
  7051     090C  290E               	goto	u5581
  7052     090D  290F               	goto	u5580
  7053     090E                     u5581:
  7054     090E  28EE               	goto	l3482
  7055     090F                     u5580:
  7056     090F  291B               	goto	l3490
  7057     0910                     l3488:
  7058     0910  3001               	movlw	1
  7059     0911  02F9               	subwf	___xxtofl@exp,f
  7060     0912  3001               	movlw	1
  7061     0913  00F4               	movwf	??___xxtofl
  7062     0914                     u5595:
  7063     0914  1003               	clrc
  7064     0915  0DFA               	rlf	___xxtofl@arg,f
  7065     0916  0DFB               	rlf	___xxtofl@arg+1,f
  7066     0917  0DFC               	rlf	___xxtofl@arg+2,f
  7067     0918  0DFD               	rlf	___xxtofl@arg+3,f
  7068     0919  0BF4               	decfsz	??___xxtofl,f
  7069     091A  2914               	goto	u5595
  7070     091B                     l3490:
  7071     091B  1BFC               	btfsc	___xxtofl@arg+2,7
  7072     091C  291E               	goto	u5601
  7073     091D  291F               	goto	u5600
  7074     091E                     u5601:
  7075     091E  2925               	goto	l913
  7076     091F                     u5600:
  7077     091F                     l3492:
  7078     091F  3002               	movlw	2
  7079     0920  0279               	subwf	___xxtofl@exp,w
  7080     0921  1803               	skipnc
  7081     0922  2924               	goto	u5611
  7082     0923  2925               	goto	u5610
  7083     0924                     u5611:
  7084     0924  2910               	goto	l3488
  7085     0925                     u5610:
  7086     0925                     l913:
  7087     0925  1879               	btfsc	___xxtofl@exp,0
  7088     0926  2928               	goto	u5621
  7089     0927  2929               	goto	u5620
  7090     0928                     u5621:
  7091     0928  2931               	goto	l914
  7092     0929                     u5620:
  7093     0929                     l3494:
  7094     0929  30FF               	movlw	255
  7095     092A  05FA               	andwf	___xxtofl@arg,f
  7096     092B  30FF               	movlw	255
  7097     092C  05FB               	andwf	___xxtofl@arg+1,f
  7098     092D  307F               	movlw	127
  7099     092E  05FC               	andwf	___xxtofl@arg+2,f
  7100     092F  30FF               	movlw	255
  7101     0930  05FD               	andwf	___xxtofl@arg+3,f
  7102     0931                     l914:
  7103     0931  1003               	clrc
  7104     0932  0CF9               	rrf	___xxtofl@exp,f
  7105     0933                     l3496:
  7106     0933  0879               	movf	___xxtofl@exp,w
  7107     0934  00F4               	movwf	??___xxtofl
  7108     0935  01F5               	clrf	??___xxtofl+1
  7109     0936  01F6               	clrf	??___xxtofl+2
  7110     0937  01F7               	clrf	??___xxtofl+3
  7111     0938  3018               	movlw	24
  7112     0939                     u5635:
  7113     0939  1003               	clrc
  7114     093A  0DF4               	rlf	??___xxtofl,f
  7115     093B  0DF5               	rlf	??___xxtofl+1,f
  7116     093C  0DF6               	rlf	??___xxtofl+2,f
  7117     093D  0DF7               	rlf	??___xxtofl+3,f
  7118     093E                     u5630:
  7119     093E  3EFF               	addlw	-1
  7120     093F  1D03               	skipz
  7121     0940  2939               	goto	u5635
  7122     0941  0874               	movf	??___xxtofl,w
  7123     0942  04FA               	iorwf	___xxtofl@arg,f
  7124     0943  0875               	movf	??___xxtofl+1,w
  7125     0944  04FB               	iorwf	___xxtofl@arg+1,f
  7126     0945  0876               	movf	??___xxtofl+2,w
  7127     0946  04FC               	iorwf	___xxtofl@arg+2,f
  7128     0947  0877               	movf	??___xxtofl+3,w
  7129     0948  04FD               	iorwf	___xxtofl@arg+3,f
  7130     0949                     l3498:
  7131     0949  0878               	movf	___xxtofl@sign,w
  7132     094A  1903               	btfsc	3,2
  7133     094B  294D               	goto	u5641
  7134     094C  294E               	goto	u5640
  7135     094D                     u5641:
  7136     094D  2953               	goto	l3504
  7137     094E                     u5640:
  7138     094E                     l3500:
  7139     094E  1FF3               	btfss	___xxtofl@val+3,7
  7140     094F  2951               	goto	u5651
  7141     0950  2952               	goto	u5650
  7142     0951                     u5651:
  7143     0951  2953               	goto	l3504
  7144     0952                     u5650:
  7145     0952                     l3502:
  7146     0952  17FD               	bsf	___xxtofl@arg+3,7
  7147     0953                     l3504:
  7148     0953  087D               	movf	___xxtofl@arg+3,w
  7149     0954  00F3               	movwf	?___xxtofl+3
  7150     0955  087C               	movf	___xxtofl@arg+2,w
  7151     0956  00F2               	movwf	?___xxtofl+2
  7152     0957  087B               	movf	___xxtofl@arg+1,w
  7153     0958  00F1               	movwf	?___xxtofl+1
  7154     0959  087A               	movf	___xxtofl@arg,w
  7155     095A  00F0               	movwf	?___xxtofl
  7156     095B                     l902:
  7157     095B  0008               	return
  7158     095C                     __end_of___xxtofl:
  7159                           
  7160                           	psect	text10
  7161     19A4                     __ptext10:	
  7162 ;; *************** function ___wmul *****************
  7163 ;; Defined at:
  7164 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  multiplier      2    0[COMMON] unsigned int 
  7167 ;;  multiplicand    2    2[COMMON] unsigned int 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  product         2    4[COMMON] unsigned int 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  2    0[COMMON] unsigned int 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7179 ;;      Params:         4       0       0       0       0
  7180 ;;      Locals:         2       0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0
  7182 ;;      Totals:         6       0       0       0       0
  7183 ;;Total ram usage:        6 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; This function calls:
  7186 ;;		Nothing
  7187 ;; This function is called by:
  7188 ;;		_sprintf
  7189 ;;		_convint
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193     19A4                     ___wmul:	
  7194                           ;psect for function ___wmul
  7195                           
  7196     19A4                     l3324:	
  7197                           ;incstack = 0
  7198                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7199                           
  7200     19A4  01F4               	clrf	___wmul@product
  7201     19A5  01F5               	clrf	___wmul@product+1
  7202     19A6                     l3326:
  7203     19A6  1C70               	btfss	___wmul@multiplier,0
  7204     19A7  29A9               	goto	u5141
  7205     19A8  29AA               	goto	u5140
  7206     19A9                     u5141:
  7207     19A9  29B0               	goto	l433
  7208     19AA                     u5140:
  7209     19AA                     l3328:
  7210     19AA  0872               	movf	___wmul@multiplicand,w
  7211     19AB  07F4               	addwf	___wmul@product,f
  7212     19AC  1803               	skipnc
  7213     19AD  0AF5               	incf	___wmul@product+1,f
  7214     19AE  0873               	movf	___wmul@multiplicand+1,w
  7215     19AF  07F5               	addwf	___wmul@product+1,f
  7216     19B0                     l433:
  7217     19B0  3001               	movlw	1
  7218     19B1                     u5155:
  7219     19B1  1003               	clrc
  7220     19B2  0DF2               	rlf	___wmul@multiplicand,f
  7221     19B3  0DF3               	rlf	___wmul@multiplicand+1,f
  7222     19B4  3EFF               	addlw	-1
  7223     19B5  1D03               	skipz
  7224     19B6  29B1               	goto	u5155
  7225     19B7                     l3330:
  7226     19B7  3001               	movlw	1
  7227     19B8                     u5165:
  7228     19B8  1003               	clrc
  7229     19B9  0CF1               	rrf	___wmul@multiplier+1,f
  7230     19BA  0CF0               	rrf	___wmul@multiplier,f
  7231     19BB  3EFF               	addlw	-1
  7232     19BC  1D03               	skipz
  7233     19BD  29B8               	goto	u5165
  7234     19BE                     l3332:
  7235     19BE  0870               	movf	___wmul@multiplier,w
  7236     19BF  0471               	iorwf	___wmul@multiplier+1,w
  7237     19C0  1D03               	btfss	3,2
  7238     19C1  29C3               	goto	u5171
  7239     19C2  29C4               	goto	u5170
  7240     19C3                     u5171:
  7241     19C3  29A6               	goto	l3326
  7242     19C4                     u5170:
  7243     19C4                     l3334:
  7244     19C4  0875               	movf	___wmul@product+1,w
  7245     19C5  00F1               	movwf	?___wmul+1
  7246     19C6  0874               	movf	___wmul@product,w
  7247     19C7  00F0               	movwf	?___wmul
  7248     19C8                     l435:
  7249     19C8  0008               	return
  7250     19C9                     __end_of___wmul:
  7251                           
  7252                           	psect	text11
  7253     1B94                     __ptext11:	
  7254 ;; *************** function ___llmod *****************
  7255 ;; Defined at:
  7256 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  divisor         4    0[COMMON] unsigned long 
  7259 ;;  dividend        4    4[COMMON] unsigned long 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  counter         1    9[COMMON] unsigned char 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  4    0[COMMON] unsigned long 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, status,0
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7271 ;;      Params:         8       0       0       0       0
  7272 ;;      Locals:         1       0       0       0       0
  7273 ;;      Temps:          1       0       0       0       0
  7274 ;;      Totals:        10       0       0       0       0
  7275 ;;Total ram usage:       10 bytes
  7276 ;; Hardware stack levels used: 1
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_sprintf
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284     1B94                     ___llmod:	
  7285                           ;psect for function ___llmod
  7286                           
  7287     1B94                     l3438:	
  7288                           ;incstack = 0
  7289                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7290                           
  7291     1B94  0873               	movf	___llmod@divisor+3,w
  7292     1B95  0472               	iorwf	___llmod@divisor+2,w
  7293     1B96  0471               	iorwf	___llmod@divisor+1,w
  7294     1B97  0470               	iorwf	___llmod@divisor,w
  7295     1B98  1903               	skipnz
  7296     1B99  2B9B               	goto	u5461
  7297     1B9A  2B9C               	goto	u5460
  7298     1B9B                     u5461:
  7299     1B9B  2BDF               	goto	l3454
  7300     1B9C                     u5460:
  7301     1B9C                     l3440:
  7302     1B9C  01F9               	clrf	___llmod@counter
  7303     1B9D  0AF9               	incf	___llmod@counter,f
  7304     1B9E  2BAC               	goto	l3444
  7305     1B9F                     l3442:
  7306     1B9F  3001               	movlw	1
  7307     1BA0  00F8               	movwf	??___llmod
  7308     1BA1                     u5475:
  7309     1BA1  1003               	clrc
  7310     1BA2  0DF0               	rlf	___llmod@divisor,f
  7311     1BA3  0DF1               	rlf	___llmod@divisor+1,f
  7312     1BA4  0DF2               	rlf	___llmod@divisor+2,f
  7313     1BA5  0DF3               	rlf	___llmod@divisor+3,f
  7314     1BA6  0BF8               	decfsz	??___llmod,f
  7315     1BA7  2BA1               	goto	u5475
  7316     1BA8  3001               	movlw	1
  7317     1BA9  00F8               	movwf	??___llmod
  7318     1BAA  0878               	movf	??___llmod,w
  7319     1BAB  07F9               	addwf	___llmod@counter,f
  7320     1BAC                     l3444:
  7321     1BAC  1FF3               	btfss	___llmod@divisor+3,7
  7322     1BAD  2BAF               	goto	u5481
  7323     1BAE  2BB0               	goto	u5480
  7324     1BAF                     u5481:
  7325     1BAF  2B9F               	goto	l3442
  7326     1BB0                     u5480:
  7327     1BB0                     l3446:
  7328     1BB0  0873               	movf	___llmod@divisor+3,w
  7329     1BB1  0277               	subwf	___llmod@dividend+3,w
  7330     1BB2  1D03               	skipz
  7331     1BB3  2BBE               	goto	u5495
  7332     1BB4  0872               	movf	___llmod@divisor+2,w
  7333     1BB5  0276               	subwf	___llmod@dividend+2,w
  7334     1BB6  1D03               	skipz
  7335     1BB7  2BBE               	goto	u5495
  7336     1BB8  0871               	movf	___llmod@divisor+1,w
  7337     1BB9  0275               	subwf	___llmod@dividend+1,w
  7338     1BBA  1D03               	skipz
  7339     1BBB  2BBE               	goto	u5495
  7340     1BBC  0870               	movf	___llmod@divisor,w
  7341     1BBD  0274               	subwf	___llmod@dividend,w
  7342     1BBE                     u5495:
  7343     1BBE  1C03               	skipc
  7344     1BBF  2BC1               	goto	u5491
  7345     1BC0  2BC2               	goto	u5490
  7346     1BC1                     u5491:
  7347     1BC1  2BD0               	goto	l3450
  7348     1BC2                     u5490:
  7349     1BC2                     l3448:
  7350     1BC2  0870               	movf	___llmod@divisor,w
  7351     1BC3  02F4               	subwf	___llmod@dividend,f
  7352     1BC4  0871               	movf	___llmod@divisor+1,w
  7353     1BC5  1C03               	skipc
  7354     1BC6  0F71               	incfsz	___llmod@divisor+1,w
  7355     1BC7  02F5               	subwf	___llmod@dividend+1,f
  7356     1BC8  0872               	movf	___llmod@divisor+2,w
  7357     1BC9  1C03               	skipc
  7358     1BCA  0F72               	incfsz	___llmod@divisor+2,w
  7359     1BCB  02F6               	subwf	___llmod@dividend+2,f
  7360     1BCC  0873               	movf	___llmod@divisor+3,w
  7361     1BCD  1C03               	skipc
  7362     1BCE  0F73               	incfsz	___llmod@divisor+3,w
  7363     1BCF  02F7               	subwf	___llmod@dividend+3,f
  7364     1BD0                     l3450:
  7365     1BD0  3001               	movlw	1
  7366     1BD1                     u5505:
  7367     1BD1  1003               	clrc
  7368     1BD2  0CF3               	rrf	___llmod@divisor+3,f
  7369     1BD3  0CF2               	rrf	___llmod@divisor+2,f
  7370     1BD4  0CF1               	rrf	___llmod@divisor+1,f
  7371     1BD5  0CF0               	rrf	___llmod@divisor,f
  7372     1BD6  3EFF               	addlw	-1
  7373     1BD7  1D03               	skipz
  7374     1BD8  2BD1               	goto	u5505
  7375     1BD9                     l3452:
  7376     1BD9  3001               	movlw	1
  7377     1BDA  02F9               	subwf	___llmod@counter,f
  7378     1BDB  1D03               	btfss	3,2
  7379     1BDC  2BDE               	goto	u5511
  7380     1BDD  2BDF               	goto	u5510
  7381     1BDE                     u5511:
  7382     1BDE  2BB0               	goto	l3446
  7383     1BDF                     u5510:
  7384     1BDF                     l3454:
  7385     1BDF  0877               	movf	___llmod@dividend+3,w
  7386     1BE0  00F3               	movwf	?___llmod+3
  7387     1BE1  0876               	movf	___llmod@dividend+2,w
  7388     1BE2  00F2               	movwf	?___llmod+2
  7389     1BE3  0875               	movf	___llmod@dividend+1,w
  7390     1BE4  00F1               	movwf	?___llmod+1
  7391     1BE5  0874               	movf	___llmod@dividend,w
  7392     1BE6  00F0               	movwf	?___llmod
  7393     1BE7                     l689:
  7394     1BE7  0008               	return
  7395     1BE8                     __end_of___llmod:
  7396                           
  7397                           	psect	text12
  7398     1D5E                     __ptext12:	
  7399 ;; *************** function ___lldiv *****************
  7400 ;; Defined at:
  7401 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  divisor         4    0[COMMON] unsigned long 
  7404 ;;  dividend        4    4[COMMON] unsigned long 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;  quotient        4    9[COMMON] unsigned long 
  7407 ;;  counter         1   13[COMMON] unsigned char 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  4    0[COMMON] unsigned long 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7417 ;;      Params:         8       0       0       0       0
  7418 ;;      Locals:         5       0       0       0       0
  7419 ;;      Temps:          1       0       0       0       0
  7420 ;;      Totals:        14       0       0       0       0
  7421 ;;Total ram usage:       14 bytes
  7422 ;; Hardware stack levels used: 1
  7423 ;; This function calls:
  7424 ;;		Nothing
  7425 ;; This function is called by:
  7426 ;;		_sprintf
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430     1D5E                     ___lldiv:	
  7431                           ;psect for function ___lldiv
  7432                           
  7433     1D5E                     l3338:	
  7434                           ;incstack = 0
  7435                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7436                           
  7437     1D5E  3000               	movlw	0
  7438     1D5F  00FC               	movwf	___lldiv@quotient+3
  7439     1D60  3000               	movlw	0
  7440     1D61  00FB               	movwf	___lldiv@quotient+2
  7441     1D62  3000               	movlw	0
  7442     1D63  00FA               	movwf	___lldiv@quotient+1
  7443     1D64  3000               	movlw	0
  7444     1D65  00F9               	movwf	___lldiv@quotient
  7445     1D66  0873               	movf	___lldiv@divisor+3,w
  7446     1D67  0472               	iorwf	___lldiv@divisor+2,w
  7447     1D68  0471               	iorwf	___lldiv@divisor+1,w
  7448     1D69  0470               	iorwf	___lldiv@divisor,w
  7449     1D6A  1903               	skipnz
  7450     1D6B  2D6D               	goto	u5181
  7451     1D6C  2D6E               	goto	u5180
  7452     1D6D                     u5181:
  7453     1D6D  2DBB               	goto	l3358
  7454     1D6E                     u5180:
  7455     1D6E                     l3340:
  7456     1D6E  01FD               	clrf	___lldiv@counter
  7457     1D6F  0AFD               	incf	___lldiv@counter,f
  7458     1D70  2D7E               	goto	l3344
  7459     1D71                     l3342:
  7460     1D71  3001               	movlw	1
  7461     1D72  00F8               	movwf	??___lldiv
  7462     1D73                     u5195:
  7463     1D73  1003               	clrc
  7464     1D74  0DF0               	rlf	___lldiv@divisor,f
  7465     1D75  0DF1               	rlf	___lldiv@divisor+1,f
  7466     1D76  0DF2               	rlf	___lldiv@divisor+2,f
  7467     1D77  0DF3               	rlf	___lldiv@divisor+3,f
  7468     1D78  0BF8               	decfsz	??___lldiv,f
  7469     1D79  2D73               	goto	u5195
  7470     1D7A  3001               	movlw	1
  7471     1D7B  00F8               	movwf	??___lldiv
  7472     1D7C  0878               	movf	??___lldiv,w
  7473     1D7D  07FD               	addwf	___lldiv@counter,f
  7474     1D7E                     l3344:
  7475     1D7E  1FF3               	btfss	___lldiv@divisor+3,7
  7476     1D7F  2D81               	goto	u5201
  7477     1D80  2D82               	goto	u5200
  7478     1D81                     u5201:
  7479     1D81  2D71               	goto	l3342
  7480     1D82                     u5200:
  7481     1D82                     l3346:
  7482     1D82  3001               	movlw	1
  7483     1D83  00F8               	movwf	??___lldiv
  7484     1D84                     u5215:
  7485     1D84  1003               	clrc
  7486     1D85  0DF9               	rlf	___lldiv@quotient,f
  7487     1D86  0DFA               	rlf	___lldiv@quotient+1,f
  7488     1D87  0DFB               	rlf	___lldiv@quotient+2,f
  7489     1D88  0DFC               	rlf	___lldiv@quotient+3,f
  7490     1D89  0BF8               	decfsz	??___lldiv,f
  7491     1D8A  2D84               	goto	u5215
  7492     1D8B                     l3348:
  7493     1D8B  0873               	movf	___lldiv@divisor+3,w
  7494     1D8C  0277               	subwf	___lldiv@dividend+3,w
  7495     1D8D  1D03               	skipz
  7496     1D8E  2D99               	goto	u5225
  7497     1D8F  0872               	movf	___lldiv@divisor+2,w
  7498     1D90  0276               	subwf	___lldiv@dividend+2,w
  7499     1D91  1D03               	skipz
  7500     1D92  2D99               	goto	u5225
  7501     1D93  0871               	movf	___lldiv@divisor+1,w
  7502     1D94  0275               	subwf	___lldiv@dividend+1,w
  7503     1D95  1D03               	skipz
  7504     1D96  2D99               	goto	u5225
  7505     1D97  0870               	movf	___lldiv@divisor,w
  7506     1D98  0274               	subwf	___lldiv@dividend,w
  7507     1D99                     u5225:
  7508     1D99  1C03               	skipc
  7509     1D9A  2D9C               	goto	u5221
  7510     1D9B  2D9D               	goto	u5220
  7511     1D9C                     u5221:
  7512     1D9C  2DAC               	goto	l3354
  7513     1D9D                     u5220:
  7514     1D9D                     l3350:
  7515     1D9D  0870               	movf	___lldiv@divisor,w
  7516     1D9E  02F4               	subwf	___lldiv@dividend,f
  7517     1D9F  0871               	movf	___lldiv@divisor+1,w
  7518     1DA0  1C03               	skipc
  7519     1DA1  0F71               	incfsz	___lldiv@divisor+1,w
  7520     1DA2  02F5               	subwf	___lldiv@dividend+1,f
  7521     1DA3  0872               	movf	___lldiv@divisor+2,w
  7522     1DA4  1C03               	skipc
  7523     1DA5  0F72               	incfsz	___lldiv@divisor+2,w
  7524     1DA6  02F6               	subwf	___lldiv@dividend+2,f
  7525     1DA7  0873               	movf	___lldiv@divisor+3,w
  7526     1DA8  1C03               	skipc
  7527     1DA9  0F73               	incfsz	___lldiv@divisor+3,w
  7528     1DAA  02F7               	subwf	___lldiv@dividend+3,f
  7529     1DAB                     l3352:
  7530     1DAB  1479               	bsf	___lldiv@quotient,0
  7531     1DAC                     l3354:
  7532     1DAC  3001               	movlw	1
  7533     1DAD                     u5235:
  7534     1DAD  1003               	clrc
  7535     1DAE  0CF3               	rrf	___lldiv@divisor+3,f
  7536     1DAF  0CF2               	rrf	___lldiv@divisor+2,f
  7537     1DB0  0CF1               	rrf	___lldiv@divisor+1,f
  7538     1DB1  0CF0               	rrf	___lldiv@divisor,f
  7539     1DB2  3EFF               	addlw	-1
  7540     1DB3  1D03               	skipz
  7541     1DB4  2DAD               	goto	u5235
  7542     1DB5                     l3356:
  7543     1DB5  3001               	movlw	1
  7544     1DB6  02FD               	subwf	___lldiv@counter,f
  7545     1DB7  1D03               	btfss	3,2
  7546     1DB8  2DBA               	goto	u5241
  7547     1DB9  2DBB               	goto	u5240
  7548     1DBA                     u5241:
  7549     1DBA  2D82               	goto	l3346
  7550     1DBB                     u5240:
  7551     1DBB                     l3358:
  7552     1DBB  087C               	movf	___lldiv@quotient+3,w
  7553     1DBC  00F3               	movwf	?___lldiv+3
  7554     1DBD  087B               	movf	___lldiv@quotient+2,w
  7555     1DBE  00F2               	movwf	?___lldiv+2
  7556     1DBF  087A               	movf	___lldiv@quotient+1,w
  7557     1DC0  00F1               	movwf	?___lldiv+1
  7558     1DC1  0879               	movf	___lldiv@quotient,w
  7559     1DC2  00F0               	movwf	?___lldiv
  7560     1DC3                     l469:
  7561     1DC3  0008               	return
  7562     1DC4                     __end_of___lldiv:
  7563                           
  7564                           	psect	text13
  7565     1011                     __ptext13:	
  7566 ;; *************** function ___fltol *****************
  7567 ;; Defined at:
  7568 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  f1              4   49[BANK0 ] unsigned long 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;  exp1            1   58[BANK0 ] unsigned char 
  7573 ;;  sign1           1   57[BANK0 ] unsigned char 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  4   49[BANK0 ] long 
  7576 ;; Registers used:
  7577 ;;		wreg, status,2, status,0
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7583 ;;      Params:         0       4       0       0       0
  7584 ;;      Locals:         0       2       0       0       0
  7585 ;;      Temps:          0       4       0       0       0
  7586 ;;      Totals:         0      10       0       0       0
  7587 ;;Total ram usage:       10 bytes
  7588 ;; Hardware stack levels used: 1
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_sprintf
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596     1011                     ___fltol:	
  7597                           ;psect for function ___fltol
  7598                           
  7599     1011                     l3402:	
  7600                           ;incstack = 0
  7601                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7602                           
  7603     1011  1003               	clrc
  7604     1012  1283               	bcf	3,5	;RP0=0, select bank0
  7605     1013  1303               	bcf	3,6	;RP1=0, select bank0
  7606     1014  0D53               	rlf	___fltol@f1+2,w
  7607     1015  0D54               	rlf	___fltol@f1+3,w
  7608     1016  00DA               	movwf	___fltol@exp1
  7609     1017  085A               	movf	___fltol@exp1,w
  7610     1018  1D03               	btfss	3,2
  7611     1019  281B               	goto	u5361
  7612     101A  281C               	goto	u5360
  7613     101B                     u5361:
  7614     101B  2825               	goto	l3408
  7615     101C                     u5360:
  7616     101C                     l3404:
  7617     101C  3000               	movlw	0
  7618     101D  00D4               	movwf	?___fltol+3
  7619     101E  3000               	movlw	0
  7620     101F  00D3               	movwf	?___fltol+2
  7621     1020  3000               	movlw	0
  7622     1021  00D2               	movwf	?___fltol+1
  7623     1022  3000               	movlw	0
  7624     1023  00D1               	movwf	?___fltol
  7625     1024  2888               	goto	l636
  7626     1025                     l3408:
  7627     1025  0851               	movf	___fltol@f1,w
  7628     1026  00D5               	movwf	??___fltol
  7629     1027  0852               	movf	___fltol@f1+1,w
  7630     1028  00D6               	movwf	??___fltol+1
  7631     1029  0853               	movf	___fltol@f1+2,w
  7632     102A  00D7               	movwf	??___fltol+2
  7633     102B  0854               	movf	___fltol@f1+3,w
  7634     102C  00D8               	movwf	??___fltol+3
  7635     102D  301F               	movlw	31
  7636     102E                     u5375:
  7637     102E  1003               	clrc
  7638     102F  0CD8               	rrf	??___fltol+3,f
  7639     1030  0CD7               	rrf	??___fltol+2,f
  7640     1031  0CD6               	rrf	??___fltol+1,f
  7641     1032  0CD5               	rrf	??___fltol,f
  7642     1033                     u5370:
  7643     1033  3EFF               	addlw	-1
  7644     1034  1D03               	skipz
  7645     1035  282E               	goto	u5375
  7646     1036  0855               	movf	??___fltol,w
  7647     1037  00D9               	movwf	___fltol@sign1
  7648     1038                     l3410:
  7649     1038  17D3               	bsf	___fltol@f1+2,7
  7650     1039                     l3412:
  7651     1039  30FF               	movlw	255
  7652     103A  05D1               	andwf	___fltol@f1,f
  7653     103B  30FF               	movlw	255
  7654     103C  05D2               	andwf	___fltol@f1+1,f
  7655     103D  30FF               	movlw	255
  7656     103E  05D3               	andwf	___fltol@f1+2,f
  7657     103F  3000               	movlw	0
  7658     1040  05D4               	andwf	___fltol@f1+3,f
  7659     1041                     l3414:
  7660     1041  3096               	movlw	150
  7661     1042  02DA               	subwf	___fltol@exp1,f
  7662     1043                     l3416:
  7663     1043  1FDA               	btfss	___fltol@exp1,7
  7664     1044  2846               	goto	u5381
  7665     1045  2847               	goto	u5380
  7666     1046                     u5381:
  7667     1046  2861               	goto	l3426
  7668     1047                     u5380:
  7669     1047                     l3418:
  7670     1047  085A               	movf	___fltol@exp1,w
  7671     1048  3A80               	xorlw	128
  7672     1049  3E97               	addlw	151
  7673     104A  1803               	skipnc
  7674     104B  284D               	goto	u5391
  7675     104C  284E               	goto	u5390
  7676     104D                     u5391:
  7677     104D  284F               	goto	l3424
  7678     104E                     u5390:
  7679     104E  281C               	goto	l3404
  7680     104F                     l3424:
  7681     104F  3001               	movlw	1
  7682     1050                     u5405:
  7683     1050  1003               	clrc
  7684     1051  0CD4               	rrf	___fltol@f1+3,f
  7685     1052  0CD3               	rrf	___fltol@f1+2,f
  7686     1053  0CD2               	rrf	___fltol@f1+1,f
  7687     1054  0CD1               	rrf	___fltol@f1,f
  7688     1055  3EFF               	addlw	-1
  7689     1056  1D03               	skipz
  7690     1057  2850               	goto	u5405
  7691     1058  3001               	movlw	1
  7692     1059  00D5               	movwf	??___fltol
  7693     105A  0855               	movf	??___fltol,w
  7694     105B  07DA               	addwf	___fltol@exp1,f
  7695     105C  1D03               	btfss	3,2
  7696     105D  285F               	goto	u5411
  7697     105E  2860               	goto	u5410
  7698     105F                     u5411:
  7699     105F  284F               	goto	l3424
  7700     1060                     u5410:
  7701     1060  2878               	goto	l3434
  7702     1061                     l3426:
  7703     1061  3020               	movlw	32
  7704     1062  025A               	subwf	___fltol@exp1,w
  7705     1063  1C03               	skipc
  7706     1064  2866               	goto	u5421
  7707     1065  2867               	goto	u5420
  7708     1066                     u5421:
  7709     1066  2873               	goto	l643
  7710     1067                     u5420:
  7711     1067  281C               	goto	l3404
  7712     1068                     l3432:
  7713     1068  3001               	movlw	1
  7714     1069  00D5               	movwf	??___fltol
  7715     106A                     u5435:
  7716     106A  1003               	clrc
  7717     106B  0DD1               	rlf	___fltol@f1,f
  7718     106C  0DD2               	rlf	___fltol@f1+1,f
  7719     106D  0DD3               	rlf	___fltol@f1+2,f
  7720     106E  0DD4               	rlf	___fltol@f1+3,f
  7721     106F  0BD5               	decfsz	??___fltol,f
  7722     1070  286A               	goto	u5435
  7723     1071  3001               	movlw	1
  7724     1072  02DA               	subwf	___fltol@exp1,f
  7725     1073                     l643:
  7726     1073  085A               	movf	___fltol@exp1,w
  7727     1074  1D03               	btfss	3,2
  7728     1075  2877               	goto	u5441
  7729     1076  2878               	goto	u5440
  7730     1077                     u5441:
  7731     1077  2868               	goto	l3432
  7732     1078                     u5440:
  7733     1078                     l3434:
  7734     1078  0859               	movf	___fltol@sign1,w
  7735     1079  1903               	btfsc	3,2
  7736     107A  287C               	goto	u5451
  7737     107B  287D               	goto	u5450
  7738     107C                     u5451:
  7739     107C  2888               	goto	l646
  7740     107D                     u5450:
  7741     107D                     l3436:
  7742     107D  09D1               	comf	___fltol@f1,f
  7743     107E  09D2               	comf	___fltol@f1+1,f
  7744     107F  09D3               	comf	___fltol@f1+2,f
  7745     1080  09D4               	comf	___fltol@f1+3,f
  7746     1081  0AD1               	incf	___fltol@f1,f
  7747     1082  1903               	skipnz
  7748     1083  0AD2               	incf	___fltol@f1+1,f
  7749     1084  1903               	skipnz
  7750     1085  0AD3               	incf	___fltol@f1+2,f
  7751     1086  1903               	skipnz
  7752     1087  0AD4               	incf	___fltol@f1+3,f
  7753     1088                     l646:
  7754     1088                     l636:
  7755     1088  0008               	return
  7756     1089                     __end_of___fltol:
  7757                           
  7758                           	psect	text14
  7759     1980                     __ptext14:	
  7760 ;; *************** function ___flsub *****************
  7761 ;; Defined at:
  7762 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  a               4   70[BANK0 ] long 
  7765 ;;  b               4   74[BANK0 ] long 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  4   70[BANK0 ] long 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7777 ;;      Params:         0       8       0       0       0
  7778 ;;      Locals:         0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0
  7780 ;;      Totals:         0       8       0       0       0
  7781 ;;Total ram usage:        8 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; Hardware stack levels required when called: 1
  7784 ;; This function calls:
  7785 ;;		___fladd
  7786 ;; This function is called by:
  7787 ;;		_sprintf
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791     1980                     ___flsub:	
  7792                           ;psect for function ___flsub
  7793                           
  7794     1980                     l3458:	
  7795                           ;incstack = 0
  7796                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7797                           
  7798     1980  3080               	movlw	128
  7799     1981  1283               	bcf	3,5	;RP0=0, select bank0
  7800     1982  1303               	bcf	3,6	;RP1=0, select bank0
  7801     1983  06E9               	xorwf	___flsub@a+3,f
  7802     1984                     l3460:
  7803     1984  086D               	movf	___flsub@b+3,w
  7804     1985  00D5               	movwf	___fladd@b+3
  7805     1986  086C               	movf	___flsub@b+2,w
  7806     1987  00D4               	movwf	___fladd@b+2
  7807     1988  086B               	movf	___flsub@b+1,w
  7808     1989  00D3               	movwf	___fladd@b+1
  7809     198A  086A               	movf	___flsub@b,w
  7810     198B  00D2               	movwf	___fladd@b
  7811     198C  0869               	movf	___flsub@a+3,w
  7812     198D  00D9               	movwf	___fladd@a+3
  7813     198E  0868               	movf	___flsub@a+2,w
  7814     198F  00D8               	movwf	___fladd@a+2
  7815     1990  0867               	movf	___flsub@a+1,w
  7816     1991  00D7               	movwf	___fladd@a+1
  7817     1992  0866               	movf	___flsub@a,w
  7818     1993  00D6               	movwf	___fladd@a
  7819     1994  160A  118A  234B  160A  158A  	fcall	___fladd
  7820     1999  1283               	bcf	3,5	;RP0=0, select bank0
  7821     199A  1303               	bcf	3,6	;RP1=0, select bank0
  7822     199B  0855               	movf	?___fladd+3,w
  7823     199C  00E9               	movwf	?___flsub+3
  7824     199D  0854               	movf	?___fladd+2,w
  7825     199E  00E8               	movwf	?___flsub+2
  7826     199F  0853               	movf	?___fladd+1,w
  7827     19A0  00E7               	movwf	?___flsub+1
  7828     19A1  0852               	movf	?___fladd,w
  7829     19A2  00E6               	movwf	?___flsub
  7830     19A3                     l806:
  7831     19A3  0008               	return
  7832     19A4                     __end_of___flsub:
  7833                           
  7834                           	psect	text15
  7835     134B                     __ptext15:	
  7836 ;; *************** function ___fladd *****************
  7837 ;; Defined at:
  7838 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  b               4   50[BANK0 ] long 
  7841 ;;  a               4   54[BANK0 ] long 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  grs             1   69[BANK0 ] unsigned char 
  7844 ;;  bexp            1   68[BANK0 ] unsigned char 
  7845 ;;  aexp            1   67[BANK0 ] unsigned char 
  7846 ;;  signs           1   66[BANK0 ] unsigned char 
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  4   50[BANK0 ] unsigned char 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0, btemp+1
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7856 ;;      Params:         0       8       0       0       0
  7857 ;;      Locals:         0       4       0       0       0
  7858 ;;      Temps:          0       8       0       0       0
  7859 ;;      Totals:         0      20       0       0       0
  7860 ;;Total ram usage:       20 bytes
  7861 ;; Hardware stack levels used: 1
  7862 ;; This function calls:
  7863 ;;		Nothing
  7864 ;; This function is called by:
  7865 ;;		_sprintf
  7866 ;;		___flsub
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870     134B                     ___fladd:	
  7871                           ;psect for function ___fladd
  7872                           
  7873     134B                     l2774:	
  7874                           ;incstack = 0
  7875                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7876                           
  7877     134B  1283               	bcf	3,5	;RP0=0, select bank0
  7878     134C  1303               	bcf	3,6	;RP1=0, select bank0
  7879     134D  0855               	movf	___fladd@b+3,w
  7880     134E  3980               	andlw	128
  7881     134F  00E2               	movwf	___fladd@signs
  7882     1350                     l2776:
  7883     1350  0855               	movf	___fladd@b+3,w
  7884     1351  00DA               	movwf	??___fladd
  7885     1352  075A               	addwf	??___fladd,w
  7886     1353  00E4               	movwf	___fladd@bexp
  7887     1354                     l2778:
  7888     1354  1FD4               	btfss	___fladd@b+2,7
  7889     1355  2B57               	goto	u3751
  7890     1356  2B58               	goto	u3750
  7891     1357                     u3751:
  7892     1357  2B59               	goto	l2782
  7893     1358                     u3750:
  7894     1358                     l2780:
  7895     1358  1464               	bsf	___fladd@bexp,0
  7896     1359                     l2782:
  7897     1359  0864               	movf	___fladd@bexp,w
  7898     135A  1903               	btfsc	3,2
  7899     135B  2B5D               	goto	u3761
  7900     135C  2B5E               	goto	u3760
  7901     135D                     u3761:
  7902     135D  2B6E               	goto	l2792
  7903     135E                     u3760:
  7904     135E                     l2784:
  7905     135E  0A64               	incf	___fladd@bexp,w
  7906     135F  1D03               	btfss	3,2
  7907     1360  2B62               	goto	u3771
  7908     1361  2B63               	goto	u3770
  7909     1362                     u3771:
  7910     1362  2B6B               	goto	l2788
  7911     1363                     u3770:
  7912     1363                     l2786:
  7913     1363  3000               	movlw	0
  7914     1364  00D5               	movwf	___fladd@b+3
  7915     1365  3000               	movlw	0
  7916     1366  00D4               	movwf	___fladd@b+2
  7917     1367  3000               	movlw	0
  7918     1368  00D3               	movwf	___fladd@b+1
  7919     1369  3000               	movlw	0
  7920     136A  00D2               	movwf	___fladd@b
  7921     136B                     l2788:
  7922     136B  17D4               	bsf	___fladd@b+2,7
  7923     136C                     l2790:
  7924     136C  01D5               	clrf	___fladd@b+3
  7925     136D  2B76               	goto	l2794
  7926     136E                     l2792:
  7927     136E  3000               	movlw	0
  7928     136F  00D5               	movwf	___fladd@b+3
  7929     1370  3000               	movlw	0
  7930     1371  00D4               	movwf	___fladd@b+2
  7931     1372  3000               	movlw	0
  7932     1373  00D3               	movwf	___fladd@b+1
  7933     1374  3000               	movlw	0
  7934     1375  00D2               	movwf	___fladd@b
  7935     1376                     l2794:
  7936     1376  0859               	movf	___fladd@a+3,w
  7937     1377  3980               	andlw	128
  7938     1378  00E3               	movwf	___fladd@aexp
  7939     1379                     l2796:
  7940     1379  0863               	movf	___fladd@aexp,w
  7941     137A  0662               	xorwf	___fladd@signs,w
  7942     137B  1903               	skipnz
  7943     137C  2B7E               	goto	u3781
  7944     137D  2B7F               	goto	u3780
  7945     137E                     u3781:
  7946     137E  2B80               	goto	l2800
  7947     137F                     u3780:
  7948     137F                     l2798:
  7949     137F  1762               	bsf	___fladd@signs,6
  7950     1380                     l2800:
  7951     1380  0859               	movf	___fladd@a+3,w
  7952     1381  00DA               	movwf	??___fladd
  7953     1382  075A               	addwf	??___fladd,w
  7954     1383  00E3               	movwf	___fladd@aexp
  7955     1384                     l2802:
  7956     1384  1FD8               	btfss	___fladd@a+2,7
  7957     1385  2B87               	goto	u3791
  7958     1386  2B88               	goto	u3790
  7959     1387                     u3791:
  7960     1387  2B89               	goto	l2806
  7961     1388                     u3790:
  7962     1388                     l2804:
  7963     1388  1463               	bsf	___fladd@aexp,0
  7964     1389                     l2806:
  7965     1389  0863               	movf	___fladd@aexp,w
  7966     138A  1903               	btfsc	3,2
  7967     138B  2B8D               	goto	u3801
  7968     138C  2B8E               	goto	u3800
  7969     138D                     u3801:
  7970     138D  2B9E               	goto	l2816
  7971     138E                     u3800:
  7972     138E                     l2808:
  7973     138E  0A63               	incf	___fladd@aexp,w
  7974     138F  1D03               	btfss	3,2
  7975     1390  2B92               	goto	u3811
  7976     1391  2B93               	goto	u3810
  7977     1392                     u3811:
  7978     1392  2B9B               	goto	l2812
  7979     1393                     u3810:
  7980     1393                     l2810:
  7981     1393  3000               	movlw	0
  7982     1394  00D9               	movwf	___fladd@a+3
  7983     1395  3000               	movlw	0
  7984     1396  00D8               	movwf	___fladd@a+2
  7985     1397  3000               	movlw	0
  7986     1398  00D7               	movwf	___fladd@a+1
  7987     1399  3000               	movlw	0
  7988     139A  00D6               	movwf	___fladd@a
  7989     139B                     l2812:
  7990     139B  17D8               	bsf	___fladd@a+2,7
  7991     139C                     l2814:
  7992     139C  01D9               	clrf	___fladd@a+3
  7993     139D  2BA6               	goto	l760
  7994     139E                     l2816:
  7995     139E  3000               	movlw	0
  7996     139F  00D9               	movwf	___fladd@a+3
  7997     13A0  3000               	movlw	0
  7998     13A1  00D8               	movwf	___fladd@a+2
  7999     13A2  3000               	movlw	0
  8000     13A3  00D7               	movwf	___fladd@a+1
  8001     13A4  3000               	movlw	0
  8002     13A5  00D6               	movwf	___fladd@a
  8003     13A6                     l760:
  8004     13A6  0864               	movf	___fladd@bexp,w
  8005     13A7  0263               	subwf	___fladd@aexp,w
  8006     13A8  1803               	skipnc
  8007     13A9  2BAB               	goto	u3821
  8008     13AA  2BAC               	goto	u3820
  8009     13AB                     u3821:
  8010     13AB  2BD2               	goto	l2852
  8011     13AC                     u3820:
  8012     13AC                     l2818:
  8013     13AC  1F62               	btfss	___fladd@signs,6
  8014     13AD  2BAF               	goto	u3831
  8015     13AE  2BB0               	goto	u3830
  8016     13AF                     u3831:
  8017     13AF  2BB4               	goto	l2822
  8018     13B0                     u3830:
  8019     13B0                     l2820:
  8020     13B0  3080               	movlw	128
  8021     13B1  00DA               	movwf	??___fladd
  8022     13B2  085A               	movf	??___fladd,w
  8023     13B3  06E2               	xorwf	___fladd@signs,f
  8024     13B4                     l2822:
  8025     13B4  0864               	movf	___fladd@bexp,w
  8026     13B5  00E5               	movwf	___fladd@grs
  8027     13B6                     l2824:
  8028     13B6  0863               	movf	___fladd@aexp,w
  8029     13B7  00E4               	movwf	___fladd@bexp
  8030     13B8                     l2826:
  8031     13B8  0865               	movf	___fladd@grs,w
  8032     13B9  00E3               	movwf	___fladd@aexp
  8033     13BA                     l2828:
  8034     13BA  0852               	movf	___fladd@b,w
  8035     13BB  00E5               	movwf	___fladd@grs
  8036     13BC                     l2830:
  8037     13BC  0856               	movf	___fladd@a,w
  8038     13BD  00D2               	movwf	___fladd@b
  8039     13BE                     l2832:
  8040     13BE  0865               	movf	___fladd@grs,w
  8041     13BF  00D6               	movwf	___fladd@a
  8042     13C0                     l2834:
  8043     13C0  0853               	movf	___fladd@b+1,w
  8044     13C1  00E5               	movwf	___fladd@grs
  8045     13C2                     l2836:
  8046     13C2  0857               	movf	___fladd@a+1,w
  8047     13C3  00D3               	movwf	___fladd@b+1
  8048     13C4                     l2838:
  8049     13C4  0865               	movf	___fladd@grs,w
  8050     13C5  00D7               	movwf	___fladd@a+1
  8051     13C6                     l2840:
  8052     13C6  0854               	movf	___fladd@b+2,w
  8053     13C7  00E5               	movwf	___fladd@grs
  8054     13C8                     l2842:
  8055     13C8  0858               	movf	___fladd@a+2,w
  8056     13C9  00D4               	movwf	___fladd@b+2
  8057     13CA                     l2844:
  8058     13CA  0865               	movf	___fladd@grs,w
  8059     13CB  00D8               	movwf	___fladd@a+2
  8060     13CC                     l2846:
  8061     13CC  0855               	movf	___fladd@b+3,w
  8062     13CD  00E5               	movwf	___fladd@grs
  8063     13CE                     l2848:
  8064     13CE  0859               	movf	___fladd@a+3,w
  8065     13CF  00D5               	movwf	___fladd@b+3
  8066     13D0                     l2850:
  8067     13D0  0865               	movf	___fladd@grs,w
  8068     13D1  00D9               	movwf	___fladd@a+3
  8069     13D2                     l2852:
  8070     13D2  01E5               	clrf	___fladd@grs
  8071     13D3                     l2854:
  8072     13D3  0863               	movf	___fladd@aexp,w
  8073     13D4  00DA               	movwf	??___fladd
  8074     13D5  01DB               	clrf	??___fladd+1
  8075     13D6  085B               	movf	??___fladd+1,w
  8076     13D7  00DD               	movwf	??___fladd+3
  8077     13D8  0864               	movf	___fladd@bexp,w
  8078     13D9  025A               	subwf	??___fladd,w
  8079     13DA  00DC               	movwf	??___fladd+2
  8080     13DB  1C03               	skipc
  8081     13DC  03DD               	decf	??___fladd+3,f
  8082     13DD  085D               	movf	??___fladd+3,w
  8083     13DE  3A80               	xorlw	128
  8084     13DF  00FF               	movwf	btemp+1
  8085     13E0  3080               	movlw	128
  8086     13E1  027F               	subwf	btemp+1,w
  8087     13E2  1D03               	skipz
  8088     13E3  2BE6               	goto	u3845
  8089     13E4  301A               	movlw	26
  8090     13E5  025C               	subwf	??___fladd+2,w
  8091     13E6                     u3845:
  8092     13E6  1C03               	skipc
  8093     13E7  2BE9               	goto	u3841
  8094     13E8  2BEA               	goto	u3840
  8095     13E9                     u3841:
  8096     13E9  2C21               	goto	l2870
  8097     13EA                     u3840:
  8098     13EA                     l2856:
  8099     13EA  1283               	bcf	3,5	;RP0=0, select bank0
  8100     13EB  1303               	bcf	3,6	;RP1=0, select bank0
  8101     13EC  0855               	movf	___fladd@b+3,w
  8102     13ED  0454               	iorwf	___fladd@b+2,w
  8103     13EE  0453               	iorwf	___fladd@b+1,w
  8104     13EF  0452               	iorwf	___fladd@b,w
  8105     13F0  1D03               	skipz
  8106     13F1  2BF3               	goto	u3851
  8107     13F2  2BF5               	goto	u3850
  8108     13F3                     u3851:
  8109     13F3  3001               	movlw	1
  8110     13F4  2BF6               	goto	u3860
  8111     13F5                     u3850:
  8112     13F5  3000               	movlw	0
  8113     13F6                     u3860:
  8114     13F6  00E5               	movwf	___fladd@grs
  8115     13F7  3000               	movlw	0
  8116     13F8  00D5               	movwf	___fladd@b+3
  8117     13F9  3000               	movlw	0
  8118     13FA  00D4               	movwf	___fladd@b+2
  8119     13FB  3000               	movlw	0
  8120     13FC  00D3               	movwf	___fladd@b+1
  8121     13FD  3000               	movlw	0
  8122     13FE  00D2               	movwf	___fladd@b
  8123     13FF  0863               	movf	___fladd@aexp,w
  8124     1400  00E4               	movwf	___fladd@bexp
  8125     1401  2C29               	goto	l764
  8126     1402                     l766:
  8127     1402  1C65               	btfss	___fladd@grs,0
  8128     1403  2C05               	goto	u3871
  8129     1404  2C06               	goto	u3870
  8130     1405                     u3871:
  8131     1405  2C0D               	goto	l2860
  8132     1406                     u3870:
  8133     1406                     l2858:
  8134     1406  0865               	movf	___fladd@grs,w
  8135     1407  00DA               	movwf	??___fladd
  8136     1408  1003               	clrc
  8137     1409  0C5A               	rrf	??___fladd,w
  8138     140A  3801               	iorlw	1
  8139     140B  00E5               	movwf	___fladd@grs
  8140     140C  2C0F               	goto	l2862
  8141     140D                     l2860:
  8142     140D  1003               	clrc
  8143     140E  0CE5               	rrf	___fladd@grs,f
  8144     140F                     l2862:
  8145     140F  1C52               	btfss	___fladd@b,0
  8146     1410  2C12               	goto	u3881
  8147     1411  2C13               	goto	u3880
  8148     1412                     u3881:
  8149     1412  2C14               	goto	l2866
  8150     1413                     u3880:
  8151     1413                     l2864:
  8152     1413  17E5               	bsf	___fladd@grs,7
  8153     1414                     l2866:
  8154     1414  3001               	movlw	1
  8155     1415  00DA               	movwf	??___fladd
  8156     1416                     u3895:
  8157     1416  0D55               	rlf	___fladd@b+3,w
  8158     1417  0CD5               	rrf	___fladd@b+3,f
  8159     1418  0CD4               	rrf	___fladd@b+2,f
  8160     1419  0CD3               	rrf	___fladd@b+1,f
  8161     141A  0CD2               	rrf	___fladd@b,f
  8162     141B  0BDA               	decfsz	??___fladd& (0+127),f
  8163     141C  2C16               	goto	u3895
  8164     141D                     l2868:
  8165     141D  3001               	movlw	1
  8166     141E  00DA               	movwf	??___fladd
  8167     141F  085A               	movf	??___fladd,w
  8168     1420  07E4               	addwf	___fladd@bexp,f
  8169     1421                     l2870:
  8170     1421  1283               	bcf	3,5	;RP0=0, select bank0
  8171     1422  1303               	bcf	3,6	;RP1=0, select bank0
  8172     1423  0863               	movf	___fladd@aexp,w
  8173     1424  0264               	subwf	___fladd@bexp,w
  8174     1425  1C03               	skipc
  8175     1426  2C28               	goto	u3901
  8176     1427  2C29               	goto	u3900
  8177     1428                     u3901:
  8178     1428  2C02               	goto	l766
  8179     1429                     u3900:
  8180     1429                     l764:
  8181     1429  1B62               	btfsc	___fladd@signs,6
  8182     142A  2C2C               	goto	u3911
  8183     142B  2C2D               	goto	u3910
  8184     142C                     u3911:
  8185     142C  2C76               	goto	l2896
  8186     142D                     u3910:
  8187     142D                     l2872:
  8188     142D  0864               	movf	___fladd@bexp,w
  8189     142E  1D03               	btfss	3,2
  8190     142F  2C31               	goto	u3921
  8191     1430  2C32               	goto	u3920
  8192     1431                     u3921:
  8193     1431  2C3B               	goto	l2878
  8194     1432                     u3920:
  8195     1432                     l2874:
  8196     1432  3000               	movlw	0
  8197     1433  00D5               	movwf	?___fladd+3
  8198     1434  3000               	movlw	0
  8199     1435  00D4               	movwf	?___fladd+2
  8200     1436  3000               	movlw	0
  8201     1437  00D3               	movwf	?___fladd+1
  8202     1438  3000               	movlw	0
  8203     1439  00D2               	movwf	?___fladd
  8204     143A  2DA2               	goto	l773
  8205     143B                     l2878:
  8206     143B  0856               	movf	___fladd@a,w
  8207     143C  07D2               	addwf	___fladd@b,f
  8208     143D  0857               	movf	___fladd@a+1,w
  8209     143E  1103               	clrz
  8210     143F  1803               	skipnc
  8211     1440  3E01               	addlw	1
  8212     1441  1903               	skipnz
  8213     1442  2C44               	goto	u3931
  8214     1443  07D3               	addwf	___fladd@b+1,f
  8215     1444                     u3931:
  8216     1444  0858               	movf	___fladd@a+2,w
  8217     1445  1103               	clrz
  8218     1446  1803               	skipnc
  8219     1447  3E01               	addlw	1
  8220     1448  1903               	skipnz
  8221     1449  2C4B               	goto	u3932
  8222     144A  07D4               	addwf	___fladd@b+2,f
  8223     144B                     u3932:
  8224     144B  0859               	movf	___fladd@a+3,w
  8225     144C  1103               	clrz
  8226     144D  1803               	skipnc
  8227     144E  3E01               	addlw	1
  8228     144F  1903               	skipnz
  8229     1450  2C52               	goto	u3933
  8230     1451  07D5               	addwf	___fladd@b+3,f
  8231     1452                     u3933:
  8232     1452                     l2880:
  8233     1452  1C55               	btfss	___fladd@b+3,0
  8234     1453  2C55               	goto	u3941
  8235     1454  2C56               	goto	u3940
  8236     1455                     u3941:
  8237     1455  2D2A               	goto	l2930
  8238     1456                     u3940:
  8239     1456                     l2882:
  8240     1456  1C65               	btfss	___fladd@grs,0
  8241     1457  2C59               	goto	u3951
  8242     1458  2C5A               	goto	u3950
  8243     1459                     u3951:
  8244     1459  2C61               	goto	l2886
  8245     145A                     u3950:
  8246     145A                     l2884:
  8247     145A  0865               	movf	___fladd@grs,w
  8248     145B  00DA               	movwf	??___fladd
  8249     145C  1003               	clrc
  8250     145D  0C5A               	rrf	??___fladd,w
  8251     145E  3801               	iorlw	1
  8252     145F  00E5               	movwf	___fladd@grs
  8253     1460  2C63               	goto	l2888
  8254     1461                     l2886:
  8255     1461  1003               	clrc
  8256     1462  0CE5               	rrf	___fladd@grs,f
  8257     1463                     l2888:
  8258     1463  1C52               	btfss	___fladd@b,0
  8259     1464  2C66               	goto	u3961
  8260     1465  2C67               	goto	u3960
  8261     1466                     u3961:
  8262     1466  2C68               	goto	l2892
  8263     1467                     u3960:
  8264     1467                     l2890:
  8265     1467  17E5               	bsf	___fladd@grs,7
  8266     1468                     l2892:
  8267     1468  3001               	movlw	1
  8268     1469  00DA               	movwf	??___fladd
  8269     146A                     u3975:
  8270     146A  0D55               	rlf	___fladd@b+3,w
  8271     146B  0CD5               	rrf	___fladd@b+3,f
  8272     146C  0CD4               	rrf	___fladd@b+2,f
  8273     146D  0CD3               	rrf	___fladd@b+1,f
  8274     146E  0CD2               	rrf	___fladd@b,f
  8275     146F  0BDA               	decfsz	??___fladd& (0+127),f
  8276     1470  2C6A               	goto	u3975
  8277     1471                     l2894:
  8278     1471  3001               	movlw	1
  8279     1472  00DA               	movwf	??___fladd
  8280     1473  085A               	movf	??___fladd,w
  8281     1474  07E4               	addwf	___fladd@bexp,f
  8282     1475  2D2A               	goto	l2930
  8283     1476                     l2896:
  8284     1476  0855               	movf	___fladd@b+3,w
  8285     1477  3A80               	xorlw	128
  8286     1478  00FF               	movwf	btemp+1
  8287     1479  0859               	movf	___fladd@a+3,w
  8288     147A  3A80               	xorlw	128
  8289     147B  027F               	subwf	btemp+1,w
  8290     147C  1D03               	skipz
  8291     147D  2C88               	goto	u3983
  8292     147E  0858               	movf	___fladd@a+2,w
  8293     147F  0254               	subwf	___fladd@b+2,w
  8294     1480  1D03               	skipz
  8295     1481  2C88               	goto	u3983
  8296     1482  0857               	movf	___fladd@a+1,w
  8297     1483  0253               	subwf	___fladd@b+1,w
  8298     1484  1D03               	skipz
  8299     1485  2C88               	goto	u3983
  8300     1486  0856               	movf	___fladd@a,w
  8301     1487  0252               	subwf	___fladd@b,w
  8302     1488                     u3983:
  8303     1488  1803               	skipnc
  8304     1489  2C8B               	goto	u3981
  8305     148A  2C8C               	goto	u3980
  8306     148B                     u3981:
  8307     148B  2CE4               	goto	l2906
  8308     148C                     u3980:
  8309     148C                     l2898:
  8310     148C  30FF               	movlw	255
  8311     148D  00DA               	movwf	??___fladd
  8312     148E  30FF               	movlw	255
  8313     148F  00DB               	movwf	??___fladd+1
  8314     1490  30FF               	movlw	255
  8315     1491  00DC               	movwf	??___fladd+2
  8316     1492  30FF               	movlw	255
  8317     1493  00DD               	movwf	??___fladd+3
  8318     1494  0856               	movf	___fladd@a,w
  8319     1495  00DE               	movwf	??___fladd+4
  8320     1496  0857               	movf	___fladd@a+1,w
  8321     1497  00DF               	movwf	??___fladd+5
  8322     1498  0858               	movf	___fladd@a+2,w
  8323     1499  00E0               	movwf	??___fladd+6
  8324     149A  0859               	movf	___fladd@a+3,w
  8325     149B  00E1               	movwf	??___fladd+7
  8326     149C  0852               	movf	___fladd@b,w
  8327     149D  02DE               	subwf	??___fladd+4,f
  8328     149E  0853               	movf	___fladd@b+1,w
  8329     149F  1C03               	skipc
  8330     14A0  0F53               	incfsz	___fladd@b+1,w
  8331     14A1  2CA3               	goto	u3991
  8332     14A2  2CA4               	goto	u3992
  8333     14A3                     u3991:
  8334     14A3  02DF               	subwf	??___fladd+5,f
  8335     14A4                     u3992:
  8336     14A4  0854               	movf	___fladd@b+2,w
  8337     14A5  1C03               	skipc
  8338     14A6  0F54               	incfsz	___fladd@b+2,w
  8339     14A7  2CA9               	goto	u3993
  8340     14A8  2CAA               	goto	u3994
  8341     14A9                     u3993:
  8342     14A9  02E0               	subwf	??___fladd+6,f
  8343     14AA                     u3994:
  8344     14AA  0855               	movf	___fladd@b+3,w
  8345     14AB  1C03               	skipc
  8346     14AC  0F55               	incfsz	___fladd@b+3,w
  8347     14AD  2CAF               	goto	u3995
  8348     14AE  2CB0               	goto	u3996
  8349     14AF                     u3995:
  8350     14AF  02E1               	subwf	??___fladd+7,f
  8351     14B0                     u3996:
  8352     14B0  085E               	movf	??___fladd+4,w
  8353     14B1  07DA               	addwf	??___fladd,f
  8354     14B2  085F               	movf	??___fladd+5,w
  8355     14B3  1803               	skipnc
  8356     14B4  0F5F               	incfsz	??___fladd+5,w
  8357     14B5  2CB7               	goto	u4000
  8358     14B6  2CB8               	goto	u4001
  8359     14B7                     u4000:
  8360     14B7  07DB               	addwf	??___fladd+1,f
  8361     14B8                     u4001:
  8362     14B8  0860               	movf	??___fladd+6,w
  8363     14B9  1803               	skipnc
  8364     14BA  0F60               	incfsz	??___fladd+6,w
  8365     14BB  2CBD               	goto	u4002
  8366     14BC  2CBE               	goto	u4003
  8367     14BD                     u4002:
  8368     14BD  07DC               	addwf	??___fladd+2,f
  8369     14BE                     u4003:
  8370     14BE  0861               	movf	??___fladd+7,w
  8371     14BF  1803               	skipnc
  8372     14C0  0A61               	incf	??___fladd+7,w
  8373     14C1  07DD               	addwf	??___fladd+3,f
  8374     14C2  085D               	movf	??___fladd+3,w
  8375     14C3  00D5               	movwf	___fladd@b+3
  8376     14C4  085C               	movf	??___fladd+2,w
  8377     14C5  00D4               	movwf	___fladd@b+2
  8378     14C6  085B               	movf	??___fladd+1,w
  8379     14C7  00D3               	movwf	___fladd@b+1
  8380     14C8  085A               	movf	??___fladd,w
  8381     14C9  00D2               	movwf	___fladd@b
  8382     14CA                     l2900:
  8383     14CA  3080               	movlw	128
  8384     14CB  00DA               	movwf	??___fladd
  8385     14CC  085A               	movf	??___fladd,w
  8386     14CD  06E2               	xorwf	___fladd@signs,f
  8387     14CE  09E5               	comf	___fladd@grs,f
  8388     14CF  0AE5               	incf	___fladd@grs,f
  8389     14D0                     l2902:
  8390     14D0  0865               	movf	___fladd@grs,w
  8391     14D1  1D03               	btfss	3,2
  8392     14D2  2CD4               	goto	u4011
  8393     14D3  2CD5               	goto	u4010
  8394     14D4                     u4011:
  8395     14D4  2CF2               	goto	l781
  8396     14D5                     u4010:
  8397     14D5                     l2904:
  8398     14D5  3001               	movlw	1
  8399     14D6  07D2               	addwf	___fladd@b,f
  8400     14D7  3000               	movlw	0
  8401     14D8  1803               	skipnc
  8402     14D9  3001               	movlw	1
  8403     14DA  07D3               	addwf	___fladd@b+1,f
  8404     14DB  3000               	movlw	0
  8405     14DC  1803               	skipnc
  8406     14DD  3001               	movlw	1
  8407     14DE  07D4               	addwf	___fladd@b+2,f
  8408     14DF  3000               	movlw	0
  8409     14E0  1803               	skipnc
  8410     14E1  3001               	movlw	1
  8411     14E2  07D5               	addwf	___fladd@b+3,f
  8412     14E3  2CF2               	goto	l781
  8413     14E4                     l2906:
  8414     14E4  0856               	movf	___fladd@a,w
  8415     14E5  02D2               	subwf	___fladd@b,f
  8416     14E6  0857               	movf	___fladd@a+1,w
  8417     14E7  1C03               	skipc
  8418     14E8  0F57               	incfsz	___fladd@a+1,w
  8419     14E9  02D3               	subwf	___fladd@b+1,f
  8420     14EA  0858               	movf	___fladd@a+2,w
  8421     14EB  1C03               	skipc
  8422     14EC  0F58               	incfsz	___fladd@a+2,w
  8423     14ED  02D4               	subwf	___fladd@b+2,f
  8424     14EE  0859               	movf	___fladd@a+3,w
  8425     14EF  1C03               	skipc
  8426     14F0  0F59               	incfsz	___fladd@a+3,w
  8427     14F1  02D5               	subwf	___fladd@b+3,f
  8428     14F2                     l781:
  8429     14F2  0855               	movf	___fladd@b+3,w
  8430     14F3  0454               	iorwf	___fladd@b+2,w
  8431     14F4  0453               	iorwf	___fladd@b+1,w
  8432     14F5  0452               	iorwf	___fladd@b,w
  8433     14F6  1D03               	skipz
  8434     14F7  2CF9               	goto	u4021
  8435     14F8  2CFA               	goto	u4020
  8436     14F9                     u4021:
  8437     14F9  2D26               	goto	l2928
  8438     14FA                     u4020:
  8439     14FA                     l2908:
  8440     14FA  0865               	movf	___fladd@grs,w
  8441     14FB  1D03               	btfss	3,2
  8442     14FC  2CFE               	goto	u4031
  8443     14FD  2CFF               	goto	u4030
  8444     14FE                     u4031:
  8445     14FE  2D26               	goto	l2928
  8446     14FF                     u4030:
  8447     14FF                     l2910:
  8448     14FF  3000               	movlw	0
  8449     1500  00D5               	movwf	?___fladd+3
  8450     1501  3000               	movlw	0
  8451     1502  00D4               	movwf	?___fladd+2
  8452     1503  3000               	movlw	0
  8453     1504  00D3               	movwf	?___fladd+1
  8454     1505  3000               	movlw	0
  8455     1506  00D2               	movwf	?___fladd
  8456     1507  2DA2               	goto	l773
  8457     1508                     l2914:
  8458     1508  3001               	movlw	1
  8459     1509  00DA               	movwf	??___fladd
  8460     150A                     u4045:
  8461     150A  1003               	clrc
  8462     150B  0DD2               	rlf	___fladd@b,f
  8463     150C  0DD3               	rlf	___fladd@b+1,f
  8464     150D  0DD4               	rlf	___fladd@b+2,f
  8465     150E  0DD5               	rlf	___fladd@b+3,f
  8466     150F  0BDA               	decfsz	??___fladd,f
  8467     1510  2D0A               	goto	u4045
  8468     1511                     l2916:
  8469     1511  1FE5               	btfss	___fladd@grs,7
  8470     1512  2D14               	goto	u4051
  8471     1513  2D15               	goto	u4050
  8472     1514                     u4051:
  8473     1514  2D16               	goto	l785
  8474     1515                     u4050:
  8475     1515                     l2918:
  8476     1515  1452               	bsf	___fladd@b,0
  8477     1516                     l785:
  8478     1516  1C65               	btfss	___fladd@grs,0
  8479     1517  2D19               	goto	u4061
  8480     1518  2D1A               	goto	u4060
  8481     1519                     u4061:
  8482     1519  2D1D               	goto	l2922
  8483     151A                     u4060:
  8484     151A                     l2920:
  8485     151A  1403               	setc
  8486     151B  0DE5               	rlf	___fladd@grs,f
  8487     151C  2D1F               	goto	l2924
  8488     151D                     l2922:
  8489     151D  1003               	clrc
  8490     151E  0DE5               	rlf	___fladd@grs,f
  8491     151F                     l2924:
  8492     151F  0864               	movf	___fladd@bexp,w
  8493     1520  1903               	btfsc	3,2
  8494     1521  2D23               	goto	u4071
  8495     1522  2D24               	goto	u4070
  8496     1523                     u4071:
  8497     1523  2D26               	goto	l2928
  8498     1524                     u4070:
  8499     1524                     l2926:
  8500     1524  3001               	movlw	1
  8501     1525  02E4               	subwf	___fladd@bexp,f
  8502     1526                     l2928:
  8503     1526  1FD4               	btfss	___fladd@b+2,7
  8504     1527  2D29               	goto	u4081
  8505     1528  2D2A               	goto	u4080
  8506     1529                     u4081:
  8507     1529  2D08               	goto	l2914
  8508     152A                     u4080:
  8509     152A                     l2930:
  8510     152A  01E3               	clrf	___fladd@aexp
  8511     152B                     l2932:
  8512     152B  1FE5               	btfss	___fladd@grs,7
  8513     152C  2D2E               	goto	u4091
  8514     152D  2D2F               	goto	u4090
  8515     152E                     u4091:
  8516     152E  2D3D               	goto	l2940
  8517     152F                     u4090:
  8518     152F                     l2934:
  8519     152F  0865               	movf	___fladd@grs,w
  8520     1530  397F               	andlw	127
  8521     1531  1903               	btfsc	3,2
  8522     1532  2D34               	goto	u4101
  8523     1533  2D35               	goto	u4100
  8524     1534                     u4101:
  8525     1534  2D38               	goto	l791
  8526     1535                     u4100:
  8527     1535                     l2936:
  8528     1535  01E3               	clrf	___fladd@aexp
  8529     1536  0AE3               	incf	___fladd@aexp,f
  8530     1537  2D3D               	goto	l2940
  8531     1538                     l791:
  8532     1538  1C52               	btfss	___fladd@b,0
  8533     1539  2D3B               	goto	u4111
  8534     153A  2D3C               	goto	u4110
  8535     153B                     u4111:
  8536     153B  2D3D               	goto	l2940
  8537     153C                     u4110:
  8538     153C  2D35               	goto	l2936
  8539     153D                     l2940:
  8540     153D  0863               	movf	___fladd@aexp,w
  8541     153E  1903               	btfsc	3,2
  8542     153F  2D41               	goto	u4121
  8543     1540  2D42               	goto	u4120
  8544     1541                     u4121:
  8545     1541  2D76               	goto	l794
  8546     1542                     u4120:
  8547     1542                     l2942:
  8548     1542  3001               	movlw	1
  8549     1543  07D2               	addwf	___fladd@b,f
  8550     1544  3000               	movlw	0
  8551     1545  1803               	skipnc
  8552     1546  3001               	movlw	1
  8553     1547  07D3               	addwf	___fladd@b+1,f
  8554     1548  3000               	movlw	0
  8555     1549  1803               	skipnc
  8556     154A  3001               	movlw	1
  8557     154B  07D4               	addwf	___fladd@b+2,f
  8558     154C  3000               	movlw	0
  8559     154D  1803               	skipnc
  8560     154E  3001               	movlw	1
  8561     154F  07D5               	addwf	___fladd@b+3,f
  8562     1550                     l2944:
  8563     1550  1C55               	btfss	___fladd@b+3,0
  8564     1551  2D53               	goto	u4131
  8565     1552  2D54               	goto	u4130
  8566     1553                     u4131:
  8567     1553  2D76               	goto	l794
  8568     1554                     u4130:
  8569     1554                     l2946:
  8570     1554  0852               	movf	___fladd@b,w
  8571     1555  00DA               	movwf	??___fladd
  8572     1556  0853               	movf	___fladd@b+1,w
  8573     1557  00DB               	movwf	??___fladd+1
  8574     1558  0854               	movf	___fladd@b+2,w
  8575     1559  00DC               	movwf	??___fladd+2
  8576     155A  0855               	movf	___fladd@b+3,w
  8577     155B  00DD               	movwf	??___fladd+3
  8578     155C  3001               	movlw	1
  8579     155D  00DE               	movwf	??___fladd+4
  8580     155E                     u4145:
  8581     155E  0D5D               	rlf	??___fladd+3,w
  8582     155F  0CDD               	rrf	??___fladd+3,f
  8583     1560  0CDC               	rrf	??___fladd+2,f
  8584     1561  0CDB               	rrf	??___fladd+1,f
  8585     1562  0CDA               	rrf	??___fladd,f
  8586     1563                     u4140:
  8587     1563  0BDE               	decfsz	??___fladd+4,f
  8588     1564  2D5E               	goto	u4145
  8589     1565  085D               	movf	??___fladd+3,w
  8590     1566  00D5               	movwf	___fladd@b+3
  8591     1567  085C               	movf	??___fladd+2,w
  8592     1568  00D4               	movwf	___fladd@b+2
  8593     1569  085B               	movf	??___fladd+1,w
  8594     156A  00D3               	movwf	___fladd@b+1
  8595     156B  085A               	movf	??___fladd,w
  8596     156C  00D2               	movwf	___fladd@b
  8597     156D  0A64               	incf	___fladd@bexp,w
  8598     156E  1903               	btfsc	3,2
  8599     156F  2D71               	goto	u4151
  8600     1570  2D72               	goto	u4150
  8601     1571                     u4151:
  8602     1571  2D76               	goto	l794
  8603     1572                     u4150:
  8604     1572                     l2948:
  8605     1572  3001               	movlw	1
  8606     1573  00DA               	movwf	??___fladd
  8607     1574  085A               	movf	??___fladd,w
  8608     1575  07E4               	addwf	___fladd@bexp,f
  8609     1576                     l794:
  8610     1576  0A64               	incf	___fladd@bexp,w
  8611     1577  1903               	btfsc	3,2
  8612     1578  2D7A               	goto	u4161
  8613     1579  2D7B               	goto	u4160
  8614     157A                     u4161:
  8615     157A  2D80               	goto	l2952
  8616     157B                     u4160:
  8617     157B                     l2950:
  8618     157B  0864               	movf	___fladd@bexp,w
  8619     157C  1D03               	btfss	3,2
  8620     157D  2D7F               	goto	u4171
  8621     157E  2D80               	goto	u4170
  8622     157F                     u4171:
  8623     157F  2D8E               	goto	l2958
  8624     1580                     u4170:
  8625     1580                     l2952:
  8626     1580  3000               	movlw	0
  8627     1581  00D5               	movwf	___fladd@b+3
  8628     1582  3000               	movlw	0
  8629     1583  00D4               	movwf	___fladd@b+2
  8630     1584  3000               	movlw	0
  8631     1585  00D3               	movwf	___fladd@b+1
  8632     1586  3000               	movlw	0
  8633     1587  00D2               	movwf	___fladd@b
  8634     1588                     l2954:
  8635     1588  0864               	movf	___fladd@bexp,w
  8636     1589  1D03               	btfss	3,2
  8637     158A  2D8C               	goto	u4181
  8638     158B  2D8D               	goto	u4180
  8639     158C                     u4181:
  8640     158C  2D8E               	goto	l2958
  8641     158D                     u4180:
  8642     158D                     l2956:
  8643     158D  01E2               	clrf	___fladd@signs
  8644     158E                     l2958:
  8645     158E  1C64               	btfss	___fladd@bexp,0
  8646     158F  2D91               	goto	u4191
  8647     1590  2D92               	goto	u4190
  8648     1591                     u4191:
  8649     1591  2D94               	goto	l2962
  8650     1592                     u4190:
  8651     1592                     l2960:
  8652     1592  17D4               	bsf	___fladd@b+2,7
  8653     1593  2D98               	goto	l802
  8654     1594                     l2962:
  8655     1594  307F               	movlw	127
  8656     1595  00DA               	movwf	??___fladd
  8657     1596  085A               	movf	??___fladd,w
  8658     1597  05D4               	andwf	___fladd@b+2,f
  8659     1598                     l802:
  8660     1598  0864               	movf	___fladd@bexp,w
  8661     1599  00DA               	movwf	??___fladd
  8662     159A  1003               	clrc
  8663     159B  0C5A               	rrf	??___fladd,w
  8664     159C  00D5               	movwf	___fladd@b+3
  8665     159D                     l2964:
  8666     159D  1FE2               	btfss	___fladd@signs,7
  8667     159E  2DA0               	goto	u4201
  8668     159F  2DA1               	goto	u4200
  8669     15A0                     u4201:
  8670     15A0  2DA2               	goto	l803
  8671     15A1                     u4200:
  8672     15A1                     l2966:
  8673     15A1  17D5               	bsf	___fladd@b+3,7
  8674     15A2                     l803:
  8675     15A2                     l773:
  8676     15A2  0008               	return
  8677     15A3                     __end_of___fladd:
  8678                           
  8679                           	psect	text16
  8680     18EF                     __ptext16:	
  8681 ;; *************** function ___flneg *****************
  8682 ;; Defined at:
  8683 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;  f1              4    0[COMMON] unsigned char 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;		None
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  4    0[COMMON] unsigned char 
  8690 ;; Registers used:
  8691 ;;		wreg
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8697 ;;      Params:         4       0       0       0       0
  8698 ;;      Locals:         0       0       0       0       0
  8699 ;;      Temps:          0       0       0       0       0
  8700 ;;      Totals:         4       0       0       0       0
  8701 ;;Total ram usage:        4 bytes
  8702 ;; Hardware stack levels used: 1
  8703 ;; This function calls:
  8704 ;;		Nothing
  8705 ;; This function is called by:
  8706 ;;		_sprintf
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710     18EF                     ___flneg:	
  8711                           ;psect for function ___flneg
  8712                           
  8713     18EF                     l3394:	
  8714                           ;incstack = 0
  8715                           ; Regs used in ___flneg: [wreg]
  8716                           
  8717     18EF  0873               	movf	___flneg@f1+3,w
  8718     18F0  0472               	iorwf	___flneg@f1+2,w
  8719     18F1  0471               	iorwf	___flneg@f1+1,w
  8720     18F2  0470               	iorwf	___flneg@f1,w
  8721     18F3  1903               	skipnz
  8722     18F4  28F6               	goto	u5351
  8723     18F5  28F7               	goto	u5350
  8724     18F6                     u5351:
  8725     18F6  28F9               	goto	l3398
  8726     18F7                     u5350:
  8727     18F7                     l3396:
  8728     18F7  3080               	movlw	128
  8729     18F8  06F3               	xorwf	___flneg@f1+3,f
  8730     18F9                     l3398:
  8731     18F9                     l632:
  8732     18F9  0008               	return
  8733     18FA                     __end_of___flneg:
  8734                           
  8735                           	psect	text17
  8736     0802                     __ptext17:	
  8737 ;; *************** function ___flge *****************
  8738 ;; Defined at:
  8739 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  ff1             4    0[COMMON] unsigned char 
  8742 ;;  ff2             4    4[COMMON] unsigned char 
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;		None
  8745 ;; Return value:  Size  Location     Type
  8746 ;;		None               void
  8747 ;; Registers used:
  8748 ;;		wreg, status,2, status,0
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/0
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8754 ;;      Params:         8       0       0       0       0
  8755 ;;      Locals:         0       0       0       0       0
  8756 ;;      Temps:          4       0       0       0       0
  8757 ;;      Totals:        12       0       0       0       0
  8758 ;;Total ram usage:       12 bytes
  8759 ;; Hardware stack levels used: 1
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_sprintf
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767     0802                     ___flge:	
  8768                           ;psect for function ___flge
  8769                           
  8770     0802                     l3374:	
  8771                           ;incstack = 0
  8772                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8773                           
  8774     0802  3000               	movlw	0
  8775     0803  0570               	andwf	___flge@ff1,w
  8776     0804  00F8               	movwf	??___flge
  8777     0805  3000               	movlw	0
  8778     0806  0571               	andwf	___flge@ff1+1,w
  8779     0807  00F9               	movwf	??___flge+1
  8780     0808  3080               	movlw	128
  8781     0809  0572               	andwf	___flge@ff1+2,w
  8782     080A  00FA               	movwf	??___flge+2
  8783     080B  307F               	movlw	127
  8784     080C  0573               	andwf	___flge@ff1+3,w
  8785     080D  00FB               	movwf	??___flge+3
  8786     080E  087B               	movf	??___flge+3,w
  8787     080F  047A               	iorwf	??___flge+2,w
  8788     0810  0479               	iorwf	??___flge+1,w
  8789     0811  0478               	iorwf	??___flge,w
  8790     0812  1D03               	skipz
  8791     0813  2815               	goto	u5281
  8792     0814  2816               	goto	u5280
  8793     0815                     u5281:
  8794     0815  281E               	goto	l624
  8795     0816                     u5280:
  8796     0816                     l3376:
  8797     0816  3000               	movlw	0
  8798     0817  00F3               	movwf	___flge@ff1+3
  8799     0818  3000               	movlw	0
  8800     0819  00F2               	movwf	___flge@ff1+2
  8801     081A  3000               	movlw	0
  8802     081B  00F1               	movwf	___flge@ff1+1
  8803     081C  3000               	movlw	0
  8804     081D  00F0               	movwf	___flge@ff1
  8805     081E                     l624:
  8806     081E  3000               	movlw	0
  8807     081F  0574               	andwf	___flge@ff2,w
  8808     0820  00F8               	movwf	??___flge
  8809     0821  3000               	movlw	0
  8810     0822  0575               	andwf	___flge@ff2+1,w
  8811     0823  00F9               	movwf	??___flge+1
  8812     0824  3080               	movlw	128
  8813     0825  0576               	andwf	___flge@ff2+2,w
  8814     0826  00FA               	movwf	??___flge+2
  8815     0827  307F               	movlw	127
  8816     0828  0577               	andwf	___flge@ff2+3,w
  8817     0829  00FB               	movwf	??___flge+3
  8818     082A  087B               	movf	??___flge+3,w
  8819     082B  047A               	iorwf	??___flge+2,w
  8820     082C  0479               	iorwf	??___flge+1,w
  8821     082D  0478               	iorwf	??___flge,w
  8822     082E  1D03               	skipz
  8823     082F  2831               	goto	u5291
  8824     0830  2832               	goto	u5290
  8825     0831                     u5291:
  8826     0831  283A               	goto	l3380
  8827     0832                     u5290:
  8828     0832                     l3378:
  8829     0832  3000               	movlw	0
  8830     0833  00F7               	movwf	___flge@ff2+3
  8831     0834  3000               	movlw	0
  8832     0835  00F6               	movwf	___flge@ff2+2
  8833     0836  3000               	movlw	0
  8834     0837  00F5               	movwf	___flge@ff2+1
  8835     0838  3000               	movlw	0
  8836     0839  00F4               	movwf	___flge@ff2
  8837     083A                     l3380:
  8838     083A  1FF3               	btfss	___flge@ff1+3,7
  8839     083B  283D               	goto	u5301
  8840     083C  283E               	goto	u5300
  8841     083D                     u5301:
  8842     083D  2862               	goto	l3384
  8843     083E                     u5300:
  8844     083E                     l3382:
  8845     083E  3000               	movlw	0
  8846     083F  00F8               	movwf	??___flge
  8847     0840  3000               	movlw	0
  8848     0841  00F9               	movwf	??___flge+1
  8849     0842  3000               	movlw	0
  8850     0843  00FA               	movwf	??___flge+2
  8851     0844  3080               	movlw	128
  8852     0845  00FB               	movwf	??___flge+3
  8853     0846  0870               	movf	___flge@ff1,w
  8854     0847  02F8               	subwf	??___flge,f
  8855     0848  0871               	movf	___flge@ff1+1,w
  8856     0849  1C03               	skipc
  8857     084A  0F71               	incfsz	___flge@ff1+1,w
  8858     084B  284D               	goto	u5311
  8859     084C  284E               	goto	u5312
  8860     084D                     u5311:
  8861     084D  02F9               	subwf	??___flge+1,f
  8862     084E                     u5312:
  8863     084E  0872               	movf	___flge@ff1+2,w
  8864     084F  1C03               	skipc
  8865     0850  0F72               	incfsz	___flge@ff1+2,w
  8866     0851  2853               	goto	u5313
  8867     0852  2854               	goto	u5314
  8868     0853                     u5313:
  8869     0853  02FA               	subwf	??___flge+2,f
  8870     0854                     u5314:
  8871     0854  0873               	movf	___flge@ff1+3,w
  8872     0855  1C03               	skipc
  8873     0856  0F73               	incfsz	___flge@ff1+3,w
  8874     0857  2859               	goto	u5315
  8875     0858  285A               	goto	u5316
  8876     0859                     u5315:
  8877     0859  02FB               	subwf	??___flge+3,f
  8878     085A                     u5316:
  8879     085A  087B               	movf	??___flge+3,w
  8880     085B  00F3               	movwf	___flge@ff1+3
  8881     085C  087A               	movf	??___flge+2,w
  8882     085D  00F2               	movwf	___flge@ff1+2
  8883     085E  0879               	movf	??___flge+1,w
  8884     085F  00F1               	movwf	___flge@ff1+1
  8885     0860  0878               	movf	??___flge,w
  8886     0861  00F0               	movwf	___flge@ff1
  8887     0862                     l3384:
  8888     0862  1FF7               	btfss	___flge@ff2+3,7
  8889     0863  2865               	goto	u5321
  8890     0864  2866               	goto	u5320
  8891     0865                     u5321:
  8892     0865  288A               	goto	l627
  8893     0866                     u5320:
  8894     0866                     l3386:
  8895     0866  3000               	movlw	0
  8896     0867  00F8               	movwf	??___flge
  8897     0868  3000               	movlw	0
  8898     0869  00F9               	movwf	??___flge+1
  8899     086A  3000               	movlw	0
  8900     086B  00FA               	movwf	??___flge+2
  8901     086C  3080               	movlw	128
  8902     086D  00FB               	movwf	??___flge+3
  8903     086E  0874               	movf	___flge@ff2,w
  8904     086F  02F8               	subwf	??___flge,f
  8905     0870  0875               	movf	___flge@ff2+1,w
  8906     0871  1C03               	skipc
  8907     0872  0F75               	incfsz	___flge@ff2+1,w
  8908     0873  2875               	goto	u5331
  8909     0874  2876               	goto	u5332
  8910     0875                     u5331:
  8911     0875  02F9               	subwf	??___flge+1,f
  8912     0876                     u5332:
  8913     0876  0876               	movf	___flge@ff2+2,w
  8914     0877  1C03               	skipc
  8915     0878  0F76               	incfsz	___flge@ff2+2,w
  8916     0879  287B               	goto	u5333
  8917     087A  287C               	goto	u5334
  8918     087B                     u5333:
  8919     087B  02FA               	subwf	??___flge+2,f
  8920     087C                     u5334:
  8921     087C  0877               	movf	___flge@ff2+3,w
  8922     087D  1C03               	skipc
  8923     087E  0F77               	incfsz	___flge@ff2+3,w
  8924     087F  2881               	goto	u5335
  8925     0880  2882               	goto	u5336
  8926     0881                     u5335:
  8927     0881  02FB               	subwf	??___flge+3,f
  8928     0882                     u5336:
  8929     0882  087B               	movf	??___flge+3,w
  8930     0883  00F7               	movwf	___flge@ff2+3
  8931     0884  087A               	movf	??___flge+2,w
  8932     0885  00F6               	movwf	___flge@ff2+2
  8933     0886  0879               	movf	??___flge+1,w
  8934     0887  00F5               	movwf	___flge@ff2+1
  8935     0888  0878               	movf	??___flge,w
  8936     0889  00F4               	movwf	___flge@ff2
  8937     088A                     l627:
  8938     088A  3080               	movlw	128
  8939     088B  06F3               	xorwf	___flge@ff1+3,f
  8940     088C  3080               	movlw	128
  8941     088D  06F7               	xorwf	___flge@ff2+3,f
  8942     088E  0877               	movf	___flge@ff2+3,w
  8943     088F  0273               	subwf	___flge@ff1+3,w
  8944     0890  1D03               	skipz
  8945     0891  289C               	goto	u5345
  8946     0892  0876               	movf	___flge@ff2+2,w
  8947     0893  0272               	subwf	___flge@ff1+2,w
  8948     0894  1D03               	skipz
  8949     0895  289C               	goto	u5345
  8950     0896  0875               	movf	___flge@ff2+1,w
  8951     0897  0271               	subwf	___flge@ff1+1,w
  8952     0898  1D03               	skipz
  8953     0899  289C               	goto	u5345
  8954     089A  0874               	movf	___flge@ff2,w
  8955     089B  0270               	subwf	___flge@ff1,w
  8956     089C                     u5345:
  8957     089C  1803               	skipnc
  8958     089D  289F               	goto	u5341
  8959     089E  28A0               	goto	u5340
  8960     089F                     u5341:
  8961     089F  28A2               	goto	l3390
  8962     08A0                     u5340:
  8963     08A0                     l3388:
  8964     08A0  1003               	clrc
  8965     08A1  28A3               	goto	l628
  8966     08A2                     l3390:
  8967     08A2  1403               	setc
  8968     08A3                     l628:
  8969     08A3  0008               	return
  8970     08A4                     __end_of___flge:
  8971                           
  8972                           	psect	text18
  8973     1AF6                     __ptext18:	
  8974 ;; *************** function ___fleq *****************
  8975 ;; Defined at:
  8976 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  ff1             4    0[COMMON] unsigned char 
  8979 ;;  ff2             4    4[COMMON] unsigned char 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;		None               void
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8991 ;;      Params:         8       0       0       0       0
  8992 ;;      Locals:         0       0       0       0       0
  8993 ;;      Temps:          4       0       0       0       0
  8994 ;;      Totals:        12       0       0       0       0
  8995 ;;Total ram usage:       12 bytes
  8996 ;; Hardware stack levels used: 1
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_sprintf
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004     1AF6                     ___fleq:	
  9005                           ;psect for function ___fleq
  9006                           
  9007     1AF6                     l3362:	
  9008                           ;incstack = 0
  9009                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9010                           
  9011     1AF6  3000               	movlw	0
  9012     1AF7  0570               	andwf	___fleq@ff1,w
  9013     1AF8  00F8               	movwf	??___fleq
  9014     1AF9  3000               	movlw	0
  9015     1AFA  0571               	andwf	___fleq@ff1+1,w
  9016     1AFB  00F9               	movwf	??___fleq+1
  9017     1AFC  3080               	movlw	128
  9018     1AFD  0572               	andwf	___fleq@ff1+2,w
  9019     1AFE  00FA               	movwf	??___fleq+2
  9020     1AFF  307F               	movlw	127
  9021     1B00  0573               	andwf	___fleq@ff1+3,w
  9022     1B01  00FB               	movwf	??___fleq+3
  9023     1B02  087B               	movf	??___fleq+3,w
  9024     1B03  047A               	iorwf	??___fleq+2,w
  9025     1B04  0479               	iorwf	??___fleq+1,w
  9026     1B05  0478               	iorwf	??___fleq,w
  9027     1B06  1D03               	skipz
  9028     1B07  2B09               	goto	u5251
  9029     1B08  2B0A               	goto	u5250
  9030     1B09                     u5251:
  9031     1B09  2B12               	goto	l619
  9032     1B0A                     u5250:
  9033     1B0A                     l3364:
  9034     1B0A  3000               	movlw	0
  9035     1B0B  00F3               	movwf	___fleq@ff1+3
  9036     1B0C  3000               	movlw	0
  9037     1B0D  00F2               	movwf	___fleq@ff1+2
  9038     1B0E  3000               	movlw	0
  9039     1B0F  00F1               	movwf	___fleq@ff1+1
  9040     1B10  3000               	movlw	0
  9041     1B11  00F0               	movwf	___fleq@ff1
  9042     1B12                     l619:
  9043     1B12  3000               	movlw	0
  9044     1B13  0574               	andwf	___fleq@ff2,w
  9045     1B14  00F8               	movwf	??___fleq
  9046     1B15  3000               	movlw	0
  9047     1B16  0575               	andwf	___fleq@ff2+1,w
  9048     1B17  00F9               	movwf	??___fleq+1
  9049     1B18  3080               	movlw	128
  9050     1B19  0576               	andwf	___fleq@ff2+2,w
  9051     1B1A  00FA               	movwf	??___fleq+2
  9052     1B1B  307F               	movlw	127
  9053     1B1C  0577               	andwf	___fleq@ff2+3,w
  9054     1B1D  00FB               	movwf	??___fleq+3
  9055     1B1E  087B               	movf	??___fleq+3,w
  9056     1B1F  047A               	iorwf	??___fleq+2,w
  9057     1B20  0479               	iorwf	??___fleq+1,w
  9058     1B21  0478               	iorwf	??___fleq,w
  9059     1B22  1D03               	skipz
  9060     1B23  2B25               	goto	u5261
  9061     1B24  2B26               	goto	u5260
  9062     1B25                     u5261:
  9063     1B25  2B2E               	goto	l620
  9064     1B26                     u5260:
  9065     1B26                     l3366:
  9066     1B26  3000               	movlw	0
  9067     1B27  00F7               	movwf	___fleq@ff2+3
  9068     1B28  3000               	movlw	0
  9069     1B29  00F6               	movwf	___fleq@ff2+2
  9070     1B2A  3000               	movlw	0
  9071     1B2B  00F5               	movwf	___fleq@ff2+1
  9072     1B2C  3000               	movlw	0
  9073     1B2D  00F4               	movwf	___fleq@ff2
  9074     1B2E                     l620:
  9075     1B2E  0877               	movf	___fleq@ff2+3,w
  9076     1B2F  0673               	xorwf	___fleq@ff1+3,w
  9077     1B30  1D03               	skipz
  9078     1B31  2B3C               	goto	u5275
  9079     1B32  0876               	movf	___fleq@ff2+2,w
  9080     1B33  0672               	xorwf	___fleq@ff1+2,w
  9081     1B34  1D03               	skipz
  9082     1B35  2B3C               	goto	u5275
  9083     1B36  0875               	movf	___fleq@ff2+1,w
  9084     1B37  0671               	xorwf	___fleq@ff1+1,w
  9085     1B38  1D03               	skipz
  9086     1B39  2B3C               	goto	u5275
  9087     1B3A  0874               	movf	___fleq@ff2,w
  9088     1B3B  0670               	xorwf	___fleq@ff1,w
  9089     1B3C                     u5275:
  9090     1B3C  1903               	skipnz
  9091     1B3D  2B3F               	goto	u5271
  9092     1B3E  2B40               	goto	u5270
  9093     1B3F                     u5271:
  9094     1B3F  2B42               	goto	l3370
  9095     1B40                     u5270:
  9096     1B40                     l3368:
  9097     1B40  1003               	clrc
  9098     1B41  2B43               	goto	l621
  9099     1B42                     l3370:
  9100     1B42  1403               	setc
  9101     1B43                     l621:
  9102     1B43  0008               	return
  9103     1B44                     __end_of___fleq:
  9104                           
  9105                           	psect	text19
  9106     18D1                     __ptext19:	
  9107 ;; *************** function _spiWrite *****************
  9108 ;; Defined at:
  9109 ;;		line 34 in file "SPI.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  dat             1    wreg     unsigned char 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;  dat             1    0[COMMON] unsigned char 
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9123 ;;      Params:         0       0       0       0       0
  9124 ;;      Locals:         1       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0
  9126 ;;      Totals:         1       0       0       0       0
  9127 ;;Total ram usage:        1 bytes
  9128 ;; Hardware stack levels used: 1
  9129 ;; This function calls:
  9130 ;;		Nothing
  9131 ;; This function is called by:
  9132 ;;		_main
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136     18D1                     _spiWrite:	
  9137                           ;psect for function _spiWrite
  9138                           
  9139                           
  9140                           ;incstack = 0
  9141                           ; Regs used in _spiWrite: [wreg]
  9142                           ;spiWrite@dat stored from wreg
  9143     18D1  00F0               	movwf	spiWrite@dat
  9144     18D2                     l3576:
  9145                           
  9146                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  9147     18D2  0870               	movf	spiWrite@dat,w
  9148     18D3  1283               	bcf	3,5	;RP0=0, select bank0
  9149     18D4  1303               	bcf	3,6	;RP1=0, select bank0
  9150     18D5  0093               	movwf	19	;volatile
  9151     18D6                     l188:
  9152     18D6  0008               	return
  9153     18D7                     __end_of_spiWrite:
  9154                           
  9155                           	psect	text20
  9156     18E6                     __ptext20:	
  9157 ;; *************** function _spiRead *****************
  9158 ;; Defined at:
  9159 ;;		line 47 in file "SPI.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      unsigned char 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, status,0, pclath, cstack
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9173 ;;      Params:         0       0       0       0       0
  9174 ;;      Locals:         0       0       0       0       0
  9175 ;;      Temps:          0       0       0       0       0
  9176 ;;      Totals:         0       0       0       0       0
  9177 ;;Total ram usage:        0 bytes
  9178 ;; Hardware stack levels used: 1
  9179 ;; Hardware stack levels required when called: 1
  9180 ;; This function calls:
  9181 ;;		_spiReceiveWait
  9182 ;; This function is called by:
  9183 ;;		_main
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187     18E6                     _spiRead:	
  9188                           ;psect for function _spiRead
  9189                           
  9190     18E6                     l3886:	
  9191                           ;incstack = 0
  9192                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9193                           
  9194                           
  9195                           ;SPI.c: 49:     spiReceiveWait();
  9196     18E6  160A  158A  20D7  160A  158A  	fcall	_spiReceiveWait
  9197     18EB                     l3888:
  9198                           
  9199                           ;SPI.c: 50:     return(SSPBUF);
  9200     18EB  1283               	bcf	3,5	;RP0=0, select bank0
  9201     18EC  1303               	bcf	3,6	;RP1=0, select bank0
  9202     18ED  0813               	movf	19,w	;volatile
  9203     18EE                     l196:
  9204     18EE  0008               	return
  9205     18EF                     __end_of_spiRead:
  9206                           
  9207                           	psect	text21
  9208     18D7                     __ptext21:	
  9209 ;; *************** function _spiReceiveWait *****************
  9210 ;; Defined at:
  9211 ;;		line 29 in file "SPI.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		None
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9225 ;;      Params:         0       0       0       0       0
  9226 ;;      Locals:         0       0       0       0       0
  9227 ;;      Temps:          0       0       0       0       0
  9228 ;;      Totals:         0       0       0       0       0
  9229 ;;Total ram usage:        0 bytes
  9230 ;; Hardware stack levels used: 1
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_spiRead
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238     18D7                     _spiReceiveWait:	
  9239                           ;psect for function _spiReceiveWait
  9240                           
  9241     18D7                     l3148:	
  9242                           ;incstack = 0
  9243                           ; Regs used in _spiReceiveWait: []
  9244                           
  9245     18D7                     l182:	
  9246                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  9247                           
  9248     18D7  1683               	bsf	3,5	;RP0=1, select bank1
  9249     18D8  1303               	bcf	3,6	;RP1=0, select bank1
  9250     18D9  1C14               	btfss	20,0	;volatile
  9251     18DA  28DC               	goto	u4601
  9252     18DB  28DD               	goto	u4600
  9253     18DC                     u4601:
  9254     18DC  28D7               	goto	l182
  9255     18DD                     u4600:
  9256     18DD                     l185:
  9257     18DD  0008               	return
  9258     18DE                     __end_of_spiReceiveWait:
  9259                           
  9260                           	psect	text22
  9261     1C9E                     __ptext22:	
  9262 ;; *************** function _setupINTOSC *****************
  9263 ;; Defined at:
  9264 ;;		line 10 in file "oscilador.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  IRCF            1    wreg     unsigned char 
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;  IRCF            1    0[COMMON] unsigned char 
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  1    wreg      void 
  9271 ;; Registers used:
  9272 ;;		wreg, status,2, status,0
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9278 ;;      Params:         0       0       0       0       0
  9279 ;;      Locals:         1       0       0       0       0
  9280 ;;      Temps:          0       0       0       0       0
  9281 ;;      Totals:         1       0       0       0       0
  9282 ;;Total ram usage:        1 bytes
  9283 ;; Hardware stack levels used: 1
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		_main
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291     1C9E                     _setupINTOSC:	
  9292                           ;psect for function _setupINTOSC
  9293                           
  9294                           
  9295                           ;incstack = 0
  9296                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  9297                           ;setupINTOSC@IRCF stored from wreg
  9298     1C9E  00F0               	movwf	setupINTOSC@IRCF
  9299     1C9F                     l3508:
  9300                           
  9301                           ;oscilador.c: 11:     if (IRCF == 7){
  9302     1C9F  3007               	movlw	7
  9303     1CA0  0670               	xorwf	setupINTOSC@IRCF,w
  9304     1CA1  1D03               	btfss	3,2
  9305     1CA2  2CA4               	goto	u5661
  9306     1CA3  2CA5               	goto	u5660
  9307     1CA4                     u5661:
  9308     1CA4  2CA9               	goto	l154
  9309     1CA5                     u5660:
  9310     1CA5                     l3510:
  9311                           
  9312                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  9313     1CA5  3070               	movlw	112
  9314     1CA6  1683               	bsf	3,5	;RP0=1, select bank1
  9315     1CA7  1303               	bcf	3,6	;RP1=0, select bank1
  9316     1CA8  048F               	iorwf	15,f	;volatile
  9317     1CA9                     l154:	
  9318                           ;oscilador.c: 13:     }
  9319                           
  9320                           
  9321                           ;oscilador.c: 14:     if (IRCF == 6){
  9322     1CA9  3006               	movlw	6
  9323     1CAA  0670               	xorwf	setupINTOSC@IRCF,w
  9324     1CAB  1D03               	btfss	3,2
  9325     1CAC  2CAE               	goto	u5671
  9326     1CAD  2CAF               	goto	u5670
  9327     1CAE                     u5671:
  9328     1CAE  2CB5               	goto	l155
  9329     1CAF                     u5670:
  9330     1CAF                     l3512:
  9331                           
  9332                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  9333     1CAF  1683               	bsf	3,5	;RP0=1, select bank1
  9334     1CB0  1303               	bcf	3,6	;RP1=0, select bank1
  9335     1CB1  080F               	movf	15,w	;volatile
  9336     1CB2  398F               	andlw	-113
  9337     1CB3  3860               	iorlw	96
  9338     1CB4  008F               	movwf	15	;volatile
  9339     1CB5                     l155:	
  9340                           ;oscilador.c: 16:     }
  9341                           
  9342                           
  9343                           ;oscilador.c: 17:     if (IRCF == 5){
  9344     1CB5  3005               	movlw	5
  9345     1CB6  0670               	xorwf	setupINTOSC@IRCF,w
  9346     1CB7  1D03               	btfss	3,2
  9347     1CB8  2CBA               	goto	u5681
  9348     1CB9  2CBB               	goto	u5680
  9349     1CBA                     u5681:
  9350     1CBA  2CC1               	goto	l156
  9351     1CBB                     u5680:
  9352     1CBB                     l3514:
  9353                           
  9354                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  9355     1CBB  1683               	bsf	3,5	;RP0=1, select bank1
  9356     1CBC  1303               	bcf	3,6	;RP1=0, select bank1
  9357     1CBD  080F               	movf	15,w	;volatile
  9358     1CBE  398F               	andlw	-113
  9359     1CBF  3850               	iorlw	80
  9360     1CC0  008F               	movwf	15	;volatile
  9361     1CC1                     l156:	
  9362                           ;oscilador.c: 19:     }
  9363                           
  9364                           
  9365                           ;oscilador.c: 20:     if (IRCF == 4){
  9366     1CC1  3004               	movlw	4
  9367     1CC2  0670               	xorwf	setupINTOSC@IRCF,w
  9368     1CC3  1D03               	btfss	3,2
  9369     1CC4  2CC6               	goto	u5691
  9370     1CC5  2CC7               	goto	u5690
  9371     1CC6                     u5691:
  9372     1CC6  2CCD               	goto	l157
  9373     1CC7                     u5690:
  9374     1CC7                     l3516:
  9375                           
  9376                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  9377     1CC7  1683               	bsf	3,5	;RP0=1, select bank1
  9378     1CC8  1303               	bcf	3,6	;RP1=0, select bank1
  9379     1CC9  080F               	movf	15,w	;volatile
  9380     1CCA  398F               	andlw	-113
  9381     1CCB  3840               	iorlw	64
  9382     1CCC  008F               	movwf	15	;volatile
  9383     1CCD                     l157:	
  9384                           ;oscilador.c: 22:     }
  9385                           
  9386                           
  9387                           ;oscilador.c: 23:     if (IRCF == 3){
  9388     1CCD  3003               	movlw	3
  9389     1CCE  0670               	xorwf	setupINTOSC@IRCF,w
  9390     1CCF  1D03               	btfss	3,2
  9391     1CD0  2CD2               	goto	u5701
  9392     1CD1  2CD3               	goto	u5700
  9393     1CD2                     u5701:
  9394     1CD2  2CD9               	goto	l158
  9395     1CD3                     u5700:
  9396     1CD3                     l3518:
  9397                           
  9398                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  9399     1CD3  1683               	bsf	3,5	;RP0=1, select bank1
  9400     1CD4  1303               	bcf	3,6	;RP1=0, select bank1
  9401     1CD5  080F               	movf	15,w	;volatile
  9402     1CD6  398F               	andlw	-113
  9403     1CD7  3830               	iorlw	48
  9404     1CD8  008F               	movwf	15	;volatile
  9405     1CD9                     l158:	
  9406                           ;oscilador.c: 25:     }
  9407                           
  9408                           
  9409                           ;oscilador.c: 26:     if (IRCF == 2){
  9410     1CD9  3002               	movlw	2
  9411     1CDA  0670               	xorwf	setupINTOSC@IRCF,w
  9412     1CDB  1D03               	btfss	3,2
  9413     1CDC  2CDE               	goto	u5711
  9414     1CDD  2CDF               	goto	u5710
  9415     1CDE                     u5711:
  9416     1CDE  2CE5               	goto	l159
  9417     1CDF                     u5710:
  9418     1CDF                     l3520:
  9419                           
  9420                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  9421     1CDF  1683               	bsf	3,5	;RP0=1, select bank1
  9422     1CE0  1303               	bcf	3,6	;RP1=0, select bank1
  9423     1CE1  080F               	movf	15,w	;volatile
  9424     1CE2  398F               	andlw	-113
  9425     1CE3  3820               	iorlw	32
  9426     1CE4  008F               	movwf	15	;volatile
  9427     1CE5                     l159:	
  9428                           ;oscilador.c: 28:     }
  9429                           
  9430                           
  9431                           ;oscilador.c: 29:     if (IRCF == 1){
  9432     1CE5  0370               	decf	setupINTOSC@IRCF,w
  9433     1CE6  1D03               	btfss	3,2
  9434     1CE7  2CE9               	goto	u5721
  9435     1CE8  2CEA               	goto	u5720
  9436     1CE9                     u5721:
  9437     1CE9  2CF0               	goto	l160
  9438     1CEA                     u5720:
  9439     1CEA                     l3522:
  9440                           
  9441                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  9442     1CEA  1683               	bsf	3,5	;RP0=1, select bank1
  9443     1CEB  1303               	bcf	3,6	;RP1=0, select bank1
  9444     1CEC  080F               	movf	15,w	;volatile
  9445     1CED  398F               	andlw	-113
  9446     1CEE  3810               	iorlw	16
  9447     1CEF  008F               	movwf	15	;volatile
  9448     1CF0                     l160:	
  9449                           ;oscilador.c: 31:     }
  9450                           
  9451                           
  9452                           ;oscilador.c: 32:     if (IRCF == 0){
  9453     1CF0  0870               	movf	setupINTOSC@IRCF,w
  9454     1CF1  1D03               	btfss	3,2
  9455     1CF2  2CF4               	goto	u5731
  9456     1CF3  2CF5               	goto	u5730
  9457     1CF4                     u5731:
  9458     1CF4  2CF9               	goto	l3526
  9459     1CF5                     u5730:
  9460     1CF5                     l3524:
  9461                           
  9462                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  9463     1CF5  308F               	movlw	-113
  9464     1CF6  1683               	bsf	3,5	;RP0=1, select bank1
  9465     1CF7  1303               	bcf	3,6	;RP1=0, select bank1
  9466     1CF8  058F               	andwf	15,f	;volatile
  9467     1CF9                     l3526:
  9468                           
  9469                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  9470     1CF9  1683               	bsf	3,5	;RP0=1, select bank1
  9471     1CFA  1303               	bcf	3,6	;RP1=0, select bank1
  9472     1CFB  140F               	bsf	15,0	;volatile
  9473     1CFC                     l162:
  9474     1CFC  0008               	return
  9475     1CFD                     __end_of_setupINTOSC:
  9476                           
  9477                           	psect	text23
  9478     195E                     __ptext23:	
  9479 ;; *************** function _portsetup *****************
  9480 ;; Defined at:
  9481 ;;		line 131 in file "main.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;		None
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;		None
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1    wreg      void 
  9488 ;; Registers used:
  9489 ;;		wreg, status,2, status,0, pclath, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9495 ;;      Params:         0       0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0
  9498 ;;      Totals:         0       0       0       0       0
  9499 ;;Total ram usage:        0 bytes
  9500 ;; Hardware stack levels used: 1
  9501 ;; Hardware stack levels required when called: 1
  9502 ;; This function calls:
  9503 ;;		_spiInit
  9504 ;; This function is called by:
  9505 ;;		_main
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509     195E                     _portsetup:	
  9510                           ;psect for function _portsetup
  9511                           
  9512     195E                     l3528:	
  9513                           ;incstack = 0
  9514                           ; Regs used in _portsetup: [wreg+status,2+status,0+pclath+cstack]
  9515                           
  9516                           
  9517                           ;main.c: 132:     ANSEL = 0;
  9518     195E  1683               	bsf	3,5	;RP0=1, select bank3
  9519     195F  1703               	bsf	3,6	;RP1=1, select bank3
  9520     1960  0188               	clrf	8	;volatile
  9521                           
  9522                           ;main.c: 133:     ANSELH = 0;
  9523     1961  0189               	clrf	9	;volatile
  9524                           
  9525                           ;main.c: 134:     TRISD = 0;
  9526     1962  1683               	bsf	3,5	;RP0=1, select bank1
  9527     1963  1303               	bcf	3,6	;RP1=0, select bank1
  9528     1964  0188               	clrf	8	;volatile
  9529                           
  9530                           ;main.c: 135:     PORTD = 0;
  9531     1965  1283               	bcf	3,5	;RP0=0, select bank0
  9532     1966  1303               	bcf	3,6	;RP1=0, select bank0
  9533     1967  0188               	clrf	8	;volatile
  9534                           
  9535                           ;main.c: 136:     TRISB = 0;
  9536     1968  1683               	bsf	3,5	;RP0=1, select bank1
  9537     1969  1303               	bcf	3,6	;RP1=0, select bank1
  9538     196A  0186               	clrf	6	;volatile
  9539                           
  9540                           ;main.c: 137:     PORTB = 0;
  9541     196B  1283               	bcf	3,5	;RP0=0, select bank0
  9542     196C  1303               	bcf	3,6	;RP1=0, select bank0
  9543     196D  0186               	clrf	6	;volatile
  9544                           
  9545                           ;main.c: 138:     TRISA = 0;
  9546     196E  1683               	bsf	3,5	;RP0=1, select bank1
  9547     196F  1303               	bcf	3,6	;RP1=0, select bank1
  9548     1970  0185               	clrf	5	;volatile
  9549                           
  9550                           ;main.c: 139:     PORTA = 0;
  9551     1971  1283               	bcf	3,5	;RP0=0, select bank0
  9552     1972  1303               	bcf	3,6	;RP1=0, select bank0
  9553     1973  0185               	clrf	5	;volatile
  9554     1974                     l3530:
  9555                           
  9556                           ;main.c: 140:     PORTAbits.RA0 = 1;
  9557     1974  1405               	bsf	5,0	;volatile
  9558     1975                     l3532:
  9559                           
  9560                           ;main.c: 141:     PORTAbits.RA1 = 1;
  9561     1975  1485               	bsf	5,1	;volatile
  9562     1976                     l3534:
  9563                           
  9564                           ;main.c: 142:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  9565     1976  01F0               	clrf	spiInit@sDataSample
  9566     1977  01F1               	clrf	spiInit@sClockIdle
  9567     1978  01F2               	clrf	spiInit@sTransmitEdge
  9568     1979  3020               	movlw	32
  9569     197A  160A  158A  210C  160A  158A  	fcall	_spiInit
  9570     197F                     l94:
  9571     197F  0008               	return
  9572     1980                     __end_of_portsetup:
  9573                           
  9574                           	psect	text24
  9575     190C                     __ptext24:	
  9576 ;; *************** function _spiInit *****************
  9577 ;; Defined at:
  9578 ;;		line 12 in file "SPI.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  sType           1    wreg     enum E1292
  9581 ;;  sDataSample     1    0[COMMON] enum E1300
  9582 ;;  sClockIdle      1    1[COMMON] enum E1304
  9583 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  sType           1    3[COMMON] enum E1292
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  1    wreg      void 
  9588 ;; Registers used:
  9589 ;;		wreg, status,2, status,0
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9595 ;;      Params:         3       0       0       0       0
  9596 ;;      Locals:         1       0       0       0       0
  9597 ;;      Temps:          0       0       0       0       0
  9598 ;;      Totals:         4       0       0       0       0
  9599 ;;Total ram usage:        4 bytes
  9600 ;; Hardware stack levels used: 1
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_portsetup
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608     190C                     _spiInit:	
  9609                           ;psect for function _spiInit
  9610                           
  9611                           
  9612                           ;incstack = 0
  9613                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9614                           ;spiInit@sType stored from wreg
  9615     190C  00F3               	movwf	spiInit@sType
  9616     190D                     l3128:
  9617                           
  9618                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  9619     190D  1683               	bsf	3,5	;RP0=1, select bank1
  9620     190E  1303               	bcf	3,6	;RP1=0, select bank1
  9621     190F  1287               	bcf	7,5	;volatile
  9622                           
  9623                           ;SPI.c: 15:     if(sType & 0b00000100)
  9624     1910  1D73               	btfss	spiInit@sType,2
  9625     1911  2913               	goto	u4591
  9626     1912  2914               	goto	u4590
  9627     1913                     u4591:
  9628     1913  2918               	goto	l3134
  9629     1914                     u4590:
  9630     1914                     l3130:
  9631                           
  9632                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  9633     1914  0872               	movf	spiInit@sTransmitEdge,w
  9634     1915  0094               	movwf	20	;volatile
  9635     1916                     l3132:
  9636                           
  9637                           ;SPI.c: 18:         TRISC3 = 1;
  9638     1916  1587               	bsf	7,3	;volatile
  9639                           
  9640                           ;SPI.c: 19:     }
  9641     1917  291C               	goto	l178
  9642     1918                     l3134:
  9643                           
  9644                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  9645     1918  0870               	movf	spiInit@sDataSample,w
  9646     1919  0472               	iorwf	spiInit@sTransmitEdge,w
  9647     191A  0094               	movwf	20	;volatile
  9648     191B                     l3136:
  9649                           
  9650                           ;SPI.c: 23:         TRISC3 = 0;
  9651     191B  1187               	bcf	7,3	;volatile
  9652     191C                     l178:	
  9653                           ;SPI.c: 24:     }
  9654                           
  9655                           
  9656                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  9657     191C  0873               	movf	spiInit@sType,w
  9658     191D  0471               	iorwf	spiInit@sClockIdle,w
  9659     191E  1283               	bcf	3,5	;RP0=0, select bank0
  9660     191F  1303               	bcf	3,6	;RP1=0, select bank0
  9661     1920  0094               	movwf	20	;volatile
  9662     1921                     l179:
  9663     1921  0008               	return
  9664     1922                     __end_of_spiInit:
  9665                           
  9666                           	psect	text25
  9667     1B44                     __ptext25:	
  9668 ;; *************** function _inttochar *****************
  9669 ;; Defined at:
  9670 ;;		line 12 in file "conversiones.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;  num             1    wreg     unsigned char 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  num             1    0[COMMON] unsigned char 
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      unsigned char 
  9677 ;; Registers used:
  9678 ;;		wreg, status,2, status,0
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9684 ;;      Params:         0       0       0       0       0
  9685 ;;      Locals:         1       0       0       0       0
  9686 ;;      Temps:          0       0       0       0       0
  9687 ;;      Totals:         1       0       0       0       0
  9688 ;;Total ram usage:        1 bytes
  9689 ;; Hardware stack levels used: 1
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_main
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697     1B44                     _inttochar:	
  9698                           ;psect for function _inttochar
  9699                           
  9700                           
  9701                           ;incstack = 0
  9702                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  9703                           ;inttochar@num stored from wreg
  9704     1B44  00F0               	movwf	inttochar@num
  9705     1B45                     l3602:
  9706                           
  9707                           ;conversiones.c: 13:     if(num == 0){
  9708     1B45  0870               	movf	inttochar@num,w
  9709     1B46  1D03               	btfss	3,2
  9710     1B47  2B49               	goto	u5841
  9711     1B48  2B4A               	goto	u5840
  9712     1B49                     u5841:
  9713     1B49  2B4C               	goto	l3610
  9714     1B4A                     u5840:
  9715     1B4A                     l3604:
  9716                           
  9717                           ;conversiones.c: 14:         return '0';
  9718     1B4A  3030               	movlw	48
  9719     1B4B  2B93               	goto	l200
  9720     1B4C                     l3610:
  9721     1B4C  0370               	decf	inttochar@num,w
  9722     1B4D  1D03               	btfss	3,2
  9723     1B4E  2B50               	goto	u5851
  9724     1B4F  2B51               	goto	u5850
  9725     1B50                     u5851:
  9726     1B50  2B53               	goto	l3618
  9727     1B51                     u5850:
  9728     1B51                     l3612:
  9729                           
  9730                           ;conversiones.c: 17:         return '1';
  9731     1B51  3031               	movlw	49
  9732     1B52  2B93               	goto	l200
  9733     1B53                     l3618:
  9734     1B53  3002               	movlw	2
  9735     1B54  0670               	xorwf	inttochar@num,w
  9736     1B55  1D03               	btfss	3,2
  9737     1B56  2B58               	goto	u5861
  9738     1B57  2B59               	goto	u5860
  9739     1B58                     u5861:
  9740     1B58  2B5B               	goto	l3626
  9741     1B59                     u5860:
  9742     1B59                     l3620:
  9743                           
  9744                           ;conversiones.c: 20:         return '2';
  9745     1B59  3032               	movlw	50
  9746     1B5A  2B93               	goto	l200
  9747     1B5B                     l3626:
  9748     1B5B  3003               	movlw	3
  9749     1B5C  0670               	xorwf	inttochar@num,w
  9750     1B5D  1D03               	btfss	3,2
  9751     1B5E  2B60               	goto	u5871
  9752     1B5F  2B61               	goto	u5870
  9753     1B60                     u5871:
  9754     1B60  2B63               	goto	l3634
  9755     1B61                     u5870:
  9756     1B61                     l3628:
  9757                           
  9758                           ;conversiones.c: 23:         return '3';
  9759     1B61  3033               	movlw	51
  9760     1B62  2B93               	goto	l200
  9761     1B63                     l3634:
  9762     1B63  3004               	movlw	4
  9763     1B64  0670               	xorwf	inttochar@num,w
  9764     1B65  1D03               	btfss	3,2
  9765     1B66  2B68               	goto	u5881
  9766     1B67  2B69               	goto	u5880
  9767     1B68                     u5881:
  9768     1B68  2B6B               	goto	l3642
  9769     1B69                     u5880:
  9770     1B69                     l3636:
  9771                           
  9772                           ;conversiones.c: 26:         return '4';
  9773     1B69  3034               	movlw	52
  9774     1B6A  2B93               	goto	l200
  9775     1B6B                     l3642:
  9776     1B6B  3005               	movlw	5
  9777     1B6C  0670               	xorwf	inttochar@num,w
  9778     1B6D  1D03               	btfss	3,2
  9779     1B6E  2B70               	goto	u5891
  9780     1B6F  2B71               	goto	u5890
  9781     1B70                     u5891:
  9782     1B70  2B73               	goto	l3650
  9783     1B71                     u5890:
  9784     1B71                     l3644:
  9785                           
  9786                           ;conversiones.c: 29:         return '5';
  9787     1B71  3035               	movlw	53
  9788     1B72  2B93               	goto	l200
  9789     1B73                     l3650:
  9790     1B73  3006               	movlw	6
  9791     1B74  0670               	xorwf	inttochar@num,w
  9792     1B75  1D03               	btfss	3,2
  9793     1B76  2B78               	goto	u5901
  9794     1B77  2B79               	goto	u5900
  9795     1B78                     u5901:
  9796     1B78  2B7B               	goto	l3658
  9797     1B79                     u5900:
  9798     1B79                     l3652:
  9799                           
  9800                           ;conversiones.c: 32:         return '6';
  9801     1B79  3036               	movlw	54
  9802     1B7A  2B93               	goto	l200
  9803     1B7B                     l3658:
  9804     1B7B  3007               	movlw	7
  9805     1B7C  0670               	xorwf	inttochar@num,w
  9806     1B7D  1D03               	btfss	3,2
  9807     1B7E  2B80               	goto	u5911
  9808     1B7F  2B81               	goto	u5910
  9809     1B80                     u5911:
  9810     1B80  2B83               	goto	l3666
  9811     1B81                     u5910:
  9812     1B81                     l3660:
  9813                           
  9814                           ;conversiones.c: 35:         return '7';
  9815     1B81  3037               	movlw	55
  9816     1B82  2B93               	goto	l200
  9817     1B83                     l3666:
  9818     1B83  3008               	movlw	8
  9819     1B84  0670               	xorwf	inttochar@num,w
  9820     1B85  1D03               	btfss	3,2
  9821     1B86  2B88               	goto	u5921
  9822     1B87  2B89               	goto	u5920
  9823     1B88                     u5921:
  9824     1B88  2B8B               	goto	l3674
  9825     1B89                     u5920:
  9826     1B89                     l3668:
  9827                           
  9828                           ;conversiones.c: 38:         return '8';
  9829     1B89  3038               	movlw	56
  9830     1B8A  2B93               	goto	l200
  9831     1B8B                     l3674:
  9832     1B8B  3009               	movlw	9
  9833     1B8C  0670               	xorwf	inttochar@num,w
  9834     1B8D  1D03               	btfss	3,2
  9835     1B8E  2B90               	goto	u5931
  9836     1B8F  2B91               	goto	u5930
  9837     1B90                     u5931:
  9838     1B90  2B93               	goto	l213
  9839     1B91                     u5930:
  9840     1B91                     l3676:
  9841                           
  9842                           ;conversiones.c: 41:         return '9';
  9843     1B91  3039               	movlw	57
  9844     1B92  2B93               	goto	l200
  9845     1B93                     l213:
  9846     1B93                     l200:
  9847     1B93  0008               	return
  9848     1B94                     __end_of_inttochar:
  9849                           
  9850                           	psect	text26
  9851     1CFD                     __ptext26:	
  9852 ;; *************** function _descomponer *****************
  9853 ;; Defined at:
  9854 ;;		line 45 in file "conversiones.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  pos             2    4[BANK0 ] int 
  9857 ;;  num             2    6[BANK0 ] unsigned int 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;  dec             1   12[BANK0 ] unsigned char 
  9860 ;;  uni             1   11[BANK0 ] unsigned char 
  9861 ;;  cent            1   10[BANK0 ] unsigned char 
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      unsigned char 
  9864 ;; Registers used:
  9865 ;;		wreg, status,2, status,0, pclath, cstack
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9871 ;;      Params:         0       4       0       0       0
  9872 ;;      Locals:         0       3       0       0       0
  9873 ;;      Temps:          0       2       0       0       0
  9874 ;;      Totals:         0       9       0       0       0
  9875 ;;Total ram usage:        9 bytes
  9876 ;; Hardware stack levels used: 1
  9877 ;; Hardware stack levels required when called: 1
  9878 ;; This function calls:
  9879 ;;		___awdiv
  9880 ;;		___awmod
  9881 ;;		___lwdiv
  9882 ;;		___lwmod
  9883 ;; This function is called by:
  9884 ;;		_main
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888     1CFD                     _descomponer:	
  9889                           ;psect for function _descomponer
  9890                           
  9891     1CFD                     l3578:	
  9892                           ;incstack = 0
  9893                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  9894                           
  9895                           
  9896                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  9897     1CFD  3064               	movlw	100
  9898     1CFE  00F6               	movwf	___lwdiv@divisor
  9899     1CFF  3000               	movlw	0
  9900     1D00  00F7               	movwf	___lwdiv@divisor+1
  9901     1D01  1283               	bcf	3,5	;RP0=0, select bank0
  9902     1D02  1303               	bcf	3,6	;RP1=0, select bank0
  9903     1D03  0827               	movf	descomponer@num+1,w
  9904     1D04  00F9               	movwf	___lwdiv@dividend+1
  9905     1D05  0826               	movf	descomponer@num,w
  9906     1D06  00F8               	movwf	___lwdiv@dividend
  9907     1D07  160A  158A  226C  160A  158A  	fcall	___lwdiv
  9908     1D0C  0876               	movf	?___lwdiv,w
  9909     1D0D  1283               	bcf	3,5	;RP0=0, select bank0
  9910     1D0E  1303               	bcf	3,6	;RP1=0, select bank0
  9911     1D0F  00AA               	movwf	descomponer@cent
  9912                           
  9913                           ;conversiones.c: 50:     dec = (num%100);
  9914     1D10  3064               	movlw	100
  9915     1D11  00F0               	movwf	___lwmod@divisor
  9916     1D12  3000               	movlw	0
  9917     1D13  00F1               	movwf	___lwmod@divisor+1
  9918     1D14  0827               	movf	descomponer@num+1,w
  9919     1D15  00F3               	movwf	___lwmod@dividend+1
  9920     1D16  0826               	movf	descomponer@num,w
  9921     1D17  00F2               	movwf	___lwmod@dividend
  9922     1D18  160A  158A  21F0  160A  158A  	fcall	___lwmod
  9923     1D1D  0870               	movf	?___lwmod,w
  9924     1D1E  1283               	bcf	3,5	;RP0=0, select bank0
  9925     1D1F  1303               	bcf	3,6	;RP1=0, select bank0
  9926     1D20  00AC               	movwf	descomponer@dec
  9927                           
  9928                           ;conversiones.c: 51:     uni = (dec%10);
  9929     1D21  300A               	movlw	10
  9930     1D22  00F0               	movwf	___awmod@divisor
  9931     1D23  3000               	movlw	0
  9932     1D24  00F1               	movwf	___awmod@divisor+1
  9933     1D25  082C               	movf	descomponer@dec,w
  9934     1D26  00A8               	movwf	??_descomponer
  9935     1D27  01A9               	clrf	??_descomponer+1
  9936     1D28  0828               	movf	??_descomponer,w
  9937     1D29  00F2               	movwf	___awmod@dividend
  9938     1D2A  0829               	movf	??_descomponer+1,w
  9939     1D2B  00F3               	movwf	___awmod@dividend+1
  9940     1D2C  160A  158A  23E8  160A  158A  	fcall	___awmod
  9941     1D31  0870               	movf	?___awmod,w
  9942     1D32  1283               	bcf	3,5	;RP0=0, select bank0
  9943     1D33  1303               	bcf	3,6	;RP1=0, select bank0
  9944     1D34  00AB               	movwf	descomponer@uni
  9945     1D35                     l3580:
  9946                           
  9947                           ;conversiones.c: 52:     if(pos == 2){
  9948     1D35  3002               	movlw	2
  9949     1D36  0624               	xorwf	descomponer@pos,w
  9950     1D37  0425               	iorwf	descomponer@pos+1,w
  9951     1D38  1D03               	btfss	3,2
  9952     1D39  2D3B               	goto	u5811
  9953     1D3A  2D3C               	goto	u5810
  9954     1D3B                     u5811:
  9955     1D3B  2D3E               	goto	l3588
  9956     1D3C                     u5810:
  9957     1D3C                     l3582:
  9958                           
  9959                           ;conversiones.c: 53:         return cent;
  9960     1D3C  082A               	movf	descomponer@cent,w
  9961     1D3D  2D5D               	goto	l222
  9962     1D3E                     l3588:
  9963     1D3E  0324               	decf	descomponer@pos,w
  9964     1D3F  0425               	iorwf	descomponer@pos+1,w
  9965     1D40  1D03               	btfss	3,2
  9966     1D41  2D43               	goto	u5821
  9967     1D42  2D44               	goto	u5820
  9968     1D43                     u5821:
  9969     1D43  2D56               	goto	l3596
  9970     1D44                     u5820:
  9971     1D44                     l3590:
  9972                           
  9973                           ;conversiones.c: 56:         return (dec/10);
  9974     1D44  300A               	movlw	10
  9975     1D45  00F7               	movwf	___awdiv@divisor
  9976     1D46  3000               	movlw	0
  9977     1D47  00F8               	movwf	___awdiv@divisor+1
  9978     1D48  082C               	movf	descomponer@dec,w
  9979     1D49  00A8               	movwf	??_descomponer
  9980     1D4A  01A9               	clrf	??_descomponer+1
  9981     1D4B  0828               	movf	??_descomponer,w
  9982     1D4C  00F9               	movwf	___awdiv@dividend
  9983     1D4D  0829               	movf	??_descomponer+1,w
  9984     1D4E  00FA               	movwf	___awdiv@dividend+1
  9985     1D4F  160A  158A  25C4  160A  158A  	fcall	___awdiv
  9986     1D54  0877               	movf	?___awdiv,w
  9987     1D55  2D5D               	goto	l222
  9988     1D56                     l3596:
  9989     1D56  0824               	movf	descomponer@pos,w
  9990     1D57  0425               	iorwf	descomponer@pos+1,w
  9991     1D58  1D03               	btfss	3,2
  9992     1D59  2D5B               	goto	u5831
  9993     1D5A  2D5C               	goto	u5830
  9994     1D5B                     u5831:
  9995     1D5B  2D5D               	goto	l222
  9996     1D5C                     u5830:
  9997     1D5C                     l3598:
  9998                           
  9999                           ;conversiones.c: 59:         return uni;
 10000     1D5C  082B               	movf	descomponer@uni,w
 10001     1D5D                     l222:
 10002     1D5D  0008               	return
 10003     1D5E                     __end_of_descomponer:
 10004                           
 10005                           	psect	text27
 10006     19F0                     __ptext27:	
 10007 ;; *************** function ___lwmod *****************
 10008 ;; Defined at:
 10009 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;  divisor         2    0[COMMON] unsigned int 
 10012 ;;  dividend        2    2[COMMON] unsigned int 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  counter         1    5[COMMON] unsigned char 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  2    0[COMMON] unsigned int 
 10017 ;; Registers used:
 10018 ;;		wreg, status,2, status,0
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10024 ;;      Params:         4       0       0       0       0
 10025 ;;      Locals:         1       0       0       0       0
 10026 ;;      Temps:          1       0       0       0       0
 10027 ;;      Totals:         6       0       0       0       0
 10028 ;;Total ram usage:        6 bytes
 10029 ;; Hardware stack levels used: 1
 10030 ;; This function calls:
 10031 ;;		Nothing
 10032 ;; This function is called by:
 10033 ;;		_descomponer
 10034 ;;		_fround
 10035 ;; This function uses a non-reentrant model
 10036 ;;
 10037                           
 10038     19F0                     ___lwmod:	
 10039                           ;psect for function ___lwmod
 10040                           
 10041     19F0                     l2752:	
 10042                           ;incstack = 0
 10043                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10044                           
 10045     19F0  0870               	movf	___lwmod@divisor,w
 10046     19F1  0471               	iorwf	___lwmod@divisor+1,w
 10047     19F2  1903               	btfsc	3,2
 10048     19F3  29F5               	goto	u3691
 10049     19F4  29F6               	goto	u3690
 10050     19F5                     u3691:
 10051     19F5  2A25               	goto	l2770
 10052     19F6                     u3690:
 10053     19F6                     l2754:
 10054     19F6  01F5               	clrf	___lwmod@counter
 10055     19F7  0AF5               	incf	___lwmod@counter,f
 10056     19F8  2A04               	goto	l2760
 10057     19F9                     l2756:
 10058     19F9  3001               	movlw	1
 10059     19FA                     u3705:
 10060     19FA  1003               	clrc
 10061     19FB  0DF0               	rlf	___lwmod@divisor,f
 10062     19FC  0DF1               	rlf	___lwmod@divisor+1,f
 10063     19FD  3EFF               	addlw	-1
 10064     19FE  1D03               	skipz
 10065     19FF  29FA               	goto	u3705
 10066     1A00                     l2758:
 10067     1A00  3001               	movlw	1
 10068     1A01  00F4               	movwf	??___lwmod
 10069     1A02  0874               	movf	??___lwmod,w
 10070     1A03  07F5               	addwf	___lwmod@counter,f
 10071     1A04                     l2760:
 10072     1A04  1FF1               	btfss	___lwmod@divisor+1,7
 10073     1A05  2A07               	goto	u3711
 10074     1A06  2A08               	goto	u3710
 10075     1A07                     u3711:
 10076     1A07  29F9               	goto	l2756
 10077     1A08                     u3710:
 10078     1A08                     l2762:
 10079     1A08  0871               	movf	___lwmod@divisor+1,w
 10080     1A09  0273               	subwf	___lwmod@dividend+1,w
 10081     1A0A  1D03               	skipz
 10082     1A0B  2A0E               	goto	u3725
 10083     1A0C  0870               	movf	___lwmod@divisor,w
 10084     1A0D  0272               	subwf	___lwmod@dividend,w
 10085     1A0E                     u3725:
 10086     1A0E  1C03               	skipc
 10087     1A0F  2A11               	goto	u3721
 10088     1A10  2A12               	goto	u3720
 10089     1A11                     u3721:
 10090     1A11  2A18               	goto	l2766
 10091     1A12                     u3720:
 10092     1A12                     l2764:
 10093     1A12  0870               	movf	___lwmod@divisor,w
 10094     1A13  02F2               	subwf	___lwmod@dividend,f
 10095     1A14  0871               	movf	___lwmod@divisor+1,w
 10096     1A15  1C03               	skipc
 10097     1A16  03F3               	decf	___lwmod@dividend+1,f
 10098     1A17  02F3               	subwf	___lwmod@dividend+1,f
 10099     1A18                     l2766:
 10100     1A18  3001               	movlw	1
 10101     1A19                     u3735:
 10102     1A19  1003               	clrc
 10103     1A1A  0CF1               	rrf	___lwmod@divisor+1,f
 10104     1A1B  0CF0               	rrf	___lwmod@divisor,f
 10105     1A1C  3EFF               	addlw	-1
 10106     1A1D  1D03               	skipz
 10107     1A1E  2A19               	goto	u3735
 10108     1A1F                     l2768:
 10109     1A1F  3001               	movlw	1
 10110     1A20  02F5               	subwf	___lwmod@counter,f
 10111     1A21  1D03               	btfss	3,2
 10112     1A22  2A24               	goto	u3741
 10113     1A23  2A25               	goto	u3740
 10114     1A24                     u3741:
 10115     1A24  2A08               	goto	l2762
 10116     1A25                     u3740:
 10117     1A25                     l2770:
 10118     1A25  0873               	movf	___lwmod@dividend+1,w
 10119     1A26  00F1               	movwf	?___lwmod+1
 10120     1A27  0872               	movf	___lwmod@dividend,w
 10121     1A28  00F0               	movwf	?___lwmod
 10122     1A29                     l749:
 10123     1A29  0008               	return
 10124     1A2A                     __end_of___lwmod:
 10125                           
 10126                           	psect	text28
 10127     1A6C                     __ptext28:	
 10128 ;; *************** function ___lwdiv *****************
 10129 ;; Defined at:
 10130 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  divisor         2    6[COMMON] unsigned int 
 10133 ;;  dividend        2    8[COMMON] unsigned int 
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;  quotient        2   11[COMMON] unsigned int 
 10136 ;;  counter         1   13[COMMON] unsigned char 
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  2    6[COMMON] unsigned int 
 10139 ;; Registers used:
 10140 ;;		wreg, status,2, status,0
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10146 ;;      Params:         4       0       0       0       0
 10147 ;;      Locals:         3       0       0       0       0
 10148 ;;      Temps:          1       0       0       0       0
 10149 ;;      Totals:         8       0       0       0       0
 10150 ;;Total ram usage:        8 bytes
 10151 ;; Hardware stack levels used: 1
 10152 ;; This function calls:
 10153 ;;		Nothing
 10154 ;; This function is called by:
 10155 ;;		_descomponer
 10156 ;;		_fround
 10157 ;; This function uses a non-reentrant model
 10158 ;;
 10159                           
 10160     1A6C                     ___lwdiv:	
 10161                           ;psect for function ___lwdiv
 10162                           
 10163     1A6C                     l2726:	
 10164                           ;incstack = 0
 10165                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10166                           
 10167     1A6C  01FB               	clrf	___lwdiv@quotient
 10168     1A6D  01FC               	clrf	___lwdiv@quotient+1
 10169     1A6E                     l2728:
 10170     1A6E  0876               	movf	___lwdiv@divisor,w
 10171     1A6F  0477               	iorwf	___lwdiv@divisor+1,w
 10172     1A70  1903               	btfsc	3,2
 10173     1A71  2A73               	goto	u3621
 10174     1A72  2A74               	goto	u3620
 10175     1A73                     u3621:
 10176     1A73  2AAB               	goto	l2748
 10177     1A74                     u3620:
 10178     1A74                     l2730:
 10179     1A74  01FD               	clrf	___lwdiv@counter
 10180     1A75  0AFD               	incf	___lwdiv@counter,f
 10181     1A76  2A82               	goto	l2736
 10182     1A77                     l2732:
 10183     1A77  3001               	movlw	1
 10184     1A78                     u3635:
 10185     1A78  1003               	clrc
 10186     1A79  0DF6               	rlf	___lwdiv@divisor,f
 10187     1A7A  0DF7               	rlf	___lwdiv@divisor+1,f
 10188     1A7B  3EFF               	addlw	-1
 10189     1A7C  1D03               	skipz
 10190     1A7D  2A78               	goto	u3635
 10191     1A7E                     l2734:
 10192     1A7E  3001               	movlw	1
 10193     1A7F  00FA               	movwf	??___lwdiv
 10194     1A80  087A               	movf	??___lwdiv,w
 10195     1A81  07FD               	addwf	___lwdiv@counter,f
 10196     1A82                     l2736:
 10197     1A82  1FF7               	btfss	___lwdiv@divisor+1,7
 10198     1A83  2A85               	goto	u3641
 10199     1A84  2A86               	goto	u3640
 10200     1A85                     u3641:
 10201     1A85  2A77               	goto	l2732
 10202     1A86                     u3640:
 10203     1A86                     l2738:
 10204     1A86  3001               	movlw	1
 10205     1A87                     u3655:
 10206     1A87  1003               	clrc
 10207     1A88  0DFB               	rlf	___lwdiv@quotient,f
 10208     1A89  0DFC               	rlf	___lwdiv@quotient+1,f
 10209     1A8A  3EFF               	addlw	-1
 10210     1A8B  1D03               	skipz
 10211     1A8C  2A87               	goto	u3655
 10212     1A8D  0877               	movf	___lwdiv@divisor+1,w
 10213     1A8E  0279               	subwf	___lwdiv@dividend+1,w
 10214     1A8F  1D03               	skipz
 10215     1A90  2A93               	goto	u3665
 10216     1A91  0876               	movf	___lwdiv@divisor,w
 10217     1A92  0278               	subwf	___lwdiv@dividend,w
 10218     1A93                     u3665:
 10219     1A93  1C03               	skipc
 10220     1A94  2A96               	goto	u3661
 10221     1A95  2A97               	goto	u3660
 10222     1A96                     u3661:
 10223     1A96  2A9E               	goto	l2744
 10224     1A97                     u3660:
 10225     1A97                     l2740:
 10226     1A97  0876               	movf	___lwdiv@divisor,w
 10227     1A98  02F8               	subwf	___lwdiv@dividend,f
 10228     1A99  0877               	movf	___lwdiv@divisor+1,w
 10229     1A9A  1C03               	skipc
 10230     1A9B  03F9               	decf	___lwdiv@dividend+1,f
 10231     1A9C  02F9               	subwf	___lwdiv@dividend+1,f
 10232     1A9D                     l2742:
 10233     1A9D  147B               	bsf	___lwdiv@quotient,0
 10234     1A9E                     l2744:
 10235     1A9E  3001               	movlw	1
 10236     1A9F                     u3675:
 10237     1A9F  1003               	clrc
 10238     1AA0  0CF7               	rrf	___lwdiv@divisor+1,f
 10239     1AA1  0CF6               	rrf	___lwdiv@divisor,f
 10240     1AA2  3EFF               	addlw	-1
 10241     1AA3  1D03               	skipz
 10242     1AA4  2A9F               	goto	u3675
 10243     1AA5                     l2746:
 10244     1AA5  3001               	movlw	1
 10245     1AA6  02FD               	subwf	___lwdiv@counter,f
 10246     1AA7  1D03               	btfss	3,2
 10247     1AA8  2AAA               	goto	u3681
 10248     1AA9  2AAB               	goto	u3680
 10249     1AAA                     u3681:
 10250     1AAA  2A86               	goto	l2738
 10251     1AAB                     u3680:
 10252     1AAB                     l2748:
 10253     1AAB  087C               	movf	___lwdiv@quotient+1,w
 10254     1AAC  00F7               	movwf	?___lwdiv+1
 10255     1AAD  087B               	movf	___lwdiv@quotient,w
 10256     1AAE  00F6               	movwf	?___lwdiv
 10257     1AAF                     l739:
 10258     1AAF  0008               	return
 10259     1AB0                     __end_of___lwdiv:
 10260                           
 10261                           	psect	text29
 10262     1BE8                     __ptext29:	
 10263 ;; *************** function ___awmod *****************
 10264 ;; Defined at:
 10265 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  divisor         2    0[COMMON] int 
 10268 ;;  dividend        2    2[COMMON] int 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;  sign            1    6[COMMON] unsigned char 
 10271 ;;  counter         1    5[COMMON] unsigned char 
 10272 ;; Return value:  Size  Location     Type
 10273 ;;                  2    0[COMMON] int 
 10274 ;; Registers used:
 10275 ;;		wreg, status,2, status,0
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10281 ;;      Params:         4       0       0       0       0
 10282 ;;      Locals:         2       0       0       0       0
 10283 ;;      Temps:          1       0       0       0       0
 10284 ;;      Totals:         7       0       0       0       0
 10285 ;;Total ram usage:        7 bytes
 10286 ;; Hardware stack levels used: 1
 10287 ;; This function calls:
 10288 ;;		Nothing
 10289 ;; This function is called by:
 10290 ;;		_descomponer
 10291 ;;		_scale
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295     1BE8                     ___awmod:	
 10296                           ;psect for function ___awmod
 10297                           
 10298     1BE8                     l2688:	
 10299                           ;incstack = 0
 10300                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10301                           
 10302     1BE8  01F6               	clrf	___awmod@sign
 10303     1BE9                     l2690:
 10304     1BE9  1FF3               	btfss	___awmod@dividend+1,7
 10305     1BEA  2BEC               	goto	u3531
 10306     1BEB  2BED               	goto	u3530
 10307     1BEC                     u3531:
 10308     1BEC  2BF4               	goto	l2696
 10309     1BED                     u3530:
 10310     1BED                     l2692:
 10311     1BED  09F2               	comf	___awmod@dividend,f
 10312     1BEE  09F3               	comf	___awmod@dividend+1,f
 10313     1BEF  0AF2               	incf	___awmod@dividend,f
 10314     1BF0  1903               	skipnz
 10315     1BF1  0AF3               	incf	___awmod@dividend+1,f
 10316     1BF2                     l2694:
 10317     1BF2  01F6               	clrf	___awmod@sign
 10318     1BF3  0AF6               	incf	___awmod@sign,f
 10319     1BF4                     l2696:
 10320     1BF4  1FF1               	btfss	___awmod@divisor+1,7
 10321     1BF5  2BF7               	goto	u3541
 10322     1BF6  2BF8               	goto	u3540
 10323     1BF7                     u3541:
 10324     1BF7  2BFD               	goto	l2700
 10325     1BF8                     u3540:
 10326     1BF8                     l2698:
 10327     1BF8  09F0               	comf	___awmod@divisor,f
 10328     1BF9  09F1               	comf	___awmod@divisor+1,f
 10329     1BFA  0AF0               	incf	___awmod@divisor,f
 10330     1BFB  1903               	skipnz
 10331     1BFC  0AF1               	incf	___awmod@divisor+1,f
 10332     1BFD                     l2700:
 10333     1BFD  0870               	movf	___awmod@divisor,w
 10334     1BFE  0471               	iorwf	___awmod@divisor+1,w
 10335     1BFF  1903               	btfsc	3,2
 10336     1C00  2C02               	goto	u3551
 10337     1C01  2C03               	goto	u3550
 10338     1C02                     u3551:
 10339     1C02  2C32               	goto	l2718
 10340     1C03                     u3550:
 10341     1C03                     l2702:
 10342     1C03  01F5               	clrf	___awmod@counter
 10343     1C04  0AF5               	incf	___awmod@counter,f
 10344     1C05  2C11               	goto	l2708
 10345     1C06                     l2704:
 10346     1C06  3001               	movlw	1
 10347     1C07                     u3565:
 10348     1C07  1003               	clrc
 10349     1C08  0DF0               	rlf	___awmod@divisor,f
 10350     1C09  0DF1               	rlf	___awmod@divisor+1,f
 10351     1C0A  3EFF               	addlw	-1
 10352     1C0B  1D03               	skipz
 10353     1C0C  2C07               	goto	u3565
 10354     1C0D                     l2706:
 10355     1C0D  3001               	movlw	1
 10356     1C0E  00F4               	movwf	??___awmod
 10357     1C0F  0874               	movf	??___awmod,w
 10358     1C10  07F5               	addwf	___awmod@counter,f
 10359     1C11                     l2708:
 10360     1C11  1FF1               	btfss	___awmod@divisor+1,7
 10361     1C12  2C14               	goto	u3571
 10362     1C13  2C15               	goto	u3570
 10363     1C14                     u3571:
 10364     1C14  2C06               	goto	l2704
 10365     1C15                     u3570:
 10366     1C15                     l2710:
 10367     1C15  0871               	movf	___awmod@divisor+1,w
 10368     1C16  0273               	subwf	___awmod@dividend+1,w
 10369     1C17  1D03               	skipz
 10370     1C18  2C1B               	goto	u3585
 10371     1C19  0870               	movf	___awmod@divisor,w
 10372     1C1A  0272               	subwf	___awmod@dividend,w
 10373     1C1B                     u3585:
 10374     1C1B  1C03               	skipc
 10375     1C1C  2C1E               	goto	u3581
 10376     1C1D  2C1F               	goto	u3580
 10377     1C1E                     u3581:
 10378     1C1E  2C25               	goto	l2714
 10379     1C1F                     u3580:
 10380     1C1F                     l2712:
 10381     1C1F  0870               	movf	___awmod@divisor,w
 10382     1C20  02F2               	subwf	___awmod@dividend,f
 10383     1C21  0871               	movf	___awmod@divisor+1,w
 10384     1C22  1C03               	skipc
 10385     1C23  03F3               	decf	___awmod@dividend+1,f
 10386     1C24  02F3               	subwf	___awmod@dividend+1,f
 10387     1C25                     l2714:
 10388     1C25  3001               	movlw	1
 10389     1C26                     u3595:
 10390     1C26  1003               	clrc
 10391     1C27  0CF1               	rrf	___awmod@divisor+1,f
 10392     1C28  0CF0               	rrf	___awmod@divisor,f
 10393     1C29  3EFF               	addlw	-1
 10394     1C2A  1D03               	skipz
 10395     1C2B  2C26               	goto	u3595
 10396     1C2C                     l2716:
 10397     1C2C  3001               	movlw	1
 10398     1C2D  02F5               	subwf	___awmod@counter,f
 10399     1C2E  1D03               	btfss	3,2
 10400     1C2F  2C31               	goto	u3601
 10401     1C30  2C32               	goto	u3600
 10402     1C31                     u3601:
 10403     1C31  2C15               	goto	l2710
 10404     1C32                     u3600:
 10405     1C32                     l2718:
 10406     1C32  0876               	movf	___awmod@sign,w
 10407     1C33  1903               	btfsc	3,2
 10408     1C34  2C36               	goto	u3611
 10409     1C35  2C37               	goto	u3610
 10410     1C36                     u3611:
 10411     1C36  2C3C               	goto	l2722
 10412     1C37                     u3610:
 10413     1C37                     l2720:
 10414     1C37  09F2               	comf	___awmod@dividend,f
 10415     1C38  09F3               	comf	___awmod@dividend+1,f
 10416     1C39  0AF2               	incf	___awmod@dividend,f
 10417     1C3A  1903               	skipnz
 10418     1C3B  0AF3               	incf	___awmod@dividend+1,f
 10419     1C3C                     l2722:
 10420     1C3C  0873               	movf	___awmod@dividend+1,w
 10421     1C3D  00F1               	movwf	?___awmod+1
 10422     1C3E  0872               	movf	___awmod@dividend,w
 10423     1C3F  00F0               	movwf	?___awmod
 10424     1C40                     l599:
 10425     1C40  0008               	return
 10426     1C41                     __end_of___awmod:
 10427                           
 10428                           	psect	text30
 10429     1DC4                     __ptext30:	
 10430 ;; *************** function ___awdiv *****************
 10431 ;; Defined at:
 10432 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  divisor         2    7[COMMON] int 
 10435 ;;  dividend        2    9[COMMON] int 
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;  quotient        2    2[BANK0 ] int 
 10438 ;;  sign            1    1[BANK0 ] unsigned char 
 10439 ;;  counter         1    0[BANK0 ] unsigned char 
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  2    7[COMMON] int 
 10442 ;; Registers used:
 10443 ;;		wreg, status,2, status,0
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10449 ;;      Params:         4       0       0       0       0
 10450 ;;      Locals:         0       4       0       0       0
 10451 ;;      Temps:          1       0       0       0       0
 10452 ;;      Totals:         5       4       0       0       0
 10453 ;;Total ram usage:        9 bytes
 10454 ;; Hardware stack levels used: 1
 10455 ;; This function calls:
 10456 ;;		Nothing
 10457 ;; This function is called by:
 10458 ;;		_descomponer
 10459 ;;		_scale
 10460 ;;		_sprintf
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464     1DC4                     ___awdiv:	
 10465                           ;psect for function ___awdiv
 10466                           
 10467     1DC4                     l2644:	
 10468                           ;incstack = 0
 10469                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10470                           
 10471     1DC4  1283               	bcf	3,5	;RP0=0, select bank0
 10472     1DC5  1303               	bcf	3,6	;RP1=0, select bank0
 10473     1DC6  01A1               	clrf	___awdiv@sign
 10474     1DC7                     l2646:
 10475     1DC7  1FF8               	btfss	___awdiv@divisor+1,7
 10476     1DC8  2DCA               	goto	u3431
 10477     1DC9  2DCB               	goto	u3430
 10478     1DCA                     u3431:
 10479     1DCA  2DD2               	goto	l2652
 10480     1DCB                     u3430:
 10481     1DCB                     l2648:
 10482     1DCB  09F7               	comf	___awdiv@divisor,f
 10483     1DCC  09F8               	comf	___awdiv@divisor+1,f
 10484     1DCD  0AF7               	incf	___awdiv@divisor,f
 10485     1DCE  1903               	skipnz
 10486     1DCF  0AF8               	incf	___awdiv@divisor+1,f
 10487     1DD0                     l2650:
 10488     1DD0  01A1               	clrf	___awdiv@sign
 10489     1DD1  0AA1               	incf	___awdiv@sign,f
 10490     1DD2                     l2652:
 10491     1DD2  1FFA               	btfss	___awdiv@dividend+1,7
 10492     1DD3  2DD5               	goto	u3441
 10493     1DD4  2DD6               	goto	u3440
 10494     1DD5                     u3441:
 10495     1DD5  2DDF               	goto	l2658
 10496     1DD6                     u3440:
 10497     1DD6                     l2654:
 10498     1DD6  09F9               	comf	___awdiv@dividend,f
 10499     1DD7  09FA               	comf	___awdiv@dividend+1,f
 10500     1DD8  0AF9               	incf	___awdiv@dividend,f
 10501     1DD9  1903               	skipnz
 10502     1DDA  0AFA               	incf	___awdiv@dividend+1,f
 10503     1DDB                     l2656:
 10504     1DDB  3001               	movlw	1
 10505     1DDC  00FB               	movwf	??___awdiv
 10506     1DDD  087B               	movf	??___awdiv,w
 10507     1DDE  06A1               	xorwf	___awdiv@sign,f
 10508     1DDF                     l2658:
 10509     1DDF  01A2               	clrf	___awdiv@quotient
 10510     1DE0  01A3               	clrf	___awdiv@quotient+1
 10511     1DE1                     l2660:
 10512     1DE1  0877               	movf	___awdiv@divisor,w
 10513     1DE2  0478               	iorwf	___awdiv@divisor+1,w
 10514     1DE3  1903               	btfsc	3,2
 10515     1DE4  2DE6               	goto	u3451
 10516     1DE5  2DE7               	goto	u3450
 10517     1DE6                     u3451:
 10518     1DE6  2E1E               	goto	l2680
 10519     1DE7                     u3450:
 10520     1DE7                     l2662:
 10521     1DE7  01A0               	clrf	___awdiv@counter
 10522     1DE8  0AA0               	incf	___awdiv@counter,f
 10523     1DE9  2DF5               	goto	l2668
 10524     1DEA                     l2664:
 10525     1DEA  3001               	movlw	1
 10526     1DEB                     u3465:
 10527     1DEB  1003               	clrc
 10528     1DEC  0DF7               	rlf	___awdiv@divisor,f
 10529     1DED  0DF8               	rlf	___awdiv@divisor+1,f
 10530     1DEE  3EFF               	addlw	-1
 10531     1DEF  1D03               	skipz
 10532     1DF0  2DEB               	goto	u3465
 10533     1DF1                     l2666:
 10534     1DF1  3001               	movlw	1
 10535     1DF2  00FB               	movwf	??___awdiv
 10536     1DF3  087B               	movf	??___awdiv,w
 10537     1DF4  07A0               	addwf	___awdiv@counter,f
 10538     1DF5                     l2668:
 10539     1DF5  1FF8               	btfss	___awdiv@divisor+1,7
 10540     1DF6  2DF8               	goto	u3471
 10541     1DF7  2DF9               	goto	u3470
 10542     1DF8                     u3471:
 10543     1DF8  2DEA               	goto	l2664
 10544     1DF9                     u3470:
 10545     1DF9                     l2670:
 10546     1DF9  3001               	movlw	1
 10547     1DFA                     u3485:
 10548     1DFA  1003               	clrc
 10549     1DFB  0DA2               	rlf	___awdiv@quotient,f
 10550     1DFC  0DA3               	rlf	___awdiv@quotient+1,f
 10551     1DFD  3EFF               	addlw	-1
 10552     1DFE  1D03               	skipz
 10553     1DFF  2DFA               	goto	u3485
 10554     1E00  0878               	movf	___awdiv@divisor+1,w
 10555     1E01  027A               	subwf	___awdiv@dividend+1,w
 10556     1E02  1D03               	skipz
 10557     1E03  2E06               	goto	u3495
 10558     1E04  0877               	movf	___awdiv@divisor,w
 10559     1E05  0279               	subwf	___awdiv@dividend,w
 10560     1E06                     u3495:
 10561     1E06  1C03               	skipc
 10562     1E07  2E09               	goto	u3491
 10563     1E08  2E0A               	goto	u3490
 10564     1E09                     u3491:
 10565     1E09  2E11               	goto	l2676
 10566     1E0A                     u3490:
 10567     1E0A                     l2672:
 10568     1E0A  0877               	movf	___awdiv@divisor,w
 10569     1E0B  02F9               	subwf	___awdiv@dividend,f
 10570     1E0C  0878               	movf	___awdiv@divisor+1,w
 10571     1E0D  1C03               	skipc
 10572     1E0E  03FA               	decf	___awdiv@dividend+1,f
 10573     1E0F  02FA               	subwf	___awdiv@dividend+1,f
 10574     1E10                     l2674:
 10575     1E10  1422               	bsf	___awdiv@quotient,0
 10576     1E11                     l2676:
 10577     1E11  3001               	movlw	1
 10578     1E12                     u3505:
 10579     1E12  1003               	clrc
 10580     1E13  0CF8               	rrf	___awdiv@divisor+1,f
 10581     1E14  0CF7               	rrf	___awdiv@divisor,f
 10582     1E15  3EFF               	addlw	-1
 10583     1E16  1D03               	skipz
 10584     1E17  2E12               	goto	u3505
 10585     1E18                     l2678:
 10586     1E18  3001               	movlw	1
 10587     1E19  02A0               	subwf	___awdiv@counter,f
 10588     1E1A  1D03               	btfss	3,2
 10589     1E1B  2E1D               	goto	u3511
 10590     1E1C  2E1E               	goto	u3510
 10591     1E1D                     u3511:
 10592     1E1D  2DF9               	goto	l2670
 10593     1E1E                     u3510:
 10594     1E1E                     l2680:
 10595     1E1E  0821               	movf	___awdiv@sign,w
 10596     1E1F  1903               	btfsc	3,2
 10597     1E20  2E22               	goto	u3521
 10598     1E21  2E23               	goto	u3520
 10599     1E22                     u3521:
 10600     1E22  2E28               	goto	l2684
 10601     1E23                     u3520:
 10602     1E23                     l2682:
 10603     1E23  09A2               	comf	___awdiv@quotient,f
 10604     1E24  09A3               	comf	___awdiv@quotient+1,f
 10605     1E25  0AA2               	incf	___awdiv@quotient,f
 10606     1E26  1903               	skipnz
 10607     1E27  0AA3               	incf	___awdiv@quotient+1,f
 10608     1E28                     l2684:
 10609     1E28  0823               	movf	___awdiv@quotient+1,w
 10610     1E29  00F8               	movwf	?___awdiv+1
 10611     1E2A  0822               	movf	___awdiv@quotient,w
 10612     1E2B  00F7               	movwf	?___awdiv
 10613     1E2C                     l586:
 10614     1E2C  0008               	return
 10615     1E2D                     __end_of___awdiv:
 10616                           
 10617                           	psect	text31
 10618     1E2D                     __ptext31:	
 10619 ;; *************** function ___fldiv *****************
 10620 ;; Defined at:
 10621 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;  a               4   30[BANK0 ] int 
 10624 ;;  b               4   34[BANK0 ] int 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;  grs             4   50[BANK0 ] unsigned long 
 10627 ;;  rem             4   43[BANK0 ] unsigned long 
 10628 ;;  new_exp         2   48[BANK0 ] int 
 10629 ;;  aexp            1   55[BANK0 ] unsigned char 
 10630 ;;  bexp            1   54[BANK0 ] unsigned char 
 10631 ;;  sign            1   47[BANK0 ] unsigned char 
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  4   30[BANK0 ] unsigned char 
 10634 ;; Registers used:
 10635 ;;		wreg, status,2, status,0, btemp+1
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10641 ;;      Params:         0       8       0       0       0
 10642 ;;      Locals:         0      13       0       0       0
 10643 ;;      Temps:          0       5       0       0       0
 10644 ;;      Totals:         0      26       0       0       0
 10645 ;;Total ram usage:       26 bytes
 10646 ;; Hardware stack levels used: 1
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_main
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654     1E2D                     ___fldiv:	
 10655                           ;psect for function ___fldiv
 10656                           
 10657     1E2D                     l3892:	
 10658                           ;incstack = 0
 10659                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10660                           
 10661     1E2D  1283               	bcf	3,5	;RP0=0, select bank0
 10662     1E2E  1303               	bcf	3,6	;RP1=0, select bank0
 10663     1E2F  0845               	movf	___fldiv@b+3,w
 10664     1E30  3980               	andlw	128
 10665     1E31  00CF               	movwf	___fldiv@sign
 10666     1E32                     l3894:
 10667     1E32  0845               	movf	___fldiv@b+3,w
 10668     1E33  00C6               	movwf	??___fldiv
 10669     1E34  0746               	addwf	??___fldiv,w
 10670     1E35  00D6               	movwf	___fldiv@bexp
 10671     1E36                     l3896:
 10672     1E36  1FC4               	btfss	___fldiv@b+2,7
 10673     1E37  2E39               	goto	u6291
 10674     1E38  2E3A               	goto	u6290
 10675     1E39                     u6291:
 10676     1E39  2E3B               	goto	l3900
 10677     1E3A                     u6290:
 10678     1E3A                     l3898:
 10679     1E3A  1456               	bsf	___fldiv@bexp,0
 10680     1E3B                     l3900:
 10681     1E3B  0856               	movf	___fldiv@bexp,w
 10682     1E3C  1903               	btfsc	3,2
 10683     1E3D  2E3F               	goto	u6301
 10684     1E3E  2E40               	goto	u6300
 10685     1E3F                     u6301:
 10686     1E3F  2E50               	goto	l3910
 10687     1E40                     u6300:
 10688     1E40                     l3902:
 10689     1E40  0A56               	incf	___fldiv@bexp,w
 10690     1E41  1D03               	btfss	3,2
 10691     1E42  2E44               	goto	u6311
 10692     1E43  2E45               	goto	u6310
 10693     1E44                     u6311:
 10694     1E44  2E4D               	goto	l3906
 10695     1E45                     u6310:
 10696     1E45                     l3904:
 10697     1E45  3000               	movlw	0
 10698     1E46  00C5               	movwf	___fldiv@b+3
 10699     1E47  3000               	movlw	0
 10700     1E48  00C4               	movwf	___fldiv@b+2
 10701     1E49  3000               	movlw	0
 10702     1E4A  00C3               	movwf	___fldiv@b+1
 10703     1E4B  3000               	movlw	0
 10704     1E4C  00C2               	movwf	___fldiv@b
 10705     1E4D                     l3906:
 10706     1E4D  17C4               	bsf	___fldiv@b+2,7
 10707     1E4E                     l3908:
 10708     1E4E  01C5               	clrf	___fldiv@b+3
 10709     1E4F  2E58               	goto	l3912
 10710     1E50                     l3910:
 10711     1E50  3000               	movlw	0
 10712     1E51  00C5               	movwf	___fldiv@b+3
 10713     1E52  3000               	movlw	0
 10714     1E53  00C4               	movwf	___fldiv@b+2
 10715     1E54  3000               	movlw	0
 10716     1E55  00C3               	movwf	___fldiv@b+1
 10717     1E56  3000               	movlw	0
 10718     1E57  00C2               	movwf	___fldiv@b
 10719     1E58                     l3912:
 10720     1E58  0841               	movf	___fldiv@a+3,w
 10721     1E59  3980               	andlw	128
 10722     1E5A  00C6               	movwf	??___fldiv
 10723     1E5B  0846               	movf	??___fldiv,w
 10724     1E5C  06CF               	xorwf	___fldiv@sign,f
 10725     1E5D                     l3914:
 10726     1E5D  0841               	movf	___fldiv@a+3,w
 10727     1E5E  00C6               	movwf	??___fldiv
 10728     1E5F  0746               	addwf	??___fldiv,w
 10729     1E60  00D7               	movwf	___fldiv@aexp
 10730     1E61                     l3916:
 10731     1E61  1FC0               	btfss	___fldiv@a+2,7
 10732     1E62  2E64               	goto	u6321
 10733     1E63  2E65               	goto	u6320
 10734     1E64                     u6321:
 10735     1E64  2E66               	goto	l3920
 10736     1E65                     u6320:
 10737     1E65                     l3918:
 10738     1E65  1457               	bsf	___fldiv@aexp,0
 10739     1E66                     l3920:
 10740     1E66  0857               	movf	___fldiv@aexp,w
 10741     1E67  1903               	btfsc	3,2
 10742     1E68  2E6A               	goto	u6331
 10743     1E69  2E6B               	goto	u6330
 10744     1E6A                     u6331:
 10745     1E6A  2E7B               	goto	l3930
 10746     1E6B                     u6330:
 10747     1E6B                     l3922:
 10748     1E6B  0A57               	incf	___fldiv@aexp,w
 10749     1E6C  1D03               	btfss	3,2
 10750     1E6D  2E6F               	goto	u6341
 10751     1E6E  2E70               	goto	u6340
 10752     1E6F                     u6341:
 10753     1E6F  2E78               	goto	l3926
 10754     1E70                     u6340:
 10755     1E70                     l3924:
 10756     1E70  3000               	movlw	0
 10757     1E71  00C1               	movwf	___fldiv@a+3
 10758     1E72  3000               	movlw	0
 10759     1E73  00C0               	movwf	___fldiv@a+2
 10760     1E74  3000               	movlw	0
 10761     1E75  00BF               	movwf	___fldiv@a+1
 10762     1E76  3000               	movlw	0
 10763     1E77  00BE               	movwf	___fldiv@a
 10764     1E78                     l3926:
 10765     1E78  17C0               	bsf	___fldiv@a+2,7
 10766     1E79                     l3928:
 10767     1E79  01C1               	clrf	___fldiv@a+3
 10768     1E7A  2E83               	goto	l816
 10769     1E7B                     l3930:
 10770     1E7B  3000               	movlw	0
 10771     1E7C  00C1               	movwf	___fldiv@a+3
 10772     1E7D  3000               	movlw	0
 10773     1E7E  00C0               	movwf	___fldiv@a+2
 10774     1E7F  3000               	movlw	0
 10775     1E80  00BF               	movwf	___fldiv@a+1
 10776     1E81  3000               	movlw	0
 10777     1E82  00BE               	movwf	___fldiv@a
 10778     1E83                     l816:
 10779     1E83  0841               	movf	___fldiv@a+3,w
 10780     1E84  0440               	iorwf	___fldiv@a+2,w
 10781     1E85  043F               	iorwf	___fldiv@a+1,w
 10782     1E86  043E               	iorwf	___fldiv@a,w
 10783     1E87  1D03               	skipz
 10784     1E88  2E8A               	goto	u6351
 10785     1E89  2E8B               	goto	u6350
 10786     1E8A                     u6351:
 10787     1E8A  2EA4               	goto	l3940
 10788     1E8B                     u6350:
 10789     1E8B                     l3932:
 10790     1E8B  3000               	movlw	0
 10791     1E8C  00C5               	movwf	___fldiv@b+3
 10792     1E8D  3000               	movlw	0
 10793     1E8E  00C4               	movwf	___fldiv@b+2
 10794     1E8F  3000               	movlw	0
 10795     1E90  00C3               	movwf	___fldiv@b+1
 10796     1E91  3000               	movlw	0
 10797     1E92  00C2               	movwf	___fldiv@b
 10798     1E93  3080               	movlw	128
 10799     1E94  04C4               	iorwf	___fldiv@b+2,f
 10800     1E95  307F               	movlw	127
 10801     1E96  04C5               	iorwf	___fldiv@b+3,f
 10802     1E97                     l3934:
 10803     1E97  084F               	movf	___fldiv@sign,w
 10804     1E98  00C6               	movwf	??___fldiv
 10805     1E99  0846               	movf	??___fldiv,w
 10806     1E9A  04C5               	iorwf	___fldiv@b+3,f
 10807     1E9B                     l3936:
 10808     1E9B  0845               	movf	___fldiv@b+3,w
 10809     1E9C  00C1               	movwf	?___fldiv+3
 10810     1E9D  0844               	movf	___fldiv@b+2,w
 10811     1E9E  00C0               	movwf	?___fldiv+2
 10812     1E9F  0843               	movf	___fldiv@b+1,w
 10813     1EA0  00BF               	movwf	?___fldiv+1
 10814     1EA1  0842               	movf	___fldiv@b,w
 10815     1EA2  00BE               	movwf	?___fldiv
 10816     1EA3  2FFF               	goto	l818
 10817     1EA4                     l3940:
 10818     1EA4  0856               	movf	___fldiv@bexp,w
 10819     1EA5  1D03               	btfss	3,2
 10820     1EA6  2EA8               	goto	u6361
 10821     1EA7  2EA9               	goto	u6360
 10822     1EA8                     u6361:
 10823     1EA8  2EB2               	goto	l3946
 10824     1EA9                     u6360:
 10825     1EA9                     l3942:
 10826     1EA9  3000               	movlw	0
 10827     1EAA  00C1               	movwf	?___fldiv+3
 10828     1EAB  3000               	movlw	0
 10829     1EAC  00C0               	movwf	?___fldiv+2
 10830     1EAD  3000               	movlw	0
 10831     1EAE  00BF               	movwf	?___fldiv+1
 10832     1EAF  3000               	movlw	0
 10833     1EB0  00BE               	movwf	?___fldiv
 10834     1EB1  2FFF               	goto	l818
 10835     1EB2                     l3946:
 10836     1EB2  0856               	movf	___fldiv@bexp,w
 10837     1EB3  00C6               	movwf	??___fldiv
 10838     1EB4  01C7               	clrf	??___fldiv+1
 10839     1EB5  0847               	movf	??___fldiv+1,w
 10840     1EB6  00C9               	movwf	??___fldiv+3
 10841     1EB7  0857               	movf	___fldiv@aexp,w
 10842     1EB8  0246               	subwf	??___fldiv,w
 10843     1EB9  00C8               	movwf	??___fldiv+2
 10844     1EBA  1C03               	skipc
 10845     1EBB  03C9               	decf	??___fldiv+3,f
 10846     1EBC  0848               	movf	??___fldiv+2,w
 10847     1EBD  3E7F               	addlw	127
 10848     1EBE  00D0               	movwf	___fldiv@new_exp
 10849     1EBF  0849               	movf	??___fldiv+3,w
 10850     1EC0  1803               	skipnc
 10851     1EC1  3E01               	addlw	1
 10852     1EC2  3E00               	addlw	0
 10853     1EC3  00D1               	movwf	___fldiv@new_exp+1
 10854     1EC4                     l3948:
 10855     1EC4  0845               	movf	___fldiv@b+3,w
 10856     1EC5  00CE               	movwf	___fldiv@rem+3
 10857     1EC6  0844               	movf	___fldiv@b+2,w
 10858     1EC7  00CD               	movwf	___fldiv@rem+2
 10859     1EC8  0843               	movf	___fldiv@b+1,w
 10860     1EC9  00CC               	movwf	___fldiv@rem+1
 10861     1ECA  0842               	movf	___fldiv@b,w
 10862     1ECB  00CB               	movwf	___fldiv@rem
 10863     1ECC                     l3950:
 10864     1ECC  3000               	movlw	0
 10865     1ECD  00C5               	movwf	___fldiv@b+3
 10866     1ECE  3000               	movlw	0
 10867     1ECF  00C4               	movwf	___fldiv@b+2
 10868     1ED0  3000               	movlw	0
 10869     1ED1  00C3               	movwf	___fldiv@b+1
 10870     1ED2  3000               	movlw	0
 10871     1ED3  00C2               	movwf	___fldiv@b
 10872     1ED4                     l3952:
 10873     1ED4  3000               	movlw	0
 10874     1ED5  00D5               	movwf	___fldiv@grs+3
 10875     1ED6  3000               	movlw	0
 10876     1ED7  00D4               	movwf	___fldiv@grs+2
 10877     1ED8  3000               	movlw	0
 10878     1ED9  00D3               	movwf	___fldiv@grs+1
 10879     1EDA  3000               	movlw	0
 10880     1EDB  00D2               	movwf	___fldiv@grs
 10881     1EDC                     l3954:
 10882     1EDC  01D7               	clrf	___fldiv@aexp
 10883     1EDD  2F28               	goto	l3974
 10884     1EDE                     l3956:
 10885     1EDE  0857               	movf	___fldiv@aexp,w
 10886     1EDF  1903               	btfsc	3,2
 10887     1EE0  2EE2               	goto	u6371
 10888     1EE1  2EE3               	goto	u6370
 10889     1EE2                     u6371:
 10890     1EE2  2F03               	goto	l3966
 10891     1EE3                     u6370:
 10892     1EE3                     l3958:
 10893     1EE3  3001               	movlw	1
 10894     1EE4  00C6               	movwf	??___fldiv
 10895     1EE5                     u6385:
 10896     1EE5  1003               	clrc
 10897     1EE6  0DCB               	rlf	___fldiv@rem,f
 10898     1EE7  0DCC               	rlf	___fldiv@rem+1,f
 10899     1EE8  0DCD               	rlf	___fldiv@rem+2,f
 10900     1EE9  0DCE               	rlf	___fldiv@rem+3,f
 10901     1EEA  0BC6               	decfsz	??___fldiv,f
 10902     1EEB  2EE5               	goto	u6385
 10903     1EEC  3001               	movlw	1
 10904     1EED  00C6               	movwf	??___fldiv
 10905     1EEE                     u6395:
 10906     1EEE  1003               	clrc
 10907     1EEF  0DC2               	rlf	___fldiv@b,f
 10908     1EF0  0DC3               	rlf	___fldiv@b+1,f
 10909     1EF1  0DC4               	rlf	___fldiv@b+2,f
 10910     1EF2  0DC5               	rlf	___fldiv@b+3,f
 10911     1EF3  0BC6               	decfsz	??___fldiv,f
 10912     1EF4  2EEE               	goto	u6395
 10913     1EF5                     l3960:
 10914     1EF5  1FD5               	btfss	___fldiv@grs+3,7
 10915     1EF6  2EF8               	goto	u6401
 10916     1EF7  2EF9               	goto	u6400
 10917     1EF8                     u6401:
 10918     1EF8  2EFA               	goto	l3964
 10919     1EF9                     u6400:
 10920     1EF9                     l3962:
 10921     1EF9  1442               	bsf	___fldiv@b,0
 10922     1EFA                     l3964:
 10923     1EFA  3001               	movlw	1
 10924     1EFB  00C6               	movwf	??___fldiv
 10925     1EFC                     u6415:
 10926     1EFC  1003               	clrc
 10927     1EFD  0DD2               	rlf	___fldiv@grs,f
 10928     1EFE  0DD3               	rlf	___fldiv@grs+1,f
 10929     1EFF  0DD4               	rlf	___fldiv@grs+2,f
 10930     1F00  0DD5               	rlf	___fldiv@grs+3,f
 10931     1F01  0BC6               	decfsz	??___fldiv,f
 10932     1F02  2EFC               	goto	u6415
 10933     1F03                     l3966:
 10934     1F03  0841               	movf	___fldiv@a+3,w
 10935     1F04  024E               	subwf	___fldiv@rem+3,w
 10936     1F05  1D03               	skipz
 10937     1F06  2F11               	goto	u6425
 10938     1F07  0840               	movf	___fldiv@a+2,w
 10939     1F08  024D               	subwf	___fldiv@rem+2,w
 10940     1F09  1D03               	skipz
 10941     1F0A  2F11               	goto	u6425
 10942     1F0B  083F               	movf	___fldiv@a+1,w
 10943     1F0C  024C               	subwf	___fldiv@rem+1,w
 10944     1F0D  1D03               	skipz
 10945     1F0E  2F11               	goto	u6425
 10946     1F0F  083E               	movf	___fldiv@a,w
 10947     1F10  024B               	subwf	___fldiv@rem,w
 10948     1F11                     u6425:
 10949     1F11  1C03               	skipc
 10950     1F12  2F14               	goto	u6421
 10951     1F13  2F15               	goto	u6420
 10952     1F14                     u6421:
 10953     1F14  2F24               	goto	l3972
 10954     1F15                     u6420:
 10955     1F15                     l3968:
 10956     1F15  1755               	bsf	___fldiv@grs+3,6
 10957     1F16                     l3970:
 10958     1F16  083E               	movf	___fldiv@a,w
 10959     1F17  02CB               	subwf	___fldiv@rem,f
 10960     1F18  083F               	movf	___fldiv@a+1,w
 10961     1F19  1C03               	skipc
 10962     1F1A  0F3F               	incfsz	___fldiv@a+1,w
 10963     1F1B  02CC               	subwf	___fldiv@rem+1,f
 10964     1F1C  0840               	movf	___fldiv@a+2,w
 10965     1F1D  1C03               	skipc
 10966     1F1E  0F40               	incfsz	___fldiv@a+2,w
 10967     1F1F  02CD               	subwf	___fldiv@rem+2,f
 10968     1F20  0841               	movf	___fldiv@a+3,w
 10969     1F21  1C03               	skipc
 10970     1F22  0F41               	incfsz	___fldiv@a+3,w
 10971     1F23  02CE               	subwf	___fldiv@rem+3,f
 10972     1F24                     l3972:
 10973     1F24  3001               	movlw	1
 10974     1F25  00C6               	movwf	??___fldiv
 10975     1F26  0846               	movf	??___fldiv,w
 10976     1F27  07D7               	addwf	___fldiv@aexp,f
 10977     1F28                     l3974:
 10978     1F28  301A               	movlw	26
 10979     1F29  0257               	subwf	___fldiv@aexp,w
 10980     1F2A  1C03               	skipc
 10981     1F2B  2F2D               	goto	u6431
 10982     1F2C  2F2E               	goto	u6430
 10983     1F2D                     u6431:
 10984     1F2D  2EDE               	goto	l3956
 10985     1F2E                     u6430:
 10986     1F2E                     l3976:
 10987     1F2E  084E               	movf	___fldiv@rem+3,w
 10988     1F2F  044D               	iorwf	___fldiv@rem+2,w
 10989     1F30  044C               	iorwf	___fldiv@rem+1,w
 10990     1F31  044B               	iorwf	___fldiv@rem,w
 10991     1F32  1903               	skipnz
 10992     1F33  2F35               	goto	u6441
 10993     1F34  2F36               	goto	u6440
 10994     1F35                     u6441:
 10995     1F35  2F55               	goto	l3990
 10996     1F36                     u6440:
 10997     1F36                     l3978:
 10998     1F36  1452               	bsf	___fldiv@grs,0
 10999     1F37  2F55               	goto	l3990
 11000     1F38                     l3980:
 11001     1F38  3001               	movlw	1
 11002     1F39  00C6               	movwf	??___fldiv
 11003     1F3A                     u6455:
 11004     1F3A  1003               	clrc
 11005     1F3B  0DC2               	rlf	___fldiv@b,f
 11006     1F3C  0DC3               	rlf	___fldiv@b+1,f
 11007     1F3D  0DC4               	rlf	___fldiv@b+2,f
 11008     1F3E  0DC5               	rlf	___fldiv@b+3,f
 11009     1F3F  0BC6               	decfsz	??___fldiv,f
 11010     1F40  2F3A               	goto	u6455
 11011     1F41                     l3982:
 11012     1F41  1FD5               	btfss	___fldiv@grs+3,7
 11013     1F42  2F44               	goto	u6461
 11014     1F43  2F45               	goto	u6460
 11015     1F44                     u6461:
 11016     1F44  2F46               	goto	l3986
 11017     1F45                     u6460:
 11018     1F45                     l3984:
 11019     1F45  1442               	bsf	___fldiv@b,0
 11020     1F46                     l3986:
 11021     1F46  3001               	movlw	1
 11022     1F47  00C6               	movwf	??___fldiv
 11023     1F48                     u6475:
 11024     1F48  1003               	clrc
 11025     1F49  0DD2               	rlf	___fldiv@grs,f
 11026     1F4A  0DD3               	rlf	___fldiv@grs+1,f
 11027     1F4B  0DD4               	rlf	___fldiv@grs+2,f
 11028     1F4C  0DD5               	rlf	___fldiv@grs+3,f
 11029     1F4D  0BC6               	decfsz	??___fldiv,f
 11030     1F4E  2F48               	goto	u6475
 11031     1F4F                     l3988:
 11032     1F4F  30FF               	movlw	255
 11033     1F50  07D0               	addwf	___fldiv@new_exp,f
 11034     1F51  1803               	skipnc
 11035     1F52  0AD1               	incf	___fldiv@new_exp+1,f
 11036     1F53  30FF               	movlw	255
 11037     1F54  07D1               	addwf	___fldiv@new_exp+1,f
 11038     1F55                     l3990:
 11039     1F55  1FC4               	btfss	___fldiv@b+2,7
 11040     1F56  2F58               	goto	u6481
 11041     1F57  2F59               	goto	u6480
 11042     1F58                     u6481:
 11043     1F58  2F38               	goto	l3980
 11044     1F59                     u6480:
 11045     1F59                     l3992:
 11046     1F59  01D7               	clrf	___fldiv@aexp
 11047     1F5A                     l3994:
 11048     1F5A  1FD5               	btfss	___fldiv@grs+3,7
 11049     1F5B  2F5D               	goto	u6491
 11050     1F5C  2F5E               	goto	u6490
 11051     1F5D                     u6491:
 11052     1F5D  2F7A               	goto	l4002
 11053     1F5E                     u6490:
 11054     1F5E                     l3996:
 11055     1F5E  30FF               	movlw	255
 11056     1F5F  0552               	andwf	___fldiv@grs,w
 11057     1F60  00C6               	movwf	??___fldiv
 11058     1F61  30FF               	movlw	255
 11059     1F62  0553               	andwf	___fldiv@grs+1,w
 11060     1F63  00C7               	movwf	??___fldiv+1
 11061     1F64  30FF               	movlw	255
 11062     1F65  0554               	andwf	___fldiv@grs+2,w
 11063     1F66  00C8               	movwf	??___fldiv+2
 11064     1F67  307F               	movlw	127
 11065     1F68  0555               	andwf	___fldiv@grs+3,w
 11066     1F69  00C9               	movwf	??___fldiv+3
 11067     1F6A  0849               	movf	??___fldiv+3,w
 11068     1F6B  0448               	iorwf	??___fldiv+2,w
 11069     1F6C  0447               	iorwf	??___fldiv+1,w
 11070     1F6D  0446               	iorwf	??___fldiv,w
 11071     1F6E  1903               	skipnz
 11072     1F6F  2F71               	goto	u6501
 11073     1F70  2F72               	goto	u6500
 11074     1F71                     u6501:
 11075     1F71  2F75               	goto	l832
 11076     1F72                     u6500:
 11077     1F72                     l3998:
 11078     1F72  01D7               	clrf	___fldiv@aexp
 11079     1F73  0AD7               	incf	___fldiv@aexp,f
 11080     1F74  2F7A               	goto	l4002
 11081     1F75                     l832:
 11082     1F75  1C42               	btfss	___fldiv@b,0
 11083     1F76  2F78               	goto	u6511
 11084     1F77  2F79               	goto	u6510
 11085     1F78                     u6511:
 11086     1F78  2F7A               	goto	l4002
 11087     1F79                     u6510:
 11088     1F79  2F72               	goto	l3998
 11089     1F7A                     l4002:
 11090     1F7A  0857               	movf	___fldiv@aexp,w
 11091     1F7B  1903               	btfsc	3,2
 11092     1F7C  2F7E               	goto	u6521
 11093     1F7D  2F7F               	goto	u6520
 11094     1F7E                     u6521:
 11095     1F7E  2FB0               	goto	l4012
 11096     1F7F                     u6520:
 11097     1F7F                     l4004:
 11098     1F7F  3001               	movlw	1
 11099     1F80  07C2               	addwf	___fldiv@b,f
 11100     1F81  3000               	movlw	0
 11101     1F82  1803               	skipnc
 11102     1F83  3001               	movlw	1
 11103     1F84  07C3               	addwf	___fldiv@b+1,f
 11104     1F85  3000               	movlw	0
 11105     1F86  1803               	skipnc
 11106     1F87  3001               	movlw	1
 11107     1F88  07C4               	addwf	___fldiv@b+2,f
 11108     1F89  3000               	movlw	0
 11109     1F8A  1803               	skipnc
 11110     1F8B  3001               	movlw	1
 11111     1F8C  07C5               	addwf	___fldiv@b+3,f
 11112     1F8D                     l4006:
 11113     1F8D  1C45               	btfss	___fldiv@b+3,0
 11114     1F8E  2F90               	goto	u6531
 11115     1F8F  2F91               	goto	u6530
 11116     1F90                     u6531:
 11117     1F90  2FB0               	goto	l4012
 11118     1F91                     u6530:
 11119     1F91                     l4008:
 11120     1F91  0842               	movf	___fldiv@b,w
 11121     1F92  00C6               	movwf	??___fldiv
 11122     1F93  0843               	movf	___fldiv@b+1,w
 11123     1F94  00C7               	movwf	??___fldiv+1
 11124     1F95  0844               	movf	___fldiv@b+2,w
 11125     1F96  00C8               	movwf	??___fldiv+2
 11126     1F97  0845               	movf	___fldiv@b+3,w
 11127     1F98  00C9               	movwf	??___fldiv+3
 11128     1F99  3001               	movlw	1
 11129     1F9A  00CA               	movwf	??___fldiv+4
 11130     1F9B                     u6545:
 11131     1F9B  0D49               	rlf	??___fldiv+3,w
 11132     1F9C  0CC9               	rrf	??___fldiv+3,f
 11133     1F9D  0CC8               	rrf	??___fldiv+2,f
 11134     1F9E  0CC7               	rrf	??___fldiv+1,f
 11135     1F9F  0CC6               	rrf	??___fldiv,f
 11136     1FA0                     u6540:
 11137     1FA0  0BCA               	decfsz	??___fldiv+4,f
 11138     1FA1  2F9B               	goto	u6545
 11139     1FA2  0849               	movf	??___fldiv+3,w
 11140     1FA3  00C5               	movwf	___fldiv@b+3
 11141     1FA4  0848               	movf	??___fldiv+2,w
 11142     1FA5  00C4               	movwf	___fldiv@b+2
 11143     1FA6  0847               	movf	??___fldiv+1,w
 11144     1FA7  00C3               	movwf	___fldiv@b+1
 11145     1FA8  0846               	movf	??___fldiv,w
 11146     1FA9  00C2               	movwf	___fldiv@b
 11147     1FAA                     l4010:
 11148     1FAA  3001               	movlw	1
 11149     1FAB  07D0               	addwf	___fldiv@new_exp,f
 11150     1FAC  1803               	skipnc
 11151     1FAD  0AD1               	incf	___fldiv@new_exp+1,f
 11152     1FAE  3000               	movlw	0
 11153     1FAF  07D1               	addwf	___fldiv@new_exp+1,f
 11154     1FB0                     l4012:
 11155     1FB0  0851               	movf	___fldiv@new_exp+1,w
 11156     1FB1  3A80               	xorlw	128
 11157     1FB2  00FF               	movwf	btemp+1
 11158     1FB3  3080               	movlw	128
 11159     1FB4  027F               	subwf	btemp+1,w
 11160     1FB5  1D03               	skipz
 11161     1FB6  2FB9               	goto	u6555
 11162     1FB7  30FF               	movlw	255
 11163     1FB8  0250               	subwf	___fldiv@new_exp,w
 11164     1FB9                     u6555:
 11165     1FB9  1C03               	skipc
 11166     1FBA  2FBC               	goto	u6551
 11167     1FBB  2FBD               	goto	u6550
 11168     1FBC                     u6551:
 11169     1FBC  2FCB               	goto	l4016
 11170     1FBD                     u6550:
 11171     1FBD                     l4014:
 11172     1FBD  30FF               	movlw	255
 11173     1FBE  1283               	bcf	3,5	;RP0=0, select bank0
 11174     1FBF  1303               	bcf	3,6	;RP1=0, select bank0
 11175     1FC0  00D0               	movwf	___fldiv@new_exp
 11176     1FC1  3000               	movlw	0
 11177     1FC2  00D1               	movwf	___fldiv@new_exp+1
 11178     1FC3  3000               	movlw	0
 11179     1FC4  00C5               	movwf	___fldiv@b+3
 11180     1FC5  3000               	movlw	0
 11181     1FC6  00C4               	movwf	___fldiv@b+2
 11182     1FC7  3000               	movlw	0
 11183     1FC8  00C3               	movwf	___fldiv@b+1
 11184     1FC9  3000               	movlw	0
 11185     1FCA  00C2               	movwf	___fldiv@b
 11186     1FCB                     l4016:
 11187     1FCB  1283               	bcf	3,5	;RP0=0, select bank0
 11188     1FCC  1303               	bcf	3,6	;RP1=0, select bank0
 11189     1FCD  0851               	movf	___fldiv@new_exp+1,w
 11190     1FCE  3A80               	xorlw	128
 11191     1FCF  00FF               	movwf	btemp+1
 11192     1FD0  3080               	movlw	128
 11193     1FD1  027F               	subwf	btemp+1,w
 11194     1FD2  1D03               	skipz
 11195     1FD3  2FD6               	goto	u6565
 11196     1FD4  3001               	movlw	1
 11197     1FD5  0250               	subwf	___fldiv@new_exp,w
 11198     1FD6                     u6565:
 11199     1FD6  1803               	skipnc
 11200     1FD7  2FD9               	goto	u6561
 11201     1FD8  2FDA               	goto	u6560
 11202     1FD9                     u6561:
 11203     1FD9  2FE7               	goto	l838
 11204     1FDA                     u6560:
 11205     1FDA                     l4018:
 11206     1FDA  1283               	bcf	3,5	;RP0=0, select bank0
 11207     1FDB  1303               	bcf	3,6	;RP1=0, select bank0
 11208     1FDC  01D0               	clrf	___fldiv@new_exp
 11209     1FDD  01D1               	clrf	___fldiv@new_exp+1
 11210     1FDE                     l4020:
 11211     1FDE  3000               	movlw	0
 11212     1FDF  00C5               	movwf	___fldiv@b+3
 11213     1FE0  3000               	movlw	0
 11214     1FE1  00C4               	movwf	___fldiv@b+2
 11215     1FE2  3000               	movlw	0
 11216     1FE3  00C3               	movwf	___fldiv@b+1
 11217     1FE4  3000               	movlw	0
 11218     1FE5  00C2               	movwf	___fldiv@b
 11219     1FE6                     l4022:
 11220     1FE6  01CF               	clrf	___fldiv@sign
 11221     1FE7                     l838:
 11222     1FE7  1283               	bcf	3,5	;RP0=0, select bank0
 11223     1FE8  1303               	bcf	3,6	;RP1=0, select bank0
 11224     1FE9  0850               	movf	___fldiv@new_exp,w
 11225     1FEA  00D6               	movwf	___fldiv@bexp
 11226     1FEB                     l4024:
 11227     1FEB  1C56               	btfss	___fldiv@bexp,0
 11228     1FEC  2FEE               	goto	u6571
 11229     1FED  2FEF               	goto	u6570
 11230     1FEE                     u6571:
 11231     1FEE  2FF1               	goto	l4028
 11232     1FEF                     u6570:
 11233     1FEF                     l4026:
 11234     1FEF  17C4               	bsf	___fldiv@b+2,7
 11235     1FF0  2FF5               	goto	l840
 11236     1FF1                     l4028:
 11237     1FF1  307F               	movlw	127
 11238     1FF2  00C6               	movwf	??___fldiv
 11239     1FF3  0846               	movf	??___fldiv,w
 11240     1FF4  05C4               	andwf	___fldiv@b+2,f
 11241     1FF5                     l840:
 11242     1FF5  0856               	movf	___fldiv@bexp,w
 11243     1FF6  00C6               	movwf	??___fldiv
 11244     1FF7  1003               	clrc
 11245     1FF8  0C46               	rrf	??___fldiv,w
 11246     1FF9  00C5               	movwf	___fldiv@b+3
 11247     1FFA  084F               	movf	___fldiv@sign,w
 11248     1FFB  00C6               	movwf	??___fldiv
 11249     1FFC  0846               	movf	??___fldiv,w
 11250     1FFD  04C5               	iorwf	___fldiv@b+3,f
 11251     1FFE  2E9B               	goto	l3936
 11252     1FFF                     l818:
 11253     1FFF  0008               	return
 11254     2000                     __end_of___fldiv:
 11255                           
 11256                           	psect	text32
 11257     1A2A                     __ptext32:	
 11258 ;; *************** function _Lcd_Write_String *****************
 11259 ;; Defined at:
 11260 ;;		line 98 in file "LCD.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  a               2    5[COMMON] PTR unsigned char 
 11263 ;;		 -> valADC2(3), valADC(3), STR_2(14), STR_1(15), 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;  i               2   10[COMMON] int 
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1    wreg      void 
 11268 ;; Registers used:
 11269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11275 ;;      Params:         2       0       0       0       0
 11276 ;;      Locals:         2       0       0       0       0
 11277 ;;      Temps:          3       0       0       0       0
 11278 ;;      Totals:         7       0       0       0       0
 11279 ;;Total ram usage:        7 bytes
 11280 ;; Hardware stack levels used: 1
 11281 ;; Hardware stack levels required when called: 2
 11282 ;; This function calls:
 11283 ;;		_Lcd_Write_Char
 11284 ;; This function is called by:
 11285 ;;		_main
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289     1A2A                     _Lcd_Write_String:	
 11290                           ;psect for function _Lcd_Write_String
 11291                           
 11292     1A2A                     l3568:	
 11293                           ;incstack = 0
 11294                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11295                           
 11296                           
 11297                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
 11298     1A2A  01FA               	clrf	Lcd_Write_String@i
 11299     1A2B  01FB               	clrf	Lcd_Write_String@i+1
 11300     1A2C  2A4F               	goto	l3574
 11301     1A2D                     l3570:
 11302                           
 11303                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
 11304     1A2D  087A               	movf	Lcd_Write_String@i,w
 11305     1A2E  0775               	addwf	Lcd_Write_String@a,w
 11306     1A2F  00F8               	movwf	??_Lcd_Write_String+1
 11307     1A30  0876               	movf	Lcd_Write_String@a+1,w
 11308     1A31  00F7               	movwf	??_Lcd_Write_String
 11309     1A32  1803               	skipnc
 11310     1A33  0AF7               	incf	??_Lcd_Write_String,f
 11311     1A34  1FFA               	btfss	Lcd_Write_String@i,7
 11312     1A35  2A37               	goto	u5780
 11313     1A36  03F7               	decf	??_Lcd_Write_String,f
 11314     1A37                     u5780:
 11315     1A37  0877               	movf	??_Lcd_Write_String,w
 11316     1A38  00F9               	movwf	??_Lcd_Write_String+2
 11317     1A39  0879               	movf	??_Lcd_Write_String+2,w
 11318     1A3A  1283               	bcf	3,5	;RP0=0, select bank0
 11319     1A3B  1303               	bcf	3,6	;RP1=0, select bank0
 11320     1A3C  00FF               	movwf	btemp+1
 11321     1A3D  0878               	movf	??_Lcd_Write_String+1,w
 11322     1A3E  0084               	movwf	4
 11323     1A3F  120A  118A  2003  160A  158A  	fcall	stringtab
 11324     1A44  120A  118A  20C8  160A  158A  	fcall	_Lcd_Write_Char
 11325     1A49                     l3572:
 11326     1A49  3001               	movlw	1
 11327     1A4A  07FA               	addwf	Lcd_Write_String@i,f
 11328     1A4B  1803               	skipnc
 11329     1A4C  0AFB               	incf	Lcd_Write_String@i+1,f
 11330     1A4D  3000               	movlw	0
 11331     1A4E  07FB               	addwf	Lcd_Write_String@i+1,f
 11332     1A4F                     l3574:
 11333     1A4F  087A               	movf	Lcd_Write_String@i,w
 11334     1A50  0775               	addwf	Lcd_Write_String@a,w
 11335     1A51  00F8               	movwf	??_Lcd_Write_String+1
 11336     1A52  0876               	movf	Lcd_Write_String@a+1,w
 11337     1A53  00F7               	movwf	??_Lcd_Write_String
 11338     1A54  1803               	skipnc
 11339     1A55  0AF7               	incf	??_Lcd_Write_String,f
 11340     1A56  1FFA               	btfss	Lcd_Write_String@i,7
 11341     1A57  2A59               	goto	u5790
 11342     1A58  03F7               	decf	??_Lcd_Write_String,f
 11343     1A59                     u5790:
 11344     1A59  0877               	movf	??_Lcd_Write_String,w
 11345     1A5A  00F9               	movwf	??_Lcd_Write_String+2
 11346     1A5B  0879               	movf	??_Lcd_Write_String+2,w
 11347     1A5C  1283               	bcf	3,5	;RP0=0, select bank0
 11348     1A5D  1303               	bcf	3,6	;RP1=0, select bank0
 11349     1A5E  00FF               	movwf	btemp+1
 11350     1A5F  0878               	movf	??_Lcd_Write_String+1,w
 11351     1A60  0084               	movwf	4
 11352     1A61  120A  118A  2003  160A  158A  	fcall	stringtab
 11353     1A66  3A00               	xorlw	0
 11354     1A67  1D03               	skipz
 11355     1A68  2A6A               	goto	u5801
 11356     1A69  2A6B               	goto	u5800
 11357     1A6A                     u5801:
 11358     1A6A  2A2D               	goto	l3570
 11359     1A6B                     u5800:
 11360     1A6B                     l143:
 11361     1A6B  0008               	return
 11362     1A6C                     __end_of_Lcd_Write_String:
 11363                           
 11364                           	psect	text33
 11365     00C8                     __ptext33:	
 11366 ;; *************** function _Lcd_Write_Char *****************
 11367 ;; Defined at:
 11368 ;;		line 83 in file "LCD.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  a               1    wreg     unsigned char 
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;  a               1    4[COMMON] unsigned char 
 11373 ;;  y               1    3[COMMON] unsigned char 
 11374 ;;  temp            1    2[COMMON] unsigned char 
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      void 
 11377 ;; Registers used:
 11378 ;;		wreg, status,2, status,0, pclath, cstack
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11384 ;;      Params:         0       0       0       0       0
 11385 ;;      Locals:         3       0       0       0       0
 11386 ;;      Temps:          1       0       0       0       0
 11387 ;;      Totals:         4       0       0       0       0
 11388 ;;Total ram usage:        4 bytes
 11389 ;; Hardware stack levels used: 1
 11390 ;; Hardware stack levels required when called: 1
 11391 ;; This function calls:
 11392 ;;		_Lcd_Port
 11393 ;; This function is called by:
 11394 ;;		_main
 11395 ;;		_Lcd_Write_String
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399     00C8                     _Lcd_Write_Char:	
 11400                           ;psect for function _Lcd_Write_Char
 11401                           
 11402                           
 11403                           ;incstack = 0
 11404                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11405                           ;Lcd_Write_Char@a stored from wreg
 11406     00C8  00F4               	movwf	Lcd_Write_Char@a
 11407     00C9                     l3108:
 11408                           
 11409                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
 11410     00C9  0874               	movf	Lcd_Write_Char@a,w
 11411     00CA  390F               	andlw	15
 11412     00CB  00F2               	movwf	Lcd_Write_Char@temp
 11413                           
 11414                           ;LCD.c: 86:     y = a & 0xF0;
 11415     00CC  0874               	movf	Lcd_Write_Char@a,w
 11416     00CD  39F0               	andlw	240
 11417     00CE  00F3               	movwf	Lcd_Write_Char@y
 11418     00CF                     l3110:
 11419                           
 11420                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
 11421     00CF  1283               	bcf	3,5	;RP0=0, select bank0
 11422     00D0  1303               	bcf	3,6	;RP1=0, select bank0
 11423     00D1  1508               	bsf	8,2	;volatile
 11424     00D2                     l3112:
 11425                           
 11426                           ;LCD.c: 88:     Lcd_Port(y >> 4);
 11427     00D2  0873               	movf	Lcd_Write_Char@y,w
 11428     00D3  00F1               	movwf	??_Lcd_Write_Char
 11429     00D4  3004               	movlw	4
 11430     00D5                     u4585:
 11431     00D5  1003               	clrc
 11432     00D6  0CF1               	rrf	??_Lcd_Write_Char,f
 11433     00D7  3EFF               	addlw	-1
 11434     00D8  1D03               	skipz
 11435     00D9  28D5               	goto	u4585
 11436     00DA  0871               	movf	??_Lcd_Write_Char,w
 11437     00DB  160A  158A  213C  120A  118A  	fcall	_Lcd_Port
 11438     00E0                     l3114:
 11439                           
 11440                           ;LCD.c: 89:     RD3 = 1;
 11441     00E0  1283               	bcf	3,5	;RP0=0, select bank0
 11442     00E1  1303               	bcf	3,6	;RP1=0, select bank0
 11443     00E2  1588               	bsf	8,3	;volatile
 11444     00E3                     l3116:
 11445                           
 11446                           ;LCD.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 11447     00E3  300D               	movlw	13
 11448     00E4  00F1               	movwf	??_Lcd_Write_Char
 11449     00E5                     u6687:
 11450     00E5  0BF1               	decfsz	??_Lcd_Write_Char,f
 11451     00E6  28E5               	goto	u6687
 11452     00E7                     l3118:
 11453                           
 11454                           ;LCD.c: 91:     RD3 = 0;
 11455     00E7  1283               	bcf	3,5	;RP0=0, select bank0
 11456     00E8  1303               	bcf	3,6	;RP1=0, select bank0
 11457     00E9  1188               	bcf	8,3	;volatile
 11458     00EA                     l3120:
 11459                           
 11460                           ;LCD.c: 92:     Lcd_Port(temp);
 11461     00EA  0872               	movf	Lcd_Write_Char@temp,w
 11462     00EB  160A  158A  213C  120A  118A  	fcall	_Lcd_Port
 11463     00F0                     l3122:
 11464                           
 11465                           ;LCD.c: 93:     RD3 = 1;
 11466     00F0  1283               	bcf	3,5	;RP0=0, select bank0
 11467     00F1  1303               	bcf	3,6	;RP1=0, select bank0
 11468     00F2  1588               	bsf	8,3	;volatile
 11469     00F3                     l3124:
 11470                           
 11471                           ;LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 11472     00F3  300D               	movlw	13
 11473     00F4  00F1               	movwf	??_Lcd_Write_Char
 11474     00F5                     u6697:
 11475     00F5  0BF1               	decfsz	??_Lcd_Write_Char,f
 11476     00F6  28F5               	goto	u6697
 11477     00F7                     l3126:
 11478                           
 11479                           ;LCD.c: 95:     RD3 = 0;
 11480     00F7  1283               	bcf	3,5	;RP0=0, select bank0
 11481     00F8  1303               	bcf	3,6	;RP1=0, select bank0
 11482     00F9  1188               	bcf	8,3	;volatile
 11483     00FA                     l137:
 11484     00FA  0008               	return
 11485     00FB                     __end_of_Lcd_Write_Char:
 11486                           
 11487                           	psect	text34
 11488     1AB0                     __ptext34:	
 11489 ;; *************** function _Lcd_Set_Cursor *****************
 11490 ;; Defined at:
 11491 ;;		line 48 in file "LCD.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;  a               1    wreg     unsigned char 
 11494 ;;  b               1    4[COMMON] unsigned char 
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;  a               1    6[COMMON] unsigned char 
 11497 ;;  temp            1    9[COMMON] unsigned char 
 11498 ;;  y               1    8[COMMON] unsigned char 
 11499 ;;  z               1    7[COMMON] unsigned char 
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  1    wreg      void 
 11502 ;; Registers used:
 11503 ;;		wreg, status,2, status,0, pclath, cstack
 11504 ;; Tracked objects:
 11505 ;;		On entry : 0/0
 11506 ;;		On exit  : 0/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11509 ;;      Params:         1       0       0       0       0
 11510 ;;      Locals:         4       0       0       0       0
 11511 ;;      Temps:          1       0       0       0       0
 11512 ;;      Totals:         6       0       0       0       0
 11513 ;;Total ram usage:        6 bytes
 11514 ;; Hardware stack levels used: 1
 11515 ;; Hardware stack levels required when called: 2
 11516 ;; This function calls:
 11517 ;;		_Lcd_Cmd
 11518 ;; This function is called by:
 11519 ;;		_main
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523     1AB0                     _Lcd_Set_Cursor:	
 11524                           ;psect for function _Lcd_Set_Cursor
 11525                           
 11526                           
 11527                           ;incstack = 0
 11528                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11529                           ;Lcd_Set_Cursor@a stored from wreg
 11530     1AB0  00F6               	movwf	Lcd_Set_Cursor@a
 11531     1AB1                     l3548:
 11532                           
 11533                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
 11534     1AB1  0376               	decf	Lcd_Set_Cursor@a,w
 11535     1AB2  1D03               	btfss	3,2
 11536     1AB3  2AB5               	goto	u5741
 11537     1AB4  2AB6               	goto	u5740
 11538     1AB5                     u5741:
 11539     1AB5  2AD3               	goto	l3558
 11540     1AB6                     u5740:
 11541     1AB6                     l3550:
 11542                           
 11543                           ;LCD.c: 51:         temp = 0x80 + b - 1;
 11544     1AB6  0874               	movf	Lcd_Set_Cursor@b,w
 11545     1AB7  3E7F               	addlw	127
 11546     1AB8  00F9               	movwf	Lcd_Set_Cursor@temp
 11547                           
 11548                           ;LCD.c: 52:         z = temp >> 4;
 11549     1AB9  0879               	movf	Lcd_Set_Cursor@temp,w
 11550     1ABA  00F5               	movwf	??_Lcd_Set_Cursor
 11551     1ABB  3004               	movlw	4
 11552     1ABC                     u5755:
 11553     1ABC  1003               	clrc
 11554     1ABD  0CF5               	rrf	??_Lcd_Set_Cursor,f
 11555     1ABE  3EFF               	addlw	-1
 11556     1ABF  1D03               	skipz
 11557     1AC0  2ABC               	goto	u5755
 11558     1AC1  0875               	movf	??_Lcd_Set_Cursor,w
 11559     1AC2  00F7               	movwf	Lcd_Set_Cursor@z
 11560     1AC3                     l3552:
 11561                           
 11562                           ;LCD.c: 53:         y = temp & 0x0F;
 11563     1AC3  0879               	movf	Lcd_Set_Cursor@temp,w
 11564     1AC4  390F               	andlw	15
 11565     1AC5  00F8               	movwf	Lcd_Set_Cursor@y
 11566     1AC6                     l3554:
 11567                           
 11568                           ;LCD.c: 54:         Lcd_Cmd(z);
 11569     1AC6  0877               	movf	Lcd_Set_Cursor@z,w
 11570     1AC7  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11571     1ACC                     l3556:
 11572                           
 11573                           ;LCD.c: 55:         Lcd_Cmd(y);
 11574     1ACC  0878               	movf	Lcd_Set_Cursor@y,w
 11575     1ACD  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11576                           
 11577                           ;LCD.c: 56:     } else if (a == 2) {
 11578     1AD2  2AF5               	goto	l131
 11579     1AD3                     l3558:
 11580     1AD3  3002               	movlw	2
 11581     1AD4  0676               	xorwf	Lcd_Set_Cursor@a,w
 11582     1AD5  1D03               	btfss	3,2
 11583     1AD6  2AD8               	goto	u5761
 11584     1AD7  2AD9               	goto	u5760
 11585     1AD8                     u5761:
 11586     1AD8  2AF5               	goto	l131
 11587     1AD9                     u5760:
 11588     1AD9                     l3560:
 11589                           
 11590                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
 11591     1AD9  0874               	movf	Lcd_Set_Cursor@b,w
 11592     1ADA  3EBF               	addlw	191
 11593     1ADB  00F9               	movwf	Lcd_Set_Cursor@temp
 11594                           
 11595                           ;LCD.c: 58:         z = temp >> 4;
 11596     1ADC  0879               	movf	Lcd_Set_Cursor@temp,w
 11597     1ADD  00F5               	movwf	??_Lcd_Set_Cursor
 11598     1ADE  3004               	movlw	4
 11599     1ADF                     u5775:
 11600     1ADF  1003               	clrc
 11601     1AE0  0CF5               	rrf	??_Lcd_Set_Cursor,f
 11602     1AE1  3EFF               	addlw	-1
 11603     1AE2  1D03               	skipz
 11604     1AE3  2ADF               	goto	u5775
 11605     1AE4  0875               	movf	??_Lcd_Set_Cursor,w
 11606     1AE5  00F7               	movwf	Lcd_Set_Cursor@z
 11607     1AE6                     l3562:
 11608                           
 11609                           ;LCD.c: 59:         y = temp & 0x0F;
 11610     1AE6  0879               	movf	Lcd_Set_Cursor@temp,w
 11611     1AE7  390F               	andlw	15
 11612     1AE8  00F8               	movwf	Lcd_Set_Cursor@y
 11613     1AE9                     l3564:
 11614                           
 11615                           ;LCD.c: 60:         Lcd_Cmd(z);
 11616     1AE9  0877               	movf	Lcd_Set_Cursor@z,w
 11617     1AEA  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11618     1AEF                     l3566:
 11619                           
 11620                           ;LCD.c: 61:         Lcd_Cmd(y);
 11621     1AEF  0878               	movf	Lcd_Set_Cursor@y,w
 11622     1AF0  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11623     1AF5                     l131:
 11624     1AF5  0008               	return
 11625     1AF6                     __end_of_Lcd_Set_Cursor:
 11626                           
 11627                           	psect	text35
 11628     1C41                     __ptext35:	
 11629 ;; *************** function _Lcd_Init *****************
 11630 ;; Defined at:
 11631 ;;		line 65 in file "LCD.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;		None
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;		None
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  1    wreg      void 
 11638 ;; Registers used:
 11639 ;;		wreg, status,2, status,0, pclath, cstack
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11645 ;;      Params:         0       0       0       0       0
 11646 ;;      Locals:         0       0       0       0       0
 11647 ;;      Temps:          2       0       0       0       0
 11648 ;;      Totals:         2       0       0       0       0
 11649 ;;Total ram usage:        2 bytes
 11650 ;; Hardware stack levels used: 1
 11651 ;; Hardware stack levels required when called: 2
 11652 ;; This function calls:
 11653 ;;		_Lcd_Cmd
 11654 ;;		_Lcd_Port
 11655 ;; This function is called by:
 11656 ;;		_main
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660     1C41                     _Lcd_Init:	
 11661                           ;psect for function _Lcd_Init
 11662                           
 11663     1C41                     l3536:	
 11664                           ;incstack = 0
 11665                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11666                           
 11667                           
 11668                           ;LCD.c: 66:     Lcd_Port(0x00);
 11669     1C41  3000               	movlw	0
 11670     1C42  160A  158A  213C  160A  158A  	fcall	_Lcd_Port
 11671     1C47                     l3538:
 11672                           
 11673                           ;LCD.c: 67:     _delay((unsigned long)((20)*(4000000/4000.0)));
 11674     1C47  301A               	movlw	26
 11675     1C48  00F5               	movwf	??_Lcd_Init+1
 11676     1C49  30F8               	movlw	248
 11677     1C4A  00F4               	movwf	??_Lcd_Init
 11678     1C4B                     u6707:
 11679     1C4B  0BF4               	decfsz	??_Lcd_Init,f
 11680     1C4C  2C4B               	goto	u6707
 11681     1C4D  0BF5               	decfsz	??_Lcd_Init+1,f
 11682     1C4E  2C4B               	goto	u6707
 11683     1C4F  0000               	nop
 11684     1C50                     l3540:
 11685                           
 11686                           ;LCD.c: 68:     Lcd_Cmd(0x03);
 11687     1C50  3003               	movlw	3
 11688     1C51  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11689                           
 11690                           ;LCD.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
 11691     1C56  3007               	movlw	7
 11692     1C57  00F5               	movwf	??_Lcd_Init+1
 11693     1C58  307D               	movlw	125
 11694     1C59  00F4               	movwf	??_Lcd_Init
 11695     1C5A                     u6717:
 11696     1C5A  0BF4               	decfsz	??_Lcd_Init,f
 11697     1C5B  2C5A               	goto	u6717
 11698     1C5C  0BF5               	decfsz	??_Lcd_Init+1,f
 11699     1C5D  2C5A               	goto	u6717
 11700     1C5E                     l3542:
 11701                           
 11702                           ;LCD.c: 70:     Lcd_Cmd(0x03);
 11703     1C5E  3003               	movlw	3
 11704     1C5F  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11705     1C64                     l3544:
 11706                           
 11707                           ;LCD.c: 71:     _delay((unsigned long)((11)*(4000000/4000.0)));
 11708     1C64  300F               	movlw	15
 11709     1C65  00F5               	movwf	??_Lcd_Init+1
 11710     1C66  3047               	movlw	71
 11711     1C67  00F4               	movwf	??_Lcd_Init
 11712     1C68                     u6727:
 11713     1C68  0BF4               	decfsz	??_Lcd_Init,f
 11714     1C69  2C68               	goto	u6727
 11715     1C6A  0BF5               	decfsz	??_Lcd_Init+1,f
 11716     1C6B  2C68               	goto	u6727
 11717     1C6C  2C6D               	nop2
 11718                           
 11719                           ;LCD.c: 72:     Lcd_Cmd(0x03);
 11720     1C6D  3003               	movlw	3
 11721     1C6E  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11722                           
 11723                           ;LCD.c: 74:     Lcd_Cmd(0x02);
 11724     1C73  3002               	movlw	2
 11725     1C74  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11726                           
 11727                           ;LCD.c: 75:     Lcd_Cmd(0x02);
 11728     1C79  3002               	movlw	2
 11729     1C7A  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11730                           
 11731                           ;LCD.c: 76:     Lcd_Cmd(0x08);
 11732     1C7F  3008               	movlw	8
 11733     1C80  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11734                           
 11735                           ;LCD.c: 77:     Lcd_Cmd(0x00);
 11736     1C85  3000               	movlw	0
 11737     1C86  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11738                           
 11739                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
 11740     1C8B  300C               	movlw	12
 11741     1C8C  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11742                           
 11743                           ;LCD.c: 79:     Lcd_Cmd(0x00);
 11744     1C91  3000               	movlw	0
 11745     1C92  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11746                           
 11747                           ;LCD.c: 80:     Lcd_Cmd(0x06);
 11748     1C97  3006               	movlw	6
 11749     1C98  160A  158A  2122  160A  158A  	fcall	_Lcd_Cmd
 11750     1C9D                     l134:
 11751     1C9D  0008               	return
 11752     1C9E                     __end_of_Lcd_Init:
 11753                           
 11754                           	psect	text36
 11755     1004                     __ptext36:	
 11756 ;; *************** function _Lcd_Clear *****************
 11757 ;; Defined at:
 11758 ;;		line 43 in file "LCD.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;		None
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;		None
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1    wreg      void 
 11765 ;; Registers used:
 11766 ;;		wreg, status,2, status,0, pclath, cstack
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11772 ;;      Params:         0       0       0       0       0
 11773 ;;      Locals:         0       0       0       0       0
 11774 ;;      Temps:          0       0       0       0       0
 11775 ;;      Totals:         0       0       0       0       0
 11776 ;;Total ram usage:        0 bytes
 11777 ;; Hardware stack levels used: 1
 11778 ;; Hardware stack levels required when called: 2
 11779 ;; This function calls:
 11780 ;;		_Lcd_Cmd
 11781 ;; This function is called by:
 11782 ;;		_main
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786     1004                     _Lcd_Clear:	
 11787                           ;psect for function _Lcd_Clear
 11788                           
 11789     1004                     l3546:	
 11790                           ;incstack = 0
 11791                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 11792                           
 11793                           
 11794                           ;LCD.c: 44:     Lcd_Cmd(0);
 11795     1004  3000               	movlw	0
 11796     1005  160A  158A  2122  160A  118A  	fcall	_Lcd_Cmd
 11797                           
 11798                           ;LCD.c: 45:     Lcd_Cmd(1);
 11799     100A  3001               	movlw	1
 11800     100B  160A  158A  2122  160A  118A  	fcall	_Lcd_Cmd
 11801     1010                     l125:
 11802     1010  0008               	return
 11803     1011                     __end_of_Lcd_Clear:
 11804                           
 11805                           	psect	text37
 11806     1922                     __ptext37:	
 11807 ;; *************** function _Lcd_Cmd *****************
 11808 ;; Defined at:
 11809 ;;		line 35 in file "LCD.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;  a               1    wreg     unsigned char 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  a               1    3[COMMON] unsigned char 
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      void 
 11816 ;; Registers used:
 11817 ;;		wreg, status,2, status,0, pclath, cstack
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11823 ;;      Params:         0       0       0       0       0
 11824 ;;      Locals:         1       0       0       0       0
 11825 ;;      Temps:          2       0       0       0       0
 11826 ;;      Totals:         3       0       0       0       0
 11827 ;;Total ram usage:        3 bytes
 11828 ;; Hardware stack levels used: 1
 11829 ;; Hardware stack levels required when called: 1
 11830 ;; This function calls:
 11831 ;;		_Lcd_Port
 11832 ;; This function is called by:
 11833 ;;		_Lcd_Clear
 11834 ;;		_Lcd_Set_Cursor
 11835 ;;		_Lcd_Init
 11836 ;;		_Lcd_Shift_Right
 11837 ;;		_Lcd_Shift_Left
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841     1922                     _Lcd_Cmd:	
 11842                           ;psect for function _Lcd_Cmd
 11843                           
 11844                           
 11845                           ;incstack = 0
 11846                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11847                           ;Lcd_Cmd@a stored from wreg
 11848     1922  00F3               	movwf	Lcd_Cmd@a
 11849     1923                     l3138:
 11850                           
 11851                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
 11852     1923  1283               	bcf	3,5	;RP0=0, select bank0
 11853     1924  1303               	bcf	3,6	;RP1=0, select bank0
 11854     1925  1108               	bcf	8,2	;volatile
 11855     1926                     l3140:
 11856                           
 11857                           ;LCD.c: 37:     Lcd_Port(a);
 11858     1926  0873               	movf	Lcd_Cmd@a,w
 11859     1927  160A  158A  213C  160A  158A  	fcall	_Lcd_Port
 11860     192C                     l3142:
 11861                           
 11862                           ;LCD.c: 38:     RD3 = 1;
 11863     192C  1283               	bcf	3,5	;RP0=0, select bank0
 11864     192D  1303               	bcf	3,6	;RP1=0, select bank0
 11865     192E  1588               	bsf	8,3	;volatile
 11866     192F                     l3144:
 11867                           
 11868                           ;LCD.c: 39:     _delay((unsigned long)((4)*(4000000/4000.0)));
 11869     192F  3006               	movlw	6
 11870     1930  00F2               	movwf	??_Lcd_Cmd+1
 11871     1931  3030               	movlw	48
 11872     1932  00F1               	movwf	??_Lcd_Cmd
 11873     1933                     u6737:
 11874     1933  0BF1               	decfsz	??_Lcd_Cmd,f
 11875     1934  2933               	goto	u6737
 11876     1935  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11877     1936  2933               	goto	u6737
 11878     1937  0000               	nop
 11879     1938                     l3146:
 11880                           
 11881                           ;LCD.c: 40:     RD3 = 0;
 11882     1938  1283               	bcf	3,5	;RP0=0, select bank0
 11883     1939  1303               	bcf	3,6	;RP1=0, select bank0
 11884     193A  1188               	bcf	8,3	;volatile
 11885     193B                     l122:
 11886     193B  0008               	return
 11887     193C                     __end_of_Lcd_Cmd:
 11888                           
 11889                           	psect	text38
 11890     193C                     __ptext38:	
 11891 ;; *************** function _Lcd_Port *****************
 11892 ;; Defined at:
 11893 ;;		line 13 in file "LCD.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;  a               1    wreg     unsigned char 
 11896 ;; Auto vars:     Size  Location     Type
 11897 ;;  a               1    0[COMMON] unsigned char 
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1    wreg      void 
 11900 ;; Registers used:
 11901 ;;		wreg
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11907 ;;      Params:         0       0       0       0       0
 11908 ;;      Locals:         1       0       0       0       0
 11909 ;;      Temps:          0       0       0       0       0
 11910 ;;      Totals:         1       0       0       0       0
 11911 ;;Total ram usage:        1 bytes
 11912 ;; Hardware stack levels used: 1
 11913 ;; This function calls:
 11914 ;;		Nothing
 11915 ;; This function is called by:
 11916 ;;		_Lcd_Cmd
 11917 ;;		_Lcd_Init
 11918 ;;		_Lcd_Write_Char
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922     193C                     _Lcd_Port:	
 11923                           ;psect for function _Lcd_Port
 11924                           
 11925                           
 11926                           ;incstack = 0
 11927                           ; Regs used in _Lcd_Port: [wreg]
 11928                           ;Lcd_Port@a stored from wreg
 11929     193C  00F0               	movwf	Lcd_Port@a
 11930     193D                     l2634:
 11931                           
 11932                           ;LCD.c: 14:     if (a & 1)
 11933     193D  1C70               	btfss	Lcd_Port@a,0
 11934     193E  2940               	goto	u3391
 11935     193F  2941               	goto	u3390
 11936     1940                     u3391:
 11937     1940  2945               	goto	l111
 11938     1941                     u3390:
 11939     1941                     l2636:
 11940                           
 11941                           ;LCD.c: 15:         RD4 = 1;
 11942     1941  1283               	bcf	3,5	;RP0=0, select bank0
 11943     1942  1303               	bcf	3,6	;RP1=0, select bank0
 11944     1943  1608               	bsf	8,4	;volatile
 11945     1944  2948               	goto	l112
 11946     1945                     l111:	
 11947                           ;LCD.c: 16:     else
 11948                           
 11949                           
 11950                           ;LCD.c: 17:         RD4 = 0;
 11951     1945  1283               	bcf	3,5	;RP0=0, select bank0
 11952     1946  1303               	bcf	3,6	;RP1=0, select bank0
 11953     1947  1208               	bcf	8,4	;volatile
 11954     1948                     l112:
 11955                           
 11956                           ;LCD.c: 19:     if (a & 2)
 11957     1948  1CF0               	btfss	Lcd_Port@a,1
 11958     1949  294B               	goto	u3401
 11959     194A  294C               	goto	u3400
 11960     194B                     u3401:
 11961     194B  294E               	goto	l113
 11962     194C                     u3400:
 11963     194C                     l2638:
 11964                           
 11965                           ;LCD.c: 20:         RD5 = 1;
 11966     194C  1688               	bsf	8,5	;volatile
 11967     194D  294F               	goto	l114
 11968     194E                     l113:	
 11969                           ;LCD.c: 21:     else
 11970                           
 11971                           
 11972                           ;LCD.c: 22:         RD5 = 0;
 11973     194E  1288               	bcf	8,5	;volatile
 11974     194F                     l114:
 11975                           
 11976                           ;LCD.c: 24:     if (a & 4)
 11977     194F  1D70               	btfss	Lcd_Port@a,2
 11978     1950  2952               	goto	u3411
 11979     1951  2953               	goto	u3410
 11980     1952                     u3411:
 11981     1952  2955               	goto	l115
 11982     1953                     u3410:
 11983     1953                     l2640:
 11984                           
 11985                           ;LCD.c: 25:         RD6 = 1;
 11986     1953  1708               	bsf	8,6	;volatile
 11987     1954  2956               	goto	l116
 11988     1955                     l115:	
 11989                           ;LCD.c: 26:     else
 11990                           
 11991                           
 11992                           ;LCD.c: 27:         RD6 = 0;
 11993     1955  1308               	bcf	8,6	;volatile
 11994     1956                     l116:
 11995                           
 11996                           ;LCD.c: 29:     if (a & 8)
 11997     1956  1DF0               	btfss	Lcd_Port@a,3
 11998     1957  2959               	goto	u3421
 11999     1958  295A               	goto	u3420
 12000     1959                     u3421:
 12001     1959  295C               	goto	l117
 12002     195A                     u3420:
 12003     195A                     l2642:
 12004                           
 12005                           ;LCD.c: 30:         RD7 = 1;
 12006     195A  1788               	bsf	8,7	;volatile
 12007     195B  295D               	goto	l119
 12008     195C                     l117:	
 12009                           ;LCD.c: 31:     else
 12010                           
 12011                           
 12012                           ;LCD.c: 32:         RD7 = 0;
 12013     195C  1388               	bcf	8,7	;volatile
 12014     195D                     l119:
 12015     195D  0008               	return
 12016     195E                     __end_of_Lcd_Port:
 12017     007E                     btemp	set	126	;btemp
 12018     007E                     wtemp0	set	126
 12019                           
 12020                           	psect	idloc
 12021                           
 12022                           ;Config register IDLOC0 @ 0x2000
 12023                           ;	unspecified, using default values
 12024     2000                     	org	8192
 12025     2000  3FFF               	dw	16383
 12026                           
 12027                           ;Config register IDLOC1 @ 0x2001
 12028                           ;	unspecified, using default values
 12029     2001                     	org	8193
 12030     2001  3FFF               	dw	16383
 12031                           
 12032                           ;Config register IDLOC2 @ 0x2002
 12033                           ;	unspecified, using default values
 12034     2002                     	org	8194
 12035     2002  3FFF               	dw	16383
 12036                           
 12037                           ;Config register IDLOC3 @ 0x2003
 12038                           ;	unspecified, using default values
 12039     2003                     	org	8195
 12040     2003  3FFF               	dw	16383
 12041                           
 12042                           	psect	config
 12043                           
 12044                           ;Config register CONFIG1 @ 0x2007
 12045                           ;	Oscillator Selection bits
 12046                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 12047                           ;	Watchdog Timer Enable bit
 12048                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12049                           ;	Power-up Timer Enable bit
 12050                           ;	PWRTE = OFF, PWRT disabled
 12051                           ;	RE3/MCLR pin function select bit
 12052                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12053                           ;	Code Protection bit
 12054                           ;	CP = OFF, Program memory code protection is disabled
 12055                           ;	Data Code Protection bit
 12056                           ;	CPD = OFF, Data memory code protection is disabled
 12057                           ;	Brown Out Reset Selection bits
 12058                           ;	BOREN = OFF, BOR disabled
 12059                           ;	Internal External Switchover bit
 12060                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12061                           ;	Fail-Safe Clock Monitor Enabled bit
 12062                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12063                           ;	Low Voltage Programming Enable bit
 12064                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12065                           ;	In-Circuit Debugger Mode bit
 12066                           ;	DEBUG = 0x1, unprogramme 12067     2007                     	org	8199
 12068     2007  20D4               	dw	8404
 12069                           
 12070                           ;Config register CONFIG2 @ 0x2008
 12071                           ;	Brown-out Reset Selection bit
 12072                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12073                           ;	Flash Program Memory Self Write Enable bits
 12074                           ;	WRT = OFF, Write protection off
 12075     2008                     	org	8200
 12076     2008  3FFF               	dw	16383

Data Sizes:
    Strings     34
    Constant    144
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     39      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> valADC2(BANK1[3]), valADC(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> valADC2(BANK1[3]), valADC(BANK1[3]), STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _fround->___lwdiv
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _portsetup->_spiInit
    _descomponer->___lwdiv
    ___lwdiv->___lwmod
    ___awdiv->___awmod
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _descomponer->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   47149
                                             35 BANK1      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _descomponer
                          _inttochar
                          _portsetup
                        _setupINTOSC
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32659
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8016
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6479
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portsetup                                            0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _inttochar                                            1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _descomponer                                          9     5      4    5070
                                              4 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     912
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _descomponer
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _inttochar
   _portsetup
     _spiInit
   _setupINTOSC
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      98       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      3C       7       75.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      98      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 20:53:35 2023

            ___fldiv@aexp 0057              ___fldiv@bexp 0056                         pc 0002  
            ___fldiv@sign 004F               _SSPSTATbits 0094                        l80 15FF  
                      l83 16B1                        l94 197F                        l86 175B  
            ___awdiv@sign 0021                        fsr 0004       ___wmul@multiplicand 0072  
     __Umul8_16@word_mpld 0076                       l111 1945                       l112 1948  
                     l200 1B93                       l113 194E                       l114 194F  
                     l122 193B                       l115 1955                       l131 1AF5  
                     l116 1956                       l117 195C                       l125 1010  
                     l213 1B93                       l134 1C9D                       l222 1D5D  
                     l119 195D                       l143 1A6B                       l160 1CF0  
                     l137 00FA                       l162 1CFC                       l154 1CA9  
                     l155 1CB5                       l156 1CC1                       l157 1CCD  
                     l158 1CD9                       l182 18D7                       l159 1CE5  
                     l423 07AF                       l415 064E                       l408 0610  
                     l185 18DD                       l433 19B0                       l178 191C  
                     l179 1921                       l435 19C8                       l603 01B2  
                     l363 0FFF                       l196 18EE                       l188 18D6  
                     l620 1B2E                       l604 0119                       l356 134A  
                     l621 1B43                       l429 07F2                       l614 01A5  
                     l382 0220                       l607 0175                       l624 081E  
                     l632 18F9                       l802 1598                       l650 113F  
                     l619 1B12                       l627 088A                       l803 15A2  
                     l643 1073                       l651 10B3                       l628 08A3  
                     l636 1088                       l900 08C6                       l469 1DC3  
                     l661 1132                       l806 19A3                       l646 1088  
                     l902 095B                       l654 1102                       l840 1FF5  
                     l832 1F75                       l816 1E83                       l760 13A6  
                     l920 190B                       l913 0925                       l818 1FFF  
                     l586 1E2C                       l914 0931                       l906 0909  
                     l739 1AAF                       l764 1429                       l749 1A29  
                     l781 14F2                       l773 15A2                       l838 1FE7  
                     l766 1402                       l862 0C10                       l599 1C40  
                     l791 1538                       l856 0CA0                       l785 1516  
                     l689 1BE7                       l794 1576                       l875 19DD  
                     l868 0C94                       l877 19EF                       _RA0 0028  
                     _RA1 0029                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     _dec 00D2                       fsr0 0004                       _uni 00D3  
                     indf 0000              ___awmod@sign 0076              ___flmul@aexp 0036  
            ___flmul@bexp 0037              ___flmul@sign 0031              ___flmul@temp 003C  
            ___flmul@prod 0038              ___fltol@exp1 005A                      l3000 09A6  
                    l3002 09A8                      l3100 0C8E                      l3020 0A15  
                    l3012 09C3                      l3004 09B0                      l3110 00CF  
                    l3102 0C8F                      l3030 0A8E                      l3022 0A3F  
                    l3014 09D1                      l3006 09B5                      l3120 00EA  
                    l3112 00D2                      l3104 0C98                      l3040 0B0A  
                    l3032 0AAB                      l3024 0A5B                      l3016 09DE  
                    l3008 09BA                      l3200 0F4B                      l3122 00F0  
                    l3114 00E0                      l4010 1FAA                      l4002 1F7A  
                    l3130 1914                      l3050 0BBC                      l3042 0B35  
                    l3034 0AB9                      l3026 0A77                      l3018 09F9  
                    l3210 18FC                      l3140 1926                      l3124 00F3  
                    l3116 00E3                      l3108 00C9                      l4020 1FDE  
                    l4004 1F7F                      l4012 1FB0                      l3132 1916  
                    l3300 0166                      l3220 1089                      l3060 0BE1  
                    l3052 0BC5                      l3044 0B43                      l3036 0AD6  
                    l3028 0A80                      l3212 1902                      l3204 0FD3  
                    l4100 1774                      l3142 192C                      l3126 00F7  
                    l3118 00E7                      l4022 1FE6                      l4014 1FBD  
                    l4006 1F8D                      l3134 1918                      l3310 0181  
                    l3302 016F                      l3222 109A                      l3070 0BF9  
                    l3062 0BEA                      l3054 0BD3                      l3046 0B6E  
                    l3038 0AED                      l3150 1143                      l3214 1908  
                    l4110 17F3                      l4102 1777                      l3144 192F  
                    l4024 1FEB                      l4016 1FCB                      l4008 1F91  
                    l3136 191B                      l3128 190D                      l3320 01AA  
                    l3304 0179                      l3312 0193                      l3240 10D2  
                    l3232 10B4                      l3080 0C28                      l3072 0C0D  
                    l3056 0BDC                      l3064 0BF0                      l3048 0B94  
                    l3160 125C                      l3152 1149                      l3216 190A  
                    l3208 18FB                      l4104 177E                      l4040 15DA  
                    l3146 1938                      l3138 1923                      l4026 1FEF  
                    l4018 1FDA                      l3410 1038                      l3402 1011  
                    l3330 19B7                      l3250 10FC                      l3242 10DB  
                    l3234 10BA                      l3226 10A3                      l3090 0C63  
                    l3082 0C2C                      l3066 0BF4                      l3058 0BE0  
                    l3170 0CA8                      l4106 17DB                      l4050 15F9  
                    l4042 15DD                      l4034 15A3                      l4028 1FF1  
                    l2700 1BFD                      l3148 18D7                      l3412 1039  
                    l3404 101C                      l3340 1D6E                      l3332 19BE  
                    l3324 19A4                      l3500 094E                      l3252 1106  
                    l3260 1120                      l3244 10E9                      l3236 10C9  
                    l2620 19CA                      l3092 0C72                      l3084 0C45  
                    l3076 0C15                      l3068 0BF5                      l3164 1307  
                    l3180 0D99                      l3172 0CAA                      l4108 17EB  
                    l4060 1638                      l4052 1605                      l4044 15E8  
                    l4036 15C0                      l2710 1C15                      l2702 1C03  
                    l3510 1CA5                      l3414 1041                      l3350 1D9D  
                    l3342 1D71                      l3334 19C4                      l3326 19A6  
                    l3502 0952                      l3318 019A                      l3246 10F3  
                    l3238 10CB                      l2630 19EB                      l2622 19CC  
                    l3094 0C7C                      l3078 0C1A                      l3086 0C4B  
                    l3158 1256                      l3182 0DA0                      l3174 0CB1  
                    l3190 0E55                      l4150 0236                      l4070 168D  
                    l4062 1640                      l4054 1610                      l4046 15EB  
                    l4038 15C9                      l2640 1953                      l2720 1C37  
                    l2712 1C1F                      l2704 1C06                      l3520 1CDF  
                    l3512 1CAF                      l2800 1380                      l3432 1068  
                    l3424 104F                      l3416 1043                      l3408 1025  
                    l3352 1DAB                      l3344 1D7E                      l3440 1B9C  
                    l3328 19AA                      l3504 0953                      l3272 00FB  
                    l3248 10F4                      l2624 19D3                      l3096 0C7E  
                    l3088 0C58                      l3192 0E5C                      l3168 0CA4  
                    l4080 16C8                      l4072 1695                      l4064 165F  
                    l4056 1613                      l4048 15F6                      l2642 195A  
                    l2634 193D                      l2650 1DD0                      l2722 1C3C  
                    l2714 1C25                      l2706 1C0D                      l2730 1A74  
                    l3610 1B4C                      l3602 1B45                      l3530 1974  
                    l3522 1CEA                      l3514 1CBB                      l3370 1B42  
                    l3362 1AF6                      l2810 1393                      l2802 1384  
                    l3434 1078                      l3418 1047                      l3426 1061  
                    l3354 1DAC                      l3346 1D82                      l3338 1D5E  
                    l3450 1BD0                      l3442 1B9F                      l3290 0135  
                    l3274 0106                      l3266 1127                      l3258 110E  
                    l2626 19D7                      l3098 0C8A                      l3186 0E28  
                    l4090 1747                      l4082 16CB                      l4074 169D  
                    l4066 1667                      l4058 1630                      l2636 1941  
                    l3540 1C50                      l2660 1DE1                      l2652 1DD2  
                    l2644 1DC4                      l2716 1C2C                      l2708 1C11  
                    l2740 1A97                      l2732 1A77                      l3620 1B59  
                    l3612 1B51                      l3604 1B4A                      l3532 1975  
                    l3524 1CF5                      l3516 1CC7                      l3508 1C9F  
                    l3364 1B0A                      l3380 083A                      l2900 14CA  
                    l2820 13B0                      l2812 139B                      l2804 1388  
                    l3460 1984                      l3436 107D                      l3356 1DB5  
                    l3348 1D8B                      l3452 1BD9                      l3444 1BAC  
                    l3292 013C                      l3284 011A                      l3268 1137  
                    l2628 19E6                      l3700 01F4                      l4092 1752  
                    l4084 1726                      l4076 16A8                      l4068 166F  
                    l2638 194C                      l3542 1C5E                      l3550 1AB6  
                    l2670 1DF9                      l2662 1DE7                      l2654 1DD6  
                    l2646 1DC7                      l2718 1C32                      l2742 1A9D  
                    l2734 1A7E                      l2726 1A6C                      l3534 1976  
                    l3526 1CF9                      l3518 1CD3                      l3366 1B26  
                    l3390 08A2                      l3382 083E                      l3374 0802  
                    l2910 14FF                      l2902 14D0                      l2830 13BC  
                    l2822 13B4                      l2814 139C                      l2806 1389  
                    l3358 1DBB                      l3446 1BB0                      l3454 1BDF  
                    l3438 1B94                      l3470 08BE                      l3294 0145  
                    l3286 0122                      l3278 010F                      l3198 0F44  
                    l3702 0207                      l4094 1755                      l4086 1736  
                    l4078 16B7                      l3544 1C64                      l3536 1C41  
                    l3560 1AD9                      l3552 1AC3                      l2672 1E0A  
                    l2664 1DEA                      l2680 1E1E                      l2656 1DDB  
                    l2648 1DCB                      l2744 1A9E                      l2736 1A82  
                    l2728 1A6E                      l2760 1A04                      l2752 19F0  
                    l3528 195E                      l3368 1B40                      l3384 0862  
                    l3376 0816                      l2920 151A                      l2904 14D5  
                    l2840 13C6                      l2832 13BE                      l2824 13B6  
                    l2808 138E                      l2816 139E                      l3448 1BC2  
                    l3480 08E7                      l3472 08CE                      l3464 08A5  
                    l3296 0157                      l3288 0133                      l3800 058C  
                    l3720 0252                      l3712 0222                      l3704 020B  
                    l4096 1761                      l4088 173E                      l3546 1004  
                    l3538 1C47                      l3562 1AE6                      l3554 1AC6  
                    l3570 1A2D                      l2682 1E23                      l2674 1E10  
                    l2666 1DF1                      l2658 1DDF                      l2690 1BE9  
                    l2746 1AA5                      l2738 1A86                      l2762 1A08  
                    l2754 19F6                      l2770 1A25                      l3650 1B73  
                    l3642 1B6B                      l3634 1B63                      l3626 1B5B  
                    l3618 1B53                      l3386 0866                      l3378 0832  
                    l3394 18EF                      l2922 151D                      l2914 1508  
                    l2906 14E4                      l2930 152A                      l2850 13D0  
                    l2842 13C8                      l2834 13C0                      l2826 13B8  
                    l2818 13AC                      l3458 1980                      l3490 091B  
                    l3482 08EE                      l3466 08AA                      l3298 0165  
                    l3810 05E7                      l3802 0596                      l3730 029A  
                    l3722 0260                      l3714 023E                      l3706 021C  
                    l4098 1769                      l3564 1AE9                      l3556 1ACC  
                    l3548 1AB1                      l3572 1A49                      l3900 1E3B  
                    l2684 1E28                      l2676 1E11                      l2668 1DF5  
                    l2692 1BED                      l2748 1AAB                      l2764 1A12  
                    l2756 19F9                      l3580 1D35                      l3660 1B81  
                    l3652 1B79                      l3644 1B71                      l3636 1B69  
                    l3628 1B61                      l3388 08A0                      l3396 18F7  
                    l2940 153D                      l2932 152B                      l2924 151F  
                    l2916 1511                      l2908 14FA                      l2860 140D  
                    l2844 13CA                      l2836 13C2                      l2828 13BA  
                    l2852 13D2                      l2780 1358                      l3492 091F  
                    l3484 08F2                      l3476 08D7                      l3468 08AE  
                    l3820 0629                      l3812 0606                      l3804 05A2  
                    l3740 02DB                      l3732 029E                      l3724 0264  
                    l3716 024A                      l3708 021E                      l3566 1AEF  
                    l3558 1AD3                      l3574 1A4F                      l3902 1E40  
                    l3910 1E50                      l2678 1E18                      l2694 1BF2  
                    l2766 1A18                      l2758 1A00                      l3590 1D44  
                    l3582 1D3C                      l3398 18F9                      l2950 157B  
                    l2942 1542                      l2934 152F                      l2926 1524  
                    l2918 1515                      l2862 140F                      l2870 1421  
                    l2854 13D3                      l2846 13CC                      l2838 13C4  
                    l2790 136C                      l2782 1359                      l2774 134B  
                    l3494 0929                      l3486 0900                      l3478 08DA  
                    l3830 065C                      l3822 0636                      l3814 0618  
                    l3806 05A7                      l3750 0362                      l3742 02EE  
                    l3734 02B7                      l3726 027D                      l3718 024E  
                    l3568 1A2A                      l3920 1E66                      l3912 1E58  
                    l3904 1E45                      l2696 1BF4                      l2688 1BE8  
                    l2768 1A1F                      l3576 18D2                      l2960 1592  
                    l2952 1580                      l2944 1550                      l2936 1535  
                    l2928 1526                      l2880 1452                      l2872 142D  
                    l2864 1413                      l2856 13EA                      l2848 13CE  
                    l2784 135E                      l2792 136E                      l2776 1350  
                    l3496 0933                      l3488 0910                      l3840 0719  
                    l3832 0661                      l3824 0645                      l3816 061F  
                    l3808 05AC                      l3760 03B6                      l3752 037B  
                    l3744 02F2                      l3736 02C2                      l3728 0296  
                    l3680 01B6                      l3922 1E6B                      l3930 1E7B  
                    l3914 1E5D                      l3906 1E4D                      l2698 1BF8  
                    l3578 1CFD                      l3674 1B8B                      l3666 1B83  
                    l3658 1B7B                      l2962 1594                      l2954 1588  
                    l2946 1554                      l2890 1467                      l2882 1456  
                    l2874 1432                      l2866 1414                      l2858 1406  
                    l2794 1376                      l2786 1363                      l2778 1354  
                    l3498 0949                      l2970 0961                      l3850 078A  
                    l3842 0738                      l3834 0665                      l3826 064A  
                    l3818 0623                      l3770 045D                      l3762 03FD  
                    l3754 0384                      l3746 02F8                      l3738 02C8  
                    l3690 01CB                      l3682 01B9                      l3932 1E8B  
                    l3940 1EA4                      l3924 1E70                      l3916 1E61  
                    l3908 1E4E                      l3596 1D56                      l3588 1D3E  
                    l3676 1B91                      l3668 1B89                      l2964 159D  
                    l2956 158D                      l2948 1572                      l2892 1468  
                    l2884 145A                      l2868 141D                      l2796 1379  
                    l2788 136B                      l2980 0974                      l2972 0965  
                    l3860 07A9                      l3852 078E                      l3844 0742  
                    l3836 0683                      l3828 0657                      l3772 0478  
                    l3764 040C                      l3756 039F                      l3748 0317  
                    l3692 01D7                      l3684 01BF                      l3950 1ECC  
                    l3942 1EA9                      l3934 1E97                      l3926 1E78  
                    l3918 1E65                      l3598 1D5C                      l2966 15A1  
                    l2958 158E                      l2894 1471                      l2886 1461  
                    l2878 143B                      l2798 137F                      l2990 098F  
                    l2982 097C                      l2974 0969                      l3870 07D8  
                    l3862 07BA                      l3854 0794                      l3838 06DE  
                    l3846 077D                      l3790 0553                      l3782 04C6  
                    l3774 0481                      l3766 0427                      l3758 03A7  
                    l3694 01D8                      l3686 01C4                      l3960 1EF5  
                    l3952 1ED4                      l3936 1E9B                      l3928 1E79  
                    l2888 1463                      l2896 1476                      l2992 0993  
                    l2984 097E                      l2976 096A                      l2968 095C  
                    l3864 07BB                      l3848 0785                      l3776 0489  
                    l3768 044E                      l3784 04CF                      l3856 079B  
                    l3696 01DC                      l3688 01C9                      l3970 1F16  
                    l3962 1EF9                      l3954 1EDC                      l3946 1EB2  
                    l2898 148C                      l2994 0994                      l2986 0986  
                    l2978 096F                      l3866 07CA                      l3858 07A1  
                    l3786 0504                      l3778 04A7                      l3698 01DF  
                    l3874 07DE                      l3980 1F38                      l3972 1F24  
                    l3964 1EFA                      l3956 1EDE                      l3948 1EC4  
                    l3892 1E2D                      l2996 0999                      l2988 098B  
                    l3868 07CA                      l3796 0555                      l3788 0551  
                    l3876 07EE                      l3982 1F41                      l3990 1F55  
                    l3958 1EE3                      l3966 1F03                      l3974 1F28  
                    l3894 1E32                      l3886 18E6                      l2998 099E  
                    l3992 1F59                      l3984 1F45                      l3976 1F2E  
                    l3968 1F15                      l3896 1E36                      l3888 18EB  
                    l3994 1F5A                      l3986 1F46                      l3978 1F36  
                    l3898 1E3A                      l3996 1F5E                      l3988 1F4F  
                    l3998 1F72                      STR_1 00A3                      STR_2 00B2  
                    STR_3 00C0                      STR_4 00C0                      u4000 14B7  
                    u4001 14B8                      u4010 14D5                      u4002 14BD  
                    u4011 14D4                      u4003 14BE                      u4100 1535  
                    u4020 14FA                      u4101 1534                      u4021 14F9  
                    u4110 153C                      u4030 14FF                      u4111 153B  
                    u4031 14FE                      u3400 194C                      u4200 15A1  
                    u4120 1542                      u5000 1137                      u3401 194B  
                    u4201 15A0                      u4121 1541                      u5001 1136  
                    u3410 1953                      u4130 1554                      u4050 1515  
                    u5010 0106                      u4210 0969                      u3411 1952  
                    u4131 1553                      u4051 1514                      u5011 0105  
                    u4211 0968                      u3420 195A                      u4140 1563  
                    u4060 151A                      u5100 0192                      u5020 0118  
                    u4220 096F                      u3421 1959                      u4061 1519  
                    u4045 150A                      u5101 0191                      u5021 0117  
                    u4301 0A23                      u4221 096E                      u3510 1E1E  
                    u3430 1DCB                      u4150 1572                      u4070 1524  
                    u5110 0199                      u4302 0A2A                      u4230 0974  
                    u3511 1E1D                      u3431 1DCA                      u4151 1571  
                    u4071 1523                      u5111 0198                      u4311 0A4D  
                    u4303 0A31                      u4231 0973                      u3520 1E23  
                    u3440 1DD6                      u3600 1C32                      u4160 157B  
                    u4080 152A                      u5200 1D82                      u5040 0157  
                    u3360 19D7                      u4400 0B7A                      u4312 0A54  
                    u4240 0993                      u6000 02B7                      u3521 1E22  
                    u3505 1E12                      u3441 1DD5                      u3601 1C31  
                    u4161 157A                      u4145 155E                      u4081 1529  
                    u5201 1D81                      u5041 0156                      u3361 19D6  
                    u4321 0A69                      u4313 0A5B                      u4241 0992  
                    u6001 02B6                      u3450 1DE7                      u3610 1C37  
                    u3530 1BED                      u4170 1580                      u4090 152F  
                    u5130 01AA                      u4322 0A70                      u4250 0999  
                    u6010 02F2                      u3451 1DE6                      u3611 1C36  
                    u3531 1BEC                      u4171 157F                      u4091 152E  
                    u5131 01A9                      u5035 013E                      u4411 0B86  
                    u4323 0A77                      u4251 0998                      u6011 02F1  
                    u3540 1BF8                      u3620 1A74                      u5300 083E  
                    u4180 158D                      u5220 1D9D                      u5140 19AA  
                    u5060 0175                      u3380 19EB                      u4500 0C0D  
                    u4420 0BA2                      u4412 0B8D                      u4260 099E  
                    u6020 037B                      u3541 1BF7                      u3621 1A73  
                    u5301 083D                      u4181 158C                      u5221 1D9C  
                    u5141 19A9                      u5125 019C                      u5061 0174  
                    u5045 0153                      u3381 19EA                      u4501 0C0C  
                    u4413 0B94                      u4405 0B75                      u4341 0A9D  
                    u4261 099D                      u6021 037A                      u3390 1941  
                    u3470 1DF9                      u3550 1C03                      u3710 1A08  
                    u4190 1592                      u5070 0179                      u4510 0C14  
                    u4342 0AA4                      u4270 09B5                      u6110 058B  
                    u6030 039F                      u3391 1940                      u3471 1DF8  
                    u3551 1C02                      u3711 1A07                      u5311 084D  
                    u4191 1591                      u5215 1D84                      u5071 0178  
                    u5055 0168                      u3375 19DE                      u4511 0C13  
                    u4431 0BAE                      u4351 0AC8                      u4343 0AAB  
                    u4335 0A79                      u4271 09B4                      u6111 058A  
                    u6031 039E                      u3640 1A86                      u3720 1A12  
                    u4600 18DD                      u5320 0866                      u5312 084E  
                    u3800 138E                      u5240 1DBB                      u5080 0180  
                    u4520 0C1A                      u4432 0BB5                      u4352 0ACF  
                    u4280 09BA                      u6120 0596                      u6040 03B6  
                    u3465 1DEB                      u3641 1A85                      u3721 1A11  
                    u3705 19FA                      u4601 18DC                      u5321 0865  
                    u5313 0853                      u3801 138D                      u5241 1DBA  
                    u5225 1D99                      u5081 017F                      u4521 0C19  
                    u4433 0BBC                      u4425 0B9D                      u4353 0AD6  
                    u4281 09B9                      u6121 0595                      u6105 0558  
                    u6041 03B5                      u3490 1E0A                      u3570 1C15  
                    u5250 1B0A                      u5314 0854                      u3810 1393  
                    u5410 1060                      u5170 19C4                      u4530 0C2C  
                    u4610 1149                      u6210 0784                      u6130 05A2  
                    u6050 040C                      u3491 1E09                      u3571 1C14  
                    u3635 1A78                      u5251 1B09                      u5331 0875  
                    u5315 0859                      u3811 1392                      u5411 105F  
                    u5235 1DAD                      u5171 19C3                      u5155 19B1  
                    u4531 0C2B                      u4371 0AFC                      u4291 0A07  
                    u4611 1148                      u6211 0783                      u6131 05A1  
                    u6115 0587                      u6051 040B                      u6300 1E40  
                    u3580 1C1F                      u3660 1A97                      u3740 1A25  
                    u5260 1B26                      u5340 08A0                      u5332 0876  
                    u5316 085A                      u3900 1429                      u3820 13AC  
                    u5420 1067                      u5180 1D6E                      u4540 0C3B  
                    u4460 0BE0                      u4372 0B03                      u4292 0A0E  
                    u4700 0CB1                      u6220 079A                      u6060 0427  
                    u6301 1E3F                      u3485 1DFA                      u3581 1C1E  
                    u3565 1C07                      u3661 1A96                      u3741 1A24  
                    u3725 1A0E                      u5261 1B25                      u5341 089F  
                    u5333 087B                      u3901 1428                      u3821 13AB  
                    u5421 1066                      u5405 1050                      u5181 1D6D  
                    u5165 19B8                      u4461 0BDF                      u4445 0BBE  
                    u4381 0B27                      u4373 0B0A                      u4365 0AD8  
                    u4293 0A15                      u4701 0CB0                      u6221 0799  
                    u6205 0745                      u6061 0426                      u6045 03B2  
                    u6310 1E45                      u5270 1B40                      u5334 087C  
                    u5350 18F7                      u3910 142D                      u3830 13B0  
                    u3750 1358                      u5510 1BDF                      u4550 0C58  
                    u4382 0B2E                      u6230 07A1                      u6150 0617  
                    u6070 044E                      u6311 1E44                      u3495 1E06  
                    u3655 1A87                      u3735 1A19                      u5271 1B3F  
                    u5335 0881                      u5351 18F6                      u3911 142C  
                    u3831 13AF                      u3751 1357                      u5511 1BDE  
                    u5095 0182                      u4551 0C57                      u4455 0BD5  
                    u4391 0B52                      u4383 0B35                      u6231 07A0  
                    u6151 0616                      u6071 044D                      u6055 0408  
                    u6400 1EF9                      u6320 1E65                      u3680 1AAB  
                    u5336 0882                      u5280 0816                      u3920 1432  
                    u3840 13EA                      u3760 135E                      u5440 1078  
                    u5360 101C                      u5600 091F                      u5520 08AA  
                    u4560 0C72                      u4480 0BF4                      u4392 0B59  
                    u6240 07A9                      u6160 0636                      u6080 045D  
                    u6401 1EF8                      u6321 1E64                      u3585 1C1B  
                    u3681 1AAA                      u3665 1A93                      u5345 089C  
                    u5281 0815                      u3921 1431                      u3841 13E9  
                    u3761 135D                      u5441 1077                      u5361 101B  
                    u5505 1BD1                      u5601 091E                      u5521 08A9  
                    u4561 0C71                      u4545 0C36                      u4481 0BF3  
                    u4393 0B60                      u4625 1166                      u6241 07A8  
                    u6161 0635                      u6145 05AF                      u6081 045C  
                    u6330 1E6B                      u3690 19F6                      u5290 0832  
                    u3850 13F5                      u3770 1363                      u5450 107D  
                    u5370 1033                      u5610 0925                      u5530 08AE  
                    u4570 0C8E                      u4490 0BF9                      u4650 125C  
                    u6250 07BA                      u6170 0645                      u6090 0478  
                    u6331 1E6A                      u3595 1C26                      u3675 1A9F  
                    u3691 19F5                      u5275 1B3C                      u5291 0831  
                    u3931 1444                      u3851 13F3                      u3771 1362  
                    u5451 107C                      u5435 106A                      u5195 1D73  
                    u5611 0924                      u5531 08AD                      u4571 0C8D  
                    u4555 0C54                      u4491 0BF8                      u4475 0BE3  
                    u4651 125B                      u4635 11C0                      u4715 0CD1  
                    u6251 07B9                      u6171 0644                      u6091 0477  
                    u6500 1F72                      u6420 1F15                      u6340 1E70  
                    u5700 1CD3                      u3940 1456                      u3932 144B  
                    u3860 13F6                      u3780 137F                      u5380 1047  
                    u5460 1B9C                      u5620 0929                      u5540 08CE  
                    u4820 0F4B                      u4740 0DA0                      u6260 07CA  
                    u6180 065C                      u6501 1F71                      u6421 1F14  
                    u6341 1E6F                      u5701 1CD2                      u3941 1455  
                    u3933 1452                      u3845 13E6                      u3781 137E  
                    u5381 1046                      u5461 1B9B                      u5621 0928  
                    u5541 08CD                      u4565 0C6E                      u4645 1215  
                    u4821 0F4A                      u4805 0EB8                      u4741 0D9F  
                    u4725 0D0D                      u6261 07C9                      u6181 065B  
                    u6165 0632                      u6085 0459                      u6510 1F79  
                    u6430 1F2E                      u6350 1E8B                      u4590 1914  
                    u5710 1CDF                      u3950 145A                      u3870 1406  
                    u3790 1388                      u5390 104E                      u5630 093E  
                    u4910 10E9                      u6270 07D8                      u6511 1F78  
                    u6431 1F2D                      u6415 1EFC                      u6351 1E8A  
                    u4591 1913                      u5711 1CDE                      u3951 1459  
                    u3871 1405                      u3791 1387                      u5391 104D  
                    u5375 102E                      u4911 10E8                      u4815 0F03  
                    u4735 0D58                      u6271 07D7                      u6255 07B6  
                    u6175 0641                      u5800 1A6B                      u6520 1F7F  
                    u6440 1F36                      u6360 1EA9                      u5720 1CEA  
                    u3960 1467                      u3880 1413                      u5480 1BB0  
                    u5640 094E                      u5560 08ED                      u6280 07EE  
                    u6600 1761                      u4585 00D5                      u5801 1A6A  
                    u6521 1F7E                      u6441 1F35                      u6425 1F11  
                    u6361 1EA8                      u5721 1CE9                      u3961 1466  
                    u3881 1412                      u5481 1BAF                      u5641 094D  
                    u5561 08EC                      u4905 10D4                      u4665 1279  
                    u6281 07ED                      u6265 07C6                      u6601 1760  
                    u6530 1F91                      u6370 1EE3                      u6290 1E3A  
                    u5810 1D3C                      u5730 1CF5                      u5490 1BC2  
                    u5650 0952                      u4930 1102                      u4690 0CA8  
                    u6531 1F90                      u6371 1EE2                      u6291 1E39  
                    u5811 1D3B                      u5731 1CF4                      u5491 1BC1  
                    u5475 1BA1                      u5651 0951                      u5635 0939  
                    u5555 08DF                      u4931 1101                      u4915 10E5  
                    u4675 12C6                      u4835 0F5E                      u4755 0DB3  
                    u4691 0CA7                      u6195 06E1                      u5740 1AB6  
                    u6540 1FA0                      u6460 1F45                      u5820 1D44  
                    u5900 1B79                      u5660 1CA5                      u3980 148C  
                    u5580 090F                      u4940 1106                      u4860 1902  
                    u4780 0E5C                      u5741 1AB5                      u6461 1F44  
                    u5821 1D43                      u5901 1B78                      u5661 1CA4  
                    u3981 148B                      u5581 090E                      u4941 1105  
                    u4925 10F5                      u4685 1312                      u4861 1901  
                    u4845 0F9A                      u4781 0E5B                      u4765 0DEF  
                    u6550 1FBD                      u5830 1D5C                      u5910 1B81  
                    u5670 1CAF                      u4950 110D                      u4870 1908  
                    u6551 1FBC                      u6455 1F3A                      u5831 1D5B  
                    u5911 1B80                      u5671 1CAE                      u3991 14A3  
                    u3983 1488                      u3975 146A                      u3895 1416  
                    u5495 1BBE                      u5575 0901                      u4951 110C  
                    u4871 1907                      u4855 0FD6                      u4775 0E2B  
                    u5760 1AD9                      u6560 1FDA                      u6480 1F59  
                    u5920 1B89                      u5840 1B4A                      u5680 1CBB  
                    u3992 14A4                      u4880 109A                      u5761 1AD8  
                    u6561 1FD9                      u6545 1F9B                      u6481 1F58  
                    u6385 1EE5                      u5921 1B88                      u5841 1B49  
                    u5681 1CBA                      u3993 14A9                      u4881 1099  
                    u6617 15E3                      u6570 1FEF                      u6490 1F5E  
                    u5930 1B91                      u5850 1B51                      u5690 1CC7  
                    u3994 14AA                      u4970 111F                      u4890 10B2  
                    u6707 1C4B                      u5755 1ABC                      u6571 1FEE  
                    u6555 1FB9                      u6491 1F5D                      u6475 1F48  
                    u6395 1EEE                      u5931 1B90                      u5851 1B50  
                    u5691 1CC6                      u3995 14AF                      u5595 0914  
                    u4971 111E                      u4891 10B1                      u4795 0E7C  
                    u6627 15F1                      u5780 1A37                      u5860 1B59  
                    u3996 14B0                      u4980 1126                      u5940 01BF  
                    u6580 1605                      u6717 1C5A                      u6565 1FD6  
                    u5861 1B58                      u4981 1125                      u4965 110F  
                    u5941 01BE                      u6637 16A3                      u6581 1604  
                    u5790 1A59                      u5870 1B61                      u5950 01D7  
                    u6590 16B7                      u6727 1C68                      u5775 1ADF  
                    u5871 1B60                      u5951 01D6                      u6647 16C3  
                    u6591 16B6                      u5880 1B69                      u5960 021B  
                    u6737 1933                      u5881 1B68                      u5961 021A  
                    u6657 174D                      u5890 1B71                      u5970 024A  
                    u5891 1B70                      u4995 1129                      u5971 0249  
                    u6667 176F                      u5980 024E                      u5981 024D  
                    u6677 177B                      u5990 027D                      u6687 00E5  
                    u5991 027C                      u6697 00F5         ?_Lcd_Write_String 0075  
                    _cent 00D1                      _cont 00CF                      _main 15A3  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0077  
         ___fldiv@new_exp 0050              _sprintf$1168 00AA           __end_of_Lcd_Cmd 193C  
           ___fltol@sign1 0059           __end_of___fladd 15A3                     ?_main 0070  
         __end_of___fldiv 2000           __end_of___awdiv 1E2D           __end_of___flneg 18FA  
         __end_of___awmod 1C41           __end_of___flmul 0CA1           __end_of___flsub 19A4  
         __end_of___fltol 1089                     _ANSEL 0188           __end_of___lldiv 1DC4  
         ___awdiv@divisor 0077           __end_of___llmod 1BE8           __end_of___lwdiv 1AB0  
         __end_of___lwmod 1A2A           ___awdiv@counter 0020                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088           __end_of_dpowers 00A3  
                   _scale 0CA1           __end_of_isdigit 190C                     pclath 000A  
         __end_of_spiInit 1922           __end_of_spiRead 18EF                     status 0003  
                   wtemp0 007E           __end_of_sprintf 07F3          __end_of_Lcd_Init 1C9E  
        __end_of_Lcd_Port 195E           __initialization 07F3              __end_of_main 1800  
                  ??_main 00C3          ___llmod@dividend 0074                    ?_scale 003E  
        ___awdiv@dividend 0079                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPBUF 0013  
                  _SSPCON 0014          __end_of___xxtofl 095C          __end_of__powers_ 0047  
                  ___flge 0802                    ___fleq 1AF6                 ??___fladd 005A  
                  ___wmul 19A4                 ??___fldiv 0046                 ??___awdiv 007B  
                  _lecADC 00D5                 ??___flneg 0074                 ??___awmod 0074  
               ??___flmul 002C                 ??___flsub 007E                 ??___fltol 0055  
               ??___lldiv 0078                 ??___llmod 0078                 ??___lwdiv 007A  
               ??___lwmod 0074                    _conver 00CB                    _valADC 00D9  
                  _fround 1140          ___awdiv@quotient 0022           ___awmod@divisor 0070  
         ___awmod@counter 0075              ?_setupINTOSC 0070                 ??_isdigit 0070  
        __end_of_spiWrite 18D7                 ??_spiInit 0073                 ??_spiRead 0070  
               ??_sprintf 00A5           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077                ___flge@ff1 0070  
              ___flge@ff2 0074              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
 __end_of__initialization 07FC                ___flneg@f1 0070         __end_of_Lcd_Clear 1011  
              ___fltol@f1 0051           descomponer@cent 002A            __pcstackCOMMON 0070  
           __end_of_scale 1000            _Lcd_Set_Cursor 1AB0                __div_to_l_ 00FB  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070           __div_to_l_@exp1 0025  
         __div_to_l_@cntr 0024                   ??_scale 0042           __div_to_l_@quot 0020  
              __pbssBANK1 00C7             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
       __end_of__Umul8_16 19F0                __pmaintext 15A3                   ?___flge 0070  
                 ?___fleq 0070                   ?___wmul 0070                   ?_fround 003E  
  __end_of_Lcd_Set_Cursor 1AF6                 ?___xxtofl 0070                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 00C8                   _Lcd_Cmd 1922         __end_of__npowers_ 007B  
              _scale$1167 004C                 ?_spiWrite 0070                   ___fladd 134B  
                 ___fldiv 1E2D                   ___awdiv 1DC4                   ___flneg 18EF  
                 ___awmod 1BE8                   ___flmul 095C                   ___flsub 1980  
                 ___fltol 1011                   ___lldiv 1D5E                   ___llmod 1B94  
                 ___lwdiv 1A6C                   ___lwmod 19F0                   _lecADC2 00D4  
         ?_Lcd_Set_Cursor 0074                   __ptext1 01B3                   __ptext2 0CA1  
                 __ptext3 18FA                   __ptext4 1140                   __ptext5 095C  
                 __ptext6 19C9                   __ptext7 1089                   __ptext8 00FB  
                 __ptext9 08A4                   _conver1 00C7                   _valADC2 00D6  
             ?__div_to_l_ 0070                   _dpowers 007B                   _isdigit 18FA  
              ??___xxtofl 0074          ___awmod@dividend 0072                   _spiInit 190C  
                 _spiRead 18E6                   _sprintf 01B3                   clrloop0 18DF  
       __end_of_inttochar 1B94    __end_of_Lcd_Write_Char 00FB      end_of_initialization 07FC  
         ___lldiv@divisor 0070           ___lldiv@counter 007D                ??_spiWrite 0070  
               Lcd_Port@a 0070         __end_of_portsetup 1980            __tdiv_to_l_@f1 0070  
          __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078                 _PORTAbits 0005  
               _PORTDbits 0008             ??_descomponer 0028               ___fladd@grs 0065  
           ___xxtofl@sign 0078               ___fldiv@grs 0052               ___fldiv@rem 004B  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A               ___flmul@grs 0032                 _Lcd_Clear 1004  
          _spiReceiveWait 18D7            __end_of___flge 08A4            __end_of___fleq 1B44  
          __end_of___wmul 19C9          _Lcd_Write_String 1A2A            __end_of_fround 134B  
     start_initialization 07F3       __end_of__tdiv_to_l_ 1140       __end_of_descomponer 1D5E  
         ___llmod@divisor 0070           ___llmod@counter 0079    __end_of_spiReceiveWait 18DE  
              ?_Lcd_Clear 0070                  ??___flge 0078                  ??___fleq 0078  
                ??___wmul 0074                 __Umul8_16 19C9           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                  ??_fround 0042             sprintf@tmpval 00B7  
               ___fladd@a 0056                 ___fladd@b 0052                fround@prec 0051  
               ___fldiv@a 003E                 ___fldiv@b 0042                 ___flmul@a 0028  
               ___flmul@b 0024                 ___flsub@a 0066                 ___flsub@b 006A  
               ___latbits 0002            descomponer@dec 002C             __pcstackBANK0 0020  
           __pcstackBANK1 00A0            descomponer@num 0026            descomponer@pos 0024  
          descomponer@uni 002B           setupINTOSC@IRCF 0070                  ?_Lcd_Cmd 0070  
             sprintf@flag 00AF               sprintf@eexp 00B5               sprintf@fval 00BE  
             sprintf@prec 00BC          ___lwdiv@dividend 0078           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___fladd 0052              inttochar@num 0070  
                ?___fldiv 003E                  ?___awdiv 0077                  ?___flneg 0070  
                ?___awmod 0070                  ?___flmul 0024                  ?___flsub 0066  
                ?___fltol 0051                  ?___lldiv 0070                  ?___llmod 0070  
               __npowers_ 0047                ?__Umul8_16 0070                  ?___lwdiv 0076  
                ?___lwmod 0070                 __pstrings 0003               __tdiv_to_l_ 1089  
            ??__div_to_l_ 0078               _descomponer 1CFD                  ?_isdigit 0070  
                ?_spiInit 0070                  ?_spiRead 0070          ___lwdiv@quotient 007B  
                ?_sprintf 00A0      spiInit@sTransmitEdge 0072            ___wmul@product 0074  
               _inttochar 1B44                 clear_ram0 18DE        spiInit@sDataSample 0070  
                Lcd_Cmd@a 0073        __end_of__div_to_l_ 01B3               ??_Lcd_Clear 0074  
             __stringbase 0012             ??_setupINTOSC 0070                 _portsetup 195E  
       ___wmul@multiplier 0070          ??_Lcd_Write_Char 0071                  _Lcd_Init 1C41  
                _Lcd_Port 193C  __end_of_Lcd_Write_String 1A6C                ?_inttochar 0070  
             ??__Umul8_16 0072               _fround$1165 004D               _fround$1166 0049  
      __end_of__stringtab 0013                ?_portsetup 0070               _isdigit$976 0070  
              sprintf@val 00B1                  ___xxtofl 08A4           ___lwdiv@divisor 0076  
         ___lwdiv@counter 007D                  __ptext10 19A4                  __ptext11 1B94  
                __ptext20 18E6                  __ptext12 1D5E                  __ptext21 18D7  
                __ptext13 1011                  __ptext30 1DC4                  __ptext22 1C9E  
                __ptext14 1980                  __ptext31 1E2D                  __ptext23 195E  
                __ptext15 134B                  __ptext32 1A2A                  __ptext24 190C  
                __ptext16 18EF                  __ptext33 00C8                  __ptext25 1B44  
                __ptext17 0802                  __ptext34 1AB0                  __ptext26 1CFD  
                __ptext18 1AF6                  __ptext35 1C41                  __ptext27 19F0  
                __ptext19 18D1                  __ptext36 1004                  __ptext28 1A6C  
                __ptext37 1922                  __ptext29 1BE8                  __ptext38 193C  
     __end_of_setupINTOSC 1CFD                  __powers_ 0013                  _spiWrite 18D1  
            spiInit@sType 0073         spiInit@sClockIdle 0071                  isdigit@c 0071  
                scale@scl 0050        Lcd_Write_Char@temp 0072                 sprintf@ap 00AE  
        __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024                 sprintf@sp 00BB  
        __tdiv_to_l_@quot 0020          ___lwmod@dividend 0072          ___lldiv@dividend 0074  
        ??_spiReceiveWait 0070               ??_inttochar 0070                 stringcode 000D  
              _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079              ?__tdiv_to_l_ 0070  
             ??_portsetup 0074    __Umul8_16@multiplicand 0070               _setupINTOSC 1C9E  
                sprintf@c 00C2                  sprintf@f 00A0              ?_descomponer 0024  
        ___lldiv@quotient 0079           ___lwmod@divisor 0070           ___lwmod@counter 0075  
                stringdir 000D                  stringtab 0003             ___fladd@signs 0062  
            ___fladd@aexp 0063              ___fladd@bexp 0064      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074  
